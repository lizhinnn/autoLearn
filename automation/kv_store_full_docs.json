{
  "doc-15bc0249fa9e486149c327f8ae89a7ec": {
    "content": "Modern Control \nEngineering\nFifth Edition\nKatsuhiko Ogata\nPrentice Hall\nBoston Columbus Indianapolis New York San Francisco Upper Saddle River\nAmsterdam Cape Town Dubai London Madrid Milan Munich Paris Montreal Toronto\nDelhi Mexico City Sao Paulo Sydney Hong Kong Seoul Singapore Taipei Tokyo VP/Editorial Director, Engineering/Computer Science: Marcia J. Horton\nAssistant/Supervisor: Dolores Mars\nSenior Editor: Andrew Gilfillan\nAssociate Editor: Alice Dworkin\nEditorial Assistant: William Opaluch\nDirector of Marketing: Margaret Waples\nSenior Marketing Manager: Tim Galligan \nMarketing Assistant: Mack Patterson\nSenior Managing Editor: Scott Disanno\nArt Editor: Greg Dulles \nSenior Operations Supervisor: Alan Fischer\nOperations Specialist: Lisa McDowell\nArt Director: Kenny Beck\nCover Designer: Carole Anson\nMedia Editor: Daniel Sandin\nCredits and acknowledgments borrowed from other sources and reproduced, with permission, in this\ntextbook appear on appropriate page within text.\nMATLAB is a registered trademark of The Mathworks, Inc., 3 Apple Hill Drive, Natick MA 01760-2098.\nCopyright © 2010, 2002, 1997, 1990, 1970 Pearson Education, Inc., publishing as Prentice Hall, One Lake\nStreet, Upper Saddle River, New Jersey 07458. All rights reserved. Manufactured in the United States of\nAmerica. This publication is protected by Copyright, and permission should be obtained from the publisher\nprior to any prohibited reproduction, storage in a retrieval system, or transmission in any form or by any\nmeans, electronic, mechanical, photocopying, recording, or likewise. To obtain permission(s) to use material\nfrom this work, please submit a written request to Pearson Education, Inc., Permissions Department, One\nLake Street, Upper Saddle River, New Jersey 07458.\nMany of the designations by manufacturers and seller to distinguish their products are claimed as\ntrademarks. Where those designations appear in this book, and the publisher was aware of a trademark\nclaim, the designations have been printed in initial caps or all caps.\nLibrary of Congress Cataloging-in-Publication Data on File\n10  9  8  7  6  5  4  3  2  1\nISBN 10: 0-13-615673-8\nISBN 13: 978-0-13-615673-4\nOpenmirrors.comC\niii\nContents\nPreface ix\nChapter 1 Introduction to Control Systems 1\n1–1 Introduction 1\n1–2 Examples of Control Systems 4\n1–3 Closed-Loop Control Versus Open-Loop Control 7\n1–4 Design and Compensation of Control Systems 9\n1–5 Outline of the Book 10\nChapter 2 Mathematical Modeling of Control Systems 13\n2–1 Introduction 13\n2–2 Transfer Function and Impulse-Response Function 15\n2–3 Automatic Control Systems 17\n2–4 Modeling in State Space 29\n2–5 State-Space Representation of Scalar Differential \nEquation Systems 35\n2–6 Transformation of Mathematical Models with MATLAB 392–7 Linearization of Nonlinear Mathematical Models 43\nExample Problems and Solutions 46\nProblems 60\nChapter 3 Mathematical Modeling of Mechanical Systems \nand Electrical Systems 63\n3–1 Introduction 63\n3–2 Mathematical Modeling of Mechanical Systems 63\n3–3 Mathematical Modeling of Electrical Systems 72\nExample Problems and Solutions 86\nProblems 97\nChapter 4 Mathematical Modeling of Fluid Systems \nand Thermal Systems 100\n4–1 Introduction 100\n4–2 Liquid-Level Systems 101\n4–3 Pneumatic Systems 106\n4–4 Hydraulic Systems 123\n4–5 Thermal Systems 136\nExample Problems and Solutions 140\nProblems 152\nChapter 5 Transient and Steady-State Response Analyses 159\n5–1 Introduction 159\n5–2 First-Order Systems 161\n5–3 Second-Order Systems 164\n5–4 Higher-Order Systems 179\n5–5 Transient-Response Analysis with MATLAB 183\n5–6 Routh’s Stability Criterion 212\n5–7 Effects of Integral and Derivative Control Actions \non System Performance 218\n5–8 Steady-State Errors in Unity-Feedback Control Systems 225\nExample Problems and Solutions 231\nProblems 263\niv ContentsChapter 6 Control Systems Analysis and Design \nby the Root-Locus Method 269\n6–1 Introduction 269\n6–2 Root-Locus Plots 270\n6–3 Plotting Root Loci with MATLAB 290\n6–4 Root-Locus Plots of Positive Feedback Systems 303\n6–5 Root-Locus Approach to Control-Systems Design 308\n6–6 Lead Compensation 311\n6–7 Lag Compensation 321\n6–8 Lag–Lead Compensation 330\n6–9 Parallel Compensation 342 \nExample Problems and Solutions 347\nProblems 394\nChapter 7 Control Systems Analysis and Design by the \nFrequency-Response Method 398\n7–1 Introduction 398\n7–2 Bode Diagrams 403\n7–3 Polar Plots 427\n7–4 Log-Magnitude-versus-Phase Plots 443\n7–5 Nyquist Stability Criterion 445\n7–6 Stability Analysis 454\n7–7 Relative Stability Analysis 462\n7–8 Closed-Loop Frequency Response of Unity-Feedback \nSystems 477\n7–9 Experimental Determination of Transfer Functions 486\n7–10 Control Systems Design by Frequency-Response Approach 491\n7–11 Lead Compensation 493\n7–12 Lag Compensation 502\n7–13 Lag–Lead Compensation 511\nExample Problems and Solutions 521\nProblems 561\nChapter 8 PID Controllers and Modified PID Controllers 567\n8–1 Introduction 567\n8–2 Ziegler–Nichols Rules for Tuning PID Controllers 568\nContents v8–3 Design of PID Controllers with Frequency-Response \nApproach 577\n8–4 Design of PID Controllers with Computational Optimization \nApproach 583\n8–5 Modifications of PID Control Schemes 590\n8–6 Two-Degrees-of-Freedom Control 592\n8–7 Zero-Placement Approach to Improve Response \nCharacteristics 595\nExample Problems and Solutions 614\nProblems 641\nChapter 9 Control Systems Analysis in State Space 648\n9–1 Introduction 648\n9–2 State-Space Representations of Transfer-Function \nSystems 649\n9–3 Transformation of System Models with MATLAB 656\n9–4 Solving the Time-Invariant State Equation 660\n9–5 Some Useful Results in Vector-Matrix Analysis 668\n9–6 Controllability 675\n9–7 Observability 682 \nExample Problems and Solutions 688\nProblems 720\nChapter 10 Control Systems Design in State Space 722\n10–1 Introduction 722\n10–2 Pole Placement 723\n10–3 Solving Pole-Placement Problems with MATLAB 735\n10–4 Design of Servo Systems 739\n10–5 State Observers 751\n10–6 Design of Regulator Systems with Observers 778\n10–7 Design of Control Systems with Observers 786\n10–8 Quadratic Optimal Regulator Systems 793\n10–9 Robust Control Systems 806\nExample Problems and Solutions 817\nProblems 855\nvi ContentsAppendix A Laplace Transform Tables 859\nAppendix B Partial-Fraction Expansion 867\nAppendix C Vector-Matrix Algebra 874\nReferences 882\nIndex886\nContents viiThis page intentionally left blankP\nix\nPreface\nThis book introduces important concepts in the analysis and design of control systems.\nReaders will find it to be a clear and understandable textbook for control system courses\nat colleges and universities. It is written for senior electrical, mechanical, aerospace, or\nchemical engineering students. The reader is expected to have fulfilled the following\nprerequisites: introductory courses on differential equations, Laplace transforms, vector-\nmatrix analysis, circuit analysis, mechanics, and introductory thermodynamics.\nThe main revisions made in this edition are as follows:\n• The use of MATLAB for obtaining responses of control systems to various inputs\nhas been increased.\n• The usefulness of the computational optimization approach with MATLAB has been\ndemonstrated.\n• New example problems have been added throughout the book.\n• Materials in the previous edition that are of secondary importance have been deleted\nin order to provide space for more important subjects. Signal flow graphs were\ndropped from the book. A chapter on Laplace transform was deleted. Instead,\nLaplace transform tables, and partial-fraction expansion with MATLAB are pre-\nsented in Appendix A and Appendix B, respectively.\n• A short summary of vector-matrix analysis is presented in Appendix C; this will help\nthe reader to find the inverses of n x n matrices that may be involved in the analy-\nsis and design of control systems.\nThis edition of Modern Control Engineeringis organized into ten chapters.The outline of\nthis book is as follows: Chapter 1 presents an introduction to control systems. Chapter 2deals with mathematical modeling of control systems. A linearization technique for non-\nlinear mathematical models is presented in this chapter. Chapter 3 derives mathematical\nmodels of mechanical systems and electrical systems. Chapter 4 discusses mathematical\nmodeling of fluid systems (such as liquid-level systems, pneumatic systems, and hydraulic\nsystems) and thermal systems.\nChapter 5 treats transient response and steady-state analyses of control systems.\nMATLAB is used extensively for obtaining transient response curves. Routh’s stability\ncriterion is presented for stability analysis of control systems. Hurwitz stability criterion\nis also presented.\nChapter 6 discusses the root-locus analysis and design of control systems, including\npositive feedback systems and conditionally stable systems Plotting root loci with MAT-\nLAB is discussed in detail. Design of lead, lag, and lag-lead compensators with the root-\nlocus method is included.\nChapter 7 treats the frequency-response analysis and design of control systems.The\nNyquist stability criterion is presented in an easily understandable manner.The Bode di-\nagram approach to the design of lead, lag, and lag-lead compensators is discussed.\nChapter 8 deals with basic and modified PID controllers. Computational approaches\nfor obtaining optimal parameter values for PID controllers are discussed in detail, par-\nticularly with respect to satisfying requirements for step-response characteristics.\nChapter 9 treats basic analyses of control systems in state space. Concepts of con-\ntrollability and observability are discussed in detail.\nChapter 10 deals with control systems design in state space. The discussions include\npole placement, state observers, and quadratic optimal control. An introductory dis-\ncussion of robust control systems is presented at the end of Chapter 10.\nThe book has been arranged toward facilitating the student’s gradual understanding \nof control theory. Highly mathematical arguments are carefully avoided in the presen-\ntation of the materials. Statement proofs are provided whenever they contribute to the\nunderstanding of the subject matter presented.\nSpecial effort has been made to provide example problems at strategic points so that\nthe reader will have a clear understanding of the subject matter discussed. In addition,\na number of solved problems (A-problems) are provided at the end of each chapter,\nexcept Chapter 1. The reader is encouraged to study all such solved problems carefully;\nthis will allow the reader to obtain a deeper understanding of the topics discussed. In\naddition, many problems (without solutions) are provided at the end of each chapter,\nexcept Chapter 1. The unsolved problems (B-problems) may be used as homework or\nquiz problems.\nIf this book is used as a text for a semester course (with 56 or so lecture hours), a good\nportion of the material may be covered by skipping certain subjects. Because of the\nabundance of example problems and solved problems (A-problems) that might answer\nmany possible questions that the reader might have, this book can also serve as a self-\nstudy book for practicing engineers who wish to study basic control theories.\nI would like to thank the following reviewers for this edition of the book: Mark Camp-\nbell, Cornell University; Henry Sodano, Arizona State University; and Atul G. Kelkar,\nIowa State University. Finally, I wish to offer my deep appreciation to Ms.Alice Dworkin,\nAssociate Editor, Mr. Scott Disanno, Senior Managing Editor, and all the people in-\nvolved in this publishing project, for the speedy yet superb production of this book.\nKatsuhiko Ogata\nx Preface1\nIntroduction \nto Control Systems\n1–1 INTRODUCTION\nControl theories commonly used today are classical control theory (also called con-\nventional control theory), modern control theory, and robust control theory. This book\npresents comprehensive treatments of the analysis and design of control systems based\non the classical control theory and modern control theory.A brief introduction of robust\ncontrol theory is included in Chapter 10.\nAutomatic control is essential in any field of engineering and science. Automatic\ncontrol is an important and integral part of space-vehicle systems, robotic systems, mod-\nern manufacturing systems, and any industrial operations involving control of temper-\nature, pressure, humidity, flow, etc. It is desirable that most engineers and scientists are\nfamiliar with theory and practice of automatic control.\nThis book is intended to be a text book on control systems at the senior level at a col-\nlege or university. All necessary background materials are included in the book. Math-\nematical background materials related to Laplace transforms and vector-matrix analysis\nare presented separately in appendixes.\nBrief Review of Historical Developments of Control Theories and Practices.\nThe first significant work in automatic control was James Watt’s centrifugal gover-\nnor for the speed control of a steam engine in the eighteenth century. Other\nsignificant works in the early stages of development of control theory were due to\n12 Chapter 1 / Introduction to Control Systems\nMinorsky, Hazen, and Nyquist, among many others. In 1922, Minorsky worked on\nautomatic controllers for steering ships and showed how stability could be deter-\nmined from the differential equations describing the system. In 1932, Nyquist\ndeveloped a relatively simple procedure for determining the stability of closed-loop\nsystems on the basis of open-loop response to steady-state sinusoidal inputs. In 1934,\nHazen, who introduced the term servomechanisms for position control systems,\ndiscussed the design of relay servomechanisms capable of closely following a chang-\ning input.\nDuring the decade of the 1940s, frequency-response methods (especially the Bode\ndiagram methods due to Bode) made it possible for engineers to design linear closed-\nloop control systems that satisfied performance requirements. Many industrial control\nsystems in 1940s and 1950s used PID controllers to control pressure, temperature, etc.\nIn the early 1940s Ziegler and Nichols suggested rules for tuning PID controllers, called\nZiegler–Nichols tuning rules. From the end of the 1940s to the 1950s, the root-locus\nmethod due to Evans was fully developed.\nThe frequency-response and root-locus methods, which are the core of classical con-\ntrol theory, lead to systems that are stable and satisfy a set of more or less arbitrary per-\nformance requirements. Such systems are, in general, acceptable but not optimal in any\nmeaningful sense. Since the late 1950s, the emphasis in control design problems has been\nshifted from the design of one of many systems that work to the design of one optimal\nsystem in some meaningful sense.\nAs modern plants with many inputs and outputs become more and more complex,\nthe description of a modern control system requires a large number of equations. Clas-\nsical control theory, which deals only with single-input, single-output systems, becomes\npowerless for multiple-input, multiple-output systems. Since about 1960, because the\navailability of digital computers made possible time-domain analysis of complex sys-\ntems, modern control theory, based on time-domain analysis and synthesis using state\nvariables, has been developed to cope with the increased complexity of modern plants\nand the stringent requirements on accuracy, weight, and cost in military, space, and in-\ndustrial applications.\nDuring the years from 1960 to 1980, optimal control of both deterministic and sto-\nchastic systems, as well as adaptive and learning control of complex systems, were fully\ninvestigated. From 1980s to 1990s, developments in modern control theory were cen-\ntered around robust control and associated topics.\nModern control theory is based on time-domain analysis of differential equation\nsystems. Modern control theory made the design of control systems simpler because\nthe theory is based on a model of an actual control system. However, the system’s\nstability is sensitive to the error between the actual system and its model. This\nmeans that when the designed controller based on a model is applied to the actual\nsystem, the system may not be stable. To avoid this situation, we design the control\nsystem by first setting up the range of possible errors and then designing the con-\ntroller in such a way that, if the error of the system stays within the assumed\nrange, the designed control system will stay stable. The design method based on this\nprinciple is called robust control theory.This theory incorporates both the frequency-\nresponse approach and the time-domain approach.The theory is mathematically very\ncomplex.Section 1–1 / Introduction 3\nBecause this theory requires mathematical background at the graduate level, inclu-\nsion of robust control theory in this book is limited to introductory aspects only. The\nreader interested in details of robust control theory should take a graduate-level control\ncourse at an established college or university.\nDefinitions. Before we can discuss control systems, some basic terminologies must\nbe defined.\nControlled Variable and Control Signal or Manipulated Variable.The controlled\nvariable is the quantity or condition that is measured and controlled.Thecontrol signal\nor manipulated variable is the quantity or condition that is varied by the controller so\nas to affect the value of the controlled variable. Normally, the controlled variable is the\noutput of the system.Control means measuring the value of the controlled variable of\nthe system and applying the control signal to the system to correct or limit deviation of\nthe measured value from a desired value.\nIn studying control engineering, we need to define additional terms that are neces-\nsary to describe control systems.\nPlants. A plant may be a piece of equipment, perhaps just a set of machine parts\nfunctioning together, the purpose of which is to perform a particular operation. In this\nbook, we shall call any physical object to be controlled (such as a mechanical device, a\nheating furnace, a chemical reactor, or a spacecraft) a plant.\nProcesses. The Merriam–Webster Dictionarydefines a process to be a natural, pro-\ngressively continuing operation or development marked by a series of gradual changes\nthat succeed one another in a relatively fixed way and lead toward a particular result or\nend; or an artificial or voluntary, progressively continuing operation that consists of a se-\nries of controlled actions or movements systematically directed toward a particular re-\nsult or end. In this book we shall call any operation to be controlled a process. Examples\nare chemical, economic, and biological processes.\nSystems. A system is a combination of components that act together and perform\na certain objective. A system need not be physical. The concept of the system can be\napplied to abstract, dynamic phenomena such as those encountered in economics. The\nword system should, therefore, be interpreted to imply physical, biological, economic, and\nthe like, systems.\nDisturbances. A disturbance is a signal that tends to adversely affect the value \nof the output of a system. If a disturbance is generated within the system, it is called\ninternal,while an external disturbance is generated outside the system and is \nan input.\nFeedback Control. Feedback control refers to an operation that, in the presence\nof disturbances, tends to reduce the difference between the output of a system and some\nreference input and does so on the basis of this difference. Here only unpredictable dis-\nturbances are so specified, since predictable or known disturbances can always be com-\npensated for within the system.4\nChapter 1 / Introduction to Control Systems\n1–2 EXAMPLES OF CONTROL SYSTEMS\nIn this section we shall present a few examples of control systems.\nSpeed Control System. The basic principle of a Watt’s speed governor for an en-\ngine is illustrated in the schematic diagram of Figure 1–1. The amount of fuel admitted\nto the engine is adjusted according to the difference between the desired and the actual\nengine speeds.\nThe sequence of actions may be stated as follows: The speed governor is ad-\njusted such that, at the desired speed, no pressured oil will flow into either side of\nthe power cylinder. If the actual speed drops below the desired value due to\ndisturbance, then the decrease in the centrifugal force of the speed governor causes\nthe control valve to move downward, supplying more fuel, and the speed of the\nengine increases until the desired value is reached. On the other hand, if the speed\nof the engine increases above the desired value, then the increase in the centrifu-\ngal force of the governor causes the control valve to move upward. This decreases \nthe supply of fuel, and the speed of the engine decreases until the desired value is\nreached.\nIn this speed control system, the plant (controlled system) is the engine and the\ncontrolled variable is the speed of the engine. The difference between the desired\nspeed and the actual speed is the error signal.The control signal (the amount of fuel)\nto be applied to the plant (engine) is the actuating signal. The external input to dis-\nturb the controlled variable is the disturbance. An unexpected change in the load is\na disturbance.\nTemperature Control System. Figure 1–2 shows a schematic diagram of tem-\nperature control of an electric furnace.The temperature in the electric furnace is meas-\nured by a thermometer, which is an analog device.The analog temperature is converted\nOil under\npressure\nPower\ncylinder\nClose\nOpen\nPilot\nvalve\nControl\nvalve\nFuel\nEngine Load\nFigure 1–1\nSpeed control\nsystem.\nOpenmirrors.comSection 1–2 / Examples of Control Systems 5\nThermometer\nHeater\nInterface\nController\nInterfaceAmplifier\nA/D\nconverter\nProgrammed\ninput\nElectric\nfurnace\nRelay\nFigure 1–2\nTemperature control\nsystem.\nto a digital temperature by an A/D converter. The digital temperature is fed to a con-\ntroller through an interface.This digital temperature is compared with the programmed\ninput temperature, and if there is any discrepancy (error), the controller sends out a sig-\nnal to the heater, through an interface, amplifier, and relay, to bring the furnace tem-\nperature to a desired value.\nBusiness Systems. A business system may consist of many groups. Each task\nassigned to a group will represent a dynamic element of the system. Feedback methods\nof reporting the accomplishments of each group must be established in such a system for\nproper operation. The cross-coupling between functional groups must be made a mini-\nmum in order to reduce undesirable delay times in the system. The smaller this cross-\ncoupling, the smoother the flow of work signals and materials will be.\nA business system is a closed-loop system. A good design will reduce the manageri-\nal control required. Note that disturbances in this system are the lack of personnel or ma-\nterials, interruption of communication, human errors, and the like.\nThe establishment of a well-founded estimating system based on statistics is manda-\ntory to proper management. It is a well-known fact that the performance of such a system\ncan be improved by the use of lead time, or anticipation.\nTo apply control theory to improve the performance of such a system, we must rep-\nresent the dynamic characteristic of the component groups of the system by a relative-\nly simple set of equations.\nAlthough it is certainly a difficult problem to derive mathematical representations\nof the component groups, the application of optimization techniques to business sys-\ntems significantly improves the performance of the business system.\nConsider, as an example, an engineering organizational system that is composed of\nmajor groups such as management, research and development, preliminary design, ex-\nperiments, product design and drafting, fabrication and assembling, and tesing. These\ngroups are interconnected to make up the whole operation.\nSuch a system may be analyzed by reducing it to the most elementary set of com-\nponents necessary that can provide the analytical detail required and by representing the\ndynamic characteristics of each component by a set of simple equations. (The dynamic\nperformance of such a system may be determined from the relation between progres-\nsive accomplishment and time.)6\nChapter 1 / Introduction to Control Systems\nRequired\nproduct\nManagement\nResearch\nand\ndevelopment\nPreliminary\ndesign Experiments\nProduct\ndesign and\ndrafting\nFabrication\nand\nassembling\nTesting\nProduct\nFigure 1–3\nBlock diagram of an engineering organizational system.\nA functional block diagram may be drawn by using blocks to represent the func-\ntional activities and interconnecting signal lines to represent the information or\nproduct output of the system operation. Figure 1–3 is a possible block diagram for\nthis system.\nRobust Control System. The first step in the design of a control system is to\nobtain a mathematical model of the plant or control object. In reality, any model of a\nplant we want to control will include an error in the modeling process.That is, the actual\nplant differs from the model to be used in the design of the control system.\nTo ensure the controller designed based on a model will work satisfactorily when\nthis controller is used with the actual plant, one reasonable approach is to assume\nfrom the start that there is an uncertainty or error between the actual plant and its\nmathematical model and include such uncertainty or error in the design process of the\ncontrol system. The control system designed based on this approach is called a robust\ncontrol system.\nSuppose that the actual plant we want to control is (s) and the mathematical model\nof the actual plant is G(s), that is,\n(s)=actual plant model that has uncertainty ¢(s)\nG(s)=nominal plant model to be used for designing the control system \n(s) and G(s) may be related by a multiplicative factor such as\nor an additive factor\nor in other forms.\nSince the exact description of the uncertainty or error ¢(s) is unknown, we use an\nestimate of ¢(s) and use this estimate, W(s), in the design of the controller. W(s) is a\nscalar transfer function such that\nwhere is the maximum value of for and is called the H\ninfinity norm of W(s).\n0 /H11349v /H11349q/H20895W(jv)/H20895/H20895/H20895W(s)/H20895/H20895\nq\n/H20895/H20895¢(s)/H20895/H20895\nq\n6 /H20895/H20895W(s)/H20895/H20895\nq\n= max\n0/H11349v/H11349q\n /H20895W(jv)/H20895\nG/H33522(s) = G(s) +¢ (s)\nG/H33522(s) = G(s)[1 + ¢(s)]\nG/H33522\nG/H33522\nG/H33522\nOpenmirrors.comSection 1–3 / Closed-Loop Control versus Open-Loop Control\n7\nUsing the small gain theorem, the design procedure here boils down to the deter-\nmination of the controller K(s) such that the inequality\nis satisfied, where G(s) is the transfer function of the model used in the design process,\nK(s) is the transfer function of the controller, and W(s) is the chosen transfer function\nto approximate ¢(s). In most practical cases, we must satisfy more than one such\ninequality that involves G(s), K(s), and W(s)’s. For example, to guarantee robust sta-\nbility and robust performance we may require two inequalities, such as\nfor robust stability\nfor robust performance\nbe satisfied. (These inequalities are derived in Section 10–9.) There are many different\nsuch inequalities that need to be satisfied in many different robust control systems.\n(Robust stability means that the controller K(s) guarantees internal stability of all\nsystems that belong to a group of systems that include the system with the actual plant.\nRobust performance means the specified performance is satisfied in all systems that be-\nlong to the group.) In this book all the plants of control systems we discuss are assumed\nto be known precisely, except the plants we discuss in Section 10–9 where an introduc-\ntory aspect of robust control theory is presented.\n1–3 CLOSED-LOOP CONTROL VERSUS OPEN-LOOP CONTROL\nFeedback Control Systems. A system that maintains a prescribed relationship\nbetween the output and the reference input by comparing them and using the difference\nas a means of control is called a feedback control system.An example would be a room-\ntemperature control system. By measuring the actual room temperature and comparing\nit with the reference temperature (desired temperature), the thermostat turns the heat-\ning or cooling equipment on or off in such a way as to ensure that the room tempera-\nture remains at a comfortable level regardless of outside conditions.\nFeedback control systems are not limited to engineering but can be found in various\nnonengineering fields as well. The human body, for instance, is a highly advanced feed-\nback control system. Both body temperature and blood pressure are kept constant by\nmeans of physiological feedback. In fact, feedback performs a vital function: It makes\nthe human body relatively insensitive to external disturbances, thus enabling it to func-\ntion properly in a changing environment.\nß\nW\ns\n(s)\n1 + K(s)G(s)\nß\nq\n6 1\nß\nW\nm\n(s)K(s)G(s)\n1 + K(s)G(s)\nß\nq\n6 1\nß\nW(s)\n1 + K(s)G(s)\nß\nq\n6 1\nOpenmirrors.com8\nChapter 1 / Introduction to Control Systems\nClosed-Loop Control Systems. Feedback control systems are often referred to\nas closed-loop control systems. In practice, the terms feedback control and closed-loop\ncontrol are used interchangeably. In a closed-loop control system the actuating error\nsignal, which is the difference between the input signal and the feedback signal (which\nmay be the output signal itself or a function of the output signal and its derivatives\nand/or integrals), is fed to the controller so as to reduce the error and bring the output\nof the system to a desired value.The term closed-loop control always implies the use of\nfeedback control action in order to reduce system error.\nOpen-Loop Control Systems. Those systems in which the output has no effect\non the control action are called open-loop control systems. In other words, in an open-\nloop control system the output is neither measured nor fed back for comparison with the\ninput. One practical example is a washing machine. Soaking, washing, and rinsing in the\nwasher operate on a time basis. The machine does not measure the output signal, that\nis, the cleanliness of the clothes.\nIn any open-loop control system the output is not compared with the reference input.\nThus, to each reference input there corresponds a fixed operating condition; as a result,\nthe accuracy of the system depends on calibration. In the presence of disturbances, an\nopen-loop control system will not perform the desired task. Open-loop control can be\nused, in practice, only if the relationship between the input and output is known and if\nthere are neither internal nor external disturbances. Clearly, such systems are not feed-\nback control systems. Note that any control system that operates on a time basis is open\nloop. For instance, traffic control by means of signals operated on a time basis is another\nexample of open-loop control.\nClosed-Loop versus Open-Loop Control Systems. An advantage of the closed-\nloop control system is the fact that the use of feedback makes the system response rela-\ntively insensitive to external disturbances and internal variations in system parameters.\nIt is thus possible to use relatively inaccurate and inexpensive components to obtain the\naccurate control of a given plant, whereas doing so is impossible in the open-loop case.\nFrom the point of view of stability, the open-loop control system is easier to build be-\ncause system stability is not a major problem. On the other hand, stability is a major\nproblem in the closed-loop control system, which may tend to overcorrect errors and\nthereby can cause oscillations of constant or changing amplitude.\nIt should be emphasized that for systems in which the inputs are known ahead of\ntime and in which there are no disturbances it is advisable to use open-loop control.\nClosed-loop control systems have advantages only when unpredictable disturbances\nand/or unpredictable variations in system components are present. Note that the\noutput power rating partially determines the cost, weight, and size of a control system.\nThe number of components used in a closed-loop control system is more than that for\na corresponding open-loop control system. Thus, the closed-loop control system is\ngenerally higher in cost and power.To decrease the required power of a system, open-\nloop control may be used where applicable. A proper combination of open-loop and\nclosed-loop controls is usually less expensive and will give satisfactory overall system\nperformance.\nMost analyses and designs of control systems presented in this book are concerned\nwith closed-loop control systems. Under certain circumstances (such as where no\ndisturbances exist or the output is hard to measure) open-loop control systems may be\nOpenmirrors.comdesired. Therefore, it is worthwhile to summarize the advantages and disadvantages of\nusing open-loop control systems.\nThe major advantages of open-loop control systems are as follows:\n1. Simple construction and ease of maintenance.\n2. Less expensive than a corresponding closed-loop system.\n3. There is no stability problem.\n4. Convenient when output is hard to measure or measuring the output precisely is\neconomically not feasible. (For example, in the washer system, it would be quite ex-\npensive to provide a device to measure the quality of the washer’s output, clean-\nliness of the clothes.)\nThe major disadvantages of open-loop control systems are as follows:\n1. Disturbances and changes in calibration cause errors, and the output may be\ndifferent from what is desired.\n2. To maintain the required quality in the output, recalibration is necessary from\ntime to time.\n1–4 DESIGN AND COMPENSATION OF CONTROL SYSTEMS\nThis book discusses basic aspects of the design and compensation of control systems.\nCompensation is the modification of the system dynamics to satisfy the given specifi-\ncations.The approaches to control system design and compensation used in this book\nare the root-locus approach, frequency-response approach, and the state-space ap-\nproach. Such control systems design and compensation will be presented in Chapters\n6, 7, 9 and 10. The PID-based compensational approach to control systems design is\ngiven in Chapter 8.\nIn the actual design of a control system, whether to use an electronic, pneumatic, or\nhydraulic compensator is a matter that must be decided partially based on the nature of\nthe controlled plant. For example, if the controlled plant involves flammable fluid, then\nwe have to choose pneumatic components (both a compensator and an actuator) to\navoid the possibility of sparks. If, however, no fire hazard exists, then electronic com-\npensators are most commonly used. (In fact, we often transform nonelectrical signals into\nelectrical signals because of the simplicity of transmission, increased accuracy, increased\nreliability, ease of compensation, and the like.)\nPerformance Specifications. Control systems are designed to perform specific\ntasks. The requirements imposed on the control system are usually spelled out as per-\nformance specifications. The specifications may be given in terms of transient response\nrequirements (such as the maximum overshoot and settling time in step response) and\nof steady-state requirements (such as steady-state error in following ramp input) or may\nbe given in frequency-response terms. The specifications of a control system must be\ngiven before the design process begins.\nFor routine design problems, the performance specifications (which relate to accura-\ncy, relative stability, and speed of response) may be given in terms of precise numerical\nvalues. In other cases they may be given partially in terms of precise numerical values and\nSection 1–4 / Design and Compensation of Control Systems 9partially in terms of qualitative statements. In the latter case the specifications may have\nto be modified during the course of design, since the given specifications may never be\nsatisfied (because of conflicting requirements) or may lead to a very expensive system.\nGenerally, the performance specifications should not be more stringent than neces-\nsary to perform the given task. If the accuracy at steady-state operation is of prime im-\nportance in a given control system, then we should not require unnecessarily rigid\nperformance specifications on the transient response, since such specifications will\nrequire expensive components. Remember that the most important part of control\nsystem design is to state the performance specifications precisely so that they will yield\nan optimal control system for the given purpose.\nSystem Compensation. Setting the gain is the first step in adjusting the system\nfor satisfactory performance. In many practical cases, however, the adjustment of the\ngain alone may not provide sufficient alteration of the system behavior to meet the given\nspecifications. As is frequently the case, increasing the gain value will improve the\nsteady-state behavior but will result in poor stability or even instability. It is then nec-\nessary to redesign the system (by modifying the structure or by incorporating addi-\ntional devices or components) to alter the overall behavior so that the system will\nbehave as desired. Such a redesign or addition of a suitable device is called compensa-\ntion. A device inserted into the system for the purpose of satisfying the specifications\nis called a compensator.The compensator compensates for deficient performance of the\noriginal system.\nDesign Procedures. In the process of designing a control system, we set up a\nmathematical model of the control system and adjust the parameters of a compensator.\nThe most time-consuming part of the work is the checking of the system performance\nby analysis with each adjustment of the parameters.The designer should use MATLAB\nor other available computer package to avoid much of the numerical drudgery neces-\nsary for this checking.\nOnce a satisfactory mathematical model has been obtained, the designer must con-\nstruct a prototype and test the open-loop system. If absolute stability of the closed loop\nis assured, the designer closes the loop and tests the performance of the resulting closed-\nloop system. Because of the neglected loading effects among the components, nonlin-\nearities, distributed parameters, and so on, which were not taken into consideration in\nthe original design work, the actual performance of the prototype system will probably\ndiffer from the theoretical predictions. Thus the first design may not satisfy all the re-\nquirements on performance. The designer must adjust system parameters and make\nchanges in the prototype until the system meets the specificications. In doing this, he or\nshe must analyze each trial, and the results of the analysis must be incorporated into\nthe next trial. The designer must see that the final system meets the performance apec-\nifications and, at the same time, is reliable and economical.\n1–5 OUTLINE OF THE BOOK\nThis text is organized into 10 chapters.The outline of each chapter may be summarized\nas follows:\nChapter 1 presents an introduction to this book.\n10\nChapter 1 / Introduction to Control Systems\nOpenmirrors.comChapter 2 deals with mathematical modeling of control systems that are described\nby linear differential equations. Specifically, transfer function expressions of differential\nequation systems are derived.Also, state-space expressions of differential equation sys-\ntems are derived. MATLAB is used to transform mathematical models from transfer\nfunctions to state-space equations and vice versa. This book treats linear systems in de-\ntail. If the mathematical model of any system is nonlinear, it needs to be linearized be-\nfore applying theories presented in this book. A technique to linearize nonlinear\nmathematical models is presented in this chapter.\nChapter 3 derives mathematical models of various mechanical and electrical sys-\ntems that appear frequently in control systems.\nChapter 4 discusses various fluid systems and thermal systems, that appear in control\nsystems. Fluid systems here include liquid-level systems, pneumatic systems, and hydraulic\nsystems. Thermal systems such as temperature control systems are also discussed here.\nControl engineers must be familiar with all of these systems discussed in this chapter.\nChapter 5 presents transient and steady-state response analyses of control systems\ndefined in terms of transfer functions. MATLAB approach to obtain transient and\nsteady-state response analyses is presented in detail. MATLAB approach to obtain\nthree-dimensional plots is also presented. Stability analysis based on Routh’s stability\ncriterion is included in this chapter and the Hurwitz stability criterion is briefly discussed.\nChapter 6 treats the root-locus method of analysis and design of control systems. It\nis a graphical method for determining the locations of all closed-loop poles from the\nknowledge of the locations of the open-loop poles and zeros of a closed-loop system\nas a parameter (usually the gain) is varied from zero to infinity. This method was de-\nveloped by W. R. Evans around 1950. These days MATLAB can produce root-locus\nplots easily and quickly.This chapter presents both a manual approach and a MATLAB\napproach to generate root-locus plots. Details of the design of control systems using lead\ncompensators, lag compensators, are lag–lead compensators are presented in this\nchapter.\nChapter 7 presents the frequency-response method of analysis and design of control\nsystems. This is the oldest method of control systems analysis and design and was de-\nveloped during 1940–1950 by Nyquist, Bode, Nichols, Hazen, among others. This chap-\nter presents details of the frequency-response approach to control systems design using\nlead compensation technique, lag compensation technique, and lag–lead compensation\ntechnique. The frequency-response method was the most frequently used analysis and\ndesign method until the state-space method became popular. However, since H-infini-\nty control for designing robust control systems has become popular, frequency response\nis gaining popularity again.\nChapter 8 discusses PID controllers and modified ones such as multidegrees-of-\nfreedom PID controllers. The PID controller has three parameters; proportional gain,\nintegral gain, and derivative gain. In industrial control systems more than half of the con-\ntrollers used have been PID controllers. The performance of PID controllers depends\non the relative magnitudes of those three parameters. Determination of the relative\nmagnitudes of the three parameters is called tuning of PID controllers.\nZiegler and Nichols proposed so-called “Ziegler–Nichols tuning rules” as early as\n1942. Since then numerous tuning rules have been proposed.These days manufacturers\nof PID controllers have their own tuning rules. In this chapter we present a computer\noptimization approach using MATLAB to determine the three parameters to satisfy\nSection 1–5 / Outline of the Book 11given transient response characteristics.The approach can be expanded to determine the\nthree parameters to satisfy any specific given characteristics.\nChapter 9 presents basic analysis of state-space equations. Concepts of controllabil-\nity and observability, most important concepts in modern control theory, due to Kalman\nare discussed in full. In this chapter, solutions of state-space equations are derived in\ndetail.\nChapter 10 discusses state-space designs of control systems. This chapter first deals\nwith pole placement problems and state observers. In control engineering, it is frequently\ndesirable to set up a meaningful performance index and try to minimize it (or maximize\nit, as the case may be). If the performance index selected has a clear physical meaning,\nthen this approach is quite useful to determine the optimal control variable. This chap-\nter discusses the quadratic optimal regulator problem where we use a performance index\nwhich is an integral of a quadratic function of the state variables and the control vari-\nable.The integral is performed from t=0 to t= .This chapter concludes with a brief\ndiscussion of robust control systems.\nq\n12\nChapter 1 / Introduction to Control Systems\nOpenmirrors.com2\n13\nMathematical Modeling \nof Control Systems\n2–1 INTRODUCTION\nIn studying control systems the reader must be able to model dynamic systems in math-\nematical terms and analyze their dynamic characteristics.A mathematical model of a dy-\nnamic system is defined as a set of equations that represents the dynamics of the system\naccurately, or at least fairly well. Note that a mathematical model is not unique to a\ngiven system. A system may be represented in many different ways and, therefore, may\nhave many mathematical models, depending on one’s perspective.\nThe dynamics of many systems, whether they are mechanical, electrical, thermal,\neconomic, biological, and so on, may be described in terms of differential equations.\nSuch differential equations may be obtained by using physical laws governing a partic-\nular system—for example, Newton’s laws for mechanical systems and Kirchhoff’s laws\nfor electrical systems. We must always keep in mind that deriving reasonable mathe-\nmatical models is the most important part of the entire analysis of control systems.\nThroughout this book we assume that the principle of causality applies to the systems\nconsidered.This means that the current output of the system (the output at time t=0)\ndepends on the past input (the input for t<0) but does not depend on the future input\n(the input for t>0).\nMathematical Models. Mathematical models may assume many different forms.\nDepending on the particular system and the particular circumstances, one mathemati-\ncal model may be better suited than other models. For example, in optimal control prob-\nlems, it is advantageous to use state-space representations. On the other hand, for the14\nChapter 2 / Mathematical Modeling of Control Systems\ntransient-response or frequency-response analysis of single-input, single-output, linear,\ntime-invariant systems, the transfer-function representation may be more convenient\nthan any other. Once a mathematical model of a system is obtained, various analytical\nand computer tools can be used for analysis and synthesis purposes.\nSimplicity Versus Accuracy. In obtaining a mathematical model, we must make\na compromise between the simplicity of the model and the accuracy of the results of\nthe analysis. In deriving a reasonably simplified mathematical model, we frequently find\nit necessary to ignore certain inherent physical properties of the system. In particular,\nif a linear lumped-parameter mathematical model (that is, one employing ordinary dif-\nferential equations) is desired, it is always necessary to ignore certain nonlinearities and\ndistributed parameters that may be present in the physical system. If the effects that\nthese ignored properties have on the response are small, good agreement will be obtained\nbetween the results of the analysis of a mathematical model and the results of the\nexperimental study of the physical system.\nIn general, in solving a new problem, it is desirable to build a simplified model so that\nwe can get a general feeling for the solution.A more complete mathematical model may\nthen be built and used for a more accurate analysis.\nWe must be well aware that a linear lumped-parameter model, which may be valid in\nlow-frequency operations, may not be valid at sufficiently high frequencies, since the neg-\nlected property of distributed parameters may become an important factor in the dynamic\nbehavior of the system. For example, the mass of a spring may be neglected in low-\nfrequency operations, but it becomes an important property of the system at high fre-\nquencies. (For the case where a mathematical model involves considerable errors, robust\ncontrol theory may be applied. Robust control theory is presented in Chapter 10.)\nLinear Systems. A system is called linear if the principle of superposition\napplies. The principle of superposition states that the response produced by the\nsimultaneous application of two different forcing functions is the sum of the two\nindividual responses. Hence, for the linear system, the response to several inputs can\nbe calculated by treating one input at a time and adding the results. It is this principle\nthat allows one to build up complicated solutions to the linear differential equation\nfrom simple solutions.\nIn an experimental investigation of a dynamic system, if cause and effect are pro-\nportional, thus implying that the principle of superposition holds, then the system can\nbe considered linear.\nLinear Time-Invariant Systems and Linear Time-Varying Systems. A differ-\nential equation is linear if the coefficients are constants or functions only of the in-\ndependent variable. Dynamic systems that are composed of linear time-invariant\nlumped-parameter components may be described by linear time-invariant differen-\ntial equations—that is, constant-coefficient differential equations. Such systems are\ncalled linear time-invariant (or linear constant-coefficient ) systems. Systems that\nare represented by differential equations whose coefficients are functions of time\nare called linear time-varying systems. An example of a time-varying control sys-\ntem is a spacecraft control system. (The mass of a spacecraft changes due to fuel\nconsumption.)\nOpenmirrors.comSection 2–2 / Transfer Function and Impulse-Response Function 15\nOutline of the Chapter. Section 2–1 has presented an introduction to the math-\nematical modeling of dynamic systems. Section 2–2 presents the transfer function and\nimpulse-response function. Section 2–3 introduces automatic control systems and Sec-\ntion 2–4 discusses concepts of modeling in state space. Section 2–5 presents state-space\nrepresentation of dynamic systems. Section 2–6 discusses transformation of mathemat-\nical models with MATLAB. Finally, Section 2–7 discusses linearization of nonlinear\nmathematical models.\n2–2 TRANSFER FUNCTION AND IMPULSE-\nRESPONSE FUNCTION\nIn control theory, functions called transfer functions are commonly used to character-\nize the input-output relationships of components or systems that can be described by lin-\near, time-invariant, differential equations. We begin by defining the transfer function\nand follow with a derivation of the transfer function of a differential equation system.\nThen we discuss the impulse-response function.\nTransfer Function. The transfer function of a linear, time-invariant, differential\nequation system is defined as the ratio of the Laplace transform of the output (response\nfunction) to the Laplace transform of the input (driving function) under the assumption\nthat all initial conditions are zero.\nConsider the linear time-invariant system defined by the following differential equation:\nwhere y is the output of the system and x is the input. The transfer function of this sys-\ntem is the ratio of the Laplace transformed output to the Laplace transformed input\nwhen all initial conditions are zero, or\nBy using the concept of transfer function, it is possible to represent system dynam-\nics by algebraic equations in s. If the highest power of s in the denominator of the trans-\nfer function is equal to n, the system is called an nth-order system.\nComments on Transfer Function. The applicability of the concept of the trans-\nfer function is limited to linear, time-invariant, differential equation systems.The trans-\nfer function approach, however, is extensively used in the analysis and design of such\nsystems. In what follows, we shall list important comments concerning the transfer func-\ntion. (Note that a system referred to in the list is one described by a linear, time-invariant,\ndifferential equation.)\n= Y(s)\nX(s) = b0 sm + b1 sm - 1 + p + bm - 1 s + bm\na0 sn + a1 sn - 1 + p + an - 1 s + an\n Transfer function = G(s) = l[output]\nl[input]\n2\nzero initial conditions\n= b0 x\n(m)\n+  b1x\n(m - 1)\n+ p + bm - 1 x# + bm x  (n /H11350m)\na0 y\n(n)\n+  a1y\n(n - 1)\n+ p + an - 1 y# + an y16\nChapter 2 / Mathematical Modeling of Control Systems\n1. The transfer function of a system is a mathematical model in that it is an opera-\ntional method of expressing the differential equation that relates the output vari-\nable to the input variable.\n2. The transfer function is a property of a system itself, independent of the magnitude\nand nature of the input or driving function.\n3. The transfer function includes the units necessary to relate the input to the output;\nhowever, it does not provide any information concerning the physical structure of\nthe system. (The transfer functions of many physically different systems can be\nidentical.)\n4. If the transfer function of a system is known, the output or response can be stud-\nied for various forms of inputs with a view toward understanding the nature of\nthe system.\n5. If the transfer function of a system is unknown, it may be established experimen-\ntally by introducing known inputs and studying the output of the system. Once\nestablished, a transfer function gives a full description of the dynamic character-\nistics of the system, as distinct from its physical description.\nConvolution Integral. For a linear, time-invariant system the transfer function\nG(s) is\nwhere X(s) is the Laplace transform of the input to the system and Y(s) is the Laplace\ntransform of the output of the system, where we assume that all initial conditions in-\nvolved are zero. It follows that the output Y(s) can be written as the product of G(s) and\nX(s),o r\n(2–1)\nNote that multiplication in the complex domain is equivalent to convolution in the time\ndomain (see Appendix A), so the inverse Laplace transform of Equation (2–1) is given\nby the following convolution integral:\nwhere both g(t) and x(t) are 0 for t<0.\nImpulse-Response Function. Consider the output (response) of a linear time-\ninvariant system to a unit-impulse input when the initial conditions are zero. Since the\nLaplace transform of the unit-impulse function is unity, the Laplace transform of the\noutput of the system is\n(2–2)Y(s) = G(s)\n =\n3\nt\n0\ng(t)x(t - t) dt\n y(t) =\n3\nt\n0\nx(t)g(t - t) dt\nY(s) = G(s)X(s)\nG(s) = Y(s)\nX(s)\nOpenmirrors.comSection 2–3 / Automatic Control Systems 17\nThe inverse Laplace transform of the output given by Equation (2–2) gives the impulse\nresponse of the system. The inverse Laplace transform of G(s),o r\nis called the impulse-response function. This function g(t) is also called the weighting\nfunction of the system.\nThe impulse-response function g(t) is thus the response of a linear time-invariant\nsystem to a unit-impulse input when the initial conditions are zero.The Laplace trans-\nform of this function gives the transfer function. Therefore, the transfer function and\nimpulse-response function of a linear, time-invariant system contain the same infor-\nmation about the system dynamics. It is hence possible to obtain complete informa-\ntion about the dynamic characteristics of the system by exciting it with an impulse\ninput and measuring the response. (In practice, a pulse input with a very short dura-\ntion compared with the significant time constants of the system can be considered an\nimpulse.)\n2–3 AUTOMATIC CONTROL SYSTEMS\nA control system may consist of a number of components. To show the functions\nperformed by each component, in control engineering, we commonly use a diagram\ncalled the block diagram. This section first explains what a block diagram is. Next, it\ndiscusses introductory aspects of automatic control systems, including various control\nactions.Then, it presents a method for obtaining block diagrams for physical systems, and,\nfinally, discusses techniques to simplify such diagrams.\nBlock Diagrams. A block diagram of a system is a pictorial representation of the\nfunctions performed by each component and of the flow of signals. Such a diagram de-\npicts the interrelationships that exist among the various components. Differing from a\npurely abstract mathematical representation, a block diagram has the advantage of\nindicating more realistically the signal flows of the actual system.\nIn a block diagram all system variables are linked to each other through functional\nblocks.The functional block or simply block is a symbol for the mathematical operation\non the input signal to the block that produces the output. The transfer functions of the\ncomponents are usually entered in the corresponding blocks, which are connected by ar-\nrows to indicate the direction of the flow of signals. Note that the signal can pass only\nin the direction of the arrows.Thus a block diagram of a control system explicitly shows\na unilateral property.\nFigure 2–1 shows an element of the block diagram. The arrowhead pointing toward\nthe block indicates the input, and the arrowhead leading away from the block repre-\nsents the output. Such arrows are referred to as signals.\nl-1 CG(s)D = g(t)\nTransfer\nfunction\nG(s)\nFigure 2–1\nElement of a block\ndiagram.18\nChapter 2 / Mathematical Modeling of Control Systems\n+–\nR(s) E(s)\nG(s)\nC(s)\nSumming\npoint\nBranch\npoint\nFigure 2–3\nBlock diagram of a\nclosed-loop system.\nNote that the dimension of the output signal from the block is the dimension of the\ninput signal multiplied by the dimension of the transfer function in the block.\nThe advantages of the block diagram representation of a system are that it is easy\nto form the overall block diagram for the entire system by merely connecting the blocks\nof the components according to the signal flow and that it is possible to evaluate the\ncontribution of each component to the overall performance of the system.\nIn general, the functional operation of the system can be visualized more readily by\nexamining the block diagram than by examining the physical system itself. A block di-\nagram contains information concerning dynamic behavior, but it does not include any\ninformation on the physical construction of the system. Consequently, many dissimilar\nand unrelated systems can be represented by the same block diagram.\nIt should be noted that in a block diagram the main source of energy is not explicitly\nshown and that the block diagram of a given system is not unique. A number of different\nblock diagrams can be drawn for a system, depending on the point of view of the analysis.\nSumming Point. Referring to Figure 2–2, a circle with a cross is the symbol that\nindicates a summing operation. The plus or minus sign at each arrowhead indicates\nwhether that signal is to be added or subtracted. It is important that the quantities being\nadded or subtracted have the same dimensions and the same units.\nBranch Point. A branch point is a point from which the signal from a block goes\nconcurrently to other blocks or summing points.\nBlock Diagram of a Closed-Loop System. Figure 2–3 shows an example of a\nblock diagram of a closed-loop system. The output C(s) is fed back to the summing\npoint, where it is compared with the reference input R(s). The closed-loop nature of\nthe system is clearly indicated by the figure. The output of the block, C(s) in this case,\nis obtained by multiplying the transfer function G(s) by the input to the block,E(s).Any\nlinear control system may be represented by a block diagram consisting of blocks, sum-\nming points, and branch points.\nWhen the output is fed back to the summing point for comparison with the input, it\nis necessary to convert the form of the output signal to that of the input signal. For\nexample, in a temperature control system, the output signal is usually the controlled\ntemperature. The output signal, which has the dimension of temperature, must be con-\nverted to a force or position or voltage before it can be compared with the input signal.\nThis conversion is accomplished by the feedback element whose transfer function is H(s),\nas shown in Figure 2–4. The role of the feedback element is to modify the output before\nit is compared with the input. (In most cases the feedback element is a sensor that measures\n+ –\naa  – b\nb\nFigure 2–2\nSumming point.\nOpenmirrors.comthe output of the plant. The output of the sensor is compared with the system input, and\nthe actuating error signal is generated.) In the present example, the feedback signal that\nis fed back to the summing point for comparison with the input is B(s) = H(s)C(s).\nOpen-Loop Transfer Function and Feedforward Transfer Function. Refer-\nring to Figure 2–4, the ratio of the feedback signal B(s) to the actuating error signal\nE(s) is called the open-loop transfer function. That is,\nThe ratio of the output C(s) to the actuating error signal E(s) is called the feed-\nforward transfer function, so that\nIf the feedback transfer function H(s) is unity, then the open-loop transfer function and\nthe feedforward transfer function are the same.\nClosed-Loop Transfer Function. For the system shown in Figure 2–4, the output\nC(s) and input R(s) are related as follows: since\neliminating E(s) from these equations gives\nor\n(2–3)\nThe transfer function relating C(s) to R(s) is called the closed-loop transfer function.I t\nrelates the closed-loop system dynamics to the dynamics of the feedforward elements\nand feedback elements.\nFrom Equation (2–3), C(s) is given by\nC(s) = G(s)\n1 + G(s)H(s) R(s)\nC(s)\nR(s) = G(s)\n1 + G(s)H(s)\nC(s) = G(s)CR(s) - H(s)C(s)D\n = R(s) - H(s)C(s)\n E(s) = R(s) - B(s)\n C(s) = G(s)E(s)\nFeedforward transfer function = C(s)\nE(s) = G(s)\nOpen-loop transfer function = B(s)\nE(s) = G(s)H(s)\nSection 2–3 / Automatic Control Systems 19\nR(s)\nB(s)\nE(s)\nG(s)\nH(s)\nC(s)\n+ –\nFigure 2–4\nClosed-loop system.20\nChapter 2 / Mathematical Modeling of Control Systems\nG\n1\n(s)\nG\n1\n(s)\nG\n2\n(s)\nG\n2\n(s)\nC(s)R(s)\nC(s)\nC(s)\nR(s)\nR(s)\n+\n+\nG\n1\n(s)\nG\n2\n(s)\n+–\n(a)\n(b)\n(c)\nFigure 2–5\n(a) Cascaded system;\n(b) parallel system;\n(c) feedback (closed-\nloop) system.\nThus the output of the closed-loop system clearly depends on both the closed-loop trans-\nfer function and the nature of the input.\nObtaining Cascaded, Parallel, and Feedback (Closed-Loop) Transfer Functions\nwith MATLAB. In control-systems analysis, we frequently need to calculate the cas-\ncaded transfer functions, parallel-connected transfer functions, and feedback-connected\n(closed-loop) transfer functions. MATLAB has convenient commands to obtain the cas-\ncaded, parallel, and feedback (closed-loop) transfer functions.\nSuppose that there are two components G\n1\n(s) and G\n2\n(s) connected differently as\nshown in Figure 2–5 (a), (b), and (c), where\nTo obtain the transfer functions of the cascaded system, parallel system, or feedback\n(closed-loop) system, the following commands may be used:\n[num, den] = series(num1,den1,num2,den2)\n[num, den] = parallel(num1,den1,num2,den2)\n[num, den] = feedback(num1,den1,num2,den2)\nAs an example, consider the case where\nMATLAB Program 2–1 gives C(s)/R(s)=num/H20862den for each arrangement of G\n1\n(s)\nand G\n2\n(s). Note that the command\nprintsys(num,den)\ndisplays the num/H20862den Cthat is, the transfer function C(s)/R(s)Dof the system considered.\nG\n1\n(s) = 10\ns\n2\n+ 2s + 10 = num1\nden1 ,\n  \nG\n2\n(s) = 5\ns + 5 = num2\nden2\nG\n1\n(s) = num1\nden1 ,\n  \nG\n2\n(s) = num2\nden2\nOpenmirrors.comSection 2–3 / Automatic Control Systems 21\nAutomatic Controllers. An automatic controller compares the actual value of\nthe plant output with the reference input (desired value), determines the deviation, and\nproduces a control signal that will reduce the deviation to zero or to a small value.\nThe manner in which the automatic controller produces the control signal is called\nthecontrol action. Figure 2–6 is a block diagram of an industrial control system, which\nMATLAB Program 2–1\nnum1 = [10];\nden1 = [1  2  10];\nnum2 = [5];\nden2 = [1  5];\n[num, den] = series(num1,den1,num2,den2);\nprintsys(num,den)\nnum/den =\n[num, den] = parallel(num1,den1,num2,den2);\nprintsys(num,den)\nnum/den =\n[num, den] = feedback(num1,den1,num2,den2);\nprintsys(num,den)\nnum/den =\n10s + 50\ns^3 + 7s^2 + 20s + 100\n5s^2 + 20s + 100\ns^3 + 7s^2 + 20s + 50\n50\ns^3 + 7s^2 + 20s + 50\nAutomatic controller\nError detector\nAmplifier Actuator Plant\nOutput\nSensor\nReference\ninput\nActuating\nerror signal\nSet\npoint/H20920/H20921\n+ –\nFigure 2–6\nBlock diagram of an\nindustrial control\nsystem, which\nconsists of an\nautomatic controller,\nan actuator, a plant,\nand a sensor\n(measuring element).22\nChapter 2 / Mathematical Modeling of Control Systems\nconsists of an automatic controller, an actuator , a plant, and a sensor (measuring ele-\nment). The controller detects the actuating error signal, which is usually at a very low\npower level, and amplifies it to a sufficiently high level. The output of an automatic\ncontroller is fed to an actuator, such as an electric motor, a hydraulic motor, or a\npneumatic motor or valve. (The actuator is a power device that produces the input to\nthe plant according to the control signal so that the output signal will approach the\nreference input signal.)\nThe sensor or measuring element is a device that converts the output variable into an-\nother suitable variable, such as a displacement, pressure, voltage, etc., that can be used to\ncompare the output to the reference input signal.This element is in the feedback path of\nthe closed-loop system. The set point of the controller must be converted to a reference\ninput with the same units as the feedback signal from the sensor or measuring element.\nClassifications of Industrial Controllers. Most industrial controllers may be\nclassified according to their control actions as:\n1. Two-position or on–off controllers\n2. Proportional controllers\n3. Integral controllers\n4. Proportional-plus-integral controllers\n5. Proportional-plus-derivative controllers\n6. Proportional-plus-integral-plus-derivative controllers\nMost industrial controllers use electricity or pressurized fluid such as oil or air as\npower sources. Consequently, controllers may also be classified according to the kind of\npower employed in the operation, such as pneumatic controllers, hydraulic controllers,\nor electronic controllers. What kind of controller to use must be decided based on the\nnature of the plant and the operating conditions, including such considerations as safety,\ncost, availability, reliability, accuracy, weight, and size.\nTwo-Position or On–Off Control Action. In a two-position control system, the\nactuating element has only two fixed positions, which are, in many cases, simply on and\noff.Two-position or on–off control is relatively simple and inexpensive and, for this rea-\nson, is very widely used in both industrial and domestic control systems.\nLet the output signal from the controller be u(t) and the actuating error signal be e(t).\nIn two-position control, the signal u(t) remains at either a maximum or minimum value,\ndepending on whether the actuating error signal is positive or negative, so that\nwhere U\n1\nand U\n2\nare constants. The minimum value U\n2\nis usually either zero or –U\n1\n.\nTwo-position controllers are generally electrical devices, and an electric solenoid-oper-\nated valve is widely used in such controllers. Pneumatic proportional controllers with very\nhigh gains act as two-position controllers and are sometimes called pneumatic two-\nposition controllers.\nFigures 2–7(a) and (b) show the block diagrams for two-position or on–off controllers.\nThe range through which the actuating error signal must move before the switching occurs\n = U\n2\n \n,\n  \nfor e(t) 6 0\n u(t) = U\n1\n \n,\n  \nfor e(t) 7 0\nOpenmirrors.comSection 2–3 / Automatic Control Systems 23\nis called the differential gap. A differential gap is indicated in Figure 2–7(b). Such a dif-\nferential gap causes the controller output u(t) to maintain its present value until the ac-\ntuating error signal has moved slightly beyond the zero value. In some cases, the differential\ngap is a result of unintentional friction and lost motion; however, quite often it is inten-\ntionally provided in order to prevent too-frequent operation of the on–off mechanism.\nConsider the liquid-level control system shown in Figure 2–8(a), where the electromag-\nnetic valve shown in Figure 2–8(b) is used for controlling the inflow rate.This valve is either\nopen or closed.With this two-position control, the water inflow rate is either a positive con-\nstant or zero. As shown in Figure 2–9, the output signal continuously moves between the\ntwo limits required to cause the actuating element to move from one fixed position to the\nother. Notice that the output curve follows one of two exponential curves, one correspon-\nding to the filling curve and the other to the emptying curve. Such output oscillation be-\ntween two limits is a typical response characteristic of a system under two-position control.\n(a) (b)\nU1\nU2\nue U1\nU2\nue\nDifferential gap\n+ – + –\nFigure 2–7\n(a) Block diagram of\nan on–off controller;\n(b) block diagram of\nan on–off controller\nwith differential gap.\n115 V\nFloat\nR\nC h\n(a) (b)\nqi\nMovable iron core\nMagnetic coil\nFigure 2–8\n(a) Liquid-level\ncontrol system;\n(b) electromagnetic\nvalve.\nh(t)\nt0\nDifferential\ngap\nFigure 2–9\nLevel h(t)-versus-t\ncurve for the system\nshown in Figure 2–8(a).24\nChapter 2 / Mathematical Modeling of Control Systems\nFrom Figure 2–9, we notice that the amplitude of the output oscillation can \nbe reduced by decreasing the differential gap. The decrease in the differential \ngap, however, increases the number of on–off switchings per minute and reduces \nthe useful life of the component. The magnitude of the differential gap must be \ndetermined from such considerations as the accuracy required and the life of \nthe component.\nProportional Control Action. For a controller with proportional control action,\nthe relationship between the output of the controller u(t) and the actuating error signal\ne(t) is\nor, in Laplace-transformed quantities,\nwhere K\np\nis termed the proportional gain.\nWhatever the actual mechanism may be and whatever the form of the operating\npower, the proportional controller is essentially an amplifier with an adjustable gain.\nIntegral Control Action. In a controller with integral control action, the value of\nthe controller output u(t) is changed at a rate proportional to the actuating error signal\ne(t). That is,\nor\nwhere K\ni\nis an adjustable constant. The transfer function of the integral controller is\nProportional-Plus-Integral Control Action. The control action of a proportional-\nplus-integral controller is defined by\nu(t) = K\np\n \ne(t) +\nK\np\nT\ni\n3\nt\n0\ne(t) dt\nU(s)\nE(s) = K\ni\ns\nu(t) = K\ni\n3\nt\n0\ne(t) dt\ndu(t)\ndt = K\ni\n \ne(t)\nU(s)\nE(s) = K\np\nu(t) = K\np\n \ne(t)\nOpenmirrors.comSection 2–3 / Automatic Control Systems\n25\nor the transfer function of the controller is\nwhere is called the integral time.\nProportional-Plus-Derivative Control Action.The control action of a proportional-\nplus-derivative controller is defined by\nand the transfer function is\nwhere is called the derivative time.\nProportional-Plus-Integral-Plus-Derivative Control Action. The combination of\nproportional control action, integral control action, and derivative control action is\ntermed proportional-plus-integral-plus-derivative control action. It has the advantages\nof each of the three individual control actions. The equation of a controller with this\ncombined action is given by\nor the transfer function is\nwhere K\np\nis the proportional gain, is the integral time, and is the derivative time.\nThe block diagram of a proportional-plus-integral-plus-derivative controller is shown in\nFigure 2–10.\nT\nd\nT\ni\nU(s)\nE(s) = K\np\na\n1 + 1\nT\ni\n \ns + T\nd\n \ns\nb\nu(t) = K\np\n \ne(t) +\nK\np\nT\ni\n3\nt\n0\ne(t) dt + K\np\n \nT\nd\nde(t)\ndt\nT\nd\nU(s)\nE(s) = K\np\nA1 + T\nd\n \nsB\nu(t) = K\np\n \ne(t) + K\np\n \nT\nd\nde(t)\ndt\nT\ni\nU(s)\nE(s) = K\np\na\n1 + 1\nT\ni\n \ns\nb\n+ –\nE(s) U(s)K\np\n(1 + T\ni\ns + T\ni\nT\nd\ns\n2\n)\nT\ni\ns\nFigure 2–10\nBlock diagram of a\nproportional-plus-\nintegral-plus-\nderivative controller.\nOpenmirrors.com26\nChapter 2 / Mathematical Modeling of Control Systems\nR(s)\nG\n1\n(s) G\n2\n(s)\nH(s)\nDisturbance\nD(s)\nC(s)\n+ –\n++\nFigure 2–11\nClosed-loop system\nsubjected to a\ndisturbance.\nClosed-Loop System Subjected to a Disturbance. Figure 2–11 shows a closed-\nloop system subjected to a disturbance. When two inputs (the reference input and dis-\nturbance) are present in a linear time-invariant system, each input can be treated\nindependently of the other; and the outputs corresponding to each input alone can be\nadded to give the complete output. The way each input is introduced into the system is\nshown at the summing point by either a plus or minus sign.\nConsider the system shown in Figure 2–11. In examining the effect of the distur-\nbance D(s), we may assume that the reference input is zero; we may then calculate the\nresponse C\nD\n(s) to the disturbance only. This response can be found from\nOn the other hand, in considering the response to the reference input R(s), we may\nassume that the disturbance is zero.Then the response C\nR\n(s) to the reference input R(s)\ncan be obtained from\nThe response to the simultaneous application of the reference input and disturbance\ncan be obtained by adding the two individual responses. In other words, the response\nC(s) due to the simultaneous application of the reference input R(s) and disturbance\nD(s) is given by\nConsider now the case where |G\n1\n(s)H(s)| /H112711 and |G\n1\n(s)G\n2\n(s)H(s)| /H112711. In this\ncase, the closed-loop transfer function C\nD\n(s)/D(s) becomes almost zero, and the effect\nof the disturbance is suppressed. This is an advantage of the closed-loop system.\nOn the other hand, the closed-loop transfer function C\nR\n(s)/R(s) approaches 1/H(s)\nas the gain of G\n1\n(s)G\n2\n(s)H(s) increases.This means that if |G\n1\n(s)G\n2\n(s)H(s)| /H112711, then\nthe closed-loop transfer function C\nR\n(s)/R(s) becomes independent of G\n1\n(s) and G\n2\n(s)\nand inversely proportional to H(s), so that the variations of G\n1\n(s) and G\n2\n(s) do not\naffect the closed-loop transfer function C\nR\n(s)/R(s). This is another advantage of the\nclosed-loop system. It can easily be seen that any closed-loop system with unity feedback,\nH(s)=1, tends to equalize the input and output.\n = G\n2\n(s)\n1 + G\n1\n(s)G\n2\n(s)H(s) CG\n1\n(s)R(s) + D(s)D\n C(s) = C\nR\n(s) + C\nD\n(s)\nC\nR\n(s)\nR(s) = G\n1\n(s)G\n2\n(s)\n1 + G\n1\n(s)G\n2\n(s)H(s)\nC\nD\n(s)\nD(s) = G\n2\n(s)\n1 + G\n1\n(s)G\n2\n(s)H(s)\nOpenmirrors.comSection 2–3 / Automatic Control Systems 27\nProcedures for Drawing a Block Diagram. To draw a block diagram for a sys-\ntem, first write the equations that describe the dynamic behavior of each component.\nThen take the Laplace transforms of these equations, assuming zero initial conditions,\nand represent each Laplace-transformed equation individually in block form. Finally, as-\nsemble the elements into a complete block diagram.\nAs an example, consider the RC circuit shown in Figure 2–12(a). The equations for\nthis circuit are\n(2–4)\n(2–5)\nThe Laplace transforms of Equations (2–4) and (2–5), with zero initial condition, become\n(2–6)\n(2–7)\nEquation (2–6) represents a summing operation, and the corresponding diagram is\nshown in Figure 2–12(b). Equation (2–7) represents the block as shown in Figure 2–12(c).\nAssembling these two elements, we obtain the overall block diagram for the system as\nshown in Figure 2–12(d).\nBlock Diagram Reduction. It is important to note that blocks can be connected\nin series only if the output of one block is not affected by the next following block. If\nthere are any loading effects between the components, it is necessary to combine these\ncomponents into a single block.\nAny number of cascaded blocks representing nonloading components can be\nreplaced by a single block, the transfer function of which is simply the product of the\nindividual transfer functions.\n Eo(s) = I(s)\nCs\n I(s) = Ei(s) - Eo(s)\nR\neo = 1id t\nC\ni = ei - eo\nR\n(d)\nEi(s) I(s) Eo(s)1\nR\n1\nCs\nEo(s)\n(b)\nEi(s) I(s)1\nR\n(c)\nI(s) Eo(s)1\nCs\n(a)\nR\nCe oei\ni\n+ –\n+ –\nFigure 2–12\n(a) RC circuit;\n(b) block diagram\nrepresenting\nEquation (2–6);\n(c) block diagram\nrepresenting\nEquation (2–7);\n(d) block diagram of\nthe RC circuit.28\nChapter 2 / Mathematical Modeling of Control Systems\nR\nG\n1\nH\n1\nH\n2\nG\n3\nG\n2\nC\nR\nG\n1\nH\n1\nG\n3\nG\n2\nC\nR\nG\n3\nC\nRC\nRC\n(a)\n(b)\n(c)\n(d)\n(e)\nH\n2\nG\n1\nH\n2\nG\n1\nG\n1\nG\n2\n1 – G\n1\nG\n2\nH\n1\nG\n1\nG\n2\nG\n3\n1 – G\n1\nG\n2\nH\n1\n+ G\n2\nG\n3\nH\n2\nG\n1\nG\n2\nG\n3\n1 – G\n1\nG\n2\nH\n1\n+ G\n2\nG\n3\nH\n2\n+ G\n1\nG\n2\nG\n3\n+ –\n+ –\n++\n+ –\n+ –\n++\n+ –\n+ –\n+ –\nFigure 2–13\n(a) Multiple-loop\nsystem;\n(b)–(e) successive\nreductions of the\nblock diagram shown\nin (a).\nA complicated block diagram involving many feedback loops can be simplified by\na step-by-step rearrangement. Simplification of the block diagram by rearrangements\nconsiderably reduces the labor needed for subsequent mathematical analysis. It should\nbe noted, however, that as the block diagram is simplified, the transfer functions in new\nblocks become more complex because new poles and new zeros are generated.\nEXAMPLE 2–1\nConsider the system shown in Figure 2–13(a). Simplify this diagram.\nBy moving the summing point of the negative feedback loop containing H\n2\noutside the posi-\ntive feedback loop containing H\n1\n, we obtain Figure 2–13(b). Eliminating the positive feedback loop,\nwe have Figure 2–13(c).The elimination of the loop containing H\n2\n/G\n1\ngives Figure 2–13(d). Finally,\neliminating the feedback loop results in Figure 2–13(e).\nOpenmirrors.comSection 2–4 / Modeling in State Space 29\nNotice that the numerator of the closed-loop transfer function C(s)/R(s) is the product of the\ntransfer functions of the feedforward path. The denominator of C(s)/R(s) is equal to\n(The positive feedback loop yields a negative term in the denominator.)\n2–4 MODELING IN STATE SPACE\nIn this section we shall present introductory material on state-space analysis of control\nsystems.\nModern Control Theory. The modern trend in engineering systems is toward\ngreater complexity, due mainly to the requirements of complex tasks and good accu-\nracy. Complex systems may have multiple inputs and multiple outputs and may be time\nvarying. Because of the necessity of meeting increasingly stringent requirements on\nthe performance of control systems, the increase in system complexity, and easy access\nto large scale computers, modern control theory, which is a new approach to the analy-\nsis and design of complex control systems, has been developed since around 1960.This\nnew approach is based on the concept of state. The concept of state by itself is not\nnew, since it has been in existence for a long time in the field of classical dynamics and\nother fields.\nModern Control Theory Versus Conventional Control Theory. Modern con-\ntrol theory is contrasted with conventional control theory in that the former is appli-\ncable to multiple-input, multiple-output systems, which may be linear or nonlinear,\ntime invariant or time varying, while the latter is applicable only to linear time-\ninvariant single-input, single-output systems. Also, modern control theory is essen-\ntially time-domain approach and frequency domain approach (in certain cases such as\nH-infinity control), while conventional control theory is a complex frequency-domain\napproach. Before we proceed further, we must define state, state variables, state vector,\nand state space.\nState. The state of a dynamic system is the smallest set of variables (called state\nvariables) such that knowledge of these variables at t=t0 , together with knowledge of\nthe input for t /H11350t0 , completely determines the behavior of the system for any time\nt /H11350t0 .\nNote that the concept of state is by no means limited to physical systems. It is appli-\ncable to biological systems, economic systems, social systems, and others.\nState Variables. The state variables of a dynamic system are the variables mak-\ning up the smallest set of variables that determine the state of the dynamic system. If at\n = 1 - G1 G2 H1 + G2 G3 H2 + G1 G2 G3 \n= 1 + A-G1 G2 H1 + G2 G3 H2 + G1 G2 G3B\n1 + a (product of the transfer functions around each loop)30\nChapter 2 / Mathematical Modeling of Control Systems\nleast n variables x\n1\n,x\n2\n, p , x\nn\nare needed to completely describe the behavior of a dy-\nnamic system (so that once the input is given for t /H11350t\n0\nand the initial state at t=t\n0\nis\nspecified, the future state of the system is completely determined), then such n variables\nare a set of state variables.\nNote that state variables need not be physically measurable or observable quantities.\nVariables that do not represent physical quantities and those that are neither measura-\nble nor observable can be chosen as state variables. Such freedom in choosing state vari-\nables is an advantage of the state-space methods. Practically, however, it is convenient\nto choose easily measurable quantities for the state variables, if this is possible at all, be-\ncause optimal control laws will require the feedback of all state variables with suitable\nweighting.\nState Vector. If n state variables are needed to completely describe the behavior\nof a given system, then these n state variables can be considered the n components of a\nvector x. Such a vector is called a state vector. A state vector is thus a vector that deter-\nmines uniquely the system state x(t) for any time t /H11350t\n0\n, once the state at t=t\n0\nis given\nand the input u(t) for t /H11350t\n0\nis specified.\nState Space. The n-dimensional space whose coordinate axes consist of the x\n1\naxis,x\n2\naxis, p , x\nn\naxis, where x\n1\n,x\n2\n, p , x\nn\nare state variables, is called a state space.Any\nstate can be represented by a point in the state space.\nState-Space Equations. In state-space analysis we are concerned with three types\nof variables that are involved in the modeling of dynamic systems: input variables, out-\nput variables, and state variables. As we shall see in Section 2–5, the state-space repre-\nsentation for a given system is not unique, except that the number of state variables is\nthe same for any of the different state-space representations of the same system.\nThe dynamic system must involve elements that memorize the values of the input for\nt /H11350t\n1\n. Since integrators in a continuous-time control system serve as memory devices,\nthe outputs of such integrators can be considered as the variables that define the inter-\nnal state of the dynamic system.Thus the outputs of integrators serve as state variables.\nThe number of state variables to completely define the dynamics of the system is equal\nto the number of integrators involved in the system.\nAssume that a multiple-input, multiple-output system involves n integrators.Assume\nalso that there are r inputs u\n1\n(t), u\n2\n(t), p , u\nr\n(t) and m outputs y\n1\n(t), y\n2\n(t), p , y\nm\n(t).\nDefine n outputs of the integrators as state variables: x\n1\n(t), x\n2\n(t), p , x\nn\n(t) Then the\nsystem may be described by\n(2–8)\n x#\nn\n(t) = f\nn\nAx\n1\n \n, x\n2\n \n, p , x\nn\n \n; u\n1\n \n, u\n2\n \n, p , u\nr\n \n; tB\n /H11080\n /H11080\n /H11080\n x#\n2\n(t) = f\n2\nAx\n1\n \n, x\n2\n \n, p , x\nn\n \n; u\n1\n \n, u\n2\n \n, p , u\nr\n \n; tB\n x#\n1\n(t) = f\n1\nAx\n1\n \n, x\n2\n \n, p , x\nn\n \n; u\n1\n \n, u\n2\n \n, p , u\nr\n \n; tB\nOpenmirrors.comSection 2–4 / Modeling in State Space 31\nThe outputs y1(t), y2(t), p , ym(t) of the system may be given by\n(2–9)\nIf we define\n ym(t) = gmAx1 , x2 , p , xn ; u1 , u2 , p , ur ; tB\n /H11080\n /H11080\n /H11080\n y2(t) = g2Ax1 , x2 , p , xn ; u1 , u2 , p , ur ; tB\n y1(t) = g1Ax1 , x2 , p , xn ; u1 , u2 , p , ur ; tB\nu(t) = F\nu1(t)\nu2(t)\n/H11080\n/H11080\n/H11080\nur(t)\nVg(x, u, t) = F\ng1Ax1 ,x 2 , p ,x n ;u 1 ,u 2 , p ,u r ;t B\ng2Ax1 ,x 2 , p ,x n ;u 1 ,u 2 , p ,u r ;t B\n/H11080\n/H11080\n/H11080\ngmAx1 ,x 2 , p ,x n ;u 1 ,u 2 , p ,u r ;t B\nV, y(t) = F\ny1(t)\ny2(t)\n/H11080\n/H11080\n/H11080\nym(t)\nV,\nf(x, u, t) = F\nf1Ax1 , x2 , p , xn ; u1 , u2 , p , ur ; tB\nf2Ax1 , x2 , p , xn ; u1 , u2 , p , ur ; tB\n/H11080\n/H11080\n/H11080\nfnAx1 , x2 , p , xn ; u1 , u2 , p , ur ; tB\nV, x(t) = F\nx1(t)\nx2(t)\n/H11080\n/H11080\n/H11080\nxn(t)\nV,\nthen Equations (2–8) and (2–9) become\n(2–10)\n(2–11)\nwhere Equation (2–10) is the state equation and Equation (2–11) is the output equation.\nIf vector functions f and/or g involve time t explicitly, then the system is called a time-\nvarying system.\nIf Equations (2–10) and (2–11) are linearized about the operating state, then we\nhave the following linearized state equation and output equation:\n(2–12)\n(2–13)\nwhere A(t) is called the state matrix,B(t) the input matrix,C(t) the output matrix, and\nD(t) the direct transmission matrix. (Details of linearization of nonlinear systems about\n y(t) = C(t)x(t) + D(t)u(t)\n x# (t) = A(t)x(t) + B(t)u(t)\ny(t) = g(x, u, t)\n x# (t) = f(x, u, t)32\nChapter 2 / Mathematical Modeling of Control Systems\nm\nk\nb\nu(t)\ny(t)\nFigure 2–15\nMechanical system.\nu(t)\nD(t)\nB(t)\nA(t)\nC(t)\ny(t)x(t)\n•\ndtÚ\nx(t)\n++\n++\nFigure 2–14\nBlock diagram of the\nlinear, continuous-\ntime control system\nrepresented in state\nspace.\nthe operating state are discussed in Section 2–7.) A block diagram representation of\nEquations (2–12) and (2–13) is shown in Figure 2–14.\nIf vector functions f and g do not involve time t explicitly then the system is called a\ntime-invariant system. In this case, Equations (2–12) and (2–13) can be simplified to\n(2–14)\n(2–15)\nEquation (2–14) is the state equation of the linear, time-invariant system and Equation\n(2–15) is the output equation for the same system. In this book we shall be concerned\nmostly with systems described by Equations (2–14) and (2–15).\nIn what follows we shall present an example for deriving a state equation and output\nequation.\nEXAMPLE 2–2\nConsider the mechanical system shown in Figure 2–15. We assume that the system is linear. The\nexternal force u(t) is the input to the system, and the displacement y(t) of the mass is the output.\nThe displacement y(t) is measured from the equilibrium position in the absence of the external\nforce. This system is a single-input, single-output system.\nFrom the diagram, the system equation is\n(2–16)\nThis system is of second order.This means that the system involves two integrators. Let us define\nstate variables x\n1\n(t) and x\n2\n(t) as\nThen we obtain\nor\n(2–17)\n(2–18)\nThe output equation is\n(2–19)y = x\n1\n x#\n2\n=- k\nm x\n1\n- b\nm x\n2\n+ 1\nm u\n x#\n1\n= x\n2\n x#\n2\n= 1\nm A-ky - by# B+ 1\nm u\n x#\n1\n= x\n2\nx\n2\n(t) = y# (t)\nx\n1\n(t) = y(t)\nmy$ + by# + ky = u\n y# (t) = Cx(t) + Du(t)\n x# (t) = Ax(t) + Bu(t)\nOpenmirrors.comIn a vector-matrix form, Equations (2–17) and (2–18) can be written as\n(2–20)\nThe output equation, Equation (2–19), can be written as\n(2–21)\nEquation (2–20) is a state equation and Equation (2–21) is an output equation for the system.\nThey are in the standard form:\nwhere\nFigure 2–16 is a block diagram for the system. Notice that the outputs of the integrators are state\nvariables.\nCorrelation Between Transfer Functions and State-Space Equations.In what\nfollows we shall show how to derive the transfer function of a single-input, single-output\nsystem from the state-space equations.\nLet us consider the system whose transfer function is given by\n(2–22)\nThis system may be represented in state space by the following equations:\n(2–23)\n(2–24) y = Cx + Du\n x# = Ax + Bu\nY(s)\nU(s) = G(s)\nA = C\n0\n- k\nm\n1\n- b\nm\nS,  B = C\n0\n1\nm\nS,  C = [1 0] ,  D = 0\n y = Cx + Du\n x# = Ax + Bu\ny = [1 0] Bx1\nx2\nR\nBx#\n1\nx#\n2\nR= C\n0\n- k\nm\n1\n- b\nm\nSBx1\nx2\nR + C\n0\n1\nm\nSu\nSection 2–4 / Modeling in State Space 33\nu 1\nm\nb\nm\nk\nm\nx2x2\n•\nx1 = y\n/H20885/H20885+ –\n++\nFigure 2–16\nBlock diagram of the\nmechanical system\nshown in Figure 2–15.34\nChapter 2 / Mathematical Modeling of Control Systems\nwhere x is the state vector,u is the input, and y is the output.The Laplace transforms of\nEquations (2–23) and (2–24) are given by\n(2–25)\n(2–26)\nSince the transfer function was previously defined as the ratio of the Laplace transform\nof the output to the Laplace transform of the input when the initial conditions were\nzero, we set x(0) in Equation (2–25) to be zero. Then we have\nor\nBy premultiplying to both sides of this last equation, we obtain\n(2–27)\nBy substituting Equation (2–27) into Equation (2–26), we get\n(2–28)\nUpon comparing Equation (2–28) with Equation (2–22), we see that\n(2–29)\nThis is the transfer-function expression of the system in terms of A, B, C, and D.\nNote that the right-hand side of Equation (2–29) involves Hence G(s)\ncan be written as\nwhere Q(s) is a polynomial in s. Notice that is equal to the characteristic poly-\nnomial of G(s). In other words, the eigenvalues of A are identical to the poles of G(s).\nEXAMPLE 2–3\nConsider again the mechanical system shown in Figure 2–15. State-space equations for the system\nare given by Equations (2–20) and (2–21).We shall obtain the transfer function for the system from\nthe state-space equations.\nBy substituting A, B, C, and D into Equation (2–29), we obtain\n = [1\n \n0]\nC\ns\nk\nm\n-1\ns + b\nm\nS\n-1\nC\n0\n1\nm\nS\n = [1\n \n0]\nc\nB\ns\n0\n0\ns\nR\n-\nC\n0\n- k\nm\n1\n- b\nm\nS\ns\n-1\nC\n0\n1\nm\nS\n+ 0\n G(s) = C(s\n \nI - A)\n-1\n \nB + D\n∑s\n \nI - A∑\nG(s) = Q(s)\n∑s\n \nI - A∑\n(s\n \nI - A)\n-1\n.\nG(s) = C(s\n \nI - A)\n-1\n \nB + D\nY(s) = CC(s\n \nI - A)\n-1\n \nB + DDU(s)\nX(s) = (s\n \nI - A)\n-1\n \nBU(s)\n(s\n \nI - A)\n-1\n(s\n \nI - A)X(s) = BU(s)\ns\n \nX(s) - AX(s) = BU(s)\n Y(s) = CX(s) + DU(s)\n sX(s) - x(0) = AX(s) + BU(s)\nOpenmirrors.comSection 2–5 / State-Space Representation of Scalar Differential Equation Systems 35\nNote that\n(Refer to Appendix C for the inverse of the 2 /H11003 2 matrix.)\nThus, we have\nwhich is the transfer function of the system. The same transfer function can be obtained from\nEquation (2–16).\nTransfer Matrix. Next, consider a multiple-input, multiple-output system.Assume\nthat there are r inputs and m outputs Define\nThe transfer matrix G(s) relates the output Y(s) to the input U(s),o r\nwhere G(s) is given by\n[The derivation for this equation is the same as that for Equation (2–29).] Since the\ninput vector u is r dimensional and the output vector y is m dimensional, the transfer ma-\ntrix G(s) is an m*r matrix.\n2–5 STATE-SPACE REPRESENTATION OF SCALAR\nDIFFERENTIAL EQUATION SYSTEMS\nA dynamic system consisting of a finite number of lumped elements may be described\nby ordinary differential equations in which time is the independent variable. By use of\nvector-matrix notation, an nth-order differential equation may be expressed by a first-\norder vector-matrix differential equation. If n elements of the vector are a set of state\nvariables, then the vector-matrix differential equation is a state equation. In this section\nwe shall present methods for obtaining state-space representations of continuous-time\nsystems.\nG(s) = C(s I - A)-1 B + D\nY(s) = G(s )U(s )\ny = F\ny1\ny2\n/H11080\n/H11080\n/H11080\nym\nV,  u = F\nu1\nu2\n/H11080\n/H11080\n/H11080\nur\nV\ny1 ,y 2 , p ,y m .u1 ,u 2 , p ,u r ,\n = 1\nms2 + bs + k\n G(s) = [1 0] 1\ns2 + b\nm s + k\nm\nD\ns + b\nm\n- k\nm\n1\ns\nTC\n0\n1\nm\nS\nC\ns\nk\nm\n-1\ns + b\nm\nS\n-1\n= 1\ns2 + b\nm s + k\nm\nD\ns + b\nm\n- k\nm\n1\ns\nT36\nChapter 2 / Mathematical Modeling of Control Systems\nState-Space Representation of nth-Order Systems of Linear Differential Equa-\ntions in which the Forcing Function Does Not Involve Derivative Terms. Con-\nsider the following nth-order system:\n(2–30)\nNoting that the knowledge of together with the input u(t) for\nt /H113500, determines completely the future behavior of the system, we may take\nas a set ofn state variables. (Mathematically, such a choice of state\nvariables is quite convenient. Practically, however, because higher-order derivative terms\nare inaccurate, due to the noise effects inherent in any practical situations, such a choice\nof the state variables may not be desirable.)\nLet us define\nThen Equation (2–30) can be written as\nor\n(2–31)\nwhere\nB =\nG\n0\n0\n/H11080\n/H11080\n/H11080\n0\n1\nW\nA =\nG\n0\n0\n/H11080\n/H11080\n/H11080\n0\n-a\nn\n1\n0\n/H11080\n/H11080\n/H11080\n0\n-a\nn - 1\n0\n1\n/H11080\n/H11080\n/H11080\n0\n-a\nn - 2\np\np\n \n \np\np\n0\n0\n/H11080\n/H11080\n/H11080\n1\n-a\n1\nW\n,x =\nF\nx\n1\nx\n2\n/H11080\n/H11080\n/H11080\nx\nn\nV\n,\nx# = Ax + Bu\nx#\nn\n=- a\nn\nx\n1\n- p - a\n1\nx\nn\n+ u\nx#\nn - 1\n= x\nn\n/H11080\n/H11080\n/H11080\nx#\n2\n= x\n3\nx#\n1\n= x\n2\n x\nn\n= y\n(n - 1)\n /H11080\n /H11080\n /H11080\n x\n2\n= y#\n x\n1\n= y\ny(t), y# (t), p ,y\n(n - 1)\n(t)\ny(0), y# (0), p ,y\n(n - 1)\n(0),\ny\n(n)\n+\n \na\n1\ny\n(n - 1)\n+ p + a\nn - 1\n \ny# + a\nn\n \ny = u\nOpenmirrors.comSection 2–5 / State-Space Representation of Scalar Differential Equation Systems 37\nThe output can be given by\nor\n(2–32)\nwhere\n[Note that D in Equation (2–24) is zero.] The first-order differential equation, Equa-\ntion (2–31), is the state equation, and the algebraic equation, Equation (2–32), is the\noutput equation.\nNote that the state-space representation for the transfer function system\nis given also by Equations (2–31) and (2–32).\nState-Space Representation of nth-Order Systems of Linear Differential Equa-\ntions in which the Forcing Function Involves Derivative Terms. Consider the dif-\nferential equation system that involves derivatives of the forcing function, such as\n(2–33)\nThe main problem in defining the state variables for this case lies in the derivative\nterms of the input u. The state variables must be such that they will eliminate the de-\nrivatives of u in the state equation.\nOne way to obtain a state equation and output equation for this case is to define the\nfollowing n variables as a set of n state variables:\n(2–34)\nxn = y\n(n - 1)\n-  b0u\n(n - 1)\n-  b1u\n(n - 2)\n- p - bn - 2 u# - bn - 1 u = x#\nn - 1 - bn - 1 u\n/H11080\n/H11080\n/H11080\nx3 = y$ - b0 u$ - b1u# - b2 u = x#\n2 - b2 u\nx2 = y# - b0 u# - b1 u = x#\n1 - b1 u\nx1 = y - b0 u\ny\n(n)\n+ a1 y\n(n - 1)\n+ p + an - 1 y# + an y = b0 u\n(n)\n+ b1 u\n(n - 1)\n+ p + bn - 1 u# + bn u\nY(s)\nU(s) = 1\nsn + a1 sn - 1 + p + an - 1 s + an\nC = [1 0 p 0]\ny = Cx\ny = [1 0 p 0] F\nx1\nx2\n/H11080\n/H11080\n/H11080\nxn\nV38\nChapter 2 / Mathematical Modeling of Control Systems\nwhere are determined from\n(2–35)\nWith this choice of state variables the existence and uniqueness of the solution of the\nstate equation is guaranteed. (Note that this is not the only choice of a set of state vari-\nables.) With the present choice of state variables, we obtain\n(2–36)\nwhere is given by\n[To derive Equation (2–36), see Problem A–2–6.] In terms of vector-matrix equations,\nEquation (2–36) and the output equation can be written as\n y = [1\n \n0\n \np\n \n0]\nF\nx\n1\nx\n2\n/H11080\n/H11080\n/H11080\nx\nn\nV\n+ b\n0\n \nu\n+\nG\nb\n1\nb\n2\n/H11080\n/H11080\n/H11080\nb\nn - 1\nb\nn\nW\nu\nG\nx\n1\nx\n2\n/H11080\n/H11080\n/H11080\nx\nn - 1\nx\nn\nW\n \nG\nx#\n1\nx#\n2\n/H11080\n/H11080\n/H11080\nx#\nn - 1\nx#\nn\nW\n=\nG\n0\n0\n/H11080\n/H11080\n/H11080\n0\n-a\nn\n1\n0\n/H11080\n/H11080\n/H11080\n0\n-a\nn - 1\n0\n1\n/H11080\n/H11080\n/H11080\n0\n-a\nn - 2\np\np\n \n \n \np\np\n0\n0\n/H11080\n/H11080\n/H11080\n1\n-a\n1\nW\nb\nn\n= b\nn\n- a\n1\n \nb\nn - 1\n- p - a\nn - 1\n \nb\n1\n- a\nn\n \n- 1\nb\n0\nb\nn\nx#\nn\n=- a\nn\n \nx\n1\n- a\nn - 1\n \nx\n2\n- p - a\n1\n \nx\nn\n+ b\nn\n \nu\nx#\nn - 1\n= x\nn\n+ b\nn - 1\n \nu\n/H11080\n/H11080\n/H11080\nx#\n2\n= x\n3\n+ b\n2\n \nu\nx#\n1\n= x\n2\n+ b\n1\n \nu\nb\nn - 1\n= b\nn - 1\n- a\n1\n \nb\nn - 2\n- p - a\nn - 2\n \nb\n1\n- a\nn\n \n- 1\nb\n0\n/H11080\n/H11080\n/H11080\nb\n3\n= b\n3\n- a\n1\n \nb\n2\n- a\n2\n \nb\n1\n- a\n3\n \nb\n0\nb\n2\n= b\n2\n- a\n1\n \nb\n1\n- a\n2\n \nb\n0\nb\n1\n= b\n1\n- a\n1\n \nb\n0\nb\n0\n= b\n0\nb\n0\n \n, b\n1\n \n, b\n2\n \n, p , b\nn - 1\nOpenmirrors.comSection 2–6 / Transformation of Mathematical Models with MATLAB 39\nor\n(2–37)\n(2–38)\nwhere\nIn this state-space representation, matrices A and C are exactly the same as those for\nthe system of Equation (2–30).The derivatives on the right-hand side of Equation (2–33)\naffect only the elements of the B matrix.\nNote that the state-space representation for the transfer function\nis given also by Equations (2–37) and (2–38).\nThere are many ways to obtain state-space representations of systems. Methods for\nobtaining canonical representations of systems in state space (such as controllable canon-\nical form, observable canonical form, diagonal canonical form, and Jordan canonical\nform) are presented in Chapter 9.\nMATLAB can also be used to obtain state-space representations of systems from\ntransfer-function representations, and vice versa.This subject is presented in Section 2–6.\n2–6 TRANSFORMATION OF MATHEMATICAL MODELS WITH MATLAB\nMATLAB is quite useful to transform the system model from transfer function to state\nspace, and vice versa. We shall begin our discussion with transformation from transfer\nfunction to state space.\nY(s)\nU(s) = b0 sn + b1 sn - 1 + p + bn - 1 s + bn\nsn + a1 sn - 1 + p + an - 1 s + an\n B = G\nb1\nb2\n/H11080\n/H11080\n/H11080\nbn - 1\nbn\nW,   C = [1 0 p 0],  D = b0 = b0\n x = G\nx1\nx2\n/H11080\n/H11080\n/H11080\nxn - 1\nxn\nW,   A = G\n0\n0\n/H11080\n/H11080\n/H11080\n0\n-an\n1\n0\n/H11080\n/H11080\n/H11080\n0\n-an - 1\n0\n1\n/H11080\n/H11080\n/H11080\n0\n-an - 2\np\np\n \n \n \np\np\n0\n0\n/H11080\n/H11080\n/H11080\n1\n-a1\nW\n y = Cx + Du\n x# = Ax + Bu40\nChapter 2 / Mathematical Modeling of Control Systems\nLet us write the closed-loop transfer function as\nOnce we have this transfer-function expression, the MATLAB command\n[A,B,C,D] = tf2ss(num,den)\nwill give a state-space representation. It is important to note that the state-space repre-\nsentation for any system is not unique. There are many (infinitely many) state-space\nrepresentations for the same system. The MATLAB command gives one possible such\nstate-space representation.\nTransformation from Transfer Function to State Space Representation.\nConsider the transfer-function system\n(2–39)\nThere are many (infinitely many) possible state-space representations for this system.\nOne possible state-space representation is\nAnother possible state-space representation (among infinitely many alternatives) is\n(2–40) \nC\nx#\n1\nx#\n2\nx#\n3\nS\n=\nC\n-14\n1\n0\n-56\n0\n1\n-160\n0\n0\nSC\nx\n1\nx\n2\nx\n3\nS\n+\nC\n1\n0\n0\nS\nu\n y = [1\n \n0\n \n0]\nC\nx\n1\nx\n2\nx\n3\nS\n+ [0]u\n \nC\nx#\n1\nx#\n2\nx#\n3\nS\n=\nC\n0\n0\n-160\n1\n0\n-56\n0\n1\n-14\nSC\nx\n1\nx\n2\nx\n3\nS\n+\nC\n0\n1\n-14\nS\nu\n = s\ns\n3\n+ 14s\n2\n+ 56s + 160\n Y(s)\nU(s) = s\n(s + 10)As\n2\n+ 4s + 16B\nY(s)\nU(s) = numerator polynomial in s\ndenominator polynomial in s = num\nden\nOpenmirrors.comSection 2–6 / Transformation of Mathematical Models with MATLAB 41\n(2–41)\nMATLAB transforms the transfer function given by Equation (2–39) into the \nstate-space representation given by Equations (2–40) and (2–41). For the example\nsystem considered here, MATLAB Program 2–2 will produce matrices A, B, C,\nand D.\n y = [0 1 0] C\nx1\nx2\nx3\nS + [0]u\nMATLAB Program 2–2\nnum = [1     0];\nden = [1   14   56   160];\n[A,B,C,D] = tf2ss(num,den)\nA=\n-14 -56 -160\n10 0\n01 0\nB =\n1\n0\n0\nC =\n01 0\nD =\n0\nTransformation from State Space Representation to Transfer Function. To\nobtain the transfer function from state-space equations, use the following command:\n[num,den] = ss2tf(A,B,C,D,iu)\niu must be specified for systems with more than one input. For example, if the system\nhas three inputs (u1, u2, u3) , then iu must be either 1, 2, or 3, where 1 implies u1, 2\nimplies u2, and 3 implies u3.\nIf the system has only one input, then either\n[num,den] = ss2tf(A,B,C,D)42\nChapter 2 / Mathematical Modeling of Control Systems\nEXAMPLE 2–4\nObtain the transfer function of the system defined by the following state-space equations:\nMATLAB Program 2-3 will produce the transfer function for the given system.The transfer func-\ntion obtained is given by\nY(s)\nU(s) = 25s + 5\ns\n3\n+ 5s\n2\n+ 25s + 5\n y = [1\n \n0\n \n0]\nC\nx\n1\nx\n2\nx\n3\nS\n \nC\nx#\n1\nx#\n2\nx#\n3\nS\n=\nC\n0\n0\n-5\n1\n0\n-25\n0\n1\n-5\nSC\nx\n1\nx\n2\nx\n3\nS\n+\nC\n0\n25\n-120\nS\nu\nMATLAB Program 2–3\nA = [0   1   0;   0   0   1;   -5   -25   -5];\nB = [0; 25; -120];\nC = [1   0     0];\nD = [0];\n[num,den] = ss2tf(A,B,C,D)\nnum =\n0   0.0000   25.0000  5.0000\nden\n1.0000   5.0000   25.0000  5.0000\n% ***** The same result can be obtained by entering the following command: *****\n[num,den] = ss2tf(A,B,C,D,1)\nnum =\n0   0.0000   25.0000  5.0000\nden =\n1.0000   5.0000   25.0000  5.0000\nor\n[num,den] = ss2tf(A,B,C,D,1)\nmay be used. For the case where the system has multiple inputs and multiple outputs,\nsee Problem A–2–12.\nOpenmirrors.comSection 2–7 / Linearization of Nonlinear Mathematical Models 43\n2–7 LINEARIZATION OF NONLINEAR MATHEMATICAL MODELS\nNonlinear Systems. A system is nonlinear if the principle of superposition does\nnot apply. Thus, for a nonlinear system the response to two inputs cannot be calculated\nby treating one input at a time and adding the results.\nAlthough many physical relationships are often represented by linear equations,\nin most cases actual relationships are not quite linear. In fact, a careful study of phys-\nical systems reveals that even so-called “linear systems” are really linear only in lim-\nited operating ranges. In practice, many electromechanical systems, hydraulic systems,\npneumatic systems, and so on, involve nonlinear relationships among the variables.\nFor example, the output of a component may saturate for large input signals.There may\nbe a dead space that affects small signals. (The dead space of a component is a small\nrange of input variations to which the component is insensitive.) Square-law nonlin-\nearity may occur in some components. For instance, dampers used in physical systems\nmay be linear for low-velocity operations but may become nonlinear at high veloci-\nties, and the damping force may become proportional to the square of the operating\nvelocity.\nLinearization of Nonlinear Systems. In control engineering a normal operation\nof the system may be around an equilibrium point, and the signals may be considered\nsmall signals around the equilibrium. (It should be pointed out that there are many ex-\nceptions to such a case.) However, if the system operates around an equilibrium point\nand if the signals involved are small signals, then it is possible to approximate the non-\nlinear system by a linear system. Such a linear system is equivalent to the nonlinear sys-\ntem considered within a limited operating range. Such a linearized model (linear,\ntime-invariant model) is very important in control engineering.\nThe linearization procedure to be presented in the following is based on the ex-\npansion of nonlinear function into a Taylor series about the operating point and the\nretention of only the linear term. Because we neglect higher-order terms of the Taylor\nseries expansion, these neglected terms must be small enough; that is, the variables\ndeviate only slightly from the operating condition. (Otherwise, the result will be\ninaccurate.)\nLinear Approximation of Nonlinear Mathematical Models. To obtain a linear\nmathematical model for a nonlinear system, we assume that the variables deviate only\nslightly from some operating condition. Consider a system whose input is x(t) and out-\nput is y(t). The relationship between y(t) and x(t) is given by\n(2–42)\nIf the normal operating condition corresponds to then Equation (2–42) may be\nexpanded into a Taylor series about this point as follows:\n(2–43)= f(x–) + df\ndx (x - x–) + 1\n2!\nd2f\ndx2 (x - x–)2 + p\ny = f(x)\nx–,y–,\ny = f(x)44\nChapter 2 / Mathematical Modeling of Control Systems\nwhere the derivatives are evaluated at If the variation \nis small, we may neglect the higher-order terms in Then Equation (2–43) may be\nwritten as\n(2–44)\nwhere\nEquation (2–44) may be rewritten as\n(2–45)\nwhich indicates that is proportional to Equation (2–45) gives a linear math-\nematical model for the nonlinear system given by Equation (2–42) near the operating\npoint\nNext, consider a nonlinear system whose output y is a function of two inputs x\n1\nand\nx\n2\n, so that\n(2–46)\nTo obtain a linear approximation to this nonlinear system, we may expand Equation (2–46)\ninto a Taylor series about the normal operating point Then Equation (2–46)\nbecomes\nwhere the partial derivatives are evaluated at Near the normal oper-\nating point, the higher-order terms may be neglected.The linear mathematical model of\nthis nonlinear system in the neighborhood of the normal operating condition is then\ngiven by\ny - y\n–\n= K\n1\nAx\n1\n- x\n–\n1\nB+ K\n2\nAx\n2\n- x\n–\n2\nB\nx\n2\n= x\n–\n2\n \n.x\n1\n= x\n–\n1\n \n,\n+ 0\n2\nf\n0x\n2\n2\nAx\n2\n- x\n–\n2\nB\n2\nd\n+ p\n+ 1\n2!\nc\n0\n2\nf\n0x\n2\n1\nAx\n1\n- x\n–\n1\nB\n2\n+ 2 0\n2\nf\n0x\n1\n \n0x\n2\nAx\n1\n- x\n–\n1\nBAx\n2\n- x\n–\n2\nB\ny = fAx\n–\n1\n \n, x\n–\n2\nB+\nc\n0f\n0x\n1\nAx\n1\n- x\n–\n1\nB+ 0f\n0x\n2\nAx\n2\n- x\n–\n2\nB\nd\nx\n–\n1\n \n,x\n–\n2\n \n.\ny = fAx\n1\n \n,x\n2\nB\ny = y\n–\n.x = x\n–\n,\nx - x\n–\n.y - y\n–\ny - y\n–\n= K(x - x\n–\n)\nK = df\ndx\n2\nx = x\n–\n y\n–\n= f(x\n–\n)\ny = y\n–\n+ K(x - x\n–\n)\nx - x\n–\n.\nx - x\n–\nx = x\n–\n.d\n2\nf/H20862dx\n2\n, pdf/H20862dx,\nOpenmirrors.comSection 2–7 / Linearization of Nonlinear Mathematical Models 45\nwhere\nThe linearization technique presented here is valid in the vicinity of the operating\ncondition. If the operating conditions vary widely, however, such linearized equations are\nnot adequate, and nonlinear equations must be dealt with. It is important to remember\nthat a particular mathematical model used in analysis and design may accurately rep-\nresent the dynamics of an actual system for certain operating conditions, but may not be\naccurate for other operating conditions.\nEXAMPLE 2–5 Linearize the nonlinear equation\nz=xy\nin the region 5 /H11349x /H113497, 10 /H11349y /H1134912. Find the error if the linearized equation is used to calcu-\nlate the value of z when x=5, y=10.\nSince the region considered is given by 5/H11349x /H113497, 10 /H11349y /H1134912, choose Then\nLet us obtain a linearized equation for the nonlinear equation near a point\nExpanding the nonlinear equation into a Taylor series about point and neglecting\nthe higher-order terms, we have\nwhere\nHence the linearized equation is\nz-66=11(x-6)+6(y-11)\nor\nz=11x+6y-66\nWhen x=5, y=10, the value of z given by the linearized equation is\nz=11x+6y-66=55+60-66=49\nThe exact value of z is z=xy=50. The error is thus 50-49=1. In terms of percentage, the\nerror is 2%.\nb =\n0(xy)\n0y\n2\nx = x– , y = y–\n= x– = 6\na =\n0(xy)\n0x\n2\nx = x– , y = y–\n= y– = 11\nz - z– = aAx - x– B+ bAy - y– B\ny = y–x = x–,\ny– = 11.\nx– = 6,z– = x–y– = 66.\ny– = 11.x– = 6,\nK2 = 0f\n0x2\n2\nx1 = x–\n1 , x2 = x–\n2\nK1 = 0f\n0x1\n2\nx1 = x–\n1 , x2 = x–\n2\ny– = fAx–\n1 , x–\n2B46\nChapter 2 / Mathematical Modeling of Control Systems\nEXAMPLE PROBLEMS AND SOLUTIONS\nA–2–1. Simplify the block diagram shown in Figure 2–17.\nSolution. First, move the branch point of the path involving H\n1\noutside the loop involving H\n2\n,a s\nshown in Figure 2–18(a). Then eliminating two loops results in Figure 2–18(b). Combining two\nblocks into one gives Figure 2–18(c).\nA–2–2. Simplify the block diagram shown in Figure 2–19. Obtain the transfer function relating C(s) and\nR(s).\nR(s) C(s)\nG\nH\n1\nH\n2\n+ –\n++\nFigure 2–17\nBlock diagram of a\nsystem.\nR(s) C(s)\nR(s) C(s)\nC(s)\nG\nH\n2\n(a)\n(b)\n(c)\nH\n1\nG\nG\n1 + GH\n2\nR(s)\n1 + H\n1\nG\nG + H\n1\n1 + GH\n2\n+ –\n++\nFigure 2–18\nSimplified block\ndiagrams for the\nsystem shown in\nFigure 2–17.\nG\n1\nG\n2\nR(s) C(s)X(s)\n+ +\n++\nFigure 2–19\nBlock diagram of a\nsystem.\nOpenmirrors.comExample Problems and Solutions 47\nG1 G2\nR(s) C(s)\nG2\nR(s) C(s)\nG1 + 1\nR(s) C(s)\nG1G2 + G2 + 1\n(a)\n(b)\n(c)\n++ ++\n++\nFigure 2–20\nReduction of the\nblock diagram shown\nin Figure 2–19.\nSolution. The block diagram of Figure 2–19 can be modified to that shown in Figure 2–20(a).\nEliminating the minor feedforward path, we obtain Figure 2–20(b), which can be simplified to\nFigure 2–20(c). The transfer function C(s)/R(s) is thus given by\nThe same result can also be obtained by proceeding as follows: Since signal X(s) is the sum\nof two signals G1 R(s) and R(s), we have\nThe output signal C(s) is the sum of G2 X(s) and R(s). Hence\nAnd so we have the same result as before:\nA–2–3. Simplify the block diagram shown in Figure 2–21. Then obtain the closed-loop transfer function\nC(s)/R(s).\nC(s)\nR(s) = G1 G2 + G2 + 1\nC(s) = G2 X(s) + R(s) = G2 CG1 R(s) + R(s)D + R(s)\nX(s) = G1 R(s) + R(s)\nC(s)\nR(s) = G1 G2 + G2 + 1\nG1 G2\nH3\nG3 G4\nH2H1\n+–\n++ +–\nR(s) C(s)\nFigure 2–21\nBlock diagram of a\nsystem.48\nChapter 2 / Mathematical Modeling of Control Systems\nG\n1\nG\n1\nG\n2\nH\n3\nG\n4\nG\n3\nG\n4\nH\n2\nH\n1\n++\n++\n+–\n+–\nR(s)\nR(s) C(s)\nC(s)\nH\n3\nG\n1\nG\n4\nG\n1\nG\n2\n1 + G\n1\nG\n2\nH\n1\nR(s) C(s)\nG\n1\nG\n2\nG\n3\nG\n4\n1+ G\n1\nG\n2\nH\n1\n+ G\n3\nG\n4\nH\n2\n– G\n2\nG\n3\nH\n3\n+ G\n1\nG\n2\nG\n3\nG\n4\nH\n1\nH\n2\nG\n3\nG\n4\n1 + G\n3\nG\n4\nH\n2\n1\n(a)\n(b)\n(c)\nFigure 2–22\nSuccessive\nreductions of the\nblock diagram shown\nin Figure 2–21.\nG\n1\nG\np\n++\n+–\n++\nG\nf\nC(s)\nD(s)\nR(s) E(s) U(s)\nH\nG\nc\nFigure 2–23\nControl system with\nreference input and\ndisturbance input.\nSolution. First move the branch point between G\n3\nand G\n4\nto the right-hand side of the loop con-\ntaining G\n3\n, G\n4\n, and H\n2\n. Then move the summing point between G\n1\nand G\n2\nto the left-hand side\nof the first summing point. See Figure 2–22(a). By simplifying each loop, the block diagram can\nbe modified as shown in Figure 2–22(b). Further simplification results in Figure 2–22(c), from\nwhich the closed-loop transfer function C(s)/R(s) is obtained as\nA–2–4. Obtain transfer functions C(s)/R(s) and C(s)/D(s) of the system shown in Figure 2–23.\nSolution. From Figure 2–23 we have\n(2–47)\n(2–48)\n(2–49) E(s) = R(s) - HC(s)\n C(s) = G\np\nCD(s) + G\n1\n \nU(s)D\n U(s) = G\nf\n \nR(s) + G\nc\n \nE(s)\nC(s)\nR(s) = G\n1\n \nG\n2\n \nG\n3\n \nG\n4\n1 + G\n1\n \nG\n2\n \nH\n1\n+ G\n3\n \nG\n4\n \nH\n2\n- G\n2\n \nG\n3\n \nH\n3\n+ G\n1\n \nG\n2\n \nG\n3\n \nG\n4\n \nH\n1\n \nH\n2\nOpenmirrors.com\nOpenmirrors.comExample Problems and Solutions 49\nBy substituting Equation (2–47) into Equation (2–48), we get\n(2–50)\nBy substituting Equation (2–49) into Equation (2–50), we obtain\nSolving this last equation for C(s), we get\nHence\n(2–51)\nNote that Equation (2–51) gives the response C(s) when both reference input R(s) and distur-\nbance input D(s) are present.\nTo find transfer function C(s)/R(s), we let D(s)=0 in Equation (2–51). Then we obtain\nSimilarly, to obtain transfer function C(s)/D(s), we let R(s)=0 in Equation (2–51). Then\nC(s)/D(s) can be given by\nA–2–5. Figure 2–24 shows a system with two inputs and two outputs. Derive C1(s)/R1(s), C1(s)/R2(s),\nC2(s)/R1(s), and C2(s)/R2(s). (In deriving outputs for R1(s), assume that R2(s) is zero, and vice\nversa.)\nC(s)\nD(s) =\nGp\n1 + G1 Gp Gc H\nC(s)\nR(s) =\nG1 GpAGf + GcB\n1 + G1 Gp Gc H\nC(s) =\nGp D(s) + G1 GpAGf + GcBR(s)\n1 + G1 Gp Gc H\nC(s) + G1 Gp Gc HC(s) = Gp D(s) + G1 GpAGf + GcBR(s)\nC(s) = Gp D(s) + G1 Gp EGf R(s) + Gc CR(s) - HC(s)DF\nC(s) = Gp D(s) + G1 Gp CGf R(s) + Gc E(s)D\nG1 C1\nC2\nR1\nR2\nG3\nG4\n+ −\n+\n−\nG2\nFigure 2–24\nSystem with two\ninputs and two\noutputs.50\nChapter 2 / Mathematical Modeling of Control Systems\nSolution. From the figure, we obtain\n(2–52)\n(2–53)\nBy substituting Equation (2–53) into Equation (2–52), we obtain\n(2–54)\nBy substituting Equation (2–52) into Equation (2–53), we get\n(2–55)\nSolving Equation (2–54) for C\n1\n, we obtain\n(2–56)\nSolving Equation (2–55) for C\n2\ngives\n(2–57)\nEquations (2–56) and (2–57) can be combined in the form of the transfer matrix as follows:\nThen the transfer functions C\n1\n(s)/R\n1\n(s), C\n1\n(s)/R\n2\n(s), C\n2\n(s)/R\n1\n(s) and C\n2\n(s)/R\n2\n(s) can be obtained\nas follows:\nNote that Equations (2–56) and (2–57) give responses C\n1\nand C\n2\n, respectively, when both inputs\nR\n1\nand R\n2\nare present.\nNotice that when R\n2\n(s)=0, the original block diagram can be simplified to those shown in\nFigures 2–25(a) and (b). Similarly, when R\n1\n(s)=0, the original block diagram can be simplified\nto those shown in Figures 2–25(c) and (d). From these simplified block diagrams we can also ob-\ntain C\n1\n(s)/R\n1\n(s), C\n2\n(s)/R\n1\n(s), C\n1\n(s)/R\n2\n(s), and C\n2\n(s)/R\n2\n(s), as shown to the right of each corre-\nsponding block diagram.\n \nC\n2\n(s)\nR\n1\n(s) =-  G\n1\n \nG\n2\n \nG\n4\n1 - G\n1\n \nG\n2\n \nG\n3\n \nG\n4\n,\n  \n \nC\n2\n(s)\nR\n2\n(s) = G\n4\n1 - G\n1\n \nG\n2\n \nG\n3\n \nG\n4\n \nC\n1\n(s)\nR\n1\n(s) = G\n1\n1 - G\n1\n \nG\n2\n \nG\n3\n \nG\n4\n,\n  \n \nC\n1\n(s)\nR\n2\n(s) =-  G\n1\n \nG\n3\n \nG\n4\n1 - G\n1\n \nG\n2\n \nG\n3\n \nG\n4\nB\nC\n1\nC\n2\nR\n=\nD\nG\n1\n1 - G\n1\n \nG\n2\n \nG\n3\n \nG\n4\n- G\n1\n \nG\n2\n \nG\n4\n1 - G\n1\n \nG\n2\n \nG\n3\n \nG\n4\n- G\n1\n \nG\n3\n \nG\n4\n1 - G\n1\n \nG\n2\n \nG\n3\n \nG\n4\nG\n4\n1 - G\n1\n \nG\n2\n \nG\n3\n \nG\n4\nTB\nR\n1\nR\n2\nR\nC\n2\n= -G\n1\n \nG\n2\n \nG\n4\n \nR\n1\n \n+ G\n4\n \nR\n2\n1 - G\n1\n \nG\n2\n \nG\n3\n \nG\n4\nC\n1\n= G\n1\n \nR\n1\n- G\n1\n \nG\n3\n \nG\n4\n \nR\n2\n1 - G\n1\n \nG\n2\n \nG\n3\n \nG\n4\nC\n2\n= G\n4\nCR\n2\n- G\n2\n \nG\n1\nAR\n1\n- G\n3\n \nC\n2\nBD\nC\n1\n= G\n1\nCR\n1\n- G\n3\n \nG\n4\nAR\n2\n- G\n2\n \nC\n1\nBD\n C\n2\n= G\n4\nAR\n2\n- G\n2\n \nC\n1\nB\n C\n1\n= G\n1\nAR\n1\n- G\n3\n \nC\n2\nB\nOpenmirrors.comExample Problems and Solutions 51\n+–\nR1 C1\nR1\nC1\n1 – G1 G2 G3 G4\nG1G1\nG3 G4 –G2\n+–\nR1 C2\nG3\nG1 –G2 G4\n=\n+–\nR2 C2\nR2\nC2\n1 – G1 G2G3 G4\nG4\nG4\nG2 G1 –G3\n=\nR1\nC2\n1 – G1 G2 G3 G4\n– G1 G2 G4\n=\n+–\nR2 C1\nG2\nG4 –G3 G1 R2\nC1\n1 – G1 G2 G3 G4\n– G1 G3 G4\n=\n(a)\n(b)\n(c)\n(d)\nFigure 2–25\nSimplified block\ndiagrams and\ncorresponding\nclosed-loop transfer\nfunctions.\nA–2–6. Show that for the differential equation system\n(2–58)\nstate and output equations can be given, respectively, by\n(2–59)\nand\n(2–60)\nwhere state variables are defined by\n x3 = y$ - b0 u$ - b1 u# - b2 u = x#\n2 - b2 u\n x2 = y# - b0 u# - b1 u = x#\n1 - b1 u\n x1 = y - b0 u\ny = [1 0 0] C\nx1\nx2\nx3\nS + b0 u\nC\nx#\n1\nx#\n2\nx#\n3\nS = C\n0\n0\n-a3\n1\n0\n-a2\n0\n1\n-a1\nSC\nx1\nx2\nx3\nS + C\nb1\nb2\nb3\nSu\ny% + a1 y$ + a2 y# + a3 y = b0 u% + b1 u$ + b2 u# + b3 u52\nChapter 2 / Mathematical Modeling of Control Systems\nand\nSolution. From the definition of state variables x\n2\nand x\n3\n, we have\n(2–61)\n(2–62)\nTo derive the equation for we first note from Equation (2–58) that\nSince\nwe have\nHence, we get\n(2–63)\nCombining Equations (2–61), (2–62), and (2–63) into a vector-matrix equation, we obtain Equa-\ntion (2–59). Also, from the definition of state variable x\n1\n, we get the output equation given by\nEquation (2–60).\nA–2–7. Obtain a state-space equation and output equation for the system defined by\nSolution. From the given transfer function, the differential equation for the system is\nComparing this equation with the standard equation given by Equation (2–33), rewritten\ny% + a\n1\n \ny$ + a\n2\n \ny# + a\n3\n \ny = b\n0\n \nu% + b\n1\n \nu$ + b\n2\nu# + b\n3\n \nu\ny% + 4y$ + 5y# + 2y = 2u% + u$ + u# + 2u\nY(s)\nU(s) = 2s\n3\n+ s\n2\n+ s + 2\ns\n3\n+ 4s\n2\n+ 5s + 2\nx#\n3\n=- a\n3\n \nx\n1\n- a\n2\n \nx\n2\n- a\n1\n \nx\n3\n+ b\n3\n \nu\n=- a\n1\n \nx\n3\n- a\n2\n \nx\n2\n- a\n3\n \nx\n1\n+ b\n3\n \nu\n=- a\n1\n \nx\n3\n- a\n2\n \nx\n2\n- a\n3\n \nx\n1\n+ Ab\n3\n- a\n1\n \nb\n2\n- a\n2\n \nb\n1\n- a\n3\n \nb\n0\nBu\n+ Ab\n2\n- b\n2\n- a\n1\n \nb\n1\n- a\n2\n \nb\n0\nBu# + Ab\n3\n- a\n1\n \nb\n2\n- a\n2\n \nb\n1\n- a\n3\n \nb\n0\nBu\n=- a\n1\n \nx\n3\n- a\n2\n \nx\n2\n- a\n3\n \nx\n1\n+ Ab\n0\n- b\n0\nBu% + Ab\n1\n- b\n1\n- a\n1\n \nb\n0\nBu$\n+ b\n0\n \nu% + b\n1\n \nu$ + b\n2\n \nu# + b\n3\n \nu - b\n0\n \nu% - b\n1\n \nu$ - b\n2\n \nu#\n-a\n2\nAy# - b\n0\n \nu# - b\n1\n \nuB- a\n2\n \nb\n0\n \nu# - a\n2\n \nb\n1\n \nu - a\n3\nAy - b\n0\n \nuB- a\n3\n \nb\n0\n \nu\n=- a\n1\nAy$ - b\n0\n \nu$ - b\n1\n \nu# - b\n2\n \nuB- a\n1\n \nb\n0\n \nu$ - a\n1\n \nb\n1\n \nu# - a\n1\n \nb\n2\n \nu\n= A-a\n1\n \ny$ - a\n2\n \ny# - a\n3\n \nyB+ b\n0\n \nu% + b\n1\n \nu$ + b\n2\n \nu# + b\n3\n \nu - b\n0\n \nu% - b\n1\n \nu$ - b\n2\n \nu#\nx#\n3\n= y% - b\n0\n \nu% - b\n1\n \nu$ - b\n2\n \nu#\nx\n3\n= y$ - b\n0\n \nu$ - b\n1\n \nu# - b\n2\n \nu\ny% =- a\n1\n \ny$ - a\n2\n \ny# - a\n3\n \ny + b\n0\n \nu% + b\n1\n \nu$ + b\n2\n \nu# + b\n3\n \nu\nx#\n3\n \n,\n x#\n2\n= x\n3\n+ b\n2\n \nu\n x#\n1\n= x\n2\n+ b\n1\n \nu\n b\n3\n= b\n3\n- a\n1\n \nb\n2\n- a\n2\n \nb\n1\n- a\n3\n \nb\n0\n b\n2\n= b\n2\n- a\n1\n \nb\n1\n- a\n2\n \nb\n0\n b\n1\n= b\n1\n- a\n1\n \nb\n0\n b\n0\n= b\n0\nOpenmirrors.comExample Problems and Solutions 53\nwe find\nReferring to Equation (2–35), we have\nReferring to Equation (2–34), we define\nThen referring to Equation (2–36),\nHence, the state-space representation of the system is\nThis is one possible state-space representation of the system. There are many (infinitely many)\nothers. If we use MATLAB, it produces the following state-space representation:\nSee MATLAB Program 2-4. (Note that all state-space representations for the same system are\nequivalent.)\nC\nx1\nx2\nx3\nS+ 2u y = [-7 -9 -2]\n C\nx#\n1\nx#\n2\nx#\n3\nS = C\n-4\n1\n0\n-5\n0\n1\n-2\n0\n0\nSC\nx1\nx2\nx3\nS + C\n1\n0\n0\nSu\ny = [1  0  0] C\nx1\nx2\nx3\nS+ 2u\nC\nx#\n1\nx#\n2\nx#\n3\nS = C\n0\n0\n-2\n1\n0\n-5\n0\n1\n-4\nSC\nx1\nx2\nx3\nS+ C\n-7\n19\n-43\nSu\n =- 2x1 - 5x2 - 4x3 - 43u\n x#\n3 =- a3 x1 - a2 x2 - a1 x3 + b3 u\n x#\n2 = x3 + 19u\n x#\n1 = x2 - 7u\n x3 = x#\n2 - b2 u = x#\n2 - 19u\n x2 = x#\n1 - b1 u = x#\n1 + 7u\n x1 = y - b0 u = y - 2u\n = 2 - 4 * 19 - 5 * (-7) - 2 * 2 =- 43\n b3 = b3 - a1 b2 - a2 b1 - a3 b0\n b2 = b2 - a1 b1 - a2 b0 = 1 - 4 * (-7) - 5 * 2 = 19\n b1 = b1 - a1 b0 = 1 - 4 * 2 =- 7\n b0 = b0 = 2\n b0 = 2,   b1 = 1,   b2 = 1,  b3 = 2\n a1 = 4,   a2 = 5,   a3 = 254\nChapter 2 / Mathematical Modeling of Control Systems\nA–2–8. Obtain a state-space model of the system shown in Figure 2–26.\nSolution. The system involves one integrator and two delayed integrators. The output of each\nintegrator or delayed integrator can be a state variable. Let us define the output of the plant as\nx\n1\n, the output of the controller as x\n2\n, and the output of the sensor as x\n3\n. Then we obtain\nY(s) = X\n1\n(s)\nX\n3\n(s)\nX\n1\n(s) = 1\ns + 1\nX\n2\n(s)\nU(s) - X\n3\n(s) = 1\ns\nX\n1\n(s)\nX\n2\n(s) = 10\ns + 5\nU(s) Y(s)1\ns\nController Plant\nSensor\n10\ns + 5\n1\ns + 1\n+ –\nFigure 2–26\nControl system.\nMATLAB Program 2–4\nnum = [2  1  1  2];\nden = [1  4  5  2];\n[A,B,C,D] = tf2ss(num,den)\nA=\n-4 -5 -2\n100\n010\nB =\n1\n0\n0\nC =\n-7 -9 -2\nD =\n2\nOpenmirrors.comExample Problems and Solutions 55\nwhich can be rewritten as\nBy taking the inverse Laplace transforms of the preceding four equations, we obtain\nThus, a state-space model of the system in the standard form is given by\nIt is important to note that this is not the only state-space representation of the system. Infinite-\nly many other state-space representations are possible. However, the number of state variables is\nthe same in any state-space representation of the same system. In the present system, the num-\nber of state variables is three, regardless of what variables are chosen as state variables.\nA–2–9. Obtain a state-space model for the system shown in Figure 2–27(a).\nSolution. First, notice that (as+b)/s2 involves a derivative term. Such a derivative term may be\navoided if we modify (as+b)/s2 as\nUsing this modification, the block diagram of Figure 2–27(a) can be modified to that shown in\nFigure 2–27(b).\nDefine the outputs of the integrators as state variables, as shown in Figure 2–27(b).Then from\nFigure 2–27(b) we obtain\nwhich may be modified to\n Y(s) = X1(s)\n sX2(s) =- bX1(s) + bU(s)\n sX1(s) = X2(s) + aCU(s) - X1(s)D\nY(s) = X1(s)\nX2(s)\nU(s) - X1(s) = b\ns\nX1(s)\nX2(s) + aCU(s) - X1(s)D\n= 1\ns\nas + b\ns2 = aa + b\ns b 1\ns\nC\nx1\nx2\nx3\nS y = [1 0 0]\n C\nx#\n1\nx#\n2\nx#\n3\nS= C\n-5\n0\n1\n10\n0\n0\n0\n-1\n-1\nSC\nx1\nx2\nx3\nS + C\n0\n1\n0\nSu\n y = x1\n x#\n3 = x1 - x3\n x#\n2 =- x3 + u\n x#\n1 =- 5x1 + 10x2\n Y(s) = X1(s)\n sX3(s) = X1(s) - X3(s)\n sX2(s) =- X3(s) + U(s)\n sX1(s) =- 5X1(s) + 10X2(s)56\nChapter 2 / Mathematical Modeling of Control Systems\nTaking the inverse Laplace transforms of the preceding three equations, we obtain\nRewriting the state and output equations in the standard vector-matrix form, we obtain\nA–2–10. Obtain a state-space representation of the system shown in Figure 2–28(a).\nSolution. In this problem, first expand (s+z)/(s+p) into partial fractions.\nNext, convert K/ Cs(s+a)Dinto the product of K/s and 1/(s+a).Then redraw the block diagram,\nas shown in Figure 2–28(b). Defining a set of state variables, as shown in Figure 2–28(b), we ob-\ntain the following equations:\n y = x\n1\n x#\n3\n=- (z - p)x\n1\n- px\n3\n+ (z - p)u\n x#\n2\n=- Kx\n1\n+ Kx\n3\n+ Ku\n x#\n1\n=- ax\n1\n+ x\n2\ns + z\ns + p = 1 + z - p\ns + p\n y = [1\n \n0]\nB\nx\n1\nx\n2\nR\n \nB\nx#\n1\nx#\n2\nR\n=\nB\n-a\n-b\n1\n0\nRB\nx\n1\nx\n2\nR\n+\nB\na\nb\nR\nu\n y = x\n1\n x#\n2\n=- bx\n1\n+ bu\n x#\n1\n=- ax\n1\n+ x\n2\n+ au\nU(s) Y(s)\nas + b 1\ns\n2\n(a)\n(b)\na\nU(s) Y(s)b\ns\n1\ns\nX\n1\n(s)X\n2\n(s)\n+ –\n+ –\n++\nFigure 2–27\n(a) Control system;\n(b) modified block\ndiagram.\nOpenmirrors.comExample Problems and Solutions 57\nRewriting gives\nNotice that the output of the integrator and the outputs of the first-order delayed integrators\nC1/(s+a) and (z-p)/(s+p)Dare chosen as state variables. It is important to remember that\nthe output of the block (s+z)/(s+p) in Figure 2–28(a) cannot be a state variable, because this\nblock involves a derivative term, s+z.\nA–2–11. Obtain the transfer function of the system defined by\nSolution. Referring to Equation (2–29), the transfer function G(s) is given by\nIn this problem, matrices A, B, C, and D are\nA = C\n-1\n0\n0\n1\n-1\n0\n0\n1\n-2\nS,  B = C\n0\n0\n1\nS,  C = [1 0 0],  D = 0\nG(s) = C(sI - A)-1B + D\ny = [1  0  0] C\nx1\nx2\nx3\nS\nC\nx#\n1\nx#\n2\nx#\n3\nS= C\n-1\n0\n0\n1\n-1\n0\n0\n1\n-2\nSC\nx1\nx2\nx3\nS + C\n0\n0\n1\nSu\ny = [1 0 0] C\nx1\nx2\nx3\nS\nC\nx#\n1\nx#\n2\nx#\n3\nS = C\n-a\n-K\n-(z - p)\n1\n0\n0\n0\nK\n-p\nSC\nx1\nx2\nx3\nS + C\n0\nK\nz - p\nSu\nuy\nuy\n(a)\n(b)\ns + z\ns + p\nK\ns(s + a)\nz – p\ns + p\nK\ns\n1\ns + a\nx1x2x3\n+ –\n+ – ++Figure 2–28\n(a) Control system;\n(b) block diagram\ndefining state\nvariables for the\nsystem.58\nChapter 2 / Mathematical Modeling of Control Systems\nHence\nA–2–12. Consider a system with multiple inputs and multiple outputs.When the system has more than one\noutput, the MATLAB command\n[NUM,den] = ss2tf(A,B,C,D,iu)\nproduces transfer functions for all outputs to each input. (The numerator coefficients are returned\nto matrix NUM with as many rows as there are outputs.)\nConsider the system defined by\nThis system involves two inputs and two outputs. Four transfer functions are involved:\nand (When considering input u\n1\n, we assume that input u\n2\nis zero and vice versa.)\nSolution. MATLAB Program 2-5 produces four transfer functions.\nThis is the MATLAB representation of the following four transfer functions:\nY\n2\n(s)\nU\n2\n(s) = s - 25\ns\n2\n+ 4s + 25 \nY\n1\n(s)\nU\n2\n(s) = s + 5\ns\n2\n+ 4s + 25 ,\nY\n2\n(s)\nU\n1\n(s) = -25\ns\n2\n+ 4s + 25 \nY\n1\n(s)\nU\n1\n(s) = s + 4\ns\n2\n+ 4s + 25 ,\nY\n2\n(s)/H20862U\n2\n(s).Y\n1\n(s)/H20862U\n2\n(s),Y\n2\n(s)/H20862U\n1\n(s),\nY\n1\n(s)/H20862U\n1\n(s),\nB\ny\n1\ny\n2\nR\n=\nB\n1\n0\n0\n1\nRB\nx\n1\nx\n2\nR\n+\nB\n0\n0\n0\n0\nRB\nu\n1\nu\n2\nR\nB\nx#\n1\nx#\n2\nR\n=\nB\n0\n-25\n1\n-4\nRB\nx\n1\nx\n2\nR\n+\nB\n1\n0\n1\n1\nRB\nu\n1\nu\n2\nR\n = 1\n(s + 1)\n2\n(s + 2) = 1\ns\n3\n+ 4s\n2\n+ 5s + 2\n = [1\n \n0\n \n0]\nF\n1\ns + 1\n0\n0\n1\n(s + 1)\n2\n1\ns + 1\n0\n1\n(s + 1)\n2\n(s + 2)\n1\n(s + 1)(s + 2)\n1\ns + 2\nVC\n0\n0\n1\nS\n G(s) = [1\n \n0\n \n0]\nC\ns + 1\n0\n0\n-1\ns + 1\n0\n0\n-1\ns + 2\nS\n-1\nC\n0\n0\n1\nS\nOpenmirrors.comExample Problems and Solutions 59\nA–2–13. Linearize the nonlinear equation\nin the region defined by 8 /H11349x /H1134910, 2 /H11349y /H113494.\nSolution. Define\nThen\nwhere we choose \nSince the higher-order terms in the expanded equation are small, neglecting these higher-\norder terms, we obtain\nwhere\nz– = x–2 + 4x–y– + 6y–2 = 92 + 4 * 9 * 3 + 6 * 9 = 243\nK2 = 0f\n0y\n2\nx = x– , y = y–\n= 4x– + 12y– = 4 * 9 + 12 * 3 = 72\nK1 = 0f\n0x\n2\nx = x– , y = y–\n= 2x– + 4y– = 2 * 9 + 4 * 3 = 30\nz - z– = K1(x - x–) + K2(y - y–)\nx– = 9, y– = 3.\nz = f(x, y) = f(x–, y–) + c0f\n0x (x - x–) + 0f\n0y (y - y–) d\nx = x– , y = y–\n+ p\nf(x, y) = z = x2 + 4xy + 6y2\nz = x2 + 4xy + 6y2\nMATLAB Program 2–5\nA = [0    1;-25    -4];\nB = [1    1;0    1];\nC = [1    0;0    1];\nD = [0    0;0    0];\n[NUM,den] = ss2tf(A,B,C,D,1)\nNUM =\n01 4\n0 0 –25\nden = \n14 2 5\n[NUM,den] = ss2tf(A,B,C,D,2)\nNUM =\n0 1.0000 5.0000\n0 1.0000 -25.0000\nden =\n14 2 560\nChapter 2 / Mathematical Modeling of Control Systems\nThus\nHence a linear approximation of the given nonlinear equation near the operating point is\nz - 30x - 72y + 243 = 0\nz - 243 = 30(x - 9) + 72(y - 3)\nR(s) C(s)\nG\n1\nG\n2\nG\n3\nH\n1\nH\n2\nH\n3\n+ –\n+ –\n+ –\n++\nFigure 2–31\nBlock diagram of a system.\nB–2–1. Simplify the block diagram shown in Figure 2–29\nand obtain the closed-loop transfer function C(s)/R(s).\nB–2–2. Simplify the block diagram shown in Figure 2–30\nand obtain the closed-loop transfer function C(s)/R(s).\nB–2–3. Simplify the block diagram shown in Figure 2–31\nand obtain the closed-loop transfer function C(s)/R(s).\nPROBLEMS\nR(s) C(s)\nG\n1\nG\n2\nG\n3\nG\n4\n+ –\n+–\n+\n+\nFigure 2–29\nBlock diagram of a system.\nR(s) C(s)\nG\n1\nG\n2\nH\n1\nH\n2\n+ –\n+ +\n+\n–\nFigure 2–30\nBlock diagram of a system.\nOpenmirrors.comProblems 61\nC(s)\nD(s)\nR(s)\nGc(s) Gp(s)+– ++\nController PlantFigure 2–32\nClosed-loop system.\nB–2–4. Consider industrial automatic controllers whose\ncontrol actions are proportional, integral, proportional-plus-\nintegral, proportional-plus-derivative, and proportional-plus-\nintegral-plus-derivative. The transfer functions of these\ncontrollers can be given, respectively, by\nwhere U(s) is the Laplace transform of u(t), the controller\noutput, and E(s) the Laplace transform of e(t), the actuat-\n \nU(s)\nE(s) = Kp a1 + 1\nTi s + Td s b\n \nU(s)\nE(s) = KpA1 + Td sB\n \nU(s)\nE(s) = Kp a1 + 1\nTi s b\n \nU(s)\nE(s) = Ki\ns\n \nU(s)\nE(s) = Kp\ning error signal. Sketch u(t)-versus-t curves for each of the\nfive types of controllers when the actuating error signal is\n(a) e(t)=unit-step function\n(b) e(t)=unit-ramp function\nIn sketching curves, assume that the numerical values of Kp,\nKi , and are given as\nproportional gain=4\nintegral gain=2\nintegral time=2 sec\nderivative time=0.8 sec\nB–2–5. Figure 2–32 shows a closed-loop system with a ref-\nerence input and disturbance input. Obtain the expression\nfor the output C(s) when both the reference input and dis-\nturbance input are present.\nB–2–6. Consider the system shown in Figure 2–33. Derive\nthe expression for the steady-state error when both the ref-\nerence input R(s) and disturbance input D(s) are present.\nB–2–7. Obtain the transfer functions C(s)/R(s) and\nC(s)/D(s) of the system shown in Figure 2–34.\n Td =\n Ti =\n Ki =\n Kp =\nTdTi ,\nC(s)R(s) E(s)\nD(s)\n+– ++ G2(s)G1(s)\nG2\nH1\nG3G1Gc\nR(s) C(s)\nD(s)\n+– +– ++\nH2\nFigure 2–33\nControl system.\nFigure 2–34\nControl system.62\nChapter 2 / Mathematical Modeling of Control Systems\nB–2–8. Obtain a state-space representation of the system\nshown in Figure 2–35.\nB–2–9. Consider the system described by\nDerive a state-space representation of the system.\nB–2–10. Consider the system described by\nObtain the transfer function of the system.\n y = [1\n \n0]\nB\nx\n1\nx\n2\nR\n \nB\nx#\n1\nx#\n2\nR\n=\nB\n-4\n3\n-1\n-1\nRB\nx\n1\nx\n2\nR\n+\nB\n1\n1\nR\nu\ny% + 3y$ + 2y# = u\nuy s + z\ns + p\n1\ns\n2\n+ –\nFigure 2–35\nControl system.\nB–2–11. Consider a system defined by the following state-\nspace equations:\nObtain the transfer function G(s) of the system.\nB–2–12. Obtain the transfer matrix of the system defined by\nB–2–13. Linearize the nonlinear equation\nz=x\n2\n+8xy+3y\n2\nin the region defined by 2 /H11349x /H113494, 10 /H11349y /H1134912.\nB–2–14. Find a linearized equation for\ny=0.2x\n3\nabout a point x=2.\n \nB\ny\n1\ny\n2\nR\n=\nB\n1\n0\n0\n1\n0\n0\nRC\nx\n1\nx\n2\nx\n3\nS\n \nC\nx#\n1\nx#\n2\nx#\n3\nS\n=\nC\n0\n0\n-2\n1\n0\n-4\n0\n1\n-6\nSC\nx\n1\nx\n2\nx\n3\nS\n+\nC\n0\n0\n1\n0\n1\n0\nSB\nu\n1\nu\n2\nR\n y = [1\n \n2]\nB\nx\n1\nx\n2\nR\n \nB\nx#\n1\nx#\n2\nR\n=\nB\n-5\n3\n-1\n-1\nRB\nx\n1\nx\n2\nR\n+\nB\n2\n5\nR\nu\nOpenmirrors.com3\n63\nMathematical Modeling \nof Mechanical Systems\nand Electrical Systems\n3–1 INTRODUCTION\nThis chapter presents mathematical modeling of mechanical systems and electrical\nsystems. In Chapter 2 we obtained mathematical models of a simple electrical circuit\nand a simple mechanical system. In this chapter we consider mathematical modeling\nof a variety of mechanical systems and electrical systems that may appear in control\nsystems.\nThe fundamental law govering mechanical systems is Newton’s second law. In\nSection 3–2 we apply this law to various mechanical systems and derive transfer-\nfunction models and state-space models.\nThe basic laws governing electrical circuits are Kirchhoff’s laws. In Section 3–3 we\nobtain transfer-function models and state-space models of various electrical circuits\nand operational amplifier systems that may appear in many control systems.\n3–2 MATHEMATICAL MODELING \nOF MECHANICAL SYSTEMS\nThis section first discusses simple spring systems and simple damper systems. Then\nwe derive transfer-function models and state-space models of various mechanical\nsystems.64\nChapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems\nEXAMPLE 3–1\nLet us obtain the equivalent spring constants for the systems shown in Figures 3–1(a) and (b),\nrespectively.\nFor the springs in parallel [Figure 3–1(a)] the equivalent spring constant k\neq\nis obtained\nfrom\nor\nFor the springs in series [Figure–3–1(b)], the force in each spring is the same. Thus\nElimination of y from these two equations results in\nor\nThe equivalent spring constant k\neq\nfor this case is then found as\nEXAMPLE 3–2\nLet us obtain the equivalent viscous-friction coefficient for each of the damper systems shown\nin Figures 3–2(a) and (b).An oil-filled damper is often called a dashpot.A dashpot is a device that\nprovides viscous friction, or damping. It consists of a piston and oil-filled cylinder.Any relative mo-\ntion between the piston rod and the cylinder is resisted by the oil because the oil must flow around\nthe piston (or through orifices provided in the piston) from one side of the piston to the other.The\ndashpot essentially absorbs energy.This absorbed energy is dissipated as heat, and the dashpot does\nnot store any kinetic or potential energy.\nb\neq\nk\neq\n= F\nx = k\n1\n \nk\n2\nk\n1\n+ k\n2\n= 1\n1\nk\n1\n+ 1\nk\n2\nk\n2\n \nx = F + k\n2\nk\n1\nF = k\n1\n+ k\n2\nk\n1\nF\nk\n2\na\nx - F\nk\n1\nb\n= F\nk\n1\n \ny = F,\n  \nk\n2\n(x - y) = F\nk\neq\n= k\n1\n+ k\n2\nk\n1\n \nx + k\n2\n \nx = F = k\neq\n \nx\nk\n1\nk\n2\nyx\nF\n(a) (b)\nx\nF\nk\n1\nk\n2\nFigure 3–1\n(a) System consisting\nof two springs in\nparallel;\n(b) system consisting\nof two springs in\nseries.\nOpenmirrors.comSection 3–2 / Mathematical Modeling of Mechanical Systems 65\n(a) The force f due to the dampers is\nIn terms of the equivalent viscous-friction coefficient beq , force f is given by\nHence\n(b) The force f due to the dampers is\n(3–1)\nwhere z is the displacement of a point between damper b1 and damper b2 . (Note that the\nsame force is transmitted through the shaft.) From Equation (3–1), we have\nor\n(3–2)\nIn terms of the equivalent viscous-friction coefficient beq , force f is given by\nBy substituting Equation (3–2) into Equation (3–1), we have\nThus,\nHence,\nbeq = b1 b2\nb1 + b2\n= 1\n1\nb1\n+ 1\nb2\nf = beq(y# - x# ) = b1 b2\nb1 + b2\n(y# - x# )\n = b1 b2\nb1 + b2\n (y# - x# )\n f = b2(y# - z# ) = b2 cy# -  1\nb1 + b2\n Ab2y# + b1x# Bd\nf = beqAy# - x# B\nz# = 1\nb1 + b2\nAb2 y# + b1 x# B\nAb1 + b2Bz# = b2 y# + b1 x#\nf = b1(z# - x# ) = b2 (y# - z# )\nbeq = b1 + b2\nf = beq(y# - x# )\nf = b1 (y# - x# ) + b2(y# - x# ) = Ab1 + b2B(y# - x# )\nx y\n(a)\nb2\nx yz\n(b)\nb1\nb1\nb2\nFigure 3–2\n(a) Two dampers\nconnected in parallel;\n(b) two dampers\nconnected in series.66\nChapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems\nEXAMPLE 3–3\nConsider the spring-mass-dashpot system mounted on a massless cart as shown in Figure 3–3. Let\nus obtain mathematical models of this system by assuming that the cart is standing still for t<0 and\nthe spring-mass-dashpot system on the cart is also standing still for t<0. In this system,u(t) is the\ndisplacement of the cart and is the input to the system.At t=0,the cart is moved at a constant speed,\nor constant. The displacement y(t) of the mass is the output. (The displacement is relative to\nthe ground.) In this system,m denotes the mass,b denotes the viscous-friction coefficient, and k de-\nnotes the spring constant.We assume that the friction force of the dashpot is proportional to \nand that the spring is a linear spring; that is, the spring force is proportional to y-u.\nFor translational systems, Newton’s second law states that\nwhere m is a mass,a is the acceleration of the mass, and is the sum of the forces acting on the\nmass in the direction of the acceleration a. Applying Newton’s second law to the present system\nand noting that the cart is massless, we obtain\nor\nThis equation represents a mathematical model of the system considered. Taking the Laplace\ntransform of this last equation, assuming zero initial condition, gives\nTaking the ratio of Y(s) to U(s), we find the transfer function of the system to be\nSuch a transfer-function representation of a mathematical model is used very frequently in\ncontrol engineering.\nTransfer function = G(s) =\nY(s)\nU(s) = bs + k\nms\n2\n+ bs + k\nAms\n2\n+ bs + kBY(s) = (bs + k)U(s)\nm d\n2\ny\ndt\n2\n+ b dy\ndt + ky = b du\ndt + ku\nm d\n2\ny\ndt\n2\n=- b\na\ndy\ndt - du\ndt\nb\n- k(y - u)\ngF\nma = a F\ny# - u#\nu# =\nm\nu\ny\nk\nb\nMassless cart\nFigure 3–3\nSpring-mass-\ndashpot system\nmounted on a cart.\nOpenmirrors.comSection 3–2 / Mathematical Modeling of Mechanical Systems 67\nNext we shall obtain a state-space model of this system. We shall first compare the differen-\ntial equation for this system\nwith the standard form\nand identify a1 , a2 , b0 , b1 , and b2 as follows:\nReferring to Equation (3–35), we have\nThen, referring to Equation (2–34), define\nFrom Equation (2–36) we have\nand the output equation becomes\nor\n(3–3)\nand\n(3–4)\nEquations (3–3) and (3–4) give a state-space representation of the system. (Note that this is not\nthe only state-space representation.There are infinitely many state-space representations for the\nsystem.)\ny = [1  0] Bx1\nx2\nR\nBx#\n1\nx#\n2\nR= C\n0\n- k\nm\n1\n- b\nm\nSBx1\nx2\nR + D\nb\nm\nk\nm - ab\nm b\n2 Tu\ny = x1\n x#\n2 =- a2 x1 - a1 x2 + b2 u =-  k\nm x1 - b\nm x2 + ck\nm - ab\nm b\n2\ndu\n x#\n1 = x2 + b1 u = x2 + b\nm u\n x2 = x#\n1 - b1 u = x#\n1 - b\nm u\n x1 = y - b0 u = y\n b2 = b2 - a1 b1 - a2 b0 = k\nm - ab\nm b\n2\n b1 = b1 - a1 b0 = b\nm\n b0 = b0 = 0\na1 = b\nm ,  a2 = k\nm ,  b0 = 0,  b1 = b\nm ,  b2 = k\nm\ny$ + a1 y# + a2 y = b0 u$ + b1 u# + b2 u\ny$ + b\nm y# + k\nm y = b\nm u# + k\nm u68\nChapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems\nEXAMPLE 3–4\nObtain the transfer functions and of the mechanical system shown in\nFigure 3–4.\nThe equations of motion for the system shown in Figure 3–4 are\nSimplifying, we obtain\nTaking the Laplace transforms of these two equations, assuming zero initial conditions, we obtain\n(3–5)\n(3–6)\nSolving Equation (3–6) for and substituting it into Equation (3–5) and simplifying, we get\nfrom which we obtain\n(3–7)\nFrom Equations (3–6) and (3–7) we have\n(3–8)\nEquations (3–7) and (3–8) are the transfer functions and respectively.\nEXAMPLE 3–5\nAn inverted pendulum mounted on a motor-driven cart is shown in Figure 3–5(a).This is a model\nof the attitude control of a space booster on takeoff. (The objective of the attitude control prob-\nlem is to keep the space booster in a vertical position.) The inverted pendulum is unstable in that\nit may fall over any time in any direction unless a suitable control force is applied. Here we consider\nX\n2\n(s)/H20862U(s),X\n1\n(s)/H20862U(s)\nX\n2\n(s)\nU(s) = bs + k\n2\nAm\n1\n \ns\n2\n+ bs + k\n1\n+ k\n2\nBAm\n2\n \ns\n2\n+ bs + k\n2\n+ k\n3\nB- Abs + k\n2\nB\n2\nX\n1\n(s)\nU(s) = m\n2\n \ns\n2\n+ bs + k\n2\n+ k\n3\nAm\n1\n \ns\n2\n+ bs + k\n1\n+ k\n2\nBAm\n2\n \ns\n2\n+ bs + k\n2\n+ k\n3\nB- Abs + k\n2\nB\n2\n = Am\n2\n \ns\n2\n+ bs + k\n2\n+ k\n3\nBU(s)\n CAm\n1\n \ns\n2\n+ bs + k\n1\n+ k\n2\nBAm\n2\n \ns\n2\n+ bs + k\n2\n+ k\n3\nB- Abs + k\n2\nB\n2\nDX\n1\n(s)\nX\n2\n(s)\n Cm\n2\n \ns\n2\n+ bs + Ak\n2\n+ k\n3\nBDX\n2\n(s) = Abs + k\n2\nBX\n1\n(s)\n Cm\n1\n \ns\n2\n+ bs + Ak\n1\n+ k\n2\nBDX\n1\n(s) = Abs + k\n2\nBX\n2\n(s) + U(s)\n m\n2\n \nx$\n2\n+ bx#\n2\n+ Ak\n2\n+ k\n3\nBx\n2\n= bx#\n1\n+ k\n2\n \nx\n1\n m\n1\n \nx$\n1\n+ bx#\n1\n+ Ak\n1\n+ k\n2\nBx\n1\n= bx#\n2\n+ k\n2\n \nx\n2\n+ u\n m\n2\n \nx$\n2\n=- k\n3\n \nx\n2\n- k\n2\nAx\n2\n- x\n1\nB - bAx#\n2\n- x#\n1\nB\n m\n1\n \nx$\n1\n=- k\n1\n \nx\n1\n- k\n2\nAx\n1\n- x\n2\nB - bAx#\n1\n- x#\n2\nB + u\nX\n2\n(s)/H20862U(s)X\n1\n(s)/H20862U(s)\nm\n1\nm\n2\nk\n2\nx\n1\nk\n1\nk\n3\nb\nu\nx\n2\nFigure 3–4\nMechanical system.\nOpenmirrors.comonly a two-dimensional problem in which the pendulum moves only in the plane of the page.The\ncontrol force u is applied to the cart. Assume that the center of gravity of the pendulum rod is at\nits geometric center. Obtain a mathematical model for the system.\nDefine the angle of the rod from the vertical line as u. Define also the (x, y) coordinates of\nthe center of gravity of the pendulum rod as AxG ,y G B. Then\nyG = l cos u\nxG = x + l sin u\nSection 3–2 / Mathematical Modeling of Mechanical Systems 69\nM\nP\ny\nx\nu\nO\nx\n(a)\nmg\n/H5129\n/H5129\n/H5129cos u\nu\n(b)\nu\nV\nV\nHH\nM\ny\nx\nu\nO\nx\nmg\n/H5129\n/H5129\nFigure 3–5\n(a) Inverted\npendulum system;\n(b) free-body\ndiagram.70\nChapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems\nTo derive the equations of motion for the system, consider the free-body diagram shown in \nFigure 3–5(b). The rotational motion of the pendulum rod about its center of gravity can be\ndescribed by\n(3–9)\nwhere I is the moment of inertia of the rod about its center of gravity.\nThe horizontal motion of center of gravity of pendulum rod is given by\n(3–10)\nThe vertical motion of center of gravity of pendulum rod is\n(3–11)\nThe horizontal motion of cart is described by\n(3–12)\nSince we must keep the inverted pendulum vertical, we can assume that u(t) and are\nsmall quantities such that sinu /H11216u, cosu=1, and Then, Equations (3–9) through (3–11)\ncan be linearized. The linearized equations are\n(3–13)\n(3–14)\n(3–15)\nFrom Equations (3–12) and (3–14), we obtain\n(3–16)\nFrom Equations (3–13), (3–14), and (3–15), we have\nor\n(3–17)\nEquations (3–16) and (3–17) describe the motion of the inverted-pendulum-on-the-cart system.\nThey constitute a mathematical model of the system.\nEXAMPLE 3–6\nConsider the inverted-pendulum system shown in Figure 3–6. Since in this system the mass is con-\ncentrated at the top of the rod, the center of gravity is the center of the pendulum ball. For this\ncase, the moment of inertia of the pendulum about its center of gravity is small, and we assume\nI=0 in Equation (3–17). Then the mathematical model for this system becomes as follows:\n(3–18)\n(3–19)\nEquations (3–18) and (3–19) can be modified to\n(3–20)\n(3–21)Mx$ = u - mgu\nMlu\n$\n= (M + m)gu - u\n ml\n2\nu$ + mlx$ = mglu\n (M + m)x$ + mlu$ = u\nAI + ml\n2\nBu$ + mlx$ = mglu\n = mglu - l(mx$ + mlu$)\n Iu\n$\n= mglu - Hl\n(M + m)x$ + mlu\n$\n= u\n0 = V - mg\nm(x$ + lu$) = H\nIu$ = Vlu - Hl\nuu\n#\n2\n= 0.\nu# (t)\nM d\n2\nx\ndt\n2\n= u - H\nm d\n2\ndt\n2\n(l cos u) = V - mg\nm d\n2\ndt\n2\n(x + l sin u) = H\nIu\n$\n= Vl sin u - Hl cos u\nOpenmirrors.comSection 3–2 / Mathematical Modeling of Mechanical Systems 71\nEquation (3–20) was obtained by eliminating from Equations (3–18) and (3–19). Equation\n(3–21) was obtained by eliminating from Equations (3–18) and (3–19). From Equation (3–20)\nwe obtain the plant transfer function to be\nThe inverted-pendulum plant has one pole on the negative real axis and\nanother on the positive real axis Hence, the plant is open-loop unstable.\nDefine state variables x1 , x2 , x3 , and x4 by\nNote that angle u indicates the rotation of the pendulum rod about point P, and x is the location\nof the cart. If we consider u and x as the outputs of the system, then\n(Notice that both u and x are easily measurable quantities.) Then, from the definition of the state\nvariables and Equations (3–20) and (3–21), we obtain\n x#\n4 =- m\nM gx1 + 1\nM u\n x#\n3 = x4\n x#\n2 = M + m\nMl  gx1 - 1\nMl u\n x#\n1 = x2\ny = By1\ny2\nR = Bu\nx R = Bx1\nx3\nR\n x4 = x#\n x3 = x\n x2 = u# x1 = u\nCs = A1M + m/H208621MlB1gD.\nCs =- A1M + m/H208621MlB1gD\n= 1\nMl as + A\nM + m\nMl g ba s - A\nM + m\nMl g b\nQ (s)\n-U(s) = 1\nMls2 - (M + m)g\nu$ x$\n0\nM\nP\nz\nu\nmg\nm\n/H5129 sin u\nx\nx\n/H5129 cos u\n/H5129\nu\nFigure 3–6\nInverted-pendulum\nsystem.72\nChapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems\nIn terms of vector-matrix equations, we have\n(3–22)\n(3–23)\nEquations (3–22) and (3–23) give a state-space representation of the inverted-pendulum system.\n(Note that state-space representation of the system is not unique. There are infinitely many such\nrepresentations for this system.)\nB\ny\n1\ny\n2\nR\n=\nB\n1000\n0010\nRD\nx\n1\nx\n2\nx\n3\nx\n4\nT\nD\nx#\n1\nx#\n2\nx#\n3\nx#\n4\nT\n=\nF\n0\nM + m\nMl g\n0\n- m\nM g\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\nVD\nx\n1\nx\n2\nx\n3\nx\n4\nT\n+\nF\n0\n- 1\nMl\n0\n1\nM\nV\nu\n3–3 MATHEMATICAL MODELING OF ELECTRICAL SYSTEMS\nBasic laws governing electrical circuits are Kirchhoff’s current law and voltage law.\nKirchhoff’s current law (node law) states that the algebraic sum of all currents entering and\nleaving a node is zero. (This law can also be stated as follows: The sum of currents enter-\ning a node is equal to the sum of currents leaving the same node.) Kirchhoff’s voltage law\n(loop law) states that at any given instant the algebraic sum of the voltages around any loop\nin an electrical circuit is zero. (This law can also be stated as follows: The sum of the volt-\nage drops is equal to the sum of the voltage rises around a loop.) A mathematical model\nof an electrical circuit can be obtained by applying one or both of Kirchhoff’s laws to it.\nThis section first deals with simple electrical circuits and then treats mathematical\nmodeling of operational amplifier systems.\nLRC Circuit. Consider the electrical circuit shown in Figure 3–7. The circuit con-\nsists of an inductance L (henry), a resistance R (ohm), and a capacitance C (farad).\nApplying Kirchhoff’s voltage law to the system, we obtain the following equations:\n(3–24)\n(3–25) 1\nC \n3\ni dt = e\no\n L di\ndt + Ri + 1\nC \n3\ni dt = e\ni\nL\ne\no\nR\nCe\ni\ni\nFigure 3–7\nElectrical circuit.\nOpenmirrors.comSection 3–3 / Mathematical Modeling of Electrical Systems 73\nEquations (3–24) and (3–25) give a mathematical model of the circuit.\nA transfer-function model of the circuit can also be obtained as follows: Taking the\nLaplace transforms of Equations (3–24) and (3–25), assuming zero initial conditions,\nwe obtain\nIf ei is assumed to be the input and eo the output, then the transfer function of this system\nis found to be\n(3–26)\nA state-space model of the system shown in Figure 3–7 may be obtained as follows: First,\nnote that the differential equation for the system can be obtained from Equation (3–26) as\nThen by defining state variables by\nand the input and output variables by\nwe obtain\nand\nThese two equations give a mathematical model of the system in state space.\nTransfer Functions of Cascaded Elements. Many feedback systems have com-\nponents that load each other. Consider the system shown in Figure 3–8. Assume that ei\nis the input and eo is the output. The capacitances C1 and C2 are not charged initially.\ny = [1  0] Bx1\nx2\nR\nBx#\n1\nx#\n2\nR = C\n0\n- 1\nLC\n1\n- R\nL\nSBx1\nx2\nR + C\n0\n1\nLC\nSu\n y = eo = x1\n u = ei\n x2 = e#\no\n x1 = eo\ne$\no + R\nL e#\no + 1\nLC eo = 1\nLC ei\nEo(s)\nEi(s) = 1\nLCs2 + RCs + 1\n 1\nC 1\ns I(s) = Eo(s)\n LsI(s) + RI(s) + 1\nC 1\ns I(s) = Ei(s)\nR1\nC1 eo\nR2\nC2ei\ni1 i2Figure 3–8\nElectrical system.74\nChapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems\nIt will be shown that the second stage of the circuit (R\n2\nC\n2\nportion) produces a loading\neffect on the first stage (R\n1\nC\n1\nportion). The equations for this system are\n(3–27)\nand\n(3–28)\n(3–29)\nTaking the Laplace transforms of Equations (3–27) through (3–29), respectively, using\nzero initial conditions, we obtain\n(3–30)\n(3–31)\n(3–32)\nEliminating I\n1\n(s) from Equations (3–30) and (3–31) and writing E\ni\n(s) in terms of I\n2\n(s),\nwe find the transfer function between E\no\n(s) and E\ni\n(s) to be\n(3–33)\nThe term R\n1\nC\n2\ns in the denominator of the transfer function represents the interaction\nof two simple RC circuits. Since the two roots\nof the denominator of Equation (3–33) are real.\nThe present analysis shows that, if two RC circuits are connected in cascade so\nthat the output from the first circuit is the input to the second, the overall transfer\nfunction is not the product of and The reason for this\nis that, when we derive the transfer function for an isolated circuit, we implicitly as-\nsume that the output is unloaded. In other words, the load impedance is assumed to\nbe infinite, which means that no power is being withdrawn at the output.When the sec-\nond circuit is connected to the output of the first, however, a certain amount of power\nis withdrawn, and thus the assumption of no loading is violated.Therefore, if the trans-\nfer function of this system is obtained under the assumption of no loading, then it is\nnot valid. The degree of the loading effect determines the amount of modification of\nthe transfer function.\n1/H20862AR\n2\n \nC\n2\n \ns + 1B.1/H20862AR\n1\n \nC\n1\n \ns + 1B\nAR\n1\n \nC\n1\n+ R\n2\n \nC\n2\n+ R\n1\n \nC\n2\nB\n2\n7 4R\n1\n \nC\n1\n \nR\n2\n \nC\n2\n \n,\n = 1\nR\n1\n \nC\n1\n \nR\n2\n \nC\n2\n \ns\n2\n+ AR\n1\n \nC\n1\n+ R\n2\n \nC\n2\n+ R\n1\n \nC\n2\nBs + 1\n E\no\n(s)\nE\ni\n(s) = 1\nAR\n1\n \nC\n1\n \ns + 1BAR\n2\n \nC\n2\n \ns + 1B + R\n1\n \nC\n2\n \ns\n 1\nC\n2\n \ns I\n2\n(s) = E\no\n(s)\n 1\nC\n1\n \ns CI\n2\n(s) - I\n1\n(s)D + R\n2\n \nI\n2\n(s) + 1\nC\n2\n \ns I\n2\n(s) = 0\n 1\nC\n1\n \ns CI\n1\n(s) - I\n2\n(s)D + R\n1\n \nI\n1\n(s) = E\ni\n(s)\n 1\nC\n2\n \n3\ni\n2\ndt = e\no\n 1\nC\n1\n \n3\nAi\n2\n- i\n1\nBdt + R\n2\n \ni\n2\n+ 1\nC\n2\n \n3\ni\n2\n dt = 0\n1\nC\n1\n3\nAi\n1\n- i\n2\nBdt + R\n1\n \ni\n1\n= e\ni\nOpenmirrors.com\nOpenmirrors.comSection 3–3 / Mathematical Modeling of Electrical Systems 75\nComplex Impedances. In deriving transfer functions for electrical circuits, we\nfrequently find it convenient to write the Laplace-transformed equations directly,\nwithout writing the differential equations. Consider the system shown in Figure 3–9(a).\nIn this system,Z1 and Z2 represent complex impedances. The complex impedance \nZ(s) of a two-terminal circuit is the ratio of E(s), the Laplace transform of the \nvoltage across the terminals, to I(s), the Laplace transform of the current through \nthe element, under the assumption that the initial conditions are zero, so that\nZ(s)=E(s)/I(s).If the two-terminal element is a resistance R, capacitance C,o r\ninductance L, then the complex impedance is given by R, 1/Cs, or Ls, respectively. If\ncomplex impedances are connected in series, the total impedance is the sum of the\nindividual complex impedances.\nRemember that the impedance approach is valid only if the initial conditions\ninvolved are all zeros. Since the transfer function requires zero initial conditions, the\nimpedance approach can be applied to obtain the transfer function of the electrical\ncircuit. This approach greatly simplifies the derivation of transfer functions of elec-\ntrical circuits.\nConsider the circuit shown in Figure 3–9(b).Assume that the voltages ei and eo are\nthe input and output of the circuit, respectively. Then the transfer function of this\ncircuit is\nFor the system shown in Figure 3–7,\nHence the transfer function Eo(s)/Ei(s) can be found as follows:\nwhich is, of course, identical to Equation (3–26).\nEo(s)\nEi(s) =\n1\nCs\nLs + R + 1\nCs\n= 1\nLCs2 + RCs + 1\nZ1 = Ls + R,  Z2 = 1\nCs\nEo(s)\nEi(s) = Z2(s)\nZ1(s) + Z2(s)\ni i i\ne2\ne\ne1\neoei\nZ1\nZ1\nZ2\nZ2\n(a) (b)\nFigure 3–9\nElectrical circuits.76\nChapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems\nEXAMPLE 3–7\nConsider again the system shown in Figure 3–8. Obtain the transfer function E\no\n(s)/E\ni\n(s) by use\nof the complex impedance approach. (Capacitors C\n1\nand C\n2\nare not charged initially.)\nThe circuit shown in Figure 3–8 can be redrawn as that shown in Figure 3–10(a), which can be\nfurther modified to Figure 3–10(b).\nIn the system shown in Figure 3–10(b) the current I is divided into two currents I\n1\nand I\n2\n.\nNoting that\nwe obtain\nNoting that\nwe obtain\nSubstituting Z\n1\n=R\n1\n, Z\n2\n=1/AC\n1\nsB, Z\n3\n=R\n2\n, and Z\n4\n=1/AC\n2\nsBinto this last equation, we get\nwhich is the same as that given by Equation (3–33).\n = 1\nR\n1\n \nC\n1\n \nR\n2\n \nC\n2\n \ns\n2\n+ AR\n1\n \nC\n1\n+ R\n2\n \nC\n2\n+ R\n1\n \nC\n2\nBs + 1\n \nE\no\n(s)\nE\ni\n(s) =\n1\nC\n1\n \ns 1\nC\n2\n \ns\nR\n1\na\n1\nC\n1\n \ns + R\n2\n+ 1\nC\n2\n \ns\nb\n+ 1\nC\n1\n \ns \na\nR\n2\n+ 1\nC\n2\n \ns\nb\nE\no\n(s)\nE\ni\n(s) = Z\n2\n \nZ\n4\nZ\n1\nAZ\n2\n+ Z\n3\n+ Z\n4\nB+ Z\n2\nAZ\n3\n+ Z\n4\nB\n E\no\n(s) = Z\n4\n \nI\n2\n= Z\n2\n \nZ\n4\nZ\n2\n+ Z\n3\n+ Z\n4\n I\n E\ni\n(s) = Z\n1\n \nI + Z\n2\n \nI\n1\n=\nc\nZ\n1\n+\nZ\n2\nAZ\n3\n+ Z\n4\nB\nZ\n2\n+ Z\n3\n+ Z\n4\nd\nI\nI\n1\n= Z\n3\n+ Z\n4\nZ\n2\n+ Z\n3\n+ Z\n4\nI,\n  \nI\n2\n= Z\n2\nZ\n2\n+ Z\n3\n+ Z\n4\nI\nZ\n2\n \nI\n1\n= AZ\n3\n+ Z\n4\nBI\n2\n \n,\n  \nI\n1\n+ I\n2\n= I\nZ\n1\nZ\n3\nZ\n2\nZ\n4\nZ\n1\nI\n2\nI\n1\nZ\n2\nZ\n3\nZ\n4\nI\nE\ni\n(s)\nE\no\n(s)\nE\no\n(s)E\ni\n(s)\n(a) (b)\nFigure 3–10\n(a) The circuit of\nFigure 3–8 shown in\nterms of impedances;\n(b) equivalent circuit\ndiagram.\nOpenmirrors.comSection 3–3 / Mathematical Modeling of Electrical Systems 77\nTransfer Functions of Nonloading Cascaded Elements. The transfer function\nof a system consisting of two nonloading cascaded elements can be obtained by elimi-\nnating the intermediate input and output. For example, consider the system shown in\nFigure 3–11(a). The transfer functions of the elements are\nand\nIf the input impedance of the second element is infinite, the output of the first element is\nnot affected by connecting it to the second element.Then the transfer function of the whole\nsystem becomes\nThe transfer function of the whole system is thus the product of the transfer functions\nof the individual elements. This is shown in Figure 3–11(b).\nAs an example, consider the system shown in Figure 3–12.The insertion of an isolating\namplifier between the circuits to obtain nonloading characteristics is frequently used in\ncombining circuits. Since amplifiers have very high input impedances, an isolation\namplifier inserted between the two circuits justifies the nonloading assumption.\nThe two simple RC circuits, isolated by an amplifier as shown in Figure 3–12, have\nnegligible loading effects, and the transfer function of the entire circuit equals the prod-\nuct of the individual transfer functions. Thus, in this case,\nElectronic Controllers. In what follows we shall discuss electronic controllers using\noperational amplifiers. We begin by deriving the transfer functions of simple operational-\namplifier circuits.Then we derive the transfer functions of some of the operational-amplifier\ncontrollers. Finally, we give operational-amplifier controllers and their transfer functions in\nthe form of a table.\n= K\nAR1 C1 s + 1BAR2 C2 s + 1B\nEo(s)\nEi(s) = a 1\nR1 C1 s + 1 b(K) a 1\nR2 C2 s + 1 b\nG(s) = X3(s)\nX1(s) = X2(s)X3(s)\nX1(s)X2(s) = G1(s)G2(s)\nG2(s) = X3(s)\nX2(s)G1(s) = X2(s)\nX1(s)\nX1(s)\nG1(s)\nX2(s) X3(s)\nG2(s)\n(a) (b)\nX3(s)X1(s)\nG1(s) G2(s)\nFigure 3–11\n(a) System consisting of two nonloading cascaded elements; (b) an equivalent system.\nR1\nC1 eo\nR2\nC2ei\nIsolating\namplifier\n(gain K)\nFigure 3–12\nElectrical system.78\nChapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems\nOperational Amplifiers. Operational amplifiers, often called op amps, are\nfrequently used to amplify signals in sensor circuits. Op amps are also frequently used\nin filters used for compensation purposes. Figure 3–13 shows an op amp. It is a common\npractice to choose the ground as 0 volt and measure the input voltages e\n1\nand e\n2\nrelative\nto the ground. The input e\n1\nto the minus terminal of the amplifier is inverted, and the\ninput e\n2\nto the plus terminal is not inverted.The total input to the amplifier thus becomes\ne\n2\n-e\n1\n. Hence, for the circuit shown in Figure 3–13, we have\nwhere the inputs e\n1\nand e\n2\nmay be dc or ac signals and K is the differential gain (volt-\nage gain). The magnitude of K is approximately 10\n5\n~ 10\n6\nfor dc signals and ac signals\nwith frequencies less than approximately 10 Hz. (The differential gain K decreases with\nthe signal frequency and becomes about unity for frequencies of 1 MHz ~ 50 MHz.)\nNote that the op amp amplifies the difference in voltages e\n1\nand e\n2\n. Such an amplifier is\ncommonly called a differential amplifier. Since the gain of the op amp is very high, it is\nnecessary to have a negative feedback from the output to the input to make the ampli-\nfier stable. (The feedback is made from the output to the inverted input so that the feed-\nback is a negative feedback.)\nIn the ideal op amp, no current flows into the input terminals, and the output volt-\nage is not affected by the load connected to the output terminal. In other words, the\ninput impedance is infinity and the output impedance is zero. In an actual op amp, a\nvery small (almost negligible) current flows into an input terminal and the output can-\nnot be loaded too much. In our analysis here, we make the assumption that the op amps\nare ideal.\nInverting Amplifier. Consider the operational-amplifier circuit shown in Figure 3–14.\nLet us obtain the output voltage e\no\n.\ne\no\n= KAe\n2\n- e\n1\nB=- KAe\n1\n- e\n2\nB\ne\ni\ne\no\nR\n2\ni\n2\nR\n1\ni\n1\n+\n–\ne9\nFigure 3–14\nInverting amplifier.\ne\n2\ne\n1\ne\no\n+\n–\nFigure 3–13\nOperational\namplifier.\nOpenmirrors.comSection 3–3 / Mathematical Modeling of Electrical Systems 79\nThe equation for this circuit can be obtained as follows: Define\nSince only a negligible current flows into the amplifier, the current i1 must be equal to\ncurrent i2 . Thus\nSince and e¿ must be almost zero, or Hence we have\nor\nThus the circuit shown is an inverting amplifier. If R1=R2 , then the op-amp circuit\nshown acts as a sign inverter.\nNoninverting Amplifier. Figure 3–15(a) shows a noninverting amplifier.A circuit\nequivalent to this one is shown in Figure 3–15(b). For the circuit of Figure 3–15(b), we\nhave\nwhere K is the differential gain of the amplifier. From this last equation, we get\nSince if then\nThis equation gives the output voltage eo. Since eo and ei have the same signs, the op-amp\ncircuit shown in Figure 3–15(a) is noninverting.\neo = a1 + R2\nR1\nbei\nR1/H20862AR1 + R2B/H112711/H20862K,K /H112711,\nei = a R1\nR1 + R2\n+ 1\nK beo\neo = K aei - R1\nR1 + R2\neo b\neo =- R2\nR1\nei\nei\nR1\n= -eo\nR2\ne¿ /H112160.K /H11271 1,K(0 - e¿) = e0\nei - e¿\nR1\n= e¿- eo\nR2\ni1 = ei - e¿\nR1\n,  i2 = e¿- eo\nR2\neoei\nR2\nR1\n+\n–\neo\nei\nR2\nR1\n–\n+\n(b)(a)\nFigure 3–15\n(a) Noninverting\noperational\namplifier;\n(b) equivalent\ncircuit.80\nChapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems\nEXAMPLE 3–8\nFigure 3–16 shows an electrical circuit involving an operational amplifier. Obtain the output e\no\n.\nLet us define\nNoting that the current flowing into the amplifier is negligible, we have\nHence\nSince we have\nTaking the Laplace transform of this last equation, assuming the zero initial condition, we have\nwhich can be written as\nThe op-amp circuit shown in Figure 3–16 is a first-order lag circuit. (Several other circuits involving\nop amps are shown in Table 3–1 together with their transfer functions. Table 3–1 is given on\npage 85.)\nE\no\n(s)\nE\ni\n(s) =- R\n2\nR\n1\n1\nR\n2\n \nCs + 1\nE\ni\n(s)\nR\n1\n=- R\n2\n \nCs + 1\nR\n2\nE\no\n(s)\ne\ni\nR\n1\n=- C de\no\ndt - e\no\nR\n2\ne¿ /H112160,\ne\ni\n- e¿\nR\n1\n= C\ndAe¿- e\no\nB\ndt + e¿- e\no\nR\n2\ni\n1\n= i\n2\n+ i\n3\ni\n1\n= e\ni\n- e¿\nR\n1\n,\n  \ni\n2\n= C\ndAe¿- e\no\nB\ndt ,\n  \ni\n3\n= e¿- e\no\nR\n2\ne\ni\ne\no\nR\n2\nR\n1\nC\ni\n1\ni\n3\ni\n2\n+\n–\ne9\nFigure 3–16\nFirst-order lag circuit\nusing operational\namplifier.\nOpenmirrors.comSection 3–3 / Mathematical Modeling of Electrical Systems 81\nImpedance Approach to Obtaining Transfer Functions. Consider the op-amp\ncircuit shown in Figure 3–17. Similar to the case of electrical circuits we discussed ear-\nlier, the impedance approach can be applied to op-amp circuits to obtain their transfer\nfunctions. For the circuit shown in Figure 3–17, we have\nSince we have\n(3–34)Eo(s)\nEi(s) =- Z2(s)\nZ1(s)\nE¿(s) /H112160,\nEi(s) - E¿(s)\nZ1\n= E¿(s) - Eo(s)\nZ2\n+\n–\nEo(s)\nI (s)\nI (s)\nEi(s)\nE9(s)\nZ1(s)\nZ2(s)\nFigure 3–17\nOperational-\namplifier circuit.\nEXAMPLE 3–9 Referring to the op-amp circuit shown in Figure 3–16, obtain the transfer function Eo(s)/Ei(s) by\nuse of the impedance approach.\nThe complex impedances Z1(s) and Z2(s) for this circuit are\nand\nThe transfer function Eo(s)/Ei(s) is, therefore, obtained as\nwhich is, of course, the same as that obtained in Example 3-8.\nEo(s)\nEi(s) =-\nZ2(s)\nZ1(s) =- R2\nR1\n1\nR2 Cs + 1\nZ2(s) = 1\nCs + 1\nR2\n= R2\nR2 Cs + 1Z1(s) = R182\nChapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems\nLead or Lag Networks Using Operational Amplifiers. Figure 3–18(a) shows an\nelectronic circuit using an operational amplifier. The transfer function for this circuit\ncan be obtained as follows: Define the input impedance and feedback impedance as Z\n1\nand Z\n2\n, respectively. Then\nHence, referring to Equation (3–34), we have\n(3–35)\nNotice that the transfer function in Equation (3–35) contains a minus sign.Thus, this circuit\nis sign inverting. If such a sign inversion is not convenient in the actual application, a sign\ninverter may be connected to either the input or the output of the circuit of Figure 3–18(a).\nAn example is shown in Figure 3–18(b). The sign inverter has the transfer function of\nThe sign inverter has the gain of Hence the network shown in Figure 3–18(b)\nhas the following transfer function:\n(3–36)= K\nc\n \na Ts + 1\naTs + 1 = K\nc\ns + 1\nT\ns + 1\naT\nE\no\n(s)\nE\ni\n(s) = R\n2\n \nR\n4\nR\n1\n \nR\n3\nR\n1\n \nC\n1\ns + 1\nR\n2\n \nC\n2\ns + 1 = R\n4\n \nC\n1\nR\n3\n \nC\n2\ns + 1\nR\n1\n \nC\n1\ns + 1\nR\n2\n \nC\n2\n-R\n4\n/H20862R\n3\n \n.\nE\no\n(s)\nE(s) =- R\n4\nR\n3\nE(s)\nE\ni\n(s) =- Z\n2\nZ\n1\n=- R\n2\nR\n1\nR\n1\n \nC\n1\ns + 1\nR\n2\n \nC\n2\ns + 1 =- C\n1\nC\n2\ns + 1\nR\n1\n \nC\n1\ns + 1\nR\n2\n \nC\n2\nZ\n1\n= R\n1\nR\n1\n \nC\n1\n \ns + 1\n \n,\n  \nZ\n2\n= R\n2\nR\n2\n \nC\n2\n \ns + 1\n+\n–\n+\n–\n+\n–\n(a) (b)\nZ\n1\nC\n1\nZ\n2\nC\n2\nR\n2\ni\n2\ni\n1\nR\n1\nE\ni\n(s)\nE9(s)\nE(s)\nC\n1\nC\n2\nE\ni\n(s)\nE\no\n(s)E(s)\nR\n1\nR\n2\nR\n3\nR\n4\nLead or lag network Sign inverter\nFigure 3–18\n(a) Operational-amplifier circuit; (b) operational-amplifier circuit used as a lead or lag compensator.\nOpenmirrors.comwhere\nNotice that\nThis network has a dc gain of \nNote that this network, whose transfer function is given by Equation (3–36), is a lead\nnetwork if or a<1. It is a lag network if \nPID Controller Using Operational Amplifiers. Figure 3–19 shows an electronic\nproportional-plus-integral-plus-derivative controller (a PID controller) using opera-\ntional amplifiers. The transfer function is given by\nwhere\nThus\nNoting that\nEo(s)\nE(s) =- R4\nR3\nE(s)\nEi(s) =- aR2 C2 s + 1\nC2 s ba R1 C1 s + 1\nR1\nb\nZ1 = R1\nR1 C1s + 1 ,  Z2 = R2 C2s + 1\nC2s\nE(s)\nEi(s) =- Z2\nZ1\nE(s)/H20862Ei(s)\nR1 C1 6 R2 C2 .R1 C1 7 R2 C2 ,\nKc a = R2 R4/H20862AR1 R3B.\nKc a = R4 C1\nR3 C2\nR2 C2\nR1 C1\n= R2 R4\nR1 R3\n,  a = R2 C2\nR1 C1\nT = R1 C1 ,  aT = R2 C2 ,  Kc = R4 C1\nR3 C2\nSection 3–3 / Mathematical Modeling of Electrical Systems 83\n+\n+\n–\n–\nZ1\nC1\nZ2\nC2R2\nR1\nEi(s)\nEo(s)E(s)\nR3\nR4\nFigure 3–19\nElectronic PID\ncontroller.84\nChapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems\nwe have\n(3–37)\nNotice that the second operational-amplifier circuit acts as a sign inverter as well as a\ngain adjuster.\nWhen a PID controller is expressed as\nK\np\nis called the proportional gain, is called the integral time, and is called the\nderivative time. From Equation (3–37) we obtain the proportional gain K\np\n, integral time\nand derivative time to be\nWhen a PID controller is expressed as\nK\np\nis called the proportional gain, K\ni\nis called the integral gain, and K\nd\nis called the\nderivative gain. For this controller\nTable 3–1 shows a list of operational-amplifier circuits that may be used as con-\ntrollers or compensators.\nK\nd\n= R\n4\n \nR\n2\n \nC\n1\nR\n3\nK\ni\n= R\n4\nR\n3\n \nR\n1\n \nC\n2\nK\np\n=\nR\n4\nAR\n1\n \nC\n1\n+ R\n2\n \nC\n2\nB\nR\n3\n \nR\n1\n \nC\n2\nE\no\n(s)\nE\ni\n(s) = K\np\n+ K\ni\ns + K\nd\n \ns\n T\nd\n= R\n1\n \nC\n1\n \nR\n2\n \nC\n2\nR\n1\n \nC\n1\n+ R\n2\n \nC\n2\n T\ni\n= 1\nR\n1\n \nC\n1\n+ R\n2\n \nC\n2\n K\np\n=\nR\n4\nAR\n1\n \nC\n1\n+ R\n2\n \nC\n2\nB\nR\n3\n \nR\n1\n \nC\n2\nT\nd\nT\ni\n \n,\nT\nd\nT\ni\nE\no\n(s)\nE\ni\n(s) = K\np\na\n1 + T\ni\ns + T\nd\n \ns\nb\n=\nR\n4\nAR\n1\n \nC\n1\n+ R\n2\n \nC\n2\nB\nR\n3\n \nR\n1\n \nC\n2\nc\n1 + 1\nAR\n1\n \nC\n1\n+ R\n2\n \nC\n2\nBs + R\n1\n \nC\n1\n \nR\n2\n \nC\n2\nR\n1\n \nC\n1\n+ R\n2\n \nC\n2\ns\nd\n= R\n4\n \nR\n2\nR\n3\n \nR\n1\na\nR\n1\n \nC\n1\n+ R\n2\n \nC\n2\nR\n2\n \nC\n2\n+ 1\nR\n2\n \nC\n2\n \ns + R\n1\n \nC\n1\n \ns\nb\nE\no\n(s)\nE\ni\n(s) = E\no\n(s)\nE(s)\nE(s)\nE\ni\n(s) = R\n4\n \nR\n2\nR\n3\n \nR\n1\nAR\n1\n \nC\n1\ns + 1BAR\n2\n \nC\n2\ns + 1B\nR\n2\n \nC\n2\ns\nOpenmirrors.comSection 3–3 / Mathematical Modeling of Electrical Systems 85\n1\n2\n3\n4\n5\n6\n7\nP\nI\nPD\nPI\nPID\nLead or lag\nLag–lead\nControl\nAction Operational-Amplifier CircuitsG(s) = Eo(s)\nEi(s)\nR4\nR3\nR2\nR1\n1\nR1C2s\nR4\nR3\nR4\nR3\nR2\nR1\n(R1C1s + 1)\nR4\nR3\nR2\nR1\nR2C2s + 1\nR2C2s\nR4\nR3\nR2\nR1\n(R1C1s + 1) (R2C2s + 1)\nR2C2s\nR4\nR3\nR2\nR1\nR1C1s + 1\nR2C2s + 1\nR6\nR5\nR4\nR3\n[(R1 + R3) C1s + 1] (R2C2s + 1)\n(R1C1s + 1) [(R2 + R4) C2s + 1]\neo\neo\nei\nei\n+\n–\n+\n–\n+\n–\n+\n–\nR1\nR2\nR2\nR3\nR4\nR1 R3\nR4C2\neo\nei\n+\n–\n+\n–\nR3\nR4C1\nR2\nR1\nR1\neo\nei\n+\n–\n+\n–R3\nR4C2\nR2\nR1\neo\nei\n+\n–\n+\n–R3\nR4C2C1\nR2\nR1\neo\nei +\n–\n+\n–\nR3\nR4\nC2\nC1\nR4\nR2\nR1\nR3\neo\nei +\n–\n+\n–\nR5\nR6\nC2\nC1\nTable 3–1 Operational-Amplifier Circuits That May Be Used as Compensators86\nChapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems\nEXAMPLE PROBLEMS AND SOLUTIONS\nA–3–1. Figure 3–20(a) shows a schematic diagram of an automobile suspension system.As the car moves\nalong the road, the vertical displacements at the tires act as the motion excitation to the auto-\nmobile suspension system.The motion of this system consists of a translational motion of the cen-\nter of mass and a rotational motion about the center of mass. Mathematical modeling of the\ncomplete system is quite complicated.\nA very simplified version of the suspension system is shown in Figure 3–20(b).Assuming that\nthe motion x\ni\nat point P is the input to the system and the vertical motion x\no\nof the body is the\noutput, obtain the transfer function (Consider the motion of the body only in the ver-\ntical direction.) Displacement x\no\nis measured from the equilibrium position in the absence of\ninput x\ni\n.\nSolution. The equation of motion for the system shown in Figure 3–20(b) is\nor\nTaking the Laplace transform of this last equation, assuming zero initial conditions, we obtain\nHence the transfer function X\no\n(s)/X\ni\n(s) is given by\nX\no\n(s)\nX\ni\n(s) = bs + k\nms\n2\n+ bs + k\nAms\n2\n+ bs + kBX\no\n(s) = (bs + k)X\ni\n(s)\nmx$\no\n+ bx#\no\n+ kx\no\n= bx\ni\n# + kx\ni\nmx$\no\n+ bAx#\no\n- x#\ni\nB+ kAx\no\n- x\ni\nB= 0\nX\no\n(s)/H20862X\ni\n(s).\n(a)\nk\n(b)\nx\ni\nCenter of mass\nAuto body\nb\nP\nx\no\nm\nFigure 3–20\n(a) Automobile\nsuspension system;\n(b) simplified\nsuspension system.\nOpenmirrors.comExample Problems and Solutions 87\nA–3–2. Obtain the transfer function Y(s)/U(s) of the system shown in Figure 3–21. The input u is a\ndisplacement input. (Like the system of Problem A–3–1, this is also a simplified version of an\nautomobile or motorcycle suspension system.)\nSolution. Assume that displacements x and y are measured from respective steady-state\npositions in the absence of the input u. Applying the Newton’s second law to this system, we\nobtain\nHence, we have\nTaking Laplace transforms of these two equations, assuming zero initial conditions, we obtain\nEliminating X(s) from the last two equations, we have\nwhich yields\nY(s)\nU(s) =\nk1Abs + k2B\nm1 m2 s4 + Am1 + m2Bbs3 + Ck1 m2 + Am1 + m2Bk2 Ds2 + k1 bs + k1 k2\nAm1 s2 + bs + k1 + k2Bm2 s2 + bs + k2\nbs + k2\nY(s) = Abs + k2BY(s) + k1 U(s)\nCm2 s2 + bs + k2 DY(s) = Abs + k2BX(s)\nCm1 s2 + bs + Ak1 + k2BDX(s) = Abs + k2BY(s) + k1 U(s)\nm2 y$ + by# + k2 y = bx# + k2 x\nm1 x$ + bx# + Ak1 + k2Bx = by# + k2 y + k1 u\n m2 y$ =- k2(y - x) - b(y# - x# )\n m1 x$ = k2(y - x) + b(y# - x# ) + k1(u - x)\ny\nb\nx\nu\nm2\nm1\nk2\nk1\nFigure 3–21\nSuspension system.88\nChapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems\nA–3–3. Obtain a state-space representation of the system shown in Figure 3–22.\nSolution. The system equations are\nThe output variables for this system are y\n1\nand y\n2\n. Define state variables as\nThen we obtain the following equations:\nHence, the state equation is\nand the output equation is\nA–3–4. Obtain the transfer function X\no\n(s)/X\ni\n(s) of the mechanical system shown in Figure 3–23(a). Also\nobtain the transfer function E\no\n(s)/E\ni\n(s) of the electrical system shown in Figure 3–23(b). Show that\nthese transfer functions of the two systems are of identical form and thus they are analogous systems.\nB\ny\n1\ny\n2\nR\n=\nB\n1\n0\n0\n0\n0\n1\n0\n0\nRD\nx\n1\nx\n2\nx\n3\nx\n4\nT\nD\nx#\n1\nx#\n2\nx#\n3\nx#\n4\nT\n=\nF\n0\n- k\nm\n1\n0\nk\nm\n2\n1\n- b\nm\n1\n0\n0\n0\nk\nm\n1\n0\n- k\nm\n2\n0\n0\n1\n0\nVD\nx\n1\nx\n2\nx\n3\nx\n4\nT\n+\nE\n0\n0\n0\n1\nm\n2\nU\nu\nx#\n4\n= 1\nm\n2\nC-kAy\n2\n- y\n1\nB+ uD = k\nm\n2\nx\n1\n- k\nm\n2\nx\n3\n+ 1\nm\n2\nu\nx#\n3\n= x\n4\nx#\n2\n= 1\nm\n1\nC-by#\n1\n- kAy\n1\n- y\n2\nBD =- k\nm\n1\nx\n1\n- b\nm\n1\nx\n2\n+ k\nm\n1\nx\n3\nx#\n1\n= x\n2\n x\n4\n= y#\n2\n x\n3\n= y\n2\n x\n2\n= y#\n1\n x\n1\n= y\n1\n m\n2\n \ny$\n2\n+ kAy\n2\n- y\n1\nB= u\n m\n1\n \ny$\n1\n+ by#\n1\n+ kAy\n1\n- y\n2\nB= 0\nm\n1\nm\n2\nk\ny\n1\nb\nu\ny\n2\nFigure 3–22\nMechanical system.\nOpenmirrors.comExample Problems and Solutions 89\nSolution. In Figure 3–23(a) we assume that displacements xi , xo , and y are measured from their\nrespective steady-state positions.Then the equations of motion for the mechanical system shown\nin Figure 3–23(a) are\nBy taking the Laplace transforms of these two equations, assuming zero initial conditions, we have\nIf we eliminate Y(s) from the last two equations, then we obtain\nor\nHence the transfer function Xo(s)/Xi(s) can be obtained as\nFor the electrical system shown in Figure 3–23(b), the transfer function Eo(s)/Ei(s) is found to be\n=\nAR1 C1 s + 1BAR2 C2 s + 1B\nAR1 C1 s + 1BAR2 C2 s + 1B+ R2 C1 s\nEo(s)\nEi(s) =\nR1 + 1\nC1 s\n1\nA1/H20862R2B+ C2 s\n+ R1 + 1\nC1 s\nXo(s)\nXi(s) =\nab1\nk1\ns + 1 ba b2\nk2\ns + 1 b\nab1\nk1\ns + 1 ba b2\nk2\ns + 1 b + b2\nk1\ns\nAb1 s + k1BXi(s) = ab1 s + k1 + b2 s - b2 s b2 s\nb2 s + k2\nbXo(s)\nb1 CsXi(s) - sXo(s)D + k1 CXi(s) - Xo(s)D = b2 sXo(s) - b2 s\nb2 sXo(s)\nb2 s + k2\nb2 CsXo(s) - sY(s)D = k2 Y(s)\nb1 CsXi(s) - sXo(s)D + k1 CXi(s) - Xo(s)D = b2 CsXo(s) - sY(s)D\nb2Ax#\no - y# B= k2 y\nb1Ax#\ni - x#\noB+ k1Axi - xoB= b2Ax#\no - y# B\n(a) (b)\nxi\nxo\nyk2\nk1\nb2\nb1\nR2\nR1\neoei\nC2\nC1\nFigure 3–23\n(a) Mechanical\nsystem;\n(b) analogous\nelectrical system.90\nChapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems\nA comparison of the transfer functions shows that the systems shown in Figures 3–23(a) and (b)\nare analogous.\nA–3–5. Obtain the transfer functions E\no\n(s)/E\ni\n(s) of the bridged T networks shown in Figures 3–24(a)\nand (b).\nSolution. The bridged T networks shown can both be represented by the network of\nFigure 3–25(a), where we used complex impedances.This network may be modified to that shown\nin Figure 3–25(b).\nIn Figure 3–25(b), note that\nI\n1\n= I\n2\n+ I\n3\n,\n  \nI\n2\n \nZ\n1\n= AZ\n3\n+ Z\n4\nBI\n3\nRR\nC\n1\nCC\nC\n2\ne\ni\ne\no\n(a)\nR\n1\nR\n2\ne\ni\ne\no\n(b)\nFigure 3–24\nBridged T networks.\nZ\n1\nZ\n4\nZ\n3\nZ\n2\nZ\n1\nE\ni\n(s)\nZ\n4\nZ\n3\nZ\n2\nI\n3\nI\n2\nI\n1\nI\n1\nI\n3\nI\n3\nI\n2\nI\n1\nI\n1\ne\ni\ne\no\nE\no\n(s)\n(a)\n(b)\nFigure 3–25\n(a) Bridged T\nnetwork in terms of\ncomplex impedances;\n(b) equivalent\nnetwork.\nOpenmirrors.comExample Problems and Solutions 91\nHence\nThen the voltages Ei(s) and Eo(s) can be obtained as\nHence, the transfer function Eo(s)/Ei(s) of the network shown in Figure 3–25(a) is obtained as\n(3–38)\nFor the bridged T network shown in Figure 3–24(a), substitute\ninto Equation (3–38). Then we obtain the transfer function Eo(s)/Ei(s) to be\nSimilarly, for the bridged T network shown in Figure 3–24(b), we substitute\ninto Equation (3–38). Then the transfer function Eo(s)/Ei(s) can be obtained as follows:\n= R1 CR2 Cs2 + 2R1 Cs + 1\nR1 CR2 Cs2 + A2R1 C + R2 CBs + 1\nEo(s)\nEi(s) =\n1\nCs\n1\nCs + R1 a 1\nCs + 1\nCs + R2 b\nR1 a 1\nCs + 1\nCs + R2 b + 1\nCs\n1\nCs + R2\n1\nCs\nZ1 = 1\nCs ,  Z2 = R1 ,  Z3 = 1\nCs ,  Z4 = R2\n= RC1 RC2 s2 + 2RC2 s + 1\nRC1 RC2 s2 + A2RC2 + RC1Bs + 1\nEo(s)\nEi(s) =\nR2 + 1\nC1 s aR + R + 1\nC2 s b\n1\nC1 s aR + R + 1\nC2 s b + R2 + R 1\nC2 s\nZ1 = R,  Z2 = 1\nC1 s ,  Z3 = R,  Z4 = 1\nC2 s\nEo(s)\nEi(s) =\nZ3 Z1 + Z2 AZ1 + Z3 + Z4B\nZ2AZ1 + Z3 + Z4B+ Z1 Z3 + Z1 Z4\n =\nZ3 Z1 + Z2AZ1 + Z3 + Z4B\nZ1 + Z3 + Z4\n I1\n = Z3 Z1\nZ1 + Z3 + Z4\n I1 + Z2 I1\n Eo(s) = Z3 I3 + Z2 I1\n =\nZ2AZ1 + Z3 + Z4B+ Z1 AZ3 + Z4B\nZ1 + Z3 + Z4\n I1\n = cZ2 +\nZ1AZ3 + Z4B\nZ1 + Z3 + Z4\ndI1\n Ei(s) = Z1 I2 + Z2 I1\nI2 = Z3 + Z4\nZ1 + Z3 + Z4\nI1 ,  I3 = Z1\nZ1 + Z3 + Z4\nI192\nChapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems\nA–3–6. Obtain the transfer function of the op-amp circuit shown in Figure 3–26.\nSolution. The voltage at point A is\nThe Laplace-transformed version of this last equation is\nThe voltage at point B is\nSince and we must have Thus\nHence\nA–3–7. Obtain the transfer function E\no\n(s)/E\ni\n(s) of the op-amp system shown in Figure 3–27 in terms of\ncomplex impedances Z\n1\n, Z\n2\n, Z\n3\n, and Z\n4\n. Using the equation derived, obtain the transfer function\nE\no\n(s)/E\ni\n(s) of the op-amp system shown in Figure 3–26.\nSolution. From Figure 3–27, we find\nE\ni\n(s) - E\nA\n(s)\nZ\n3\n=\nE\nA\n(s) - E\no\n(s)\nZ\n4\nE\no\n(s)\nE\ni\n(s) =- R\n2\n \nCs - 1\nR\n2\n \nCs + 1 =-\ns - 1\nR\n2\n \nC\ns + 1\nR\n2\n \nC\n1\n2 CE\ni\n(s) + E\no\n(s)D = 1\nR\n2\n \nCs + 1 E\ni\n(s)\nE\nA\n(s) = E\nB\n(s).K /H112711,CE\nB\n(s) - E\nA\n(s)DK = E\no\n(s)\nE\nB\n(s) =\n1\nCs\nR\n2\n+ 1\nCs\nE\ni\n(s) = 1\nR\n2\n \nCs + 1 E\ni\n(s)\nE\nA\n(s) = 1\n2 CE\ni\n(s) + E\no\n(s)D\ne\nA\n= 1\n2 Ae\ni\n- e\no\nB + e\no\nE\no\n(s)/H20862E\ni\n(s)\n–\n+\nC\nA\nB\nR\n1\nR\n1\nR\n2\ne\ni\ne\no\nFigure 3–26\nOperational-\namplifier circuit.\nOpenmirrors.comExample Problems and Solutions 93\nor\n(3–39)\nSince\n(3–40)\nby substituting Equation (3–40) into Equation (3–39), we obtain\nfrom which we get the transfer function Eo(s)/Ei(s) to be\n(3–41)\nTo find the transfer function Eo(s)/Ei(s) of the circuit shown in Figure 3–26, we substitute\ninto Equation (3–41). The result is\nwhich is, as a matter of course, the same as that obtained in Problem A–3–6.\nEo(s)\nEi(s) =-\nR1 R2 - R1\n1\nCs\nR1 a 1\nCs + R2 b\n=- R2 Cs - 1\nR2 Cs + 1\nZ1 = 1\nCs ,  Z2 = R2 ,  Z3 = R1 ,  Z4 = R1\nEo(s)\nEi(s) =- Z4 Z2 - Z3 Z1\nZ3AZ1 + Z2B\ncZ4 Z1 + Z4 Z2 - Z4 Z1 - Z3 Z1\nZ4AZ1 + Z2B\ndEi(s) =- Z3\nZ4\nEo(s)\nEA(s) = EB(s) = Z1\nZ1 + Z2\nEi(s)\nEi(s) - a1 + Z3\nZ4\nbEA(s) =- Z3\nZ4\nEo(s)\nA\nB\neoei\nZ3\nZ1\nZ2\nZ4\n–\n+\nFigure 3–27\nOperational-\namplifier circuit.94\nChapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems\nA–3–8. Obtain the transfer function of the operational-amplifier circuit shown in Figure 3–28.\nSolution. We will first obtain currents i\n1\n, i\n2\n, i\n3\n, i\n4\n, and i\n5\n.Then we will use node equations at nodes\nA and B.\nAt node A, we have i\n1\n=i\n2\n+i\n3\n+i\n4\n, or\n(3–42)\nAt node B, we get i\n4\n=i\n5\n, or\n(3–43)\nBy rewriting Equation (3–42), we have\n(3–44)\nFrom Equation (3–43), we get\n(3–45)\nBy substituting Equation (3–45) into Equation (3–44), we obtain\nTaking the Laplace transform of this last equation, assuming zero initial conditions, we obtain\nfrom which we get the transfer function as follows:\nE\no\n(s)\nE\ni\n(s) =- 1\nR\n1\n \nC\n1\n \nR\n2\nC\n2\n \ns\n2\n+ CR\n2\n \nC\n2\n+ R\n1\n \nC\n2\n+ AR\n1\n/H20862R\n3\nBR\n2\n \nC\n2\nDs + AR\n1\n/H20862R\n3\nB\nE\no\n(s)/H20862E\ni\n(s)\n-C\n1\n \nC\n2\n \nR\n2\n \ns\n2\nE\no\n(s) +\na\n1\nR\n1\n+ 1\nR\n2\n+ 1\nR\n3\nb\nA-R\n2\n \nC\n2\nBsE\no\n(s) - 1\nR\n3\nE\no\n(s) =\nE\ni\n(s)\nR\n1\nC\n1\na\n-R\n2\n \nC\n2\nd\n2\ne\no\ndt\n2\nb\n+\na\n1\nR\n1\n+ 1\nR\n2\n+ 1\nR\n3\nb\nA-R\n2\n \nC\n2\nBde\no\ndt = e\ni\nR\n1\n+ e\no\nR\n3\ne\nA\n=- R\n2\n \nC\n2\nde\no\ndt\nC\n1\nde\nA\ndt +\na\n1\nR\n1\n+ 1\nR\n2\n+ 1\nR\n3\nb\ne\nA\n= e\ni\nR\n1\n+ e\no\nR\n3\ne\nA\nR\n2\n= C\n2\n-de\no\ndt\ne\ni\n- e\nA\nR\n1\n= e\nA\n- e\no\nR\n3\n+ C\n1\nde\nA\ndt + e\nA\nR\n2\ni\n4\n= e\nA\nR\n2\n,\n  \ni\n5\n= C\n2\n-de\no\ndt\ni\n1\n= e\ni\n- e\nA\nR\n1\n;\n  \ni\n2\n= e\nA\n- e\no\nR\n3\n,\n  \ni\n3\n= C\n1\nde\nA\ndt\nE\no\n(s)/H20862E\ni\n(s)\ni\n1\nR\n1\ni\n2\ni\n4\ni\n3\nA\nC\n1\ne\ni\ne\no\nR\n3\ni\n5\nC\n2\nBR\n2\n–\n+\nFigure 3–28\nOperational-\namplifier circuit.\nOpenmirrors.comExample Problems and Solutions 95\nA–3–9. Consider the servo system shown in Figure 3–29(a).The motor shown is a servomotor, a dc motor de-\nsigned specifically to be used in a control system.The operation of this system is as follows:A pair of\npotentiometers acts as an error-measuring device. They convert the input and output positions into\nproportional electric signals. The command input signal determines the angular position r of the\nwiper arm of the input potentiometer.The angular position r is the reference input to the system, and\nthe electric potential of the arm is proportional to the angular position of the arm. The output shaft\nposition determines the angular position c of the wiper arm of the output potentiometer.The differ-\nence between the input angular position r and the output angular position c is the error signal e,o r\nThe potential difference is the error voltage, where er is proportional to r and ec is pro-\nportional to c; that is, and where K0 is a proportionality constant. The error volt-\nage that appears at the potentiometer terminals is amplified by the amplifier whose gain constant is K1.\nThe output voltage of this amplifier is applied to the armature circuit of the dc motor.A fixed volt-\nage is applied to the field winding. If an error exists, the motor develops a torque to rotate the out-\nput load in such a way as to reduce the error to zero. For constant field current, the torque\ndeveloped by the motor is\nwhere K2 is the motor torque constant and ia is the armature current.\nWhen the armature is rotating, a voltage proportional to the product of the flux and angular\nvelocity is induced in the armature. For a constant flux, the induced voltage eb is directly propor-\ntional to the angular velocity or\nwhere eb is the back emf, K3 is the back emf constant of the motor, and u is the angular displace-\nment of the motor shaft.\neb = K3\ndu\ndt\ndu/H20862dt,\nT = K2 ia\nec = K0 c ,er = K0 r\ner - ec = ev\ne = r - c\n(a)\nReference input\nInput device\nInput potentiometer\nOutput potentiometer\nFeedback signal\ner ec\nr c\nc\nK1\nia T\nRa La\nError measuring device Amplifier Motor Gear\ntrain\nLoad\nu\nK1evev\n(b) (c)\nEv(s)E(s)R(s) C(s)U(s)K1K2\ns(Las + Ra) (Jos + bo) + K2K3sK0 n\nC(s)R(s) K\ns(Js + B)+ – + –\nFigure 3–29\n(a) Schematic diagram of servo system; (b) block diagram for the system; (c) simplified block diagram.96\nChapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems\nObtain the transfer function between the motor shaft angular displacement u and the error\nvoltage e\nv\n. Obtain also a block diagram for this system and a simplified block diagram when L\na\nis negligible.\nSolution. The speed of an armature-controlled dc servomotor is controlled by the armature volt-\nage e\na\n. (The armature voltage is the output of the amplifier.) The differential equation\nfor the armature circuit is\nor\n(3–46)\nThe equation for torque equilibrium is\n(3–47)\nwhere J\n0\nis the inertia of the combination of the motor, load, and gear train referred to the motor\nshaft and b\n0\nis the viscous-friction coefficient of the combination of the motor, load, and gear train\nreferred to the motor shaft.\nBy eliminating i\na\nfrom Equations (3–46) and (3–47), we obtain\n(3–48)\nWe assume that the gear ratio of the gear train is such that the output shaft rotates n times for each\nrevolution of the motor shaft. Thus,\n(3–49)\nThe relationship among E\nv\n(s), R(s), and C(s) is\n(3–50)\nThe block diagram of this system can be constructed from Equations (3–48), (3–49), and (3–50),\nas shown in Figure 3–29(b). The transfer function in the feedforward path of this system is\nWhen L\na\nis small, it can be neglected, and the transfer function G(s) in the feedforward path\nbecomes\n(3–51)\nThe term indicates that the back emf of the motor effectively increases the\nviscous friction of the system. The inertia J\n0\nand viscous friction coefficient areb\n0\n+ AK\n2\n \nK\n3\n/H20862R\na\nB\nCb\n0\n+ AK\n2\n \nK\n3\n/H20862R\na\nBDs\n = K\n0\n \nK\n1\n \nK\n2\n \nn/H20862R\na\nJ\n0\n \ns\n2\n+\na\nb\n0\n+ K\n2\n \nK\n3\nR\na\nb\ns\n G(s) = K\n0\n \nK\n1\n \nK\n2\n \nn\nsCR\na\nAJ\n0\n \ns + b\n0\nB+ K\n2\n \nK\n3\nD\nG(s) =\nC(s)\nQ\n \n(s)\nQ\n \n(s)\nE\nv\n(s)\nE\nv\n(s)\nE(s) = K\n0\n \nK\n1\n \nK\n2\n \nn\nsCAL\na\n \ns + R\na\nBAJ\n0\n \ns + b\n0\nB + K\n2\n \nK\n3\nD\nE\nv\n(s) = K\n0\nCR(s) - C(s)D = K\n0\n \nE(s)\nC(s) = nQ\n \n(s)\nQ\n \n(s)\nE\nv\n(s) = K\n1\n \nK\n2\nsAL\na\n \ns + R\na\nBAJ\n0\n \ns + b\n0\nB+ K\n2\n \nK\n3\n \ns\nJ\n0\nd\n2\nu\ndt\n2\n+ b\n0\ndu\ndt = T = K\n2\n \ni\na\nL\na\ndi\na\ndt + R\na\n \ni\na\n+ K\n3\ndu\ndt = K\n1\n \ne\nv\nL\na\ndi\na\ndt + R\na\n \ni\na\n+ e\nb\n= e\na\ne\na\n= K\n1\n \ne\nv\nOpenmirrors.comProblems 97\nreferred to the motor shaft. When J0 and are multiplied by 1/n2, the inertia and\nviscous-friction coefficient are expressed in terms of the output shaft. Introducing new parameters\ndefined by\nmoment of inertia referred to the output shaft\nviscous-friction coefficient referred to the output shaft\nthe transfer function G(s) given by Equation (3–51) can be simplified, yielding\nor\nwhere\nThe block diagram of the system shown in Figure 3–29(b) can thus be simplified as shown in\nFigure 3–29(c).\nKm = K\nB ,  Tm = J\nB = Ra J0\nRa b0 + K2 K3\n G(s) = Km\nsATm s + 1B\n G(s) = K\nJs2 + Bs\n K = K0 K1 K2/H20862nRa\n B = Cb0 + AK2 K3/H20862RaBD/H20862n2 =\n J = J0/H20862n2 =\nb0 + AK2 K3/H20862RaB\nPROBLEMS\nB–3–1. Obtain the equivalent viscous-friction coefficient\nbeq of the system shown in Figure 3–30.\nB–3–2. Obtain mathematical models of the mechanical sys-\ntems shown in Figures 3–31(a) and (b).\nx\nb3\ny\nb2\nb1 m\nk\n(a)\nNo friction\nx (Output)\nu(t)\n(Input force)\nm\n(b)\nNo friction\nx (Output)\nu(t)\n(Input force)\nk1 k2\nFigure 3–31\nMechanical systems.\nFigure 3–30\nDamper system.98\nChapter 3 / Mathematical Modeling of Mechanical Systems and Electrical Systems\ny\n1\ny\n2\nu\n1\nm\n2\nb\n1\nu\n2\nk\n2\nk\n1\nm\n1\nFigure 3–32 Mechanical system.\nB–3–3. Obtain a state-space representation of the mechan-\nical system shown in Figure 3–32, where u\n1\nand u\n2\nare the\ninputs and y\n1\nand y\n2\nare the outputs.\nB–3–4. Consider the spring-loaded pendulum system shown\nin Figure 3–33. Assume that the spring force acting on the\npendulum is zero when the pendulum is vertical, or u=0.\nAssume also that the friction involved is negligible and the\nangle of oscillation u is small. Obtain a mathematical model\nof the system.\nkk\na\n/H5129\nmg\nu\nFigure 3–33 Spring-loaded pendulum system.\nB–3–5. Referring to Examples 3–5 and 3–6, consider the\ninverted-pendulum system shown in Figure 3–34. Assume\nthat the mass of the inverted pendulum is m and is evenly\ndistributed along the length of the rod. (The center of\ngravity of the pendulum is located at the center of the rod.)\nAssuming that u is small, derive mathematical models for\nthe system in the forms of differential equations, transfer\nfunctions, and state-space equations.\nM\ny\nx\nu\nG\nO\n/H5129\n/H5129\nx/H11032\ny/H11032\nx u\nFigure 3–34 Inverted-pendulum system.\nB–3–6. Obtain the transfer functions X\n1\n(s)/U(s) and\nX\n2\n(s)/U(s) of the mechanical system shown in Figure 3–35.\nm\n1\nm\n2\nk\n3\nk\n1\nx\n1\nx\n2\nu\nb\n1\nk\n2\nb\n2\nFigure 3–35 Mechanical system.\nB–3–7. Obtain the transfer function E\no\n(s)/E\ni\n(s) of the elec-\ntrical circuit shown in Figure 3–36.\nR\n1\ne\no\nR\n2\nCLe\ni\ni\n1\ni\n2\nFigure 3–36 Electrical circuit.\nB–3–8. Consider the electrical circuit shown in Figure 3–37.\nObtain the transfer function E\no\n(s)/E\ni\n(s) by use of the block\ndiagram approach.\nR\n1\nC\n1\ne\no\nR\n2\nC\n2\ne\ni\ni\n1\ni\n2\nFigure 3–37 Electrical circuit.\nOpenmirrors.comProblems 99\nB–3–9. Derive the transfer function of the electrical circuit\nshown in Figure 3–38. Draw a schematic diagram of an\nanalogous mechanical system.\nR1 C1\nR2\nC2\neoei\nFigure 3–38 Electrical circuit.\n+\n–\nC AR1\nR2\nei eo\nFigure 3–39 Operational-amplifier circuit.\nB–3–10. Obtain the transfer function of the \nop-amp circuit shown in Figure 3–39.\nEo(s)/H20862Ei(s)\n+\n–\nC A\nB\nR1\nR2\nR3\nei eo\nFigure 3–40 Operational-amplifier circuit.\nB–3–11. Obtain the transfer function of the \nop-amp circuit shown in Figure 3–40.\nEo(s)/H20862Ei(s)\nB–3–12. Using the impedance approach, obtain the trans-\nfer function of the op-amp circuit shown in\nFigure 3–41.\nEo(s)/H20862Ei(s)\n+\n–\nC\nA\nB\nR1\nR1\nR2ei\neo\nFigure 3–41 Operational-amplifier circuit.\nB–3–13. Consider the system shown in Figure 3–42. An\narmature-controlled dc servomotor drives a load consisting\nof the moment of inertia JL . The torque developed by the\nmotor is T. The moment of inertia of the motor rotor is Jm .\nThe angular displacements of the motor rotor and the load\nelement are um and u, respectively. The gear ratio is\nObtain the transfer function Q (s)/H20862Ei(s).n = u/H20862um .\nL R\nT\nn\nei Jm\nJL\num\nu\nFigure 3–42 Armature-controlled dc servomotor system.4\n100\nMathematical Modeling \nof Fluid Systems \nand Thermal Systems\n4–1 INTRODUCTION\nThis chapter treats mathematical modeling of fluid systems and thermal systems.As the\nmost versatile medium for transmitting signals and power, fluids—liquids and gases—\nhave wide usage in industry. Liquids and gases can be distinguished basically by their rel-\native incompressibilities and the fact that a liquid may have a free surface, whereas a gas\nexpands to fill its vessel. In the engineering field the term pneumatic describes fluid\nsystems that use air or gases and hydraulic applies to those using oil.\nWe first discuss liquid-level systems that are frequently used in process control. Here\nwe introduce the concepts of resistance and capacitance to describe the dynamics of such\nsystems. Then we treat pneumatic systems. Such systems are extensively used in the au-\ntomation of production machinery and in the field of automatic controllers. For instance,\npneumatic circuits that convert the energy of compressed air into mechanical energy enjoy\nwide usage.Also, various types of pneumatic controllers are widely used in industry. Next,\nwe present hydraulic servo systems.These are widely used in machine tool systems, aircraft\ncontrol systems, etc. We discuss basic aspects of hydraulic servo systems and hydraulic\ncontrollers. Both pneumatic systems and hydraulic systems can be modeled easily by using\nthe concepts of resistance and capacitance. Finally, we treat simple thermal systems. Such\nsystems involve heat transfer from one substance to another. Mathematical models of\nsuch systems can be obtained by using thermal resistance and thermal capacitance.\nOutline of the Chapter. Section 4–1 has presented introductory material for the\nchapter. Section 4–2 discusses liquid-level systems. Section 4–3 treats pneumatic\nsystems—in particular, the basic principles of pneumatic controllers. Section 4–4 first\ndiscusses hydraulic servo systems and then presents hydraulic controllers. Finally,\nSection 4–5 analyzes thermal systems and obtains mathematical models of such systems.\nOpenmirrors.comSection 4–2 / Liquid-Level Systems 101\n4–2 LIQUID-LEVEL SYSTEMS\nIn analyzing systems involving fluid flow, we find it necessary to divide flow regimes\ninto laminar flow and turbulent flow, according to the magnitude of the Reynolds num-\nber. If the Reynolds number is greater than about 3000 to 4000, then the flow is turbu-\nlent. The flow is laminar if the Reynolds number is less than about 2000. In the laminar\ncase, fluid flow occurs in streamlines with no turbulence. Systems involving laminar flow\nmay be represented by linear differential equations.\nIndustrial processes often involve flow of liquids through connecting pipes and tanks.\nThe flow in such processes is often turbulent and not laminar. Systems involving turbu-\nlent flow often have to be represented by nonlinear differential equations. If the region\nof operation is limited, however, such nonlinear differential equations can be linearized.\nWe shall discuss such linearized mathematical models of liquid-level systems in this sec-\ntion. Note that the introduction of concepts of resistance and capacitance for such liquid-\nlevel systems enables us to describe their dynamic characteristics in simple forms.\nResistance and Capacitance of Liquid-Level Systems. Consider the flow\nthrough a short pipe connecting two tanks. The resistance R for liquid flow in such a\npipe or restriction is defined as the change in the level difference (the difference of the\nliquid levels of the two tanks) necessary to cause a unit change in flow rate; that is,\nSince the relationship between the flow rate and level difference differs for the laminar\nflow and turbulent flow, we shall consider both cases in the following.\nConsider the liquid-level system shown in Figure 4–1(a). In this system the liquid\nspouts through the load valve in the side of the tank. If the flow through this restriction\nis laminar, the relationship between the steady-state flow rate and steady-state head at\nthe level of the restriction is given by\nQ=KH\nR = change in level difference, m\nchange in flow rate, m3/H20862sec\nControl valve\nQ + qo\nQ + qi\nH + h\nLoad valve\nCapacitance\nC\nResistance\nR\n(b)(a)\nHead\nH\n–H\n0\nh\nP\nq\nQ Flow rate\ntan–1Rt\nSlope =        =2H\nQ\nh\nq\nFigure 4–1\n(a) Liquid-level\nsystem; (b) head-\nversus-flow-rate\ncurve.102\nChapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems\nwhere steady-state liquid flow rate, m\n3\n/H20862sec\ncoefficient, m\n2\n/H20862sec\nsteady-state head, m\nFor laminar flow, the resistance R\nl\nis obtained as\nThe laminar-flow resistance is constant and is analogous to the electrical resistance.\nIf the flow through the restriction is turbulent, the steady-state flow rate is given by\n(4–1)\nwhere steady-state liquid flow rate, m\n3\n/H20862sec\ncoefficient, m\n2.5\n/H20862sec\nsteady-state head, m\nThe resistance R\nt\nfor turbulent flow is obtained from\nSince from Equation (4–1) we obtain\nwe have\nThus,\nThe value of the turbulent-flow resistance R\nt\ndepends on the flow rate and the head.The\nvalue of R\nt\n, however, may be considered constant if the changes in head and flow rate\nare small.\nBy use of the turbulent-flow resistance, the relationship between Q and H can be\ngiven by\nSuch linearization is valid, provided that changes in the head and flow rate from their\nrespective steady-state values are small.\nIn many practical cases, the value of the coefficient K in Equation (4–1), which depends\non the flow coefficient and the area of restriction, is not known. Then the resistance may\nbe determined by plotting the head-versus-flow-rate curve based on experimental data\nand measuring the slope of the curve at the operating condition.An example of such a plot\nis shown in Figure 4–1(b). In the figure, point P is the steady-state operating point.The tan-\ngent line to the curve at point P intersects the ordinate at point Thus, the slope\nof this tangent line is Since the resistance R\nt\nat the operating point P is given by\nthe resistance R\nt\nis the slope of the curve at the operating point.2H– /H20862Q–,\n2H– /H20862Q–.\nA0, -H– B.\nQ = 2H\nR\nt\nR\nt\n= 2H\nQ\ndH\ndQ = 21H\nK = 21H\n1H\nQ = 2H\nQ\ndQ = K\n21H\n dH\nR\nt\n= dH\ndQ\nH =\nK =\nQ =\nQ = K1H\nR\nl\n= dH\ndQ = H\nQ\n H =\n K =\n Q =\nOpenmirrors.comSection 4–2 / Liquid-Level Systems 103\nConsider the operating condition in the neighborhood of point P. Define a small\ndeviation of the head from the steady-state value as h and the corresponding small\nchange of the flow rate as q. Then the slope of the curve at point P can be given by\nThe linear approximation is based on the fact that the actual curve does not differ much\nfrom its tangent line if the operating condition does not vary too much.\nThe capacitance C of a tank is defined to be the change in quantity of stored liquid\nnecessary to cause a unit change in the potential (head). (The potential is the quantity\nthat indicates the energy level of the system.)\nIt should be noted that the capacity (m 3) and the capacitance (m 2) are different. The\ncapacitance of the tank is equal to its cross-sectional area. If this is constant, the capac-\nitance is constant for any head.\nLiquid-Level Systems. Consider the system shown in Figure 4–1(a). The vari-\nables are defined as follows:\nsteady-state flow rate (before any change has occurred), m3/H20862sec\nqi= small deviation of inflow rate from its steady-state value, m3/H20862sec\nqo= small deviation of outflow rate from its steady-state value, m3/H20862sec\nsteady-state head (before any change has occurred), m\nh= small deviation of head from its steady-state value, m\nAs stated previously, a system can be considered linear if the flow is laminar. Even if\nthe flow is turbulent, the system can be linearized if changes in the variables are kept\nsmall. Based on the assumption that the system is either linear or linearized, the differential\nequation of this system can be obtained as follows: Since the inflow minus outflow during\nthe small time interval dt is equal to the additional amount stored in the tank, we see that\nFrom the definition of resistance, the relationship between qo and h is given by\nThe differential equation for this system for a constant value of R becomes\n(4–2)\nNote that RC is the time constant of the system. Taking the Laplace transforms of both\nsides of Equation (4–2), assuming the zero initial condition, we obtain\nwhere\nand Qi(s) = lCqi DH(s) = l[h]\n(RCs + 1)H(s) = RQi(s)\nRC dh\ndt + h = Rqi\nqo = h\nR\nC dh = Aqi - qoBdt\nH– =\nQ– =\nC = change in liquid stored, m3\nchange in head, m\nSlope of curve at point P = h\nq = 2H–\nQ– = Rt104\nChapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems\nQ + q\nTank 1 Tank 2\nH\n1\n+ h\n1\nR\n1\nH\n2\n+ h\n2\nR\n2\nQ + q\n2\nC\n1\nC\n2\nQ + q\n1\nQ :\nH\n1\n:\nH\n2\n:\nSteady-state flow rate\nSteady-state liquid level of tank 1\nSteady-state liquid level of tank 2\nFigure 4–2\nLiquid-level system\nwith interaction.\nIf q\ni\nis considered the input and h the output, the transfer function of the system is\nIf, however, q\no\nis taken as the output, the input being the same, then the transfer\nfunction is\nwhere we have used the relationship\nLiquid-Level Systems with Interaction. Consider the system shown in Figure\n4–2. In this system, the two tanks interact.Thus the transfer function of the system is not\nthe product of two first-order transfer functions.\nIn the following, we shall assume only small variations of the variables from the\nsteady-state values. Using the symbols as defined in Figure 4–2, we can obtain the\nfollowing equations for this system:\n(4–3)\n(4–4)\n(4–5)\n(4–6)\nIf q is considered the input and q\n2\nthe output, the transfer function of the system is\n(4–7)Q\n2\n(s)\nQ(s) = 1\nR\n1\n \nC\n1\n \nR\n2\n \nC\n2\n \ns\n2\n+ AR\n1\n \nC\n1\n+ R\n2\n \nC\n2\n+ R\n2\n \nC\n1\nBs + 1\nC\n2\ndh\n2\ndt = q\n1\n- q\n2\nh\n2\nR\n2\n= q\n2\nC\n1\ndh\n1\ndt = q - q\n1\nh\n1\n- h\n2\nR\n1\n= q\n1\nQ\no\n(s) = 1\nR H(s)\nQ\no\n(s)\nQ\ni\n(s) = 1\nRCs + 1\nH(s)\nQ\ni\n(s) = R\nRCs + 1\nOpenmirrors.comSection 4–2 / Liquid-Level Systems 105\nIt is instructive to obtain Equation (4–7), the transfer function of the interacted\nsystem, by block diagram reduction. From Equations (4–3) through (4–6), we obtain the\nelements of the block diagram, as shown in Figure 4–3(a). By connecting signals prop-\nerly, we can construct a block diagram, as shown in Figure 4–3(b). This block diagram\ncan be simplified, as shown in Figure 4–3(c). Further simplifications result in \nFigures 4–3(d) and (e). Figure 4–3(e) is equivalent to Equation (4–7).\n(c)\n(d)\n(e)\nG3\n(b)\n(a)\nQ(s) H1(s)\nH2(s)\nQ1(s) Q2(s)\nQ(s) Q1(s) Q2(s)\nQ(s) Q2(s)\nQ(s) Q2(s)\n1\nR1\n1\nR1\n1\nR1\n1\nR2\n1\nR2\n1\nR2\n1\nC1s\n1\nC1s\n1\nC2s\nG3\n1\nC2s\nG3\n1\nC2s\nR2C1s\nR2C1s\n1\nR1C1 s + 1\n1\nR2C2 s + 1\n1\nR1C1R2C2s2 + (R1C1 + R2C2 + R2C1)s + 1\nH1(s) Q1(s)\nH2(s)\n1\nC1s\nH2(s) Q2(s)\nQ(s) H1(s)\nQ1(s)\nQ1(s) H2(s)\nQ2(s)\n+ –\n+ – + –\n+ –\n+ – + –\n+ –\n+ –\n+ –+ –\nFigure 4–3\n(a) Elements of the\nblock diagram of the\nsystem shown in\nFigure 4–2; (b) block\ndiagram of the\nsystem; (c)–(e)\nsuccessive reductions\nof the block diagram.106\nChapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems\nNotice the similarity and difference between the transfer function given by \nEquation (4–7) and that given by Equation (3–33). The term R\n2\nC\n1\ns that appears in the\ndenominator of Equation (4–7) exemplifies the interaction between the two tanks.\nSimilarly, the term R\n1\nC\n2\ns in the denominator of Equation (3–33) represents the inter-\naction between the two RC circuits shown in Figure 3–8.\n4–3 PNEUMATIC SYSTEMS\nIn industrial applications pneumatic systems and hydraulic systems are frequently\ncompared.Therefore, before we discuss pneumatic systems in detail, we shall give a brief\ncomparison of these two kinds of systems.\nComparison Between Pneumatic Systems and Hydraulic Systems. The fluid\ngenerally found in pneumatic systems is air; in hydraulic systems it is oil. And it is pri-\nmarily the different properties of the fluids involved that characterize the differences\nbetween the two systems. These differences can be listed as follows:\n1. Air and gases are compressible, whereas oil is incompressible (except at high pressure).\n2. Air lacks lubricating property and always contains water vapor. Oil functions as a\nhydraulic fluid as well as a lubricator.\n3. The normal operating pressure of pneumatic systems is very much lower than that\nof hydraulic systems.\n4. Output powers of pneumatic systems are considerably less than those of hydraulic\nsystems.\n5. Accuracy of pneumatic actuators is poor at low velocities, whereas accuracy of\nhydraulic actuators may be made satisfactory at all velocities.\n6. In pneumatic systems, external leakage is permissible to a certain extent, but in-\nternal leakage must be avoided because the effective pressure difference is rather\nsmall. In hydraulic systems internal leakage is permissible to a certain extent, but\nexternal leakage must be avoided.\n7. No return pipes are required in pneumatic systems when air is used, whereas they\nare always needed in hydraulic systems.\n8. Normal operating temperature for pneumatic systems is 5° to 60°C (41° to 140°F).\nThe pneumatic system, however, can be operated in the 0° to 200°C (32° to 392°F)\nrange. Pneumatic systems are insensitive to temperature changes, in contrast to\nhydraulic systems, in which fluid friction due to viscosity depends greatly on tem-\nperature. Normal operating temperature for hydraulic systems is 20° to 70°C (68°\nto 158°F).\n9. Pneumatic systems are fire- and explosion-proof, whereas hydraulic systems are\nnot, unless nonflammable liquid is used.\nIn what follows we begin with a mathematical modeling of pneumatic systems.Then\nwe shall present pneumatic proportional controllers.\nWe shall first give detailed discussions of the principle by which proportional\ncontrollers operate.Then we shall treat methods for obtaining derivative and integral\ncontrol actions. Throughout the discussions, we shall place emphasis on the\nOpenmirrors.comSection 4–3 / Pneumatic Systems\n107\nResistance\nR\nCapacitance\nC\n(a) (b)\nP + p\ni\nP + po\n0 q\nq dq\nDP\nSlope = R\nd (DP)\nFigure 4–4\n(a) Schematic\ndiagram of a\npressure system;\n(b) pressure-\ndifference-versus-\nflow-rate curve.\nfundamental principles, rather than on the details of the operation of the actual\nmechanisms.\nPneumatic Systems. The past decades have seen a great development in low-\npressure pneumatic controllers for industrial control systems, and today they are used\nextensively in industrial processes. Reasons for their broad appeal include an explosion-\nproof character, simplicity, and ease of maintenance.\nResistance and Capacitance of Pressure Systems. Many industrial processes\nand pneumatic controllers involve the flow of a gas or air through connected pipelines\nand pressure vessels.\nConsider the pressure system shown in Figure 4–4(a). The gas flow through the\nrestriction is a function of the gas pressure difference p\ni\n-p\no\n. Such a pressure system\nmay be characterized in terms of a resistance and a capacitance.\nThe gas flow resistance R may be defined as follows:\nor\n(4–8)\nwhere is a small change in the gas pressure difference and dq is a small change\nin the gas flow rate. Computation of the value of the gas flow resistance R may be quite\ntime consuming. Experimentally, however, it can be easily determined from a plot of\nthe pressure difference versus flow rate by calculating the slope of the curve at a given\noperating condition, as shown in Figure 4–4(b).\nThe capacitance of the pressure vessel may be defined by\nor\n(4–9)C = dm\ndp = V dr\ndp\nC = change in gas stored, lb\nchange in gas pressure, lb\nf\n/H20862ft\n2\nd(¢P)\nR = d(¢P)\ndq\nR = change in gas pressure difference, lb\nf\n/H20862ft\n2\nchange in gas flow rate, lb/H20862sec\nOpenmirrors.com108\nChapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems\nwhere capacitance, lb-ft\n2\n/H20862lb\nf\nmass of gas in vessel, lb\ngas pressure, lb\nf\n/H20862ft\n2\nvolume of vessel, ft\n3\ndensity, lb/H20862ft\n3\nThe capacitance of the pressure system depends on the type of expansion process\ninvolved. The capacitance can be calculated by use of the ideal gas law. If the gas ex-\npansion process is polytropic and the change of state of the gas is between isothermal\nand adiabatic, then\n(4–10)\nwhere n=polytropic exponent.\nFor ideal gases,\nor\nwhere absolute pressure, lb\nf\n/H20862ft\n2\nvolume occupied by 1 mole of a gas, ft\n3\n/H20862lb-mole\nuniversal gas constant, ft-lb\nf\n/H20862lb-mole °R\nabsolute temperature, °R\nspecific volume of gas, ft\n3\n/H20862lb\nmolecular weight of gas per mole, lb/H20862lb-mole\nThus\n(4–11)\nwhere R\ngas\n=gas constant, ft-lb\nf\n/H20862lb °R.\nThe polytropic exponent n is unity for isothermal expansion. For adiabatic expansion,\nn is equal to the ratio of specific heats c\np\n/H20862c\nv\n, where c\np\nis the specific heat at constant pres-\nsure and c\nv\nis the specific heat at constant volume. In many practical cases, the value of\nn is approximately constant, and thus the capacitance may be considered constant.\nThe value of dr/H20862dp is obtained from Equations (4–10) and (4–11). From\nEquation (4–10) we have\nor\nSubstituting Equation (4–11) into this last equation, we get\ndr\ndp = 1\nnR\ngas\n \nT\ndr\ndp = 1\nKnr\nn - 1\n= r\nn\npnr\nn - 1\n= r\npn\ndp = Knr\nn - 1\ndr\npv = p\nr = R–\nM T = R\ngas\n \nT\nM =\nv =\nT =\nR– =\nv\n–\n=\np =\npv = R–\nM Tpv\n–\n= R–T\np\na\nV\nm\nb\nn\n= p\nr\nn\n= constant = K\nr =\nV =\np =\nm =\nC =\nOpenmirrors.comSection 4–3 / Pneumatic Systems 109\nThe capacitance C is then obtained as\n(4–12)\nThe capacitance of a given vessel is constant if the temperature stays constant. (In many\npractical cases, the polytropic exponent n is approximately 1.0 ~ 1.2 for gases in unin-\nsulated metal vessels.)\nPressure Systems. Consider the system shown in Figure 4–4(a). If we assume\nonly small deviations in the variables from their respective steady-state values, then this\nsystem may be considered linear.\nLet us define\ngas pressure in the vessel at steady state (before changes in pressure have\noccurred), lbf/H20862ft2\npi= small change in inflow gas pressure, lbf/H20862ft2\npo= small change in gas pressure in the vessel, lbf/H20862ft2\nV= volume of the vessel, ft3\nm= mass of gas in the vessel, lb\nq= gas flow rate, lb/H20862sec\nr= density of gas, lb/ft3\nFor small values of pi and po, the resistance R given by Equation (4–8) becomes constant\nand may be written as\nThe capacitance C is given by Equation (4–9), or\nSince the pressure change dpo times the capacitance C is equal to the gas added to the\nvessel during dt seconds, we obtain\nor\nwhich can be written as\nIf pi and po are considered the input and output, respectively, then the transfer function\nof the system is\nwhere RC has the dimension of time and is the time constant of the system.\nPo(s)\nPi(s) = 1\nRCs + 1\nRC dpo\ndt + po = pi\nC dpo\ndt = pi - po\nR\nC dpo = q dt\nC = dm\ndp\nR = pi - po\nq\nP– =\nC = V\nnRgas T110\nChapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems\nAir supply\nOrifice\nInput\n0\nNozzle\n(a) (b)\nFlapper\nTo control\nvalve\nPs\nPb\nPs\nPb\nPa\nX\nX\nFigure 4–5\n(a) Schematic\ndiagram of a\npneumatic nozzle–\nflapper amplifier;\n(b) characteristic\ncurve relating nozzle\nback pressure and\nnozzle–flapper\ndistance.\nPneumatic Nozzle–Flapper Amplifiers. A schematic diagram of a pneumatic\nnozzle–flapper amplifier is shown in Figure 4–5(a). The power source for this amplifier\nis a supply of air at constant pressure. The nozzle–flapper amplifier converts small\nchanges in the position of the flapper into large changes in the back pressure in the noz-\nzle. Thus a large power output can be controlled by the very little power that is needed\nto position the flapper.\nIn Figure 4–5(a), pressurized air is fed through the orifice, and the air is ejected from\nthe nozzle toward the flapper. Generally, the supply pressure for such a controller\nis 20 psig (1.4 kg\nf\n/H20862cm\n2\ngage). The diameter of the orifice is on the order of 0.01 in.\n(0.25 mm) and that of the nozzle is on the order of 0.016 in. (0.4 mm).To ensure prop-\ner functioning of the amplifier, the nozzle diameter must be larger than the orifice\ndiameter.\nIn operating this system, the flapper is positioned against the nozzle opening. The\nnozzle back pressure is controlled by the nozzle–flapper distance X. As the flapper\napproaches the nozzle, the opposition to the flow of air through the nozzle increases, with\nthe result that the nozzle back pressure increases. If the nozzle is completely closed\nby the flapper, the nozzle back pressure becomes equal to the supply pressure If\nthe flapper is moved away from the nozzle, so that the nozzle–flapper distance is wide\n(on the order of 0.01 in.), then there is practically no restriction to flow, and the nozzle\nback pressure takes on a minimum value that depends on the nozzle–flapper device.\n(The lowest possible pressure will be the ambient pressure )\nNote that, because the air jet puts a force against the flapper, it is necessary to make\nthe nozzle diameter as small as possible.\nA typical curve relating the nozzle back pressure to the nozzle–flapper distance\nX is shown in Figure 4–5(b). The steep and almost linear part of the curve is utilized in\nthe actual operation of the nozzle–flapper amplifier. Because the range of flapper dis-\nplacements is restricted to a small value, the change in output pressure is also small,\nunless the curve is very steep.\nThe nozzle–flapper amplifier converts displacement into a pressure signal. Since\nindustrial process control systems require large output power to operate large pneu-\nmatic actuating valves, the power amplification of the nozzle–flapper amplifier is usually\ninsufficient. Consequently, a pneumatic relay is often needed as a power amplifier in\nconnection with the nozzle–flapper amplifier.\nP\nb\nP\na\n \n.\nP\nb\nP\ns\n \n.P\nb\nP\nb\nP\nb\nP\ns\nOpenmirrors.comSection 4–3 / Pneumatic Systems 111\nTo atmosphere\nPa\nNozzle\nback pressure Pb\nAir supply\nPs\nPc\nTo pneumatic\nvalve\n(a) (b)\nTo atmosphere\nNozzle\nback pressure Pb\nAir supply\nPsPc\nTo pneumatic\nvalve\nPneumatic Relays. In practice, in a pneumatic controller, a nozzle–flapper\namplifier acts as the first-stage amplifier and a pneumatic relay as the second-\nstage amplifier. The pneumatic relay is capable of handling a large quantity of \nairflow.\nA schematic diagram of a pneumatic relay is shown in Figure 4–6(a).As the nozzle\nback pressure increases, the diaphragm valve moves downward. The opening to\nthe atmosphere decreases and the opening to the pneumatic valve increases, thereby\nincreasing the control pressure When the diaphragm valve closes the opening to\nthe atmosphere, the control pressure becomes equal to the supply pressure \nWhen the nozzle back pressure decreases and the diaphragm valve moves upward\nand shuts off the air supply, the control pressure drops to the ambient pressure \nThe control pressure can thus be made to vary from 0 psig to full supply pressure,\nusually 20 psig.\nThe total movement of the diaphragm valve is very small. In all positions of the\nvalve, except at the position to shut off the air supply, air continues to bleed into the at-\nmosphere, even after the equilibrium condition is attained between the nozzle back\npressure and the control pressure. Thus the relay shown in Figure 4–6(a) is called a\nbleed-type relay.\nThere is another type of relay, the nonbleed type. In this one the air bleed stops\nwhen the equilibrium condition is obtained and, therefore, there is no loss of pres-\nsurized air at steady-state operation. Note, however, that the nonbleed-type relay\nmust have an atmospheric relief to release the control pressure from the pneu-\nmatic actuating valve.A schematic diagram of a nonbleed-type relay is shown in Fig-\nure 4–6(b).\nIn either type of relay, the air supply is controlled by a valve, which is in turn\ncontrolled by the nozzle back pressure.Thus, the nozzle back pressure is converted into\nthe control pressure with power amplification.\nSince the control pressure changes almost instantaneously with changes in the\nnozzle back pressure the time constant of the pneumatic relay is negligible\ncompared with the other larger time constants of the pneumatic controller and\nthe plant.\nPb ,\nPc\nPc\nPc\nPa .Pc\nPb\nPs .Pc\nPc .\nPb\nFigure 4–6\n(a) Schematic diagram of a bleed-type relay; (b) schematic diagram of a nonbleed-type relay.112\nChapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems\nTo atmosphere\nNozzle\nback pressure Pb\nAir supply\nPs\nPc\nTo pneumatic\nvalve\nFigure 4–7\nReverse-acting relay.\nIt is noted that some pneumatic relays are reverse acting. For example, the relay\nshown in Figure 4–7 is a reverse-acting relay. Here, as the nozzle back pressure \nincreases, the ball valve is forced toward the lower seat, thereby decreasing the control\npressure Thus, this relay is a reverse-acting relay.\nPneumatic Proportional Controllers (Force-Distance Type).Two types of pneu-\nmatic controllers, one called the force-distance type and the other the force-balance type,\nare used extensively in industry. Regardless of how differently industrial pneumatic con-\ntrollers may appear, careful study will show the close similarity in the functions of the\npneumatic circuit. Here we shall consider the force-distance type of pneumatic controllers.\nFigure 4–8(a) shows a schematic diagram of such a proportional controller.The nozzle–\nflapper amplifier constitutes the first-stage amplifier, and the nozzle back pressure is\ncontrolled by the nozzle–flapper distance.The relay-type amplifier constitutes the second-\nstage amplifier.The nozzle back pressure determines the position of the diaphragm valve\nfor the second-stage amplifier, which is capable of handling a large quantity of airflow.\nIn most pneumatic controllers, some type of pneumatic feedback is employed. Feed-\nback of the pneumatic output reduces the amount of actual movement of the flapper.\nInstead of mounting the flapper on a fixed point, as shown in Figure 4–8(b), it is often\npivoted on the feedback bellows, as shown in Figure 4–8(c).The amount of feedback can\nbe regulated by introducing a variable linkage between the feedback bellows and the\nflapper connecting point. The flapper then becomes a floating link. It can be moved by\nboth the error signal and the feedback signal.\nThe operation of the controller shown in Figure 4–8(a) is as follows. The input sig-\nnal to the two-stage pneumatic amplifier is the actuating error signal. Increasing the\nactuating error signal moves the flapper to the left. This move will, in turn, increase the\nnozzle back pressure, and the diaphragm valve moves downward. This results in an in-\ncrease of the control pressure. This increase will cause bellows F to expand and move\nthe flapper to the right, thus opening the nozzle. Because of this feedback, the nozzle–\nflapper displacement is very small, but the change in the control pressure can be large.\nIt should be noted that proper operation of the controller requires that the feed-\nback bellows move the flapper less than that movement caused by the error signal alone.\n(If these two movements were equal, no control action would result.)\nEquations for this controller can be derived as follows. When the actuating error is\nzero, or e=0, an equilibrium state exists with the nozzle–flapper distance equal to theX– ,\nP\nc\n \n.\nP\nb\nOpenmirrors.comSection 4–3 / Pneumatic Systems 113\n+ –\nOrifice\nActuating error signal\nFlapper\nNozzle\nPneumatic relay\n(a)\n(b) (c)\nPs\ne\na\nb\nF\nPb + pb\nX + x\nZ + z Y + y\nPc + pc\nError signal Error signal\nFeedback\nsignal\nE(s) X(s) Pc(s)\nY(s)\n(e)\nb\na + b\na\na + b\nA\nks\nE(s)\n(f)\nPc(s)\nKpK\nb\na + b\ne\nee\nyy\nx\naa\nbb a\na + b\ny\n–=\n(d)\ndisplacement of bellows equal to the displacement of the diaphragm equal to the\nnozzle back pressure equal to and the control pressure equal to When an actuating\nerror exists, the nozzle–flapper distance, the displacement of the bellows, the displacement\nof the diaphragm, the nozzle back pressure, and the control pressure deviate from their re-\nspective equilibrium values. Let these deviations be x, y, z, pb, and pc, respectively. (The pos-\nitive direction for each displacement variable is indicated by an arrowhead in the diagram.)\nP–\nc .P–\nb ,\nZ–,Y–,\nFigure 4–8\n(a) Schematic diagram of a force-distance type of pneumatic proportional controller;\n(b) flapper mounted on a fixed point; (c) flapper mounted on a feedback bellows;\n(d) displacement x as a result of addition of two small displacements;\n(e) block diagram for the controller; (f) simplified block diagram for the controller.114\nChapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems\nAssuming that the relationship between the variation in the nozzle back pressure and\nthe variation in the nozzle–flapper distance is linear, we have\n(4–13)\nwhere is a positive constant. For the diaphragm valve,\n(4–14)\nwhere K\n2\nis a positive constant. The position of the diaphragm valve determines the\ncontrol pressure. If the diaphragm valve is such that the relationship between and z\nis linear, then\n(4–15)\nwhere K\n3\nis a positive constant. From Equations (4–13), (4–14), and (4–15), we obtain\n(4–16)\nwhere K=K\n1\nK\n3\n/K\n2\nis a positive constant. For the flapper, since there are two small\nmovements (e and y) in opposite directions, we can consider such movements separately\nand add up the results of two movements into one displacement x. See Figure 4–8(d).\nThus, for the flapper movement, we have\n(4–17)\nThe bellows acts like a spring, and the following equation holds true:\n(4–18)\nwhere A is the effective area of the bellows and k\ns\nis the equivalent spring constant—\nthat is, the stiffness due to the action of the corrugated side of the bellows.\nAssuming that all variations in the variables are within a linear range, we can obtain\na block diagram for this system from Equations (4–16), (4–17), and (4–18) as shown in\nFigure 4–8(e). From Figure 4–8(e), it can be clearly seen that the pneumatic controller\nshown in Figure 4–8(a) itself is a feedback system.The transfer function between and\ne is given by\n(4–19)\nA simplified block diagram is shown in Figure 4–8(f). Since and e are proportional,\nthe pneumatic controller shown in Figure 4–8(a) is a pneumatic proportional controller.\nAs seen from Equation (4–19), the gain of the pneumatic proportional controller can be\nwidely varied by adjusting the flapper connecting linkage. [The flapper connecting link-\nage is not shown in Figure 4–8(a).] In most commercial proportional controllers an ad-\njusting knob or other mechanism is provided for varying the gain by adjusting this linkage.\nAs noted earlier, the actuating error signal moved the flapper in one direction, and\nthe feedback bellows moved the flapper in the opposite direction, but to a smaller degree.\np\nc\nP\nc\n(s)\nE(s) =\nb\na + b K\n1 + K a\na + b\nA\nk\ns\n= K\np\np\nc\nAp\nc\n= k\ns\n \ny\nx = b\na + b e - a\na + b y\np\nc\n= K\n3\nK\n2\np\nb\n= K\n1\n \nK\n3\nK\n2\nx = Kx\np\nc\n= K\n3\n \nz\np\nc\np\nb\n= K\n2\n \nz\nK\n1\np\nb\n= K\n1\n \nx\nOpenmirrors.comSection 4–3 / Pneumatic Systems 115\n(a) (b)\n00 X\nX\nPs\nPs\nPb\nX\nPs\nPb\nPa\nPc\nPa\nPc\nThe effect of the feedback bellows is thus to reduce the sensitivity of the controller. The\nprinciple of feedback is commonly used to obtain wide proportional-band controllers.\nPneumatic controllers that do not have feedback mechanisms [which means that\none end of the flapper is fixed, as shown in Figure 4–9(a)] have high sensitivity and are\ncalledpneumatic two-position controllersor pneumatic on–off controllers. In such a con-\ntroller, only a small motion between the nozzle and the flapper is required to give a\ncomplete change from the maximum to the minimum control pressure. The curves re-\nlating to X and to X are shown in Figure 4–9(b). Notice that a small change in X\ncan cause a large change in which causes the diaphragm valve to be completely open\nor completely closed.\nPneumatic Proportional Controllers (Force-Balance Type). Figure 4–10 shows\na schematic diagram of a force-balance type pneumatic proportional controller. Force-\nbalance type controllers are in extensive use in industry. Such controllers are called stack\ncontrollers.The basic principle of operation does not differ from that of the force-distance\ntype controller. The main advantage of the force-balance type controller is that it elimi-\nnates many mechanical linkages and pivot joints, thereby reducing the effects of friction.\nIn what follows, we shall consider the principle of the force-balance type controller.\nIn the controller shown in Figure 4–10, the reference input pressure and the output\npressure are fed to large diaphragm chambers. Note that a force-balance type pneu-\nmatic controller operates only on pressure signals. Therefore, it is necessary to convert\nthe reference input and system output to corresponding pressure signals.\nPo\nPr\nPb ,\nPcPb\nOutput\npressure\nPr\nPo\nA1\nA1\nA2\nReference\ninput pressure\nX + x Pc + pc\nAtmosphere\nAir supply Control\npressure\nP1 = k (Pc + pc)\nFigure 4–10\nSchematic diagram\nof a force-balance\ntype pneumatic\nproportional\ncontroller.\nFigure 4–9\n(a) Pneumatic controller without a feedback mechanism; (b) curves versus X and versus X.PcPb116\nChapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems\nAs in the case of the force-distance type controller, this controller employs a flapper,\nnozzle, and orifices. In Figure 4–10, the drilled opening in the bottom chamber is the\nnozzle. The diaphragm just above the nozzle acts as a flapper.\nThe operation of the force-balance type controller shown in Figure 4–10 may be\nsummarized as follows: 20-psig air from an air supply flows through an orifice, causing\na reduced pressure in the bottom chamber. Air in this chamber escapes to the atmos-\nphere through the nozzle. The flow through the nozzle depends on the gap and the\npressure drop across it. An increase in the reference input pressure while the out-\nput pressure remains the same, causes the valve stem to move down, decreasing the\ngap between the nozzle and the flapper diaphragm.This causes the control pressure \nto increase. Let\n(4–20)\nIf p\ne\n=0, there is an equilibrium state with the nozzle–flapper distance equal to and\nthe control pressure equal to At this equilibrium state, and\n(4–21)\nwhere a is a constant.\nLet us assume that p\ne\nZ 0 and define small variations in the nozzle–flapper distance\nand control pressure as x and p\nc\n, respectively. Then we obtain the following equation:\n(4–22)\nFrom Equations (4–21) and (4–22), we obtain\n(4–23)\nAt this point, we must examine the quantity x. In the design of pneumatic controllers,\nthe nozzle–flapper distance is made quite small. In view of the fact that x/a is very much\nsmaller than p\nc\n(1-k)A\n1\nor p\ne\nAA\n2\n-A\n1\nB—that is, for p\ne\nZ 0\nwe may neglect the term x in our analysis. Equation (4–23) can then be rewritten to\nreflect this assumption as follows:\nand the transfer function between p\nc\nand p\ne\nbecomes\nwhere p\ne\nis defined by Equation (4–20). The controller shown in Figure 4–10 is a\nproportional controller.The value of gain K\np\nincreases as k approaches unity. Note that\nthe value of k depends on the diameters of the orifices in the inlet and outlet pipes of\nthe feedback chamber. (The value of k approaches unity as the resistance to flow in the\norifice of the inlet pipe is made smaller.)\nP\nc\n(s)\nP\ne\n(s) = A\n2\n- A\n1\nA\n1\n1\n1 - k = K\np\np\nc\n(1 - k)A\n1\n= p\ne\nAA\n2\n- A\n1\nB\nx\na /H11270p\ne\nAA\n2\n- A\n1\nB\nx\na /H11270p\nc\n(1 - k)A\n1\nx = aCp\nc\n(1 - k)A\n1\n- p\ne\nAA\n2\n- A\n1\nBD\nX– + x = aCAP–\nc\n+ p\nc\nBA\n1\n- AP–\nc\n+ p\nc\nBkA\n1\n- p\ne\nAA\n2\n- A\n1\nBD\nX– = aAP–\nc\n \nA\n1\n- P–\nc\n \nkA\n1\nB\nP\n1\n= P–\nc\n \nk (where k 6 1)P–\nc\n \n.\nX–\np\ne\n= P\nr\n- P\no\nP\nc\nP\no\nP\nr\n \n,\nOpenmirrors.comSection 4–3 / Pneumatic Systems 117\nC\nPc + pc\nA\nk\nX + x\nQ+  qi\nFigure 4–11\nSchematic diagram\nof a pneumatic\nactuating valve.\nPneumatic Actuating Valves. One characteristic of pneumatic controls is that\nthey almost exclusively employ pneumatic actuating valves.A pneumatic actuating valve\ncan provide a large power output. (Since a pneumatic actuator requires a large power\ninput to produce a large power output, it is necessary that a sufficient quantity of pres-\nsurized air be available.) In practical pneumatic actuating valves, the valve characteris-\ntics may not be linear; that is, the flow may not be directly proportional to the valve\nstem position, and also there may be other nonlinear effects, such as hysteresis.\nConsider the schematic diagram of a pneumatic actuating valve shown in Figure 4–11.\nAssume that the area of the diaphragm is A. Assume also that when the actuating error\nis zero, the control pressure is equal to and the valve displacement is equal to \nIn the following analysis, we shall consider small variations in the variables and lin-\nearize the pneumatic actuating valve. Let us define the small variation in the control\npressure and the corresponding valve displacement to be and x, respectively. Since\na small change in the pneumatic pressure force applied to the diaphragm repositions\nthe load, consisting of the spring, viscous friction, and mass, the force-balance equa-\ntion becomes\nwhere m=mass of the valve and valve stem\nb=viscous-friction coefficient\nk=spring constant\nIf the force due to the mass and viscous friction are negligibly small, then this last equa-\ntion can be simplified to\nThe transfer function between x and thus becomes\nX(s)\nPc(s) = A\nk = Kc\npc\nApc = kx\nApc = mx$ + bx# + kx\npc\nX– .P–\nc118\nChapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems\nwhere X(s)=l[x] and If q\ni\n, the change in flow through the pneumatic\nactuating valve, is proportional to x, the change in the valve-stem displacement, then\nwhere Q\ni\n(s)=lCq\ni\nDand K\nq\nis a constant. The transfer function between q\ni\nand\nbecomes\nwhere K\nv\nis a constant.\nThe standard control pressure for this kind of a pneumatic actuating valve is between\n3 and 15 psig. The valve-stem displacement is limited by the allowable stroke of the\ndiaphragm and is only a few inches. If a longer stroke is needed, a piston–spring\ncombination may be employed.\nIn pneumatic actuating valves, the static-friction force must be limited to a low value\nso that excessive hysteresis does not result. Because of the compressibility of air, the\ncontrol action may not be positive; that is, an error may exist in the valve-stem position.\nThe use of a valve positioner results in improvements in the performance of a pneu-\nmatic actuating valve.\nBasic Principle for Obtaining Derivative Control Action. We shall now present\nmethods for obtaining derivative control action. We shall again place the emphasis on\nthe principle and not on the details of the actual mechanisms.\nThe basic principle for generating a desired control action is to insert the inverse of\nthe desired transfer function in the feedback path. For the system shown in Figure 4–12,\nthe closed-loop transfer function is\nIf @G(s)H(s)@/H112711, then C(s)/R(s) can be modified to\nThus, if proportional-plus-derivative control action is desired, we insert an element\nhaving the transfer function 1/(Ts+1) in the feedback path.\nC(s)\nR(s) = 1\nH(s)\nC(s)\nR(s) = G(s)\n1 + G(s)H(s)\nQ\ni\n(s)\nP\nc\n(s) = K\nc\n \nK\nq\n= K\nv\np\nc\nQ\ni\n(s)\nX(s) = K\nq\nP\nc\n(s) = lCp\nc\nD.\nR(s) C(s)\nG(s)\nH(s)\n+ –\nFigure 4–12\nControl system.\nOpenmirrors.comSection 4–3 / Pneumatic Systems 119\n+ –\ne\na\nb\n(a) (b)\nPc(s)E(s) X(s)b\na + b K\na\na + b\nA\nks\nX + x\nPc + pc\nPs\nFigure 4–13\n(a) Pneumatic proportional controller; (b) block diagram of the controller.\n(a) (b)\n(c)\ne\nea\nb\nPs\npc\nX + x\nPc + pc\nR\nC\nPc(s)E(s) X(s)\nK\nx\nt\nt\nt\na\na + b\nA\nks\nb\na + b\n1\nRCs + 1\n+ –\nFigure 4–14\n(a) Pneumatic\nproportional-plus-\nderivative controller;\n(b) step change in e\nand the corre-\nsponding changes in\nxand pc plotted\nversus t; (c) block\ndiagram of the\ncontroller.\nConsider the pneumatic controller shown in Figure 4–13(a). Considering small changes\nin the variables, we can draw a block diagram of this controller as shown in Figure 4–13(b).\nFrom the block diagram we see that the controller is of proportional type.\nWe shall now show that the addition of a restriction in the negative feedback path\nwill modify the proportional controller to a proportional-plus-derivative controller, or\na PD controller.\nConsider the pneumatic controller shown in Figure 4–14(a).Assuming again small changes\nin the actuating error, nozzle–flapper distance, and control pressure, we can summarize\nthe operation of this controller as follows: Let us first assume a small step change in e.120\nChapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems\nThen the change in the control pressure will be instantaneous.The restriction R will mo-\nmentarily prevent the feedback bellows from sensing the pressure change p\nc\n.Thus the feed-\nback bellows will not respond momentarily, and the pneumatic actuating valve will feel the\nfull effect of the movement of the flapper.As time goes on, the feedback bellows will expand.\nThe change in the nozzle–flapper distance x and the change in the control pressure can\nbe plotted against time t, as shown in Figure 4–14(b). At steady state, the feedback bellows\nacts like an ordinary feedback mechanism.The curve versus t clearly shows that this con-\ntroller is of the proportional-plus-derivative type.\nA block diagram corresponding to this pneumatic controller is shown in \nFigure 4–14(c). In the block diagram, K is a constant, A is the area of the bellows, and\nk\ns\nis the equivalent spring constant of the bellows.The transfer function between and\ne can be obtained from the block diagram as follows:\nIn such a controller the loop gain is made much greater\nthan unity. Thus the transfer function P\nc\n(s)/E(s) can be simplified to give\nwhere\nThus, delayed negative feedback, or the transfer function 1/(RCs+1) in the feedback\npath, modifies the proportional controller to a proportional-plus-derivative controller.\nNote that if the feedback valve is fully opened, the control action becomes propor-\ntional. If the feedback valve is fully closed, the control action becomes narrow-band\nproportional (on–off).\nObtaining Pneumatic Proportional-Plus-Integral Control Action. Consider\nthe proportional controller shown in Figure 4–13(a). Considering small changes in the\nvariables, we can show that the addition of delayed positive feedback will modify this\nproportional controller to a proportional-plus-integral controller, or a PI controller.\nConsider the pneumatic controller shown in Figure 4–15(a).The operation of this con-\ntroller is as follows: The bellows denoted by I is connected to the control pressure source\nwithout any restriction. The bellows denoted by II is connected to the control pressure\nsource through a restriction. Let us assume a small step change in the actuating error.This\nwill cause the back pressure in the nozzle to change instantaneously.Thus a change in the\ncontrol pressure also occurs instantaneously. Due to the restriction of the valve in the\npath to bellows II, there will be a pressure drop across the valve. As time goes on, air will\nflow across the valve in such a way that the change in pressure in bellows II attains the value\np\nc\n. Thus bellows II will expand or contract as time elapses in such a way as to move the\nflapper an additional amount in the direction of the original displacement e.This will cause\nthe back pressure in the nozzle to change continuously, as shown in Figure 4–15(b).p\nc\np\nc\nK\np\n= bk\ns\naA ,\n  \nT\nd\n= RC\nP\nc\n(s)\nE(s) = K\np\nA1 + T\nd\n \nsB\n@KaA/H20862C(a + b)k\ns\n(RCs + 1)D@\nP\nc\n(s)\nE(s) =\nb\na + b K\n1 + Ka\na + b\nA\nk\ns\n1\nRCs + 1\np\nc\np\nc\np\nc\np\nc\nOpenmirrors.comSection 4–3 / Pneumatic Systems 121\n(a) (b)\n(c)\n(d)\ne\na\nb\nX + x\nPc + pc\nPs\nR\nC\npc\nK\nK\nx\ne\nt\nt\nt\nE(s) X(s) Pc(s)\nE(s) X(s) Pc(s)\na\na + b\nb\na + b\nb\na + b\nA\nks\na\na + b\nA\nks\na\na + b\nA\nks\n1\nRCs + 1\n1\nRCs + 1\nII I\n+ – ++\n+ –\n+\n–\nFigure 4–15\n(a) Pneumatic\nproportional-plus-\nintegral controller;\n(b) step change in e\nand the corre-\nsponding changes in\nxand pc plotted\nversus t; (c) block\ndiagram of the\ncontroller;\n(d) simplified block\ndiagram.\nNote that the integral control action in the controller takes the form of slowly\ncanceling the feedback that the proportional control originally provided.\nA block diagram of this controller under the assumption of small variations in the\nvariables is shown in Figure 4–15(c). A simplification of this block diagram yields \nFigure 4–15(d). The transfer function of this controller is\nPc(s)\nE(s) =\nb\na + b K\n1 + Ka\na + b\nA\nks\na1 - 1\nRCs + 1 b122\nChapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems\n+ –\n(a)\n(b)\ne\na\nb\nX + x\nP\ns\nR\ni\nR\nd\nCC\nP\nc\n+ p\nc\n(R\ni\n/H11022/H11022 R\nd\n)\nP\nc\n(s)E(s) X(s)\nKb\na + b\na\na + b\nA\nk\ns\n1\nR\nd\nCs + 1\n1\nR\ni\nCs + 1\n–\n+\nFigure 4–16\n(a) Pneumatic\nproportional-plus-\nintegral-plus-\nderivative controller;\n(b) block diagram of\nthe controller.\nwhere K is a constant,A is the area of the bellows, and k\ns\nis the equivalent spring constant\nof the combined bellows. If which is usually the\ncase, the transfer function can be simplified to\nwhere\nObtaining Pneumatic Proportional-Plus-Integral-Plus-Derivative Control\nAction. A combination of the pneumatic controllers shown in Figures 4–14(a) and\n4–15(a) yields a proportional-plus-integral-plus-derivative controller, or a PID con-\ntroller. Figure 4–16(a) shows a schematic diagram of such a controller. Figure 4–16(b)\nshows a block diagram of this controller under the assumption of small variations in the\nvariables.\nK\np\n= bk\ns\naA ,\n  \nT\ni\n= RC\nP\nc\n(s)\nE(s) = K\np\na\n1 + 1\nT\ni\n \ns\nb\n@KaARCs/H20862C(a + b)k\ns\n(RCs + 1)D@ /H112711,\nOpenmirrors.comSection 4–4 / Hydraulic Systems 123\nThe transfer function of this controller is\nBy defining\nand noting that under normal operation \nand we obtain\n(4–24)\nwhere\nEquation (4–24) indicates that the controller shown in Figure 4–16(a) is a proportional-\nplus-integral-plus-derivative controller or a PID controller.\n4–4 HYDRAULIC SYSTEMS\nExcept for low-pressure pneumatic controllers, compressed air has seldom been used for\nthe continuous control of the motion of devices having significant mass under external\nload forces. For such a case, hydraulic controllers are generally preferred.\nHydraulic Systems. The widespread use of hydraulic circuitry in machine tool\napplications, aircraft control systems, and similar operations occurs because of such fac-\ntors as positiveness, accuracy, flexibility, high horsepower-to-weight ratio, fast starting,\nstopping, and reversal with smoothness and precision, and simplicity of operations.\nThe operating pressure in hydraulic systems is somewhere between 145 and 5000 lbf/H20862in.2\n(between 1 and 35 MPa). In some special applications, the operating pressure may go up\nto 10,000 lb f/H20862in.2 (70 MPa). For the same power requirement, the weight and size of\nthe hydraulic unit can be made smaller by increasing the supply pressure. With high-\npressure hydraulic systems, very large force can be obtained. Rapid-acting, accurate\npositioning of heavy loads is possible with hydraulic systems. A combination of elec-\ntronic and hydraulic systems is widely used because it combines the advantages of both\nelectronic control and hydraulic power.\nKp = bks\naA\n = Kp a1 + 1\nTi s + Td s b\n /H11216bks\naA Td Ti s2 + Ti s + 1\nTi s\n Pc(s)\nE(s) /H11216bks\naA \nATd s + 1BATi s + 1B\nATi - TdBs\nTi /H11271Td ,\n/H112711@KaAATi - TdBs/H20862C(a + b)ksATd s + 1BATi s + 1BD@\nTi = Ri C,  Td = Rd C\nPc(s)\nE(s) =\nbK\na + b\n1 + Ka\na + b\nA\nks\nARi C - Rd CBs\nARd Cs + 1BARi Cs + 1B124\nChapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems\nAdvantages and Disadvantages of Hydraulic Systems. There are certain\nadvantages and disadvantages in using hydraulic systems rather than other systems.\nSome of the advantages are the following:\n1. Hydraulic fluid acts as a lubricant, in addition to carrying away heat generated in\nthe system to a convenient heat exchanger.\n2. Comparatively small-sized hydraulic actuators can develop large forces or torques.\n3. Hydraulic actuators have a higher speed of response with fast starts, stops, and\nspeed reversals.\n4. Hydraulic actuators can be operated under continuous, intermittent, reversing,\nand stalled conditions without damage.\n5. Availability of both linear and rotary actuators gives flexibility in design.\n6. Because of low leakages in hydraulic actuators, speed drop when loads are applied\nis small.\nOn the other hand, several disadvantages tend to limit their use.\n1. Hydraulic power is not readily available compared to electric power.\n2. Cost of a hydraulic system may be higher than that of a comparable electrical\nsystem performing a similar function.\n3. Fire and explosion hazards exist unless fire-resistant fluids are used.\n4. Because it is difficult to maintain a hydraulic system that is free from leaks, the\nsystem tends to be messy.\n5. Contaminated oil may cause failure in the proper functioning of a hydraulic\nsystem.\n6. As a result of the nonlinear and other complex characteristics involved, the design\nof sophisticated hydraulic systems is quite involved.\n7. Hydraulic circuits have generally poor damping characteristics. If a hydraulic circuit\nis not designed properly, some unstable phenomena may occur or disappear, de-\npending on the operating condition.\nComments. Particular attention is necessary to ensure that the hydraulic system\nis stable and satisfactory under all operating conditions. Since the viscosity of hydraulic\nfluid can greatly affect damping and friction effects of the hydraulic circuits, stability\ntests must be carried out at the highest possible operating temperature.\nNote that most hydraulic systems are nonlinear. Sometimes, however, it is possible\nto linearize nonlinear systems so as to reduce their complexity and permit solutions that\nare sufficiently accurate for most purposes.A useful linearization technique for dealing\nwith nonlinear systems was presented in Section 2–7.\nHydraulic Servo System. Figure 4–17(a) shows a hydraulic servomotor. It is\nessentially a pilot-valve-controlled hydraulic power amplifier and actuator. The pilot\nvalve is a balanced valve, in the sense that the pressure forces acting on it are all balanced.\nA very large power output can be controlled by a pilot valve, which can be positioned\nwith very little power.\nIn practice, the ports shown in Figure 4–17(a) are often made wider than the corre-\nsponding valves. In such a case, there is always leakage through the valves. Such leak-\nOpenmirrors.comSection 4–4 / Hydraulic Systems 125\nx\ny\nqq\np0 p0ps\np1 p2\n2341\n(a)\nx\n(b)\n21\nps\nx0\n2 + x x0\n2 – x\nLoad\nm b\nFigure 4–17\n(a) Hydraulic servo\nsystem; (b) enlarged\ndiagram of the valve\norifice area.\nage improves both the sensitivity and the linearity of the hydraulic servomotor. In the\nfollowing analysis we shall make the assumption that the ports are made wider than\nthe valves—that is, the valves are underlapped. [Note that sometimes a dither signal, a\nhigh-frequency signal of very small amplitude (with respect to the maximum\ndisplacement of the valve), is superimposed on the motion of the pilot valve. This also\nimproves the sensitivity and linearity. In this case also there is leakage through the valve.]\nWe shall apply the linearization technique presented in Section 2–7 to obtain a lin-\nearized mathematical model of the hydraulic servomotor. We assume that the valve is\nunderlapped and symmetrical and admits hydraulic fluid under high pressure into a\npower cylinder that contains a large piston, so that a large hydraulic force is established\nto move a load.\nIn Figure 4–17(b) we have an enlarged diagram of the valve orifice area. Let us\ndefine the valve orifice areas of ports 1, 2, 3, 4 as A1, A2, A3, A4, respectively.Also, define\nthe flow rates through ports 1, 2, 3, 4 as q1 ,q 2 ,q 3 ,q 4 , respectively. Note that, since the126\nChapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems\nvalve is symmetrical, A\n1\n=A\n3\nand A\n2\n=A\n4\n. Assuming the displacement x to be small,\nwe obtain\nwhere k is a constant.\nFurthermore, we shall assume that the return pressure p\no\nin the return line is small\nand thus can be neglected. Then, referring to Figure 4–17(a), flow rates through valve\norifices are\nwhere and and gis the specific weight and is given by\ng=rg, where r is mass density and g is the acceleration of gravity. The flow rate q to\nthe left-hand side of the power piston is\n(4–25)\nThe flow rate from the right-hand side of the power piston to the drain is the same as\nthis q and is given by\nIn the present analysis we assume that the fluid is incompressible. Since the valve is\nsymmetrical, we have q\n1\n=q\n3\nand q\n2\n=q\n4\n. By equating q\n1\nand q\n3\n, we obtain\nor\nIf we define the pressure difference across the power piston as or\n¢p = p\n1\n- p\n2\n¢p\np\ns\n= p\n1\n+ p\n2\np\ns\n- p\n1\n= p\n2\nq = q\n3\n- q\n2\n= C\n1\n1p\n2\na\nx\n0\n2 + x\nb\n- C\n2\n1p\ns\n- p\n2\na\nx\n0\n2 - x\nb\nq = q\n1\n- q\n4\n= C\n1\n1p\ns\n- p\n1\na\nx\n0\n2 + x\nb\n- C\n2\n1p\n1\na\nx\n0\n2 - x\nb\nC\n2\n= c\n2\n \nk12g/H20862g\n,C\n1\n= c\n1\n \nk12g/H20862g\nq\n4\n= c\n2\n \nA\n4\nB\n2g\ng Ap\n1\n- p\n0\nB\n= C\n2\n1p\n1\n- p\n0\na\nx\n0\n2 - x\nb\n= C\n2\n1p\n1\na\nx\n0\n2 - x\nb\nq\n3\n= c\n1\n \nA\n3\nB\n2g\ng Ap\n2\n- p\n0\nB\n= C\n1\n1p\n2\n- p\n0\na\nx\n0\n2 + x\nb\n= C\n1\n1p\n2\na\nx\n0\n2 + x\nb\nq\n2\n= c\n2\n \nA\n2\nB\n2g\ng Ap\ns\n- p\n2\nB\n= C\n2\n1p\ns\n- p\n2\na\nx\n0\n2 - x\nb\nq\n1\n= c\n1\n \nA\n1\nB\n2g\ng Ap\ns\n- p\n1\nB\n= C\n1\n1p\ns\n- p\n1\na\nx\n0\n2 + x\nb\nA\n2\n= A\n4\n= k\na\nx\n0\n2 - x\nb\nA\n1\n= A\n3\n= k\na\nx\n0\n2 + x\nb\nOpenmirrors.comSection 4–4 / Hydraulic Systems 127\nthen\nFor the symmetrical valve shown in Figure 4–17(a), the pressure in each side of the\npower piston is (1/2)ps when no load is applied, or As the spool valve is dis-\nplaced, the pressure in one line increases as the pressure in the other line decreases by\nthe same amount.\nIn terms of ps and we can rewrite the flow rate q given by Equation (4–25) as\nNoting that the supply pressure ps is constant. the flow rate q can be written as a func-\ntion of the valve displacement x and pressure difference or\nBy applying the linearization technique presented in Section 3–10 to this case, the lin-\nearized equation about point is\n(4–26)\nwhere\nCoefficients a and b here are called valve coefficients. Equation (4–26) is a linearized\nmathematical model of the spool valve near an operating point \nThe values of valve coefficients a and b vary with the operating point. Note that \nis negative and so b is negative.\nSince the normal operating point is the point where near the\nnormal operating point Equation (4–26) becomes\n(4–27)\nwhere\n K2 = AC1 + C2B x0\n412 1ps\n7 0\n K1 = AC1 + C2BA\nps\n2 7 0\nq = K1 x - K2 ¢p\nx– = 0, ¢p– = 0, q– = 0,\n0f/H208620¢ p\nx = x–, ¢p =¢ p–,q = q–.\n+ C2\n212 1ps +¢ p– ax0\n2 - x– bR 6 0\nb = 0f\n0¢ p\n2\nx = x– , ¢p =¢ p–\n=- c C1\n212 1ps -¢ p– ax0\n2 + x– b\na = 0f\n0x\n2\nx = x– , ¢p =¢ p–\n= C1 A\nps -¢ p–\n2 + C2 A\nps +¢ p–\n2\nq– = f(x–, ¢p–)\nq - q– = a(x - x–) + b(¢p -¢ p–)\nx = x–, ¢p =¢ p–,q = q–\nq = C1 A\nps -¢ p\n2 ax0\n2 + x b - C2 A\nps +¢ p\n2 ax0\n2 - x b = f(x, ¢p)\n¢p,\nq = q1 - q4 = C1 A\nps -¢ p\n2 ax0\n2 + x b - C2 A\nps +¢ p\n2 ax0\n2 - x b\n¢p,\n¢p = 0.\np1 = ps +¢ p\n2 ,  p2 = ps -¢ p\n2128\nChapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems\nx = 2x\n1\nx = x\n1\nx = 0\nx =– x\n1\n0\nq\n/H9004P\nx =– 2x\n1\nFigure 4–18\nCharacteristic curves\nof the linearized\nhydraulic\nservomotor.\nEquation (4–27) is a linearized mathematical model of the spool valve near the origin\nNote that the region near the origin is most important in this\nkind of system, because the system operation usually occurs near this point.\nFigure 4–18 shows this linearized relationship among q, x, and The straight lines\nshown are the characteristic curves of the linearized hydraulic servomotor. This family\nof curves consists of equidistant parallel straight lines, parametrized by x.\nIn the present analysis we assume that the load reactive forces are small, so that the\nleakage flow rate and oil compressibility can be ignored.\nReferring to Figure 4–17(a), we see that the rate of flow of oil q times dt is equal to\nthe power-piston displacement dy times the piston area A times the density of oil r.\nThus, we obtain\nNotice that for a given flow rate q the larger the piston area A is, the lower will be the\nvelocity dy/H20862dt. Hence, if the piston area A is made smaller, the other variables re-\nmaining constant, the velocity dy/H20862dt will become higher.Also, an increased flow rate q\nwill cause an increased velocity of the power piston and will make the response time\nshorter.\nEquation (4–27) can now be written as\nThe force developed by the power piston is equal to the pressure difference times\nthe piston area A or\n = A\nK\n2\n \na\nK\n1\n \nx - Ar dy\ndt\nb\n Force developed by the power piston = A ¢P\n¢P\n¢P = 1\nK\n2\na\nK\n1\n \nx - Ar dy\ndt\nb\nAr dy = q dt\n¢P.\n(x\n–\n= 0, ¢p\n–\n= 0, q\n–\n= 0.)\nOpenmirrors.comSection 4–4 / Hydraulic Systems 129\nFor a given maximum force, if the pressure difference is sufficiently high, the piston\narea, or the volume of oil in the cylinder, can be made small. Consequently, to minimize\nthe weight of the controller, we must make the supply pressure sufficiently high.\nAssume that the power piston moves a load consisting of a mass and viscous friction.\nThen the force developed by the power piston is applied to the load mass and friction,\nand we obtain\nor\n(4–28)\nwhere m is the mass of the load and b is the viscous-friction coefficient.\nAssuming that the pilot-valve displacement x is the input and the power-piston\ndisplacement y is the output, we find that the transfer function for the hydraulic servo-\nmotor is, from Equation (4–28),\n(4–29)\nwhere\nand\nFrom Equation (4–29) we see that this transfer function is of the second order. If the ratio \nis negligibly small or the time constant T is negligible, the transfer\nfunction Y(s)/X(s) can be simplified to give\nIt is noted that a more detailed analysis shows that if oil leakage, compressibility \n(including the effects of dissolved air), expansion of pipelines, and the like are taken\ninto consideration, the transfer function becomes\nwhere and are time constants. As a matter of fact, these time constants depend on\nthe volume of oil in the operating circuit. The smaller the volume, the smaller the time\nconstants.\nT2T1\nY(s)\nX(s) = K\nsAT1 s + 1BAT2 s + 1B\nY(s)\nX(s) = K\ns\nmK2/H20862AbK2 + A2rB\nT = mK2\nbK2 + A2rK = 1\nbK2\nAK1\n+ Ar\nK1\n = K\ns(Ts + 1)\n Y(s)\nX(s) = 1\ns camK2\nAK1\nbs + bK2\nAK1\n+ Ar\nK1\nd\nmy$ + ab + A2r\nK2\nby# = AK1\nK2\nx\nmy$ + by# = A\nK2\nAK1 x - Ary# B130\nChapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems\nx\nPort I Port II\nPower cylinder\ny\nPilot valve\nOil\nunder\npressure\nFigure 4–19\nHydraulic\nservomotor.\nHydraulic Integral Controller. The hydraulic servomotor shown in Figure 4–19 is\na pilot-valve-controlled hydraulic power amplifier and actuator. Similar to the hydraulic\nservo system shown in Figure 4–17, for negligibly small load mass the servomotor shown\nin Figure 4–19 acts as an integrator or an integral controller. Such a servomotor consti-\ntutes the basis of the hydraulic control circuit.\nIn the hydraulic servomotor shown in Figure 4–19, the pilot valve (a four-way valve)\nhas two lands on the spool. If the width of the land is smaller than the port in the valve\nsleeve, the valve is said to be underlapped.Overlappedvalves have a land width greater than\nthe port width.A zero-lappedvalve has a land width that is identical to the port width. (If\nthe pilot valve is a zero-lapped valve, analyses of hydraulic servomotors become simpler.)\nIn the present analysis, we assume that hydraulic fluid is incompressible and that the\ninertia force of the power piston and load is negligible compared to the hydraulic force\nat the power piston. We also assume that the pilot valve is a zero-lapped valve, and the\noil flow rate is proportional to the pilot valve displacement.\nOperation of this hydraulic servomotor is as follows. If input x moves the pilot valve\nto the right, port II is uncovered, and so high-pressure oil enters the right-hand side of\nthe power piston. Since port I is connected to the drain port, the oil in the left-hand side\nof the power piston is returned to the drain. The oil flowing into the power cylinder is\nat high pressure; the oil flowing out from the power cylinder into the drain is at low\npressure. The resulting difference in pressure on both sides of the power piston will\ncause it to move to the left.\nNote that the rate of flow of oil q (kg/H20862sec) times dt (sec) is equal to the power-piston\ndisplacement dy (m) times the piston area A (m\n2\n) times the density of oil r (kg/H20862m\n3\n).\nTherefore,\n(4–30)\nBecause of the assumption that the oil flow rate q is proportional to the pilot-valve\ndisplacement x, we have\n(4–31)\nwhere K\n1\nis a positive constant. From Equations (4–30) and (4–31) we obtain\nAr dy\ndt = K\n1\n \nx\nq = K\n1\n \nx\nAr dy = q dt\nOpenmirrors.comSection 4–4 / Hydraulic Systems 131\n(a) (b)\ne\nb\na\nx\ny\nIII\nA\nB\nC\nOil\nunder\npressure\nE(s) X(s) Y(s)\na\na + b\nb\na + b\nK\ns+ –Figure 4–20\n(a) Servomotor that\nacts as a proportional\ncontroller; (b) block\ndiagram of the\nservomotor.\nThe Laplace transform of this last equation, assuming a zero initial condition, gives\nor\nwhere K=K1/(Ar). Thus the hydraulic servomotor shown in Figure 4–19 acts as an\nintegral controller.\nHydraulic Proportional Controller. It has been shown that the servomotor in\nFigure 4–19 acts as an integral controller. This servomotor can be modified to a pro-\nportional controller by means of a feedback link. Consider the hydraulic controller\nshown in Figure 4–20(a). The left-hand side of the pilot valve is joined to the left-hand\nside of the power piston by a link ABC.This link is a floating link rather than one mov-\ning about a fixed pivot.\nThe controller here operates in the following way. If input e moves the pilot valve to\nthe right, port II will be uncovered and high-pressure oil will flow through port II into\nthe right-hand side of the power piston and force this piston to the left. The power pis-\nton, in moving to the left, will carry the feedback link ABC with it, thereby moving the\npilot valve to the left.This action continues until the pilot piston again covers ports I and\nII. A block diagram of the system can be drawn as in Figure 4–20(b). The transfer func-\ntion between Y(s) and E(s) is given by\nNoting that under the normal operating conditions we have this\nlast equation can be simplified to\nY(s)\nE(s) = b\na = Kp\n@Ka/H20862Cs(a + b)D@ /H112711,\nY(s)\nE(s) =\nb\na + b\nK\ns\n1 + K\ns\na\na + b\nY(s)\nX(s) = K1\nArs = K\ns\nArsY(s) = K1 X(s)132\nChapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems\n+ –\n(a) (b) (c)\nRq\nP\n2\nP\n1\nA\nk\ny\ny\nz\nz\nt\nt\nY(s) Z(s)\n1\nTs\nT = RA\n2\nr\nk\nThe transfer function between y and e becomes a constant.Thus, the hydraulic controller\nshown in Figure 4–20(a) acts as a proportional controller, the gain of which is K\np\n.This gain\ncan be adjusted by effectively changing the lever ratio b/a. (The adjusting mechanism is\nnot shown in the diagram.)\nWe have thus seen that the addition of a feedback link will cause the hydraulic\nservomotor to act as a proportional controller.\nDashpots. The dashpot (also called a damper) shown in Figure 4–21(a) acts as a\ndifferentiating element. Suppose that we introduce a step displacement to the piston po-\nsition y.Then the displacement z becomes equal to y momentarily. Because of the spring\nforce, however, the oil will flow through the resistance R and the cylinder will come back\nto the original position.The curves y versus t and z versus t are shown in Figure 4–21(b).\nLet us derive the transfer function between the displacement z and displacement y.\nDefine the pressures existing on the right and left sides of the piston as and\nrespectively. Suppose that the inertia force involved is negligible. Then the\nforce acting on the piston must balance the spring force. Thus\nwhere A=piston area, in.\n2\nk=spring constant, lb\nf\n/H20862in.\nThe flow rate q is given by\nwhere q=flow rate through the restriction, lb/H20862sec\nR=resistance to flow at the restriction, lb\nf\n-sec/H20862in.\n2\n-lb\nSince the flow through the restriction during dt seconds must equal the change in the\nmass of oil to the left of the piston during the same dt seconds, we obtain\nwhere r=density, lb/H20862in.\n3\n. (We assume that the fluid is incompressible or r=constant.)\nThis last equation can be rewritten as\ndy\ndt - dz\ndt = q\nAr = P\n1\n- P\n2\nRAr = kz\nRA\n2\nr\nq dt = Ar(dy - dz)\nq = P\n1\n- P\n2\nR\nAAP\n1\n- P\n2\nB= kz\nP\n2\n(lb\nf\n/H20862in.\n2\n),\nP\n1\n(lb\nf\n/H20862in.\n2\n)\nFigure 4–21\n(a) Dashpot; (b) step change in y and the corresponding change in z plotted versus t; (c) block\ndiagram of the dashpot.\nOpenmirrors.comSection 4–4 / Hydraulic Systems 133\n+ –\n(a)( b)\nArea = ASpring\nconstant = k\nDensity\nof oil = r\nOil\nunder\npressure\nResistance = R\ne\nx\na\nb\ny\nz\nE(s) X(s) Y(s)b\na + b\na\na + b\nK\ns\nTs\nTs + 1\nZ(s)\nor\nTaking the Laplace transforms of both sides of this last equation, assuming zero initial\nconditions, we obtain\nThe transfer function of this system thus becomes\nLet us define RA2r/H20862k=T. (Note that RA2r/H20862k has the dimension of time.) Then\nClearly, the dashpot is a differentiating element. Figure 4–21(c) shows a block diagram\nrepresentation for this system.\nObtaining Hydraulic Proportional-Plus-Integral Control Action. Figure 4–22(a)\nshows a schematic diagram of a hydraulic proportional-plus-integral controller.A block\ndiagram of this controller is shown in Figure 4–22(b). The transfer function Y(s)/E(s)\nis given by\nY(s)\nE(s) =\nb\na + b\nK\ns\n1 + Ka\na + b\nT\nTs + 1\nZ(s)\nY(s) = Ts\nTs + 1 = 1\n1 + 1\nTs\nZ(s)\nY(s) = s\ns + k\nRA2r\nsY(s) = sZ(s) + k\nRA2r Z(s)\ndy\ndt = dz\ndt + kz\nRA2r\nFigure 4–22\n(a) Schematic diagram of a hydraulic proportional-plus-integral controller; (b) block diagram of the controller.134\nChapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems\n+ –\n(a) (b)\ne\na\nb\nx\nyz\nR\nk\nq\nP\n2\nP\n1\nArea = A\nDensity of oil = r\nX(s) Y(s)E(s)\nZ(s)\nb\na + b\na\na + b\nK\ns\n1\nTs + 1\nIn such a controller, under normal operation with the\nresult that\nwhere\nThus the controller shown in Figure 4–22(a) is a proportional-plus-integral controller \n(PI controller).\nObtaining Hydraulic Proportional-Plus-Derivative Control Action.Figure 4–23(a)\nshows a schematic diagram of a hydraulic proportional-plus-derivative controller. The\ncylinders are fixed in space and the pistons can move. For this system, notice that\nHence\nor\nZ(s)\nY(s) = 1\nTs + 1\ny = z + A\nk qR = z + RA\n2\nr\nk\ndz\ndt\n q dt = rA dz\n q = P\n2\n- P\n1\nR\n k(y - z) = AAP\n2\n- P\n1\nB\nK\np\n= b\na ,\n  \nT\ni\n= T = RA\n2\nr\nk\nY(s)\nE(s) = K\np\na\n1 + 1\nT\ni\n \ns\nb\n@KaT/H20862C(a + b)(Ts + 1)D@ /H112711,\nFigure 4–23\n(a) Schematic diagram of a hydraulic proportional-plus-derivative controller; (b) block diagram of the controller.\nOpenmirrors.comSection 4–4 / Hydraulic Systems 135\ne\na\nb\nx\ny\nRR\nk2k1\nArea = A\nz\nFigure 4–24\nSchematic diagram\nof a hydraulic\nproportional-plus-\nintegral-plus-\nderivative controller.\nwhere\nA block diagram for this system is shown in Figure 4–23(b). From the block diagram the\ntransfer function Y(s)/E(s) can be obtained as\nUnder normal operation we have Hence\nwhere\nThus the controller shown in Figure 4–23(a) is a proportional-plus-derivative controller\n(PD controller).\nObtaining Hydraulic Proportional-Plus-Integral-Plus-Derivative Control Action.\nFigure 4–24 shows a schematic diagram of a hydraulic proportional-plus-integral-plus-\nderivative controller. It is a combination of the proportional-plus-integral controller\nand proportional-plus derivative controller.\nIf the two dashpots are identical except the piston shafts, the transfer function\nZ(s)/Y(s) can be obtained as follows:\n(For the derivation of this transfer function, refer to Problem A–4–9.)\nZ(s)\nY(s) = T1 s\nT1 T2 s2 + AT1 + 2T2Bs + 1\nKp = b\na ,  T = RA2r\nk\nY(s)\nE(s) = Kp(1 + Ts)\n@aK/H20862C(a + b)s(Ts + 1)D@ /H112711.\nY(s)\nE(s) =\nb\na + b\nK\ns\n1 + a\na + b\nK\ns\n1\nTs + 1\nT = RA2r\nk136\nChapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems\n+ –\nb\na + b\nK\ns\nY(s)E(s) X(s)\nZ(s) T\n1\ns\nT\n1\nT\n2\ns\n2\n+ (T\n1\n+ 2T\n2\n)s + 1 \na\na + b\nFigure 4–25\nBlock diagram for\nthe system shown in\nFigure 4–24.\nA block diagram for this system is shown in Figure 4–25. The transfer function\nY(s)/E(s) can be obtained as\nUnder normal circumstances we design the system such that\nthen\nwhere\nThus, the controller shown in Figure 4–24 is a proportional-plus-integral-plus-derivative\ncontroller (PID controller).\n4–5 THERMAL SYSTEMS\nThermal systems are those that involve the transfer of heat from one substance to\nanother. Thermal systems may be analyzed in terms of resistance and capacitance,\nalthough the thermal capacitance and thermal resistance may not be represented\naccurately as lumped parameters, since they are usually distributed throughout the sub-\nstance. For precise analysis, distributed-parameter models must be used. Here, however,\nto simplify the analysis we shall assume that a thermal system can be represented by a\nlumped-parameter model, that substances that are characterized by resistance to heat\nflow have negligible heat capacitance, and that substances that are characterized by heat\ncapacitance have negligible resistance to heat flow.\nK\np\n= b\na\nT\n1\n+ 2T\n2\nT\n1\n,\n  \nK\ni\n= b\na\n1\nT\n1\n,\n  \nK\nd\n= b\na T\n2\n = K\np\n+ K\ni\ns + K\nd\n \ns\n Y(s)\nE(s) = b\na \nT\n1\n \nT\n2\n \ns\n2\n+ AT\n1\n+ 2T\n2\nBs + 1\nT\n1\n \ns\n`\na\na + b\nK\ns\nT\n1\n \ns\nT\n1\n \nT\n2\n \ns\n2\n+ AT\n1\n+ 2T\n2\nBs + 1\n`\n/H112711\nY(s)\nE(s) = b\na + b\nK\ns\n1 + a\na + b\nK\ns\nT\n1\n \ns\nT\n1\n \nT\n2\n \ns\n2\n+ AT\n1\n+ 2T\n2\nBs + 1\nOpenmirrors.comSection 4–5 / Thermal Systems 137\nThere are three different ways heat can flow from one substance to another: con-\nduction, convection, and radiation. Here we consider only conduction and convection.\n(Radiation heat transfer is appreciable only if the temperature of the emitter is very\nhigh compared to that of the receiver. Most thermal processes in process control systems\ndo not involve radiation heat transfer.)\nFor conduction or convection heat transfer,\nwhere q=heat flow rate, kcal/H20862sec\n/H9004u=temperature difference, °C\nK=coefficient, kcal/H20862sec °C\nThe coefficient K is given by\nwhere k=thermal conductivity, kcal/H20862m sec °C\nA=area normal to heat flow, m2\n/H9004X=thickness of conductor, m\nH=convection coefficient, kcal/H20862m2 sec °C\nThermal Resistance and Thermal Capacitance. The thermal resistance R for\nheat transfer between two substances may be defined as follows:\nThe thermal resistance for conduction or convection heat transfer is given by\nSince the thermal conductivity and convection coefficients are almost constant, the\nthermal resistance for either conduction or convection is constant.\nThe thermal capacitance C is defined by\nor\nwhere m=mass of substance considered, kg\nc=specific heat of substance, kcal/H20862kg °C\nC = mc\nC = change in heat stored, kcal\nchange in temperature, °C\nR = d(¢u)\ndq = 1\nK\nR = change in temperature difference, °C\nchange in heat flow rate, kcal/H20862sec\n= HA,   for convection\nK = kA\n¢X ,   for conduction\nq = K ¢u138\nChapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems\nHeater\nCold\nliquid Mixer\nHot\nliquid\n(a) (b)\nH\ni\n(s)\nR –\n1\nRCs\nQ\ni\n(s)\nQ(s)\n++\n–\nThermal System. Consider the system shown in Figure 4–26(a). It is assumed\nthat the tank is insulated to eliminate heat loss to the surrounding air. It is also assumed\nthat there is no heat storage in the insulation and that the liquid in the tank is perfectly\nmixed so that it is at a uniform temperature.Thus, a single temperature is used to describe\nthe temperature of the liquid in the tank and of the outflowing liquid.\nLet us define\nsteady-state temperature of inflowing liquid, °C\nsteady-state temperature of outflowing liquid, °C\nsteady-state liquid flow rate, kg/H20862sec\nmass of liquid in tank, kg\nspecific heat of liquid, kcal/H20862kg °C\nthermal resistance, °C sec/H20862kcal\nthermal capacitance, kcal/H20862°C\nsteady-state heat input rate, kcal/H20862sec\nAssume that the temperature of the inflowing liquid is kept constant and that the heat\ninput rate to the system (heat supplied by the heater) is suddenly changed from to\nwhere h\ni\nrepresents a small change in the heat input rate.The heat outflow rate\nwill then change gradually from to The temperature of the outflowing liq-\nuid will also be changed from to For this case, h\no\n, C, and R are obtained,\nrespectively, as\nThe heat-balance equation for this system is\nCd u = Ah\ni\n- h\no\nBdt\nR = u\nh\no\n= 1\nGc\nC = Mc\nh\no\n= Gcu\nQ–\no\n+ u.Q–\no\nH– + h\no\n \n.H–H– + h\ni\n \n,\nH–\n H– =\n C =\n R =\n c =\n M =\n G =\nQ–\no\n=\nQ–\ni\n=\nFigure 4–26\n(a) Thermal system:\n(b) block diagram of\nthe system.\nOpenmirrors.comSection 4–5 / Thermal Systems 139\nor\nwhich may be rewritten as\nNote that the time constant of the system is equal to RC or M/G seconds. The transfer\nfunction relating u and hi is given by\nwhere and \nIn practice, the temperature of the inflowing liquid may fluctuate and may act as a\nload disturbance. (If a constant outflow temperature is desired, an automatic controller\nmay be installed to adjust the heat inflow rate to compensate for the fluctuations in the\ntemperature of the inflowing liquid.) If the temperature of the inflowing liquid is sud-\ndenly changed from to while the heat input rate H and the liquid flow rate\nG are kept constant, then the heat outflow rate will be changed from to and\nthe temperature of the outflowing liquid will be changed from to The heat-\nbalance equation for this case is\nor\nwhich may be rewritten\nThe transfer function relating u and ui is given by\nwhere and \nIf the present thermal system is subjected to changes in both the temperature of the\ninflowing liquid and the heat input rate, while the liquid flow rate is kept constant, the\nchangeu in the temperature of the outflowing liquid can be given by the following\nequation:\nA block diagram corresponding to this case is shown in Figure 4–26(b). Notice that the\nsystem involves two inputs.\nRC du\ndt + u = ui + Rhi\nQi(s) = lCui(t)D.Q (s) = lCu(t)D\nQ (s)\nQ i(s) = 1\nRCs + 1\nRC du\ndt + u = ui\nC du\ndt = Gcui - ho\nC du = AGcui - hoBdt\nQ–\no + u.Q–\no\nH– + ho ,H–Q–\ni + uiQ–\ni\nHi(s) = lChi(t)D.Q (s) = lCu(t)D\nQ (s)\nHi(s) = R\nRCs + 1\nRC du\ndt + u = Rhi\nC du\ndt = hi - ho140\nChapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems\nQ\nQ\ni\nH\nCapacitance C\nFigure 4–27\nLiquid-level system.\nEXAMPLE PROBLEMS AND SOLUTIONS\nA–4–1. In the liquid-level system of Figure 4–27 assume that the outflow rate Q m\n3\n/H20862sec through the out-\nflow valve is related to the head H m by\nAssume also that when the inflow rate Q\ni\nis 0.015 m\n3\n/H20862sec the head stays constant. For t<0 the\nsystem is at steady state AQ\ni\n=0.015 m\n3\n/H20862secB. At t=0 the inflow valve is closed and so there is\nno inflow for t /H113500. Find the time necessary to empty the tank to half the original head. The\ncapacitance C of the tank is 2 m\n2\n.\nSolution. When the head is stationary, the inflow rate equals the outflow rate. Thus head H\no\nat\nt=0 is obtained from\nor\nThe equation for the system for t>0 is\nor\nHence\nAssume that, at t=t\n1\n, H=1.125 m. Integrating both sides of this last equation, we obtain\nIt follows that\nor\nThus, the head becomes half the original value (2.25 m) in 175.7 sec.\nt\n1\n= 175.7\n21H\n2\n1.125\n2.25\n= 211.125\n- 212.25\n=- 0.005t\n1\n3\n1.125\n2.25\ndH\n1H\n=\n3\nt\n1\n0\n(-0.005) dt =- 0.005t\n1\ndH\n1H\n=- 0.005 dt\ndH\ndt =- Q\nC = -0.011H\n2\n-C dH = Q dt\nH\no\n= 2.25 m\n0.015 = 0.011H\no\nQ = K1H\n= 0.011H\nOpenmirrors.com\nOpenmirrors.comExample Problems and Solutions 141\nA–4–2. Consider the liquid-level system shown in Figure 4–28. In the system, and are steady-state\ninflow rates and and are steady-state heads.The quantities qi1,q i2,h 1,h 2,q 1, and qo are con-\nsidered small. Obtain a state-space representation for the system when h1 and h2 are the outputs\nand qi1 and qi2 are the inputs.\nSolution. The equations for the system are\n(4–32)\n(4–33)\n(4–34)\n(4–35)\nElimination of q1 from Equation (4–32) using Equation (4–33) results in\n(4–36)\nEliminating q1 and qo from Equation (4–34) by using Equations (4–33) and (4–35) gives\n(4–37)\nDefine state variables x1 and x2 by\nx1=h1\nx2=h2\nthe input variables u1 and u2 by\nu1=qi1\nu2=qi2\nand the output variables y1 and y2 by\ny1=h1=x1\ny2=h2=x2\nThen Equations (4–36) and (4–37) can be written as\n x#\n2 = 1\nR1 C2\n x1 - a 1\nR1 C2\n+ 1\nR2 C2\nbx2 + 1\nC2\n u2\n x#\n1 =- 1\nR1 C1\nx1 + 1\nR1 C1\nx2 + 1\nC1\nu1\ndh2\ndt = 1\nC2\nah1 - h2\nR1\n+ qi2 - h2\nR2\nb\ndh1\ndt = 1\nC1\naqi1 - h1 - h2\nR1\nb\nh2\nR2\n= qo\nC2 dh2 = Aq1 + qi2 - qoBdt\nh1 - h2\nR1\n= q1\nC1 dh1 = Aqi1 - q1Bdt\nH–\n2H–\n1\nQ–\n2Q–\n1\nC1 C2\nR1 R2\nQ1 + q1\nQ2 + qi2Q1 + qi1\nQ1 + Q2 + qo\nH1 + h1 H2 + h2\nFigure 4–28\nLiquid-level system.142\nChapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems\nIn the form of the standard vector-matrix representation, we have\nwhich is the state equation, and\nwhich is the output equation.\nA–4–3. The value of the gas constant for any gas may be determined from accurate experimental obser-\nvations of simultaneous values of p, v, and T.\nObtain the gas constant R\nair\nfor air. Note that at 32°F and 14.7 psia the specific volume of air\nis 12.39 ft\n3\n/H20862lb.Then obtain the capacitance of a 20-ft\n3\npressure vessel that contains air at 160°F.As-\nsume that the expansion process is isothermal.\nSolution.\nReferring to Equation (4–12), the capacitance of a 20-ft\n3\npressure vessel is\nNote that in terms of SI units, R\nair\nis given by\nR\nair\n=287 N-m/H20862kg K\nA–4–4. In the pneumatic pressure system of Figure 4–29(a), assume that, for t<0, the system is at steady\nstate and that the pressure of the entire system is Also, assume that the two bellows are identi-\ncal. At t=0, the input pressure is changed from to Then the pressures in bellows 1 and\n2 will change from to and from to respectively.The capacity (volume) of each\nbellows is 5*10\n–4\nm\n3\n, and the operating-pressure difference (difference between p\ni\nand p\n1\nor\ndifference between p\ni\nand p\n2\n) is between –0.5*10\n5\nN/H20862m\n2\nand 0.5*10\n5\nN/H20862m\n2\n.The corresponding\nmass flow rates (kg/H20862sec) through the valves are shown in Figure 4–29(b). Assume that the bellows\nexpand or contract linearly with the air pressures applied to them, that the equivalent spring con-\nstant of the bellows system is k=1*10\n5\nN/H20862m, and that each bellows has area A=15*10\n–4\nm\n2\n.\n¢p\nP– + p\n2\n \n,P–P– + p\n1\nP– P– + p\ni\n \n.P–P–.\nC = V\nnR\nair\n \nT = 20\n1 * 53.3 * 620 = 6.05 * 10\n-4\nlb\nlb\nf\n/H20862ft\n2\nR\nair\n= pv\nT = 14.7 * 144 * 12.39\n460 + 32 = 53.3 ft-lb\nf\n/H20862lb°R\nB\ny\n1\ny\n2\nR\n=\nB\n1\n0\n0\n1\nRB\nx\n1\nx\n2\nR\nB\nx#\n1\nx#\n2\nR\n=\nD\n- 1\nR\n1\n \nC\n1\n1\nR\n1\n \nC\n2\n1\nR\n1\n \nC\n1\n-\na\n1\nR\n1\n \nC\n2\n+ 1\nR\n2\n \nC\n2\nb\nTB\nx\n1\nx\n2\nR\n+\nD\n1\nC\n1\n0\n0\n1\nC\n2\nTB\nu\n1\nu\n2\nR\nBellows 1 Bellows 2\nValve 1 Valve 2\n(a) (b)\nx\nArea\nACC\nq\n1\nq\n2\nR\n1\nR\n2\nP+ p\n1\nP+ p\n2\nP + p\ni\nValve 2\nValve 10.5 /H11003 10\n5\n–3 /H11003 10\n–5\n1.5 /H11003 10\n–5\n– 0.5 /H11003 10\n5\nDp(N/m\n2\n)\nq(kg/sec)\nFigure 4–29\n(a) Pneumatic\npressure system;\n(b) pressure-\ndifference-versus-\nmass-flow-rate\ncurves.\nOpenmirrors.comExample Problems and Solutions 143\nDefining the displacement of the midpoint of the rod that connects two bellows as x, find the\ntransfer function Assume that the expansion process is isothermal and that the\ntemperature of the entire system stays at 30°C. Assume also that the polytropic exponent n is 1.\nSolution. Referring to Section 4–3, transfer function can be obtained as\n(4–38)\nSimilarly, transfer function is\n(4–39)\nThe force acting on bellows 1 in the x direction is and the force acting on bellows 2\nin the negative x direction is The resultant force balances with kx, the equivalent\nspring force of the corrugated sides of the bellows.\nor\n(4–40)\nReferring to Equations (4–38) and (4–39), we see that\nBy substituting this last equation into Equation (4–40) and rewriting, the transfer function\nis obtained as\n(4–41)\nThe numerical values of average resistances R1 and R2 are\nThe numerical value of capacitance C of each bellows is\nwhere Rair=287 N-m/H20862kg K. (See Problem A–4–3.) Consequently,\nR1 C=0.167*1010*5.75*10–9=9.60 sec\nR2 C=0.333*1010*5.75*10–9=19.2 sec\nBy substituting the numerical values for A, k, R1 C, and R2 C into Equation (4–41), we obtain\nX(s)\nPi(s) = 1.44 * 10-7s\n(9.6s + 1)(19.2s + 1)\nC = V\nnRair T = 5 * 10-4\n1 * 287 * (273 + 30) = 5.75 * 10-9 kg\nN/H20862m2\nR2 = d ¢p\ndq2\n= 0.5 * 105\n1.5 * 10-5 = 0.333 * 1010 N/H20862m2\nkg/H20862sec\nR1 = d ¢p\ndq1\n= 0.5 * 105\n3 * 10-5 = 0.167 * 1010 N/H20862m2\nkg/H20862sec\nX(s)\nPi(s) = A\nk\nAR2 C - R1 CBs\nAR1 Cs + 1BAR2 Cs + 1B\nX(s)/H20862Pi(s)\n = R2 Cs - R1 Cs\nAR1 Cs + 1BAR2 Cs + 1B\n Pi(s)\n P1(s) - P2(s) = a 1\nR1 Cs + 1 - 1\nR2 Cs + 1 bPi(s)\nACP1(s) - P2(s)D = kX(s)\nAAp1 - p2B= kx\nAAP– + p2B.\nAAP– + p1B,\nP2(s)\nPi(s) = 1\nR2 Cs + 1\nP2(s)/H20862Pi(s)\nP1(s)\nPi(s) = 1\nR1 Cs + 1\nP1(s)/H20862Pi(s)\nX(s)/H20862Pi(s).144\nChapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems\nA–4–5. Draw a block diagram of the pneumatic controller shown in Figure 4–30. Then derive the transfer\nfunction of this controller. Assume that Assume also that the two bellows are identical.\nIf the resistance R\nd\nis removed (replaced by the line-sized tubing), what control action do we get?\nIf the resistance R\ni\nis removed (replaced by the line-sized tubing), what control action do we get?\nSolution. Let us assume that when e=0 the nozzle–flapper distance is equal to and the con-\ntrol pressure is equal to In the present analysis, we shall assume small deviations from the\nrespective reference values as follows:\nsmall error signal\nsmall change in the nozzle–flapper distance\nsmall change in the control pressure\nsmall pressure change in bellows I due to small change in the control pressure\nsmall pressure change in bellows II due to small change in the control pressure\nsmall displacement at the lower end of the flapper\nIn this controller, is transmitted to bellows I through the resistance R\nd\n. Similarly, is trans-\nmitted to bellows II through the series of resistances R\nd\nand R\ni\n.The relationship between and is\nwhere derivative time. Similarly, p\nII\nand p\nI\nare related by the transfer function\nwhere integral time. The force-balance equation for the two bellows is\nwhere k\ns\nis the stiffness of the two connected bellows and A is the cross-sectional area of the\nbellows. The relationship among the variables e, x, and y is\nThe relationship between and x is\np\nc\n=Kx (K>0)\np\nc\nx = b\na + b e - a\na + b y\nAp\nI\n- p\nII\nBA = k\ns\n \ny\nT\ni\n= R\ni\nC =\nP\nII\n(s)\nP\nI\n(s) = 1\nR\ni\n \nCs + 1 = 1\nT\ni\n \ns + 1\nT\nd\n= R\nd\nC =\nP\nI\n(s)\nP\nc\n(s) = 1\nR\nd\n \nCs + 1 = 1\nT\nd\n \ns + 1\np\nc\np\nI\np\nc\np\nc\n y =\n p\nII\n=\n p\nI\n=\n p\nc\n=\n x =\ne =\nP–\nc\n \n.\nX–\nR\nd\n/H11270R\ni\n \n.\ne\na\nb\nCC\nX + x\nP\nc\n+ p\nI\nP\nc\n+ p\nII\nP\ns\nII I\nR\ni\nR\nd\nP\nc\n+ p\nc\ny\nFigure 4–30\nSchematic diagram\nof a pneumatic\ncontroller.\nOpenmirrors.comExample Problems and Solutions 145\nFrom the equations just derived, a block diagram of the controller can be drawn, as shown in\nFigure 4–31(a). Simplification of this block diagram results in Figure 4–31(b).\nThe transfer function between Pc(s) and E(s) is\nFor a practical controller, under normal operation is\nvery much greater than unity and Therefore, the transfer function can be simplified as\nfollows:\nwhere\nThus the controller shown in Figure 4–30 is a proportional-plus-integral-plus-derivative one.\nIf the resistance Rd is removed, or Rd=0, the action becomes that of a proportional-plus-\nintegral controller.\nKp = bks\naA\n /H11216Kp a1 + 1\nTi s + Td s b\n = bks\naA aTi + Td\nTi\n+ 1\nTi s + Td s b\n \nPc(s)\nE(s) /H11216\nbksATi s + 1BATd s + 1B\naATi s\nTi /H11271Td .\n@KaATi s/H20862C(a + b)ksATi s + 1BATd s + 1BD@\nPc(s)\nE(s) =\nb\na + b K\n1 + K a\na + b\nA\nks\na Ti s\nTi s + 1 ba 1\nTd s + 1 b\n+ –\n+–\n+ –\nE(s) X(s) Pc(s)\nK\na\na + b\nb\na + b\nA\nks\nPI(s)\nPII(s)\n1\nTd s + 1\n1\nTi s + 1\n(a)\n(b)\nKb\na + b\nPc(s)E(s) X(s)\naATi s\n(a + b) ks(Ti s + 1) (Td s + 1) \nFigure 4–31\n(a) Block diagram of\nthe pneumatic\ncontroller shown in\nFigure 4–30;\n(b) simplified block\ndiagram.146\nChapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems\nIf the resistance R\ni\nis removed, or R\ni\n=0, the action becomes that of a narrow-band propor-\ntional, or two-position, controller. (Note that the actions of two feedback bellows cancel each\nother, and there is no feedback.)\nA–4–6. Actual spool valves are either overlapped or underlapped because of manufacturing tolerances.\nConsider the overlapped and underlapped spool valves shown in Figures 4–32(a) and (b). Sketch\ncurves relating the uncovered port area A versus displacement x.\nSolution. For the overlapped valve, a dead zone exists between and or \nThe curve for uncovered port area A versus displacement x is shown in Figure 4–33(a). Such an\noverlapped valve is unfit as a control valve.\nFor the underlapped valve, the curve for port area A versus displacement x is shown in \nFigure 4–33(b). The effective curve for the underlapped region has a higher slope, meaning a\nhigher sensitivity. Valves used for controls are usually underlapped.\nA–4–7. Figure 4–34 shows a hydraulic jet-pipe controller. Hydraulic fluid is ejected from the jet pipe. If\nthe jet pipe is shifted to the right from the neutral position, the power piston moves to the left,\nand vice versa. The jet-pipe valve is not used as much as the flapper valve because of large null\nflow, slower response, and rather unpredictable characteristics. Its main advantage lies in its\ninsensitivity to dirty fluids.\nSuppose that the power piston is connected to a light load so that the inertia force of the load\nelement is negligible compared to the hydraulic force developed by the power piston. What type\nof control action does this controller produce?\nSolution. Define the displacement of the jet nozzle from the neutral position as x and the\ndisplacement of the power piston as y. If the jet nozzle is moved to the right by a small displace-\n-\n1\n2\nx\n0\n6 x 6\n1\n2\nx\n0\n \n.\n1\n2\nx\n0\n \n,-\n1\n2\nx\n0\nx\n0\n2\nx\n0\n2\nx\n0\n2\nx\n0\n2\nxx\n(a) (b)\nHigh\npressure\nLow\npressure\nHigh\npressure\nLow\npressure\nFigure 4–32\n(a) Overlapped spool\nvalve;\n(b) underlapped\nspool valve.\n(a) (b)\nEffective\narea\nArea exposed to\nhigh pressure\nArea exposed to\nlow pressure\nA\nx\nx\n0\n2\nA\nx\nx\n0\n2\nFigure 4–33\n(a) Uncovered-port-\narea-A-versus\ndisplacement-x curve\nfor the overlapped\nvalve; (b) uncovered-\nport-area-A-versus-\ndisplacement-x curve\nfor the underlapped\nvalve.\nOpenmirrors.comExample Problems and Solutions 147\nOil under\npressure\nA\ny\nx\nFigure 4–34\nHydraulic jet-pipe\ncontroller.\nment x, the oil flows to the right side of the power piston, and the oil in the left side of the power\npiston is returned to the drain. The oil flowing into the power cylinder is at high pressure; the oil\nflowing out from the power cylinder into the drain is at low pressure. The resulting pressure\ndifference causes the power piston to move to the left.\nFor a small jet-nozzle displacement x, the flow rate q to the power cylinder is proportional to\nx; that is,\nFor the power cylinder,\nwhere A is the power-piston area and r is the density of oil. Hence\nwhere constant. The transfer function Y(s)/X(s) is thus\nThe controller produces the integral control action.\nY(s)\nX(s) = K\ns\nK = K1/H20862(Ar) =\ndy\ndt = q\nAr = K1\nAr x = Kx\nAr dy = q dt\nq = K1 x148\nChapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems\nEngine\nOil under\npressure\nk\nb\nz e\ny\na\n1\na\n2\nv\nFigure 4–35\nSpeed control\nsystem.\n+ –\nE(s) Y(s)\nZ(s)\na\n2\na\n1\n+ a\n2\nK\ns\na\n1\na\n1\n+ a\n2\nbs\nbs + k\nFigure 4–36\nBlock diagram for\nthe speed control\nsystem shown in\nFigure 4–35.\nA–4–8. Explain the operation of the speed control system shown in Figure 4–35.\nSolution. If the engine speed increases, the sleeve of the fly-ball governor moves upward. This\nmovement acts as the input to the hydraulic controller.A positive error signal (upward motion of\nthe sleeve) causes the power piston to move downward, reduces the fuel-valve opening, and\ndecreases the engine speed. A block diagram for the system is shown in Figure 4–36.\nFrom the block diagram the transfer function Y(s)/E(s) can be obtained as\nIf the following condition applies,\nthe transfer function Y(s)/E(s) becomes\nThe speed controller has proportional-plus-integral control action.\nY(s)\nE(s) /H11216a\n2\na\n1\n+ a\n2\na\n1\n+ a\n2\na\n1\nbs + k\nbs = a\n2\na\n1\na\n1 + k\nbs\nb\n2\na\n1\na\n1\n+ a\n2\nbs\nbs + k\nK\ns\n2\n/H112711\nY(s)\nE(s) = a\n2\na\n1\n+ a\n2\nK\ns\n1 + a\n1\na\n1\n+ a\n2\nbs\nbs + k\nK\ns\nOpenmirrors.comExample Problems and Solutions 149\nA–4–9. Derive the transfer function Z(s)/Y(s) of the hydraulic system shown in Figure 4–37.Assume that\nthe two dashpots in the system are identical ones except the piston shafts.\nSolution. In deriving the equations for the system, we assume that force F is applied at the right\nend of the shaft causing displacement y. (All displacements y, w, and z are measured from re-\nspective equilibrium positions when no force is applied at the right end of the shaft.) When force\nFis applied, pressure becomes higher than pressure Similarly,\nFor the force balance, we have the following equation:\n(4–42)\nSince\n(4–43)\nand\nwe have\nAlso, since\nq1 dt=A(dw-dz)r\nwe have\nor\nDefine A2Rr=B. (B is the viscous-friction coefficient.) Then\n(4–44)\nAlso, for the right-hand-side dashpot we have\nSince\nor\n(4–45)\nSubstituting Equations (4–43) and (4–45) into Equation (4–42), we have\nTaking the Laplace transform of this last equation, assuming zero initial condition, we obtain\n(4–46)k2 Y(s) = Ak2 + BsBW(s) + k1 Z(s)\nk2 y - k2 w = k1 z + Bw#\nAAP2 - Pœ\n2B= Bw#\nw# = q2\nAr =\nAAP2 - Pœ\n2B\nA2Rr\nq2 = AP2 - Pœ\n2B/H20862R, we obtain\nq2 dt = Ar dw\nw# - z# = k1\nB z\nw# - z# = k1 z\nA2Rr\nq1 = A(w# - z# )r\nk1 z = ARq1\nq1 = P1 - Pœ\n1\nR\nk1 z = AAP1 - Pœ\n1B\nk2(y - w) = AAP1 - Pœ\n1B+ AAP2 - Pœ\n2B\nP2 7 Pœ\n2 .Pœ\n1 , or P1 7 Pœ\n1 .P1\nR\nF\nR\nk2k1\nP1\nq1\nArea = A\nz\nq2\nw w yP2 P29P19\nFigure 4–37\nHydraulic system.150\nChapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems\nTaking the Laplace transform of Equation (4–44), assuming zero initial condition, we obtain\n(4–47)\nBy using Equation (4–47) to eliminate W(s) from Equation (4–46), we obtain\nfrom which we obtain the transfer function Z(s)/Y(s) to be\nMultiplying B/Ak\n1\nk\n2\nBto both the numerator and denominator of this last equation, we get\nDefine Then the transfer function Z(s)/Y(s) becomes as follows:\nA–4–10. Considering small deviations from steady-state operation, draw a block diagram of the air heat-\ning system shown in Figure 4–38. Assume that the heat loss to the surroundings and the heat\ncapacitance of the metal parts of the heater are negligible.\nSolution. Let us define\nsteady-state temperature of inlet air, °C\nsteady-state temperature of outlet air, °C\nG=mass flow rate of air through the heating chamber, kg/H20862sec\nM=mass of air contained in the heating chamber, kg\nc=specific heat of air, kcal/H20862kg °C\nR=thermal resistance, °C sec/H20862kcal\nC=thermal capacitance of air contained in the heating chamber=Mc, kcal/H20862°C\nsteady-state heat input, kcal/H20862sec\nLet us assume that the heat input is suddenly changed from to and the inlet air\ntemperature is suddenly changed from to Then the outlet air temperature will be\nchanged from to \nThe equation describing the system behavior is\nC du\no\n= Ch + GcAu\ni\n- u\no\nBDdt\nQ–\no\n+ u\no\n \n.Q–\no\nQ–\ni\n+ u\ni\n \n.Q–\ni\nH– + hH–\nH– =\nQ–\no\n=\nQ–\ni\n=\nZ(s)\nY(s) = T\n1\n \ns\nT\n1\n \nT\n2\n \ns\n2\n+ AT\n1\n+ 2T\n2\nBs + 1\nB/H20862k\n1\n= T\n1\n \n,B /H20862k\n2\n= T\n2\n \n.\nZ(s)\nY(s) =\nB\nk\n1\ns\nB\n2\nk\n1\n \nk\n2\ns\n2\n+\na\n2B\nk\n2\n+ B\nk\n1\nb\ns + 1\nZ(s)\nY(s) = k\n2\n \ns\nBs\n2\n+ A2k\n1\n+ k\n2\nBs + k\n1\n \nk\n2\nB\nk\n2\n \nY(s) = Ak\n2\n+ BsBk\n1\n+ Bs\nBs Z(s) + k\n1\n \nZ(s)\nW(s) = k\n1\n+ Bs\nBs Z(s)\nH + h\nHeaterQ\ni\n+ u\ni\nQ\no\n+ u\no\nFigure 4–38\nAir heating system.\nOpenmirrors.comExample Problems and Solutions 151\nor\nNoting that\nwe obtain\nor\nTaking the Laplace transforms of both sides of this last equation and substituting the initial\ncondition that u0(0)=0, we obtain\nThe block diagram of the system corresponding to this equation is shown in Figure 4–39.\nA–4–11. Consider the thin, glass-wall, mercury thermometer system shown in Figure 4–40.Assume that the\nthermometer is at a uniform temperature (ambient temperature) and that at t=0 it is\nimmersed in a bath of temperature where ub is the bath temperature (which may be con-\nstant or changing) measured from the ambient temperature Define the instantaneous ther-\nmometer temperature by so that uis the change in the thermometer temperature satisfying\nthe condition that u(0)=0. Obtain a mathematical model for the system. Also obtain an electri-\ncal analog of the thermometer system.\nSolution. A mathematical model for the system can be derived by considering heat balance as fol-\nlows: The heat entering the thermometer during dt sec is q dt, where q is the heat flow rate to the\nthermometer. This heat is stored in the thermal capacitance C of the thermometer, thereby rais-\ning its temperature by du. Thus the heat-balance equation is\n(4–48)C du = q dt\nQ– + u,\nQ–.\nQ– + ub ,\nQ–\nQo(s) = R\nRCs + 1 H(s) + 1\nRCs + 1 Qi(s)\nRC duo\ndt + uo = Rh + ui\nC duo\ndt = h + 1\nR Aui - uoB\nGc = 1\nR\nC duo\ndt = h + GcAui - uoB\nH(s)\n1\nRCs + 1\nR\nRCs + 1\nQi(s)\nQo(s)\n++\nFigure 4–39\nBlock diagram of the\nair heating system\nshown in\nFigure 4–38.\nThermometer\nBath\nQ + u\nQ + ub\nFigure 4–40\nThin, glass-wall,\nmercury thermo-\nmeter system.152\nChapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems\nSince thermal resistance R may be written as\nheat flow rate q may be given, in terms of thermal resistance R,a s\nwhere is the bath temperature and is the thermometer temperature. Hence, we\ncan rewrite Equation (4–48) as\nor\n(4–49)\nEquation (4–49) is a mathematical model of the thermometer system.\nReferring to Equation (4–49), an electrical analog for the thermometer system can be writ-\nten as\nAn electrical circuit represented by this last equation is shown in Figure 4–41.\nRC de\no\ndt + e\no\n= e\ni\nRC du\ndt + u = u\nb\nC du\ndt = u\nb\n- u\nR\nQ– + uQ– + u\nb\nq =\nAQ– + u\nb\nB- AQ– + uB\nR = u\nb\n- u\nR\nR =\nd(¢u)\ndq = ¢u\nq\nR\nCe\no\ne\ni\nFigure 4–41\nElectrical analog of\nthe thermometer\nsystem shown in\nFigure 4–40.\nPROBLEMS\nB–4–1. Consider the conical water-tank system shown in\nFigure 4–42. The flow through the valve is turbulent and is\nrelated to the head H by\nwhere Q is the flow rate measured in m\n3\n/H20862sec and H is in\nmeters.\nSuppose that the head is 2 m at t=0. What will be the\nhead at t=60 sec?\nQ = 0.0051H\n2m\n3m\n2m\nH\nr\nFigure 4–42 Conical water-tank system.\nOpenmirrors.comProblems 153\nB–4–2. Consider the liquid-level control system shown in\nFigure 4–43. The controller is of the proportional type. The\nset point of the controller is fixed.\nDraw a block diagram of the system, assuming that\nchanges in the variables are small. Obtain the transfer func-\ntion between the level of the second tank and the distur-\nbance input qd. Obtain the steady-state error when the\ndisturbance qd is a unit-step function.\nC2\nR1\nC1 h2\nR2\nQ + qi\nqd\nQ + q0\nH\nProportional\ncontroller\nFigure 4–43\nLiquid-level control system.\nR\nC\nA\nX + x\nP + po\nP + pi\nk\nFigure 4–44\nPneumatic system.\nB–4–3. For the pneumatic system shown in Figure 4–44,\nassume that steady-state values of the air pressure and the\ndisplacement of the bellows are and respectively.\nAssume also that the input pressure is changed from to\nwhere pi is a small change in the input pressure.This\nchange will cause the displacement of the bellows to change\na small amount x.Assuming that the capacitance of the bel-\nlows is C and the resistance of the valve is R, obtain the\ntransfer function relating x and pi .\nP– + pi,\nP–X– ,P–154\nChapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems\nB–4–4. Figure 4–45 shows a pneumatic controller.The pneu-\nmatic relay has the characteristic that p\nc\n=Kp\nb\n, where\nK>0. What kind of control action does this controller\nproduce? Derive the transfer function P\nc\n(s)/H20862E(s).\nB–4–5. Consider the pneumatic controller shown in \nFigure 4–46.Assuming that the pneumatic relay has the char-\nacteristics that (where K>0), determine the con-\ntrol action of this controller. The input to the controller is e\nand the output is p\nc\n.\np\nc\n= Kp\nb\nActuating error signal\nFlapper\nNozzle\ne\na\nb\nX + x\nR\nI\nk\nOrifice\nP\ns\nP\nb\n + p\nb\nP\nc\n + p\nc\nFigure 4–46\nPneumatic controller.\nk\nOrifice\nActuating error signal\nFlapper\nNozzle\nP\ns\ne\na\nb\nP\nb\n+ p\nb\nX + x\nY + y\nP\nc\n+ p\nc\nFigure 4–45\nPneumatic controller.\nOpenmirrors.comProblems 155\nActuating error signal\nFlapper\nNozzle\ne\na\nb\nk\nX + x\nR\nII IOrifice\nPs\nPb + pb\nPc + pc\nFigure 4–47\nPneumatic controller.\nActuating error signal\nFlapper\nNozzle\ne\na\nb\nk\nX + x\nR2\nII I\nR1\nOrifice\nPs\nPb + pb\nPc + pc\nFigure 4–48\nPneumatic controller.\nB–4–6. Figure 4–47 shows a pneumatic controller. The sig-\nnal e is the input and the change in the control pressure \nis the output. Obtain the transfer function .\nAssume that the pneumatic relay has the characteristics that\nwhere K>0.pc = Kpb ,\nPc(s)/H20862E(s)\npc\nB–4–7. Consider the pneumatic controller shown in \nFigure 4–48. What control action does this controller pro-\nduce? Assume that the pneumatic relay has the character-\nistics that where K>0.pc = Kpb ,156\nChapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems\nB–4–8. Figure 4–49 shows a flapper valve. It is placed\nbetween two opposing nozzles. If the flapper is moved slight-\nly to the right, the pressure unbalance occurs in the nozzles\nand the power piston moves to the left, and vice versa. Such\na device is frequently used in hydraulic servos as the first-\nstage valve in two-stage servovalves. This usage occurs\nbecause considerable force may be needed to stroke larger\nspool valves that result from the steady-state flow force. To\nreduce or compensate this force, two-stage valve configura-\ntion is often employed; a flapper valve or jet pipe is used as\nthe first-stage valve to provide a necessary force to stroke\nthe second-stage spool valve.\ndiagram of the system of Figure 4–50 and then find the trans-\nfer function between y and x, where x is the air pressure and\ny is the displacement of the power piston.\nx\ny\nOil under\npressure\nOil under\npressure\ny\nFlapper\nx\nFigure 4–49 Flapper valve.\nu\nf\nl\na\nb\nOil under\npressure\nFigure 4–51\nAircraft elevator\ncontrol system.\nB–4–9. Figure 4–51 is a schematic diagram of an aircraft\nelevator control system. The input to the system is the de-\nflection angle u of the control lever, and the output is the el-\nevator angle f. Assume that angles u and f are relatively\nsmall. Show that for each angle u of the control lever there\nis a corresponding (steady-state) elevator angle f.\nFigure 4–50\nSchematic diagram of a\nhydraulic servomotor.\nFigure 4–50 shows a schematic diagram of a hydraulic\nservomotor in which the error signal is amplified in two\nstages using a jet pipe and a pilot valve. Draw a block\nOpenmirrors.comProblems 157\nB–4–10. Consider the liquid-level control system shown in\nFigure 4–52. The inlet valve is controlled by a hydraulic\nintegral controller.Assume that the steady-state inflow rate\nis and steady-state outflow rate is also the steady-state\nhead is steady-state pilot valve displacement is \nand steady-state valve position is We assume that the set\npoint corresponds to the steady-state head The set\npoint is fixed. Assume also that the disturbance inflow rate\nqd , which is a small quantity, is applied to the water tank at\nt=0.This disturbance causes the head to change from to\nThis change results in a change in the outflow rate\nby qo . Through the hydraulic controller, the change in head\ncauses a change in the inflow rate from to (The\nintegral controller tends to keep the head constant as much\nas possible in the presence of disturbances.) We assume that\nall changes are of small quantities.\nQ– + qi .Q–\nH– + h.\nH–\nH– .R– Y–.\nX– = 0,H– ,\nQ–,Q–\nWe assume that the velocity of the power piston (valve)\nis proportional to pilot-valve displacement x,o r\nwhere K1 is a positive constant. We also assume that the\nchange in the inflow rate qi is negatively proportional to the\nchange in the valve opening y,o r\nwhere Kv is a positive constant.\nAssuming the following numerical values for the system,\nC=2 m2, R=0.5 sec/H20862m2, Kv=1 m2/H20862sec\na=0.25 m, b=0.75 m, K1=4 sec–1\nobtain the transfer function H(s)/Qd(s).\nqi =- Kv y\ndy\ndt = K1 x\nC (Capacitance)\nR\n(Resistance)\na b\nh\nY + y qd\nQ + qi\nH + h\nQ + qo\nx\nFigure 4–52\nLiquid-level control system.158\nChapter 4 / Mathematical Modeling of Fluid Systems and Thermal Systems\nB–4–11. Consider the controller shown in Figure 4–53.The\ninput is the air pressure p\ni\nmeasured from some steady-state\nreference pressure and the output is the displacement y of\nthe power piston. Obtain the transfer function Y(s)/H20862P\ni\n(s).\nP–\nB–4–12. A thermocouple has a time constant of 2 sec. A\nthermal well has a time constant of 30 sec. When the ther-\nmocouple is inserted into the well, this temperature-\nmeasuring device can be considered a two-capacitance\nsystem.\nDetermine the time constants of the combined thermo-\ncouple–thermal-well system.Assume that the weight of the\nthermocouple is 8 g and the weight of the thermal well is\n40 g.Assume also that the specific heats of the thermocouple\nand thermal well are the same.\naa\nbb\nAir p\ni\n(Input)\ny (Output)\nx\nk\nBellows\nFigure 4–53\nController.\nOpenmirrors.com5\n159\nTransient and Steady-State\nResponse Analyses\n5–1 INTRODUCTION\nIn early chapters it was stated that the first step in analyzing a control system was to de-\nrive a mathematical model of the system. Once such a model is obtained, various meth-\nods are available for the analysis of system performance.\nIn practice, the input signal to a control system is not known ahead of time but is\nrandom in nature, and the instantaneous input cannot be expressed analytically. Only in\nsome special cases is the input signal known in advance and expressible analytically or\nby curves, such as in the case of the automatic control of cutting tools.\nIn analyzing and designing control systems, we must have a basis of comparison of\nperformance of various control systems. This basis may be set up by specifying particular\ntest input signals and by comparing the responses of various systems to these input signals.\nMany design criteria are based on the response to such test signals or on the re-\nsponse of systems to changes in initial conditions (without any test signals). The use of\ntest signals can be justified because of a correlation existing between the response char-\nacteristics of a system to a typical test input signal and the capability of the system to cope\nwith actual input signals.\nTypical Test Signals. The commonly used test input signals are step functions,\nramp functions, acceleration functions, impulse functions, sinusoidal functions, and white\nnoise. In this chapter we use test signals such as step, ramp, acceleration and impulse\nsignals. With these test signals, mathematical and experimental analyses of control sys-\ntems can be carried out easily, since the signals are very simple functions of time.\naaaa\n160\nChapter 5 / Transient and Steady-State Response Analyses\nWhich of these typical input signals to use for analyzing system characteristics may\nbe determined by the form of the input that the system will be subjected to most\nfrequently under normal operation. If the inputs to a control system are gradually\nchanging functions of time, then a ramp function of time may be a good test signal. Sim-\nilarly, if a system is subjected to sudden disturbances, a step function of time may be a\ngood test signal; and for a system subjected to shock inputs, an impulse function may be\nbest. Once a control system is designed on the basis of test signals, the performance of\nthe system in response to actual inputs is generally satisfactory. The use of such test\nsignals enables one to compare the performance of many systems on the same basis.\nTransient Response and Steady-State Response. The time response of a\ncontrol system consists of two parts: the transient response and the steady-state response.\nBy transient response, we mean that which goes from the initial state to the final state.\nBy steady-state response, we mean the manner in which the system output behaves as\nt approaches infinity. Thus the system response c(t) may be written as\nwhere the first term on the right-hand side of the equation is the transient response and\nthe second term is the steady-state response.\nAbsolute Stability, Relative Stability, and Steady-State Error. In designing a\ncontrol system, we must be able to predict the dynamic behavior of the system from a\nknowledge of the components. The most important characteristic of the dynamic\nbehavior of a control system is absolute stability—that is, whether the system is stable or\nunstable.A control system is in equilibrium if, in the absence of any disturbance or input,\nthe output stays in the same state. A linear time-invariant control system is stable if the\noutput eventually comes back to its equilibrium state when the system is subjected to\nan initial condition. A linear time-invariant control system is critically stable if oscilla-\ntions of the output continue forever. It is unstable if the output diverges without bound\nfrom its equilibrium state when the system is subjected to an initial condition.Actually,\nthe output of a physical system may increase to a certain extent but may be limited by\nmechanical “stops,” or the system may break down or become nonlinear after the out-\nput exceeds a certain magnitude so that the linear differential equations no longer apply.\nImportant system behavior (other than absolute stability) to which we must give\ncareful consideration includes relative stability and steady-state error. Since a physical\ncontrol system involves energy storage, the output of the system, when subjected to an\ninput, cannot follow the input immediately but exhibits a transient response before a\nsteady state can be reached. The transient response of a practical control system often\nexhibits damped oscillations before reaching a steady state. If the output of a system at\nsteady state does not exactly agree with the input, the system is said to have steady-\nstate error. This error is indicative of the accuracy of the system. In analyzing a control\nsystem, we must examine transient-response behavior and steady-state behavior.\nOutline of the Chapter. This chapter is concerned with system responses to\naperiodic signals (such as step, ramp, acceleration, and impulse functions of time). The\noutline of the chapter is as follows: Section 5–1 has presented introductory material for\nthe chapter. Section 5–2 treats the response of first-order systems to aperiodic inputs.\nSection 5–3 deals with the transient response of the second-order systems. Detailed\nc(t) = c\ntr\n(t) + c\nss\n(t)\nOpenmirrors.comaa\nSection 5–2 / First-Order Systems 161\nR(s) E(s) C(s) R(s) C(s)\n(a) (b)\n1\nTs\n1\nTs + 1+ –Figure 5–1\n(a) Block diagram of\na first-order system;\n(b) simplified block\ndiagram.\nanalyses of the step response, ramp response, and impulse response of the second-order\nsystems are presented. Section 5–4 discusses the transient-response analysis of higher-\norder systems. Section 5–5 gives an introduction to the MATLAB approach to the solution\nof transient-response problems. Section 5–6 gives an example of a transient-response\nproblem solved with MATLAB. Section 5–7 presents Routh’s stability criterion. Section\n5–8 discusses effects of integral and derivative control actions on system performance.\nFinally, Section 5–9 treats steady-state errors in unity-feedback control systems.\n5–2 FIRST-ORDER SYSTEMS\nConsider the first-order system shown in Figure 5–1(a). Physically, this system may\nrepresent an RC circuit, thermal system, or the like.A simplified block diagram is shown\nin Figure 5–1(b). The input-output relationship is given by\n(5–1)\nIn the following, we shall analyze the system responses to such inputs as the unit-step,\nunit-ramp, and unit-impulse functions. The initial conditions are assumed to be zero.\nNote that all systems having the same transfer function will exhibit the same output\nin response to the same input. For any given physical system, the mathematical response\ncan be given a physical interpretation.\nUnit-Step Response of First-Order Systems. Since the Laplace transform of\nthe unit-step function is 1/s, substituting R(s)=1/s into Equation (5–1), we obtain\nExpanding C(s) into partial fractions gives\n(5–2)\nTaking the inverse Laplace transform of Equation (5–2), we obtain\nfor t /H113500 (5–3)\nEquation (5–3) states that initially the output c(t) is zero and finally it becomes unity.\nOne important characteristic of such an exponential response curve c(t) is that at t=T\nthe value of c(t) is 0.632, or the response c(t) has reached 63.2% of its total change.This\nmay be easily seen by substituting t=T in c(t). That is,\nc(T) = 1 - e-1 = 0.632\nc(t) = 1 - e-t/H20862T,\nC(s) = 1\ns - T\nTs + 1 = 1\ns - 1\ns + (1/H20862T)\nC(s) = 1\nTs + 1\n1\ns\nC(s)\nR(s) = 1\nTs + 1aa\n162\nChapter 5 / Transient and Steady-State Response Analyses\nc(t)\n1\n0\n0.632 A\nB\nT 2T 3T 4T 5Tt\nSlope = 1\nT\nc(t) = 1 – e\n– (t/T)\n63.2%\n86.5%\n95%\n98.2%\n99.3%\nFigure 5–2\nExponential\nresponse curve.\nNote that the smaller the time constant T, the faster the system response. Another\nimportant characteristic of the exponential response curve is that the slope of the tangent\nline at t=0 is 1/T, since\n(5–4)\nThe output would reach the final value at t=T if it maintained its initial speed of\nresponse. From Equation (5–4) we see that the slope of the response curve c(t) decreases\nmonotonically from 1/T at t=0 to zero at t=q.\nThe exponential response curve c(t) given by Equation (5–3) is shown in Figure 5–2.\nIn one time constant, the exponential response curve has gone from 0 to 63.2% of the final\nvalue. In two time constants, the response reaches 86.5% of the final value.At t=3T,4 T,\nand 5T, the response reaches 95%, 98.2%, and 99.3%, respectively, of the final value.Thus,\nfor t /H113504T, the response remains within 2% of the final value. As seen from Equation\n(5–3), the steady state is reached mathematically only after an infinite time. In practice,\nhowever, a reasonable estimate of the response time is the length of time the response\ncurve needs to reach and stay within the 2% line of the final value, or four time constants.\nUnit-Ramp Response of First-Order Systems. Since the Laplace transform of\nthe unit-ramp function is 1/s\n2\n, we obtain the output of the system of Figure 5–1(a) as\nExpanding C(s) into partial fractions gives\n(5–5)\nTaking the inverse Laplace transform of Equation (5–5), we obtain\nfor t /H113500 (5–6)\nThe error signal e(t) is then\n = TA1 - e\n-t/H20862T\nB\n e(t) = r(t) - c(t)\nc(t) = t - T + Te\n-t/H20862T\n,\nC(s) = 1\ns\n2\n- T\ns + T\n2\nTs + 1\nC(s) = 1\nTs + 1\n1\ns\n2\ndc\ndt\n2\nt = 0\n= 1\nT e\n-t/H20862T\n2\nt = 0\n= 1\nT\nOpenmirrors.comaa\nSection 5–2 / First-Order Systems 163\nr(t)\nc(t)\n6T\n4T\n2T\n02 T 4T 6Tt\nT\nT\nr(t) = t\nc(t)\nSteady-state\nerror\nFigure 5–3\nUnit-ramp response\nof the system shown\nin Figure 5–1(a).\nc(t)\n02 TT 4T3Tt\n1\nT\nc(t) = e– (t/T)1\nTFigure 5–4\nUnit-impulse\nresponse of the\nsystem shown in\nFigure 5–1(a).\nAs t approaches infinity,e–t/T approaches zero, and thus the error signal e(t) approaches\nT or\nThe unit-ramp input and the system output are shown in Figure 5–3. The error in\nfollowing the unit-ramp input is equal to T for sufficiently large t. The smaller the time\nconstant T, the smaller the steady-state error in following the ramp input.\nUnit-Impulse Response of First-Order Systems. For the unit-impulse input,\nR(s)=1 and the output of the system of Figure 5–1(a) can be obtained as\n(5–7)\nThe inverse Laplace transform of Equation (5–7) gives\nfor t /H113500 (5–8)\nThe response curve given by Equation (5–8) is shown in Figure 5–4.\nc(t) = 1\nT e-t/H20862T,\nC(s) = 1\nTs + 1\ne(q) = Taa\n164\nChapter 5 / Transient and Steady-State Response Analyses\nAn Important Property of Linear Time-Invariant Systems. In the analysis\nabove, it has been shown that for the unit-ramp input the output c(t) is\nfor t /H113500 [See Equation (5–6).]\nFor the unit-step input, which is the derivative of unit-ramp input, the output c(t) is\nfor t /H113500 [See Equation (5–3).]\nFinally, for the unit-impulse input, which is the derivative of unit-step input, the output\nc(t) is\nfor t /H113500 [See Equation (5–8).]\nComparing the system responses to these three inputs clearly indicates that the response\nto the derivative of an input signal can be obtained by differentiating the response of the\nsystem to the original signal. It can also be seen that the response to the integral of the\noriginal signal can be obtained by integrating the response of the system to the original\nsignal and by determining the integration constant from the zero-output initial condi-\ntion.This is a property of linear time-invariant systems. Linear time-varying systems and\nnonlinear systems do not possess this property.\n5–3 SECOND-ORDER SYSTEMS\nIn this section, we shall obtain the response of a typical second-order control system to\na step input, ramp input, and impulse input. Here we consider a servo system as an\nexample of a second-order system.\nServo System. The servo system shown in Figure 5–5(a) consists of a proportional\ncontroller and load elements (inertia and viscous-friction elements). Suppose that we\nwish to control the output position c in accordance with the input position r.\nThe equation for the load elements is\nwhere T is the torque produced by the proportional controller whose gain is K.B y\ntaking Laplace transforms of both sides of this last equation, assuming the zero initial\nconditions, we obtain\nSo the transfer function between C(s) and T(s) is\nBy using this transfer function, Figure 5–5(a) can be redrawn as in Figure 5–5(b), which\ncan be modified to that shown in Figure 5–5(c).The closed-loop transfer function is then\nobtained as\nSuch a system where the closed-loop transfer function possesses two poles is called a\nsecond-order system. (Some second-order systems may involve one or two zeros.)\nC(s)\nR(s) = K\nJs\n2\n+ Bs + K = K/H20862J\ns\n2\n+ (B/H20862J)s + (K/H20862J)\nC(s)\nT(s) = 1\ns(Js + B)\nJs\n2\nC(s) + BsC(s) = T(s)\nJc$ + Bc# = T\n c(t) = 1\nT e\n-t/H20862T\n,\n c(t) = 1 - e\n-t/H20862T\n,\n c(t) = t - T + Te\n-t/H20862T\n,\nOpenmirrors.comaa\nSection 5–3 / Second-Order Systems 165\n+ –\nr\nK\n1\ns(Js + B)\nec T\nJ\nB\n(a)\n+ –\nR(s)\nR(s)\nC(s)\nC(s)\nT(s)\n(b)\nK\nK\ns(Js + B)+ –\n(c)\nFigure 5–5\n(a) Servo system;\n(b) block diagram;\n(c) simplified block\ndiagram.\nStep Response of Second-Order System. The closed-loop transfer function of\nthe system shown in Figure 5–5(c) is\n(5–9)\nwhich can be rewritten as\nThe closed-loop poles are complex conjugates if B2-4JK<0 and they are real if\nB2-4JK /H113500. In the transient-response analysis, it is convenient to write\nwhere s is called the attenuation; vn , the undamped natural frequency; and z, the damp-\ning ratio of the system. The damping ratio z is the ratio of the actual damping B to the\ncritical damping or\nz = B\nBc\n= B\n21JK\nBc = 21JK\nK\nJ = v2\nn ,  B\nJ = 2zvn = 2s\nC(s)\nR(s) =\nK\nJ\ncs + B\n2J + BaB\n2J b\n2\n- K\nJ dcs + B\n2J - BaB\n2J b\n2\n- K\nJ d\nC(s)\nR(s) = K\nJs2 + Bs + Kaa\n166\nChapter 5 / Transient and Steady-State Response Analyses\nR(s) E(s) C(s)v\nn\ns(s + 2zv\nn\n)\n2\n+ –\nFigure 5–6\nSecond-order system.\nIn terms of z and v\nn\n, the system shown in Figure 5–5(c) can be modified to that shown\nin Figure 5–6, and the closed-loop transfer function C(s)/R(s) given by Equation (5–9)\ncan be written\n(5–10)\nThis form is called the standard form of the second-order system.\nThe dynamic behavior of the second-order system can then be described in terms of\ntwo parameters z and v\nn\n. If 0<z<1, the closed-loop poles are complex conjugates\nand lie in the left-half s plane. The system is then called underdamped, and the tran-\nsient response is oscillatory. If z=0, the transient response does not die out. If z=1,\nthe system is called critically damped. Overdamped systems correspond to z>1.\nWe shall now solve for the response of the system shown in Figure 5–6 to a unit-step\ninput. We shall consider three different cases: the underdamped (0<z<1), critically\ndamped (z=1), and overdamped (z>1) cases.\n(1) Underdamped case (0<z<1): In this case, C(s)/R(s) can be written\nwhere The frequency v\nd\nis called the damped natural frequency.F o r\na unit-step input, C(s) can be written\n(5–11)\nThe inverse Laplace transform of Equation (5–11) can be obtained easily if C(s) is writ-\nten in the following form:\nReferring to the Laplace transform table in Appendix A, it can be shown that\n l\n-1\nc\nv\nd\nAs + zv\nn\nB\n2\n+ v\n2\nd\nd\n= e\n-zv\nn\n \nt\nsin v\nd\n \nt\n l\n-1\nc\ns + zv\nn\nAs + zv\nn\nB\n2\n+ v\n2\nd\nd\n= e\n-zv\nn\n \nt\ncos v\nd\n \nt\n = 1\ns - s + zv\nn\nAs + zv\nn\nB\n2\n+ v\n2\nd\n- zv\nn\nAs + zv\nn\nB\n2\n+ v\n2\nd\n C(s) = 1\ns - s + 2zv\nn\ns\n2\n+ 2zv\nn\n \ns + v\n2\nn\nC(s) = v\n2\nn\nAs\n2\n+ 2zv\nn\n \ns + v\n2\nn\nBs\nv\nd\n= v\nn\n21 - z\n2\n.\nC(s)\nR(s) = v\n2\nn\nAs + zv\nn\n+ jv\nd\nBAs + zv\nn\n- jv\nd\nB\nC(s)\nR(s) = v\n2\nn\ns\n2\n+ 2zv\nn\n \ns + v\n2\nn\nOpenmirrors.comaa\nSection 5–3 / Second-Order Systems 167\nHence the inverse Laplace transform of Equation (5–11) is obtained as\nfor t /H113500 (5–12)\nFrom Equation (5–12), it can be seen that the frequency of transient oscillation is the\ndamped natural frequency vd and thus varies with the damping ratio z.The error signal\nfor this system is the difference between the input and output and is\nfor t /H113500\nThis error signal exhibits a damped sinusoidal oscillation. At steady state, or at t=q,\nno error exists between the input and output.\nIf the damping ratio z is equal to zero, the response becomes undamped and\noscillations continue indefinitely. The response c(t) for the zero damping case may be\nobtained by substituting z=0 in Equation (5–12), yielding\nfor t /H113500 (5–13)\nThus, from Equation (5–13), we see that vn represents the undamped natural frequen-\ncy of the system.That is,vn is that frequency at which the system output would oscillate\nif the damping were decreased to zero. If the linear system has any amount of damping,\nthe undamped natural frequency cannot be observed experimentally. The frequency \nthat may be observed is the damped natural frequency vd, which is equal to \nThis frequency is always lower than the undamped natural frequency. An increase in z\nwould reduce the damped natural frequency vd .I f  z is increased beyond unity, the\nresponse becomes overdamped and will not oscillate.\n(2) Critically damped case (z=1): If the two poles of C(s)/R(s) are equal, the system\nis said to be a critically damped one.\nFor a unit-step input, R(s)=1/s and C(s) can be written\n(5–14)\nThe inverse Laplace transform of Equation (5–14) may be found as\nfor t /H113500 (5–15)\nThis result can also be obtained by letting z approach unity in Equation (5–12) and by\nusing the following limit:\nlim\nzS 1\nsin vd t\n21 - z2\n= lim\nzS 1\nsin vn 21 - z2 t\n21 - z2\n= vn t\nc(t) = 1 - e-vn tA1 + vn tB,\nC(s) = v2\nn\nAs + vnB\n2\ns\nvn 21 - z2 .\nc(t) = 1 - cos vn t,\n = e-zvn t acos vd t + z\n21 - z2\nsin vd t b,\n e(t) = r(t) - c(t)\n = 1 - e-zvn t\n21 - z2\nsin avd t + tan-1 21 - z2\nz b,\n = 1 - e-zvn t acos vd t + z\n21 - z2\nsin vd t b\n l-1 CC(s)D = c(t)aa\n168\nChapter 5 / Transient and Steady-State Response Analyses\n(3) Overdamped case (z>1): In this case, the two poles of C(s)/R(s) are negative\nreal and unequal. For a unit-step input,R(s)=1/s and C(s) can be written\n(5–16)\nThe inverse Laplace transform of Equation (5–16) is\nfor t /H113500 (5–17)\nwhere and Thus, the response c(t)\nincludes two decaying exponential terms.\nWhen z is appreciably greater than unity, one of the two decaying exponentials\ndecreases much faster than the other, so the faster-decaying exponential term (which\ncorresponds to a smaller time constant) may be neglected. That is, if –s\n2\nis located very\nmuch closer to the jv axis than –s\n1\nAwhich means @s\n2\n@/H11270@s\n1\n@B, then for an approximate\nsolution we may neglect –s\n1\n.This is permissible because the effect of –s\n1\non the response\nis much smaller than that of –s\n2\n, since the term involving s\n1\nin Equation (5–17) decays\nmuch faster than the term involving s\n2\n. Once the faster-decaying exponential term has\ndisappeared, the response is similar to that of a first-order system, and C(s)/R(s) may\nbe approximated by\nThis approximate form is a direct consequence of the fact that the initial values and\nfinal values of both the original C(s)/R(s) and the approximate one agree with each\nother.\nWith the approximate transfer function C(s)/R(s), the unit-step response can be\nobtained as\nThe time response c(t) is then\nfor t /H113500\nThis gives an approximate unit-step response when one of the poles of C(s)/R(s) can\nbe neglected.\nc(t) = 1 - e\n-Az- 2z\n2\n- 1\nBv\nn\n \nt\n,\nC(s) = zv\nn\n- v\nn\n2z\n2\n- 1\nAs + zv\nn\n- v\nn\n2z\n2\n- 1\nBs\nC(s)\nR(s) = zv\nn\n- v\nn\n2z\n2\n- 1\ns + zv\nn\n- v\nn\n2z\n2\n- 1\n= s\n2\ns + s\n2\ns\n2\n= Az - 2z\n2\n- 1\nBv\nn\n \n.s\n1\n= Az + 2z\n2\n- 1\nBv\nn\n= 1 + v\nn\n22z\n2\n- 1\na\ne\n-s\n1\n \nt\ns\n1\n- e\n-s\n2\n \nt\ns\n2\nb\n,\n- 1\n22z\n2\n- 1\nAz - 2z\n2\n- 1\nB\ne\n-Az- 2z\n2\n- 1\nBv\nn\nt\nc(t) = 1 + 1\n22z\n2\n- 1\nAz + 2z\n2\n- 1\nB\ne\n-Az+ 2z\n2\n- 1\nBv\nn\nt\nC(s) = v\n2\nn\nAs + zv\nn\n+ v\nn\n2z\n2\n- 1\nBAs + zv\nn\n- v\nn\n2z\n2\n- 1\nBs\nOpenmirrors.comaa\nSection 5–3 / Second-Order Systems 169\n2.0\n1.8\n1.6\n1.4\n1.2\n1.0\n0.8\n0.6\n0.4\n0.2\n0 123456789 1 0 1 1 1 2\n0.8\nvnt\nc(t)\nz = 0\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\n0.7\n1.0\n2.0\nFigure 5–7\nUnit-step response\ncurves of the system\nshown in Figure 5–6.\nA family of unit-step response curves c(t) with various values of z is shown in Fig-\nure 5–7, where the abscissa is the dimensionless variable vn t. The curves are functions\nonly of z. These curves are obtained from Equations (5–12), (5–15), and (5–17). The\nsystem described by these equations was initially at rest.\nNote that two second-order systems having the same z but different vn will exhibit\nthe same overshoot and the same oscillatory pattern. Such systems are said to have the\nsame relative stability.\nFrom Figure 5–7, we see that an underdamped system with zbetween 0.5 and 0.8 gets\nclose to the final value more rapidly than a critically damped or overdamped system.\nAmong the systems responding without oscillation, a critically damped system exhibits\nthe fastest response.An overdamped system is always sluggish in responding to any inputs.\nIt is important to note that, for second-order systems whose closed-loop transfer\nfunctions are different from that given by Equation (5–10), the step-response curves\nmay look quite different from those shown in Figure 5–7.\nDefinitions of Transient-Response Specifications. Frequently, the perform-\nance characteristics of a control system are specified in terms of the transient response to\na unit-step input, since it is easy to generate and is sufficiently drastic. (If the response to\na step input is known, it is mathematically possible to compute the response to any input.)\nThe transient response of a system to a unit-step input depends on the initial condi-\ntions. For convenience in comparing transient responses of various systems, it is a com-\nmon practice to use the standard initial condition that the system is at rest initially with\nthe output and all time derivatives thereof zero. Then the response characteristics of\nmany systems can be easily compared.\nThe transient response of a practical control system often exhibits damped oscilla-\ntions before reaching steady state. In specifying the transient-response characteristics of\na control system to a unit-step input, it is common to specify the following:\n1. Delay time, td\n2. Rise time, traa\n170\nChapter 5 / Transient and Steady-State Response Analyses\nc(t)\n0.5\n1\n0\nAllowable tolerance\nM\np\nt\nd\nt\n0.05\nor\n0.02\nt\nr\nt\np\nt\ns\nFigure 5–8\nUnit-step response\ncurve showing t\nd\n, t\nr\n,\nt\np\n, M\np\n, and t\ns\n.\n3. Peak time, t\np\n4. Maximum overshoot, M\np\n5. Settling time, t\ns\nThese specifications are defined in what follows and are shown graphically in Figure 5–8.\n1. Delay time, t\nd\n: The delay time is the time required for the response to reach half\nthe final value the very first time.\n2. Rise time, t\nr\n: The rise time is the time required for the response to rise from 10%\nto 90%,5 % to 95%, or 0% to 100% of its final value. For underdamped second-\norder systems, the 0% to 100% rise time is normally used. For overdamped systems,\nthe 10% to 90% rise time is commonly used.\n3. Peak time,t\np\n:The peak time is the time required for the response to reach the first\npeak of the overshoot.\n4. Maximum (percent) overshoot, M\np\n: The maximum overshoot is the maximum\npeak value of the response curve measured from unity. If the final steady-state\nvalue of the response differs from unity, then it is common to use the maximum\npercent overshoot. It is defined by\nThe amount of the maximum (percent) overshoot directly indicates the relative\nstability of the system.\n5. Settling time, t\ns\n: The settling time is the time required for the response curve to\nreach and stay within a range about the final value of size specified by absolute per-\ncentage of the final value (usually 2 % or 5%). The settling time is related to the\nlargest time constant of the control system.Which percentage error criterion to use\nmay be determined from the objectives of the system design in question.\nThe time-domain specifications just given are quite important, since most control\nsystems are time-domain systems; that is, they must exhibit acceptable time responses.\n(This means that, the control system must be modified until the transient response is\nsatisfactory.)\nMaximum percent overshoot =\ncAt\np\nB- c(q)\nc(q) * 100%\nOpenmirrors.comaa\nSection 5–3 / Second-Order Systems\n171\njv\njv\nd\nv\nn\ns\nb\nzv\nn\n–s\nv\nn\n \n1 – z\n2\n0\nFigure 5–9\nDefinition of the\nangle b.\nNote that not all these specifications necessarily apply to any given case. For exam-\nple, for an overdamped system, the terms peak time and maximum overshoot do not\napply. (For systems that yield steady-state errors for step inputs, this error must be kept\nwithin a specified percentage level. Detailed discussions of steady-state errors are post-\nponed until Section 5–8.)\nA Few Comments on Transient-Response Specifications. Except for certain\napplications where oscillations cannot be tolerated, it is desirable that the transient re-\nsponse be sufficiently fast and be sufficiently damped.Thus, for a desirable transient re-\nsponse of a second-order system, the damping ratio must be between 0.4 and 0.8. Small\nvalues of z(that is, z<0.4) yield excessive overshoot in the transient response, and a\nsystem with a large value of z(that is, z>0.8) responds sluggishly.\nWe shall see later that the maximum overshoot and the rise time conflict with each other.\nIn other words, both the maximum overshoot and the rise time cannot be made smaller\nsimultaneously. If one of them is made smaller, the other necessarily becomes larger.\nSecond-Order Systems and Transient-Response Specifications. In the fol-\nlowing, we shall obtain the rise time, peak time, maximum overshoot, and settling time\nof the second-order system given by Equation (5–10). These values will be obtained in\nterms of z and v\nn\n. The system is assumed to be underdamped.\nRise timet\nr\n: Referring to Equation (5–12), we obtain the rise time t\nr\nby letting cAt\nr\nB=1.\n(5–18)\nSince we obtain from Equation (5–18) the following equation:\nSince and , we have\nThus, the rise time t\nr\nis\n(5–19)\nwhere angle b is defined in Figure 5–9. Clearly, for a small value of t\nr\n, v\nd\nmust be large.\nt\nr\n= 1\nv\nd\ntan\n-1\n \na\nv\nd\n-s\nb\n= p - b\nv\nd\ntan v\nd\n \nt\nr\n=-  21 - z\n2\nz =-  v\nd\ns\nzv\nn\n= sv\nn\n21 - z\n2\n= v\nd\ncos v\nd\n \nt\nr\n+ z\n21 - z\n2\nsin v\nd\n \nt\nr\n= 0\ne\n-zv\nn\n \nt\nr\nZ 0,\ncAt\nr\nB = 1 = 1 - e\n-zv\nn\n \nt\nr\na\ncos v\nd\n \nt\nr\n+ z\n21 - z\n2\nsin v\nd\n \nt\nr\nb\nOpenmirrors.comaa\n172\nChapter 5 / Transient and Steady-State Response Analyses\nPeak time t\np\n: Referring to Equation (5–12), we may obtain the peak time by differen-\ntiating c(t) with respect to time and letting this derivative equal zero. Since\nand the cosine terms in this last equation cancel each other, dc/H20862dt, evaluated at t=t\np\n,\ncan be simplified to\nThis last equation yields the following equation:\nor\nSince the peak time corresponds to the first peak overshoot, Hence\n(5–20)\nThe peak time t\np\ncorresponds to one-half cycle of the frequency of damped oscillation.\nMaximum overshoot M\np\n: The maximum overshoot occurs at the peak time or at\nt=t\np\n=p/H20862v\nd\n.Assuming that the final value of the output is unity,M\np\nis obtained from\nEquation (5–12) as\n(5–21)\nThe maximum percent overshoot is \nIf the final value c(q) of the output is not unity, then we need to use the following\nequation:\nSettling time t\ns\n: For an underdamped second-order system, the transient response is\nobtained from Equation (5–12) as\nfor t /H113500c(t) = 1 - e\n-zv\nn\n \nt\n21 - z\n2\nsin\n \na\nv\nd\n \nt + tan\n-1\n 21 - z\n2\nz\nb\n,\nM\np\n=\ncAt\np\nB - c(q)\nc(q)\ne\n-As/H20862v\nd\nBp\n* 100%.\n = e\n-As/H20862v\nd\nBp\n= e\n-Az/H2086221 - z\n2\nBp\n =- e\n-zv\nn\nAp/H20862v\nd\nB\na\ncos p + z\n21 - z\n2\nsin p\nb\n M\np\n= cAt\np\nB- 1\nt\np\n= p\nv\nd\nv\nd\n \nt\np\n= p.\nv\nd\n \nt\np\n= 0, p, 2p, 3p, p\nsin v\nd\n \nt\np\n= 0\ndc\ndt\n2\nt = t\np\n= Asin v\nd\n \nt\np\nB v\nn\n21 - z\n2\n e\n-zv\nn\n \nt\np\n= 0\n + e\n-zv\nn\n \nt\na\nv\nd\nsin v\nd\n \nt - zv\nd\n21 - z\n2\ncos v\nd\n \nt\nb\n dc\ndt = zv\nn\n \ne\n-zv\nn\n \nt\na\ncos v\nd\n \nt + z\n21 - z\n2\nsin v\nd\n \nt\nb\nOpenmirrors.comaa\nSection 5–3 / Second-Order Systems 173\n1\nc(t)\n1 + 1\n1 – z2\n1 + e–zvnt\n1 – z2\nT = 1\nzvn\n1 – e–zvnt\n1 – z2\n0\n1 – 1\n1 – z2\n3T 4TtT 2T\nFigure 5–10\nPair of envelope\ncurves for the unit-\nstep response curve\nof the system shown\nin Figure 5–6.\nThe curves are the envelope curves of the transient response to\na unit-step input. The response curve c(t) always remains within a pair of the envelope\ncurves, as shown in Figure 5–10. The time constant of these envelope curves is 1/H20862zvn .\nThe speed of decay of the transient response depends on the value of the time constant\n1/H20862zvn . For a given vn , the settling time ts is a function of the damping ratio z. From\nFigure 5–7, we see that for the same vn and for a range of zbetween 0 and 1 the settling time\nts for a very lightly damped system is larger than that for a properly damped system. For an\noverdamped system, the settling time ts becomes large because of the sluggish response.\nThe settling time corresponding to a ; 2% or ;5% tolerance band may be measured\nin terms of the time constant T=1/H20862zvn from the curves of Figure 5–7 for different\nvalues of z. The results are shown in Figure 5–11. For 0<z<0.9, if the 2% criterion is\nused, ts is approximately four times the time constant of the system. If the 5% criterion\nis used, then ts is approximately three times the time constant. Note that the settling\ntime reaches a minimum value around z=0.76 (for the 2% criterion) or z=0.68 (for\nthe 5 % criterion) and then increases almost linearly for large values of z.\nThe discontinuities in the curves of Figure 5–11 arise because an infinitesimal change\nin the value of z can cause a finite change in the settling time.\nFor convenience in comparing the responses of systems, we commonly define the\nsettling time ts to be\n(2% criterion) (5–22)\nor\n(5% criterion) (5–23)\nNote that the settling time is inversely proportional to the product of the damping\nratio and the undamped natural frequency of the system. Since the value of z is usually\ndetermined from the requirement of permissible maximum overshoot, the settling time\nts = 3T = 3\ns = 3\nzvn\nts = 4T = 4\ns = 4\nzvn\n1 ; Ae-zvn t/H2086221 - z2Baa\n174\nChapter 5 / Transient and Steady-State Response Analyses\nz\n%\n100\n90\n80\n70\n60\n50\n40\n30\n20\n10\n0 0.5 1.0 1.5\nM\np\nM\np\n: Maximum overshoot\nC(s)\nR(s) = v\nn\ns\n2\n+ 2zv\nn\ns + v\nn\n2\n2\nFigure 5–12\nM\np\nversus z curve.\n2T\n3T\n4T\nT\n5T\n6T\n0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0\nz\nSettling time, t\ns\n5% Tolerance band\n2% Tolerance band\nFigure 5–11\nSettling time t\ns\nversus z curves.\nis determined primarily by the undamped natural frequency v\nn\n. This means that the\nduration of the transient period may be varied, without changing the maximum over-\nshoot, by adjusting the undamped natural frequency v\nn\n.\nFrom the preceding analysis, it is evident that for rapid response v\nn\nmust be large.To limit\nthe maximum overshoot M\np\nand to make the settling time small, the damping ratio zshould\nnot be too small. The relationship between the maximum percent overshoot M\np\nand the\ndamping ratio z is presented in Figure 5–12. Note that if the damping ratio is between 0.4\nand 0.7, then the maximum percent overshoot for step response is between 25% and 4%.\nOpenmirrors.comaa\nSection 5–3 / Second-Order Systems 175\nIt is important to note that the equations for obtaining the rise time, peak time, max-\nimum overshoot, and settling time are valid only for the standard second-order system\ndefined by Equation (5–10). If the second-order system involves a zero or two zeros,\nthe shape of the unit-step response curve will be quite different from those shown in\nFigure 5–7.\nEXAMPLE 5–1 Consider the system shown in Figure 5–6, where z=0.6 and vn=5 rad/H20862sec. Let us obtain the rise\ntime tr , peak time tp , maximum overshoot Mp , and settling time ts when the system is subjected\nto a unit-step input.\nFrom the given values of z and vn , we obtain and s=zvn=3.\nRise time tr : The rise time is\nwhere b is given by\nThe rise time tr is thus\nPeak time tp : The peak time is\nMaximum overshoot Mp : The maximum overshoot is\nThe maximum percent overshoot is thus 9.5%.\nSettling time ts : For the 2 % criterion, the settling time is\nFor the 5% criterion,\nServo System with Velocity Feedback. The derivative of the output signal can\nbe used to improve system performance. In obtaining the derivative of the output\nposition signal, it is desirable to use a tachometer instead of physically differentiating the\noutput signal. (Note that the differentiation amplifies noise effects. In fact, if\ndiscontinuous noises are present, differentiation amplifies the discontinuous noises more\nthan the useful signal. For example, the output of a potentiometer is a discontinuous\nvoltage signal because, as the potentiometer brush is moving on the windings, voltages\nare induced in the switchover turns and thus generate transients. The output of the po-\ntentiometer therefore should not be followed by a differentiating element.)\nts = 3\ns = 3\n3 = 1 sec\nts = 4\ns = 4\n3 = 1.33 sec\nMp = e-As/H20862vdBp = e-(3/H208624) * 3.14 = 0.095\ntp = p\nvd\n= 3.14\n4 = 0.785 sec\ntr = 3.14 - 0.93\n4 = 0.55 sec\nb = tan-1 vd\ns = tan-1 4\n3 = 0.93 rad\ntr = p - b\nvd\n= 3.14 - b\n4\nvd = vn 21 - z2 = 4aa\n176\nChapter 5 / Transient and Steady-State Response Analyses\nR(s) C(s)\n(a)\n1\ns\nK\nJs + B\nK\nh\nR(s) C(s)\n(b)\nK\ns(Js + B + KK\nh\n)\n+ –\n+ –\n+ –\nFigure 5–13\n(a) Block diagram of\na servo system;\n(b) simplified block\ndiagram.\nThe tachometer, a special dc generator, is frequently used to measure velocity with-\nout differentiation process. The output of a tachometer is proportional to the angular\nvelocity of the motor.\nConsider the servo system shown in Figure 5–13(a). In this device, the velocity signal,\ntogether with the positional signal, is fed back to the input to produce the actuating\nerror signal. In any servo system, such a velocity signal can be easily generated by a\ntachometer. The block diagram shown in Figure 5–13(a) can be simplified, as shown in\nFigure 5–13(b), giving\n(5–24)\nComparing Equation (5–24) with Equation (5–9), notice that the velocity feedback has\nthe effect of increasing damping. The damping ratio z becomes\n(5–25)\nThe undamped natural frequency is not affected by velocity feedback. Not-\ning that the maximum overshoot for a unit-step input can be controlled by controlling\nthe value of the damping ratio z, we can reduce the maximum overshoot by adjusting\nthe velocity-feedback constant K\nh\nso that z is between 0.4 and 0.7.\nIt is important to remember that velocity feedback has the effect of increasing the\ndamping ratio without affecting the undamped natural frequency of the system.\nEXAMPLE 5–2\nFor the system shown in Figure 5–13(a), determine the values of gain K and velocity-feedback\nconstantK\nh\nso that the maximum overshoot in the unit-step response is 0.2 and the peak time is 1 sec.\nWith these values of K and K\nh\n, obtain the rise time and settling time.Assume that J=1 kg-m\n2\nand\nB=1 N-m/H20862rad/H20862sec.\nDetermination of the values of K and K\nh\n: The maximum overshoot M\np\nis given by Equation\n(5–21) as\nM\np\n= e\n-Az/H2086221 - z\n2\nBp\nv\nn\n= 1K/H20862J\nz = B + KK\nh\n21KJ\nC(s)\nR(s) = K\nJs\n2\n+ AB + KK\nh\nBs + K\nOpenmirrors.comaa\nSection 5–3 / Second-Order Systems 177\nThis value must be 0.2. Thus,\nor\nwhich yields\nThe peak time tp is specified as 1 sec; therefore, from Equation (5–20),\nor\nSince z is 0.456, vn is\nSince the natural frequency vn is equal to \nThen Kh is, from Equation (5–25),\nRise time tr : From Equation (5–19), the rise time tr is\nwhere\nThus,tr is\nSettling time ts : For the 2 % criterion,\nFor the 5% criterion,\nts = 3\ns = 1.86 sec\nts = 4\ns = 2.48 sec\ntr = 0.65 sec\nb = tan-1 vd\ns = tan-1 1.95 = 1.10\ntr = p - b\nvd\nKh = 21KJz - B\nK = 21Kz - 1\nK = 0.178 sec\nK = Jv2\nn = v2\nn = 12.5 N-m\n1K/H20862J ,\nvn = vd\n21 - z2\n= 3.53\nvd = 3.14\ntp = p\nvd\n= 1\nz = 0.456\nzp\n21 - z2\n= 1.61\ne-Az/H2086221 - z2Bp = 0.2aa\n178\nChapter 5 / Transient and Steady-State Response Analyses\n1.0\n0.8\n0.6\n0.4\n0.2\n0\n–0.2\n–0.4\n–0.6\n–0.8\n–1.0\n0 2468 1 0 12\nv\nn\nt\nc(t)\nv\nn\nz = 0.1\nz = 0.3\nz = 0.5\nz = 0.7\nz = 1.0\nFigure 5–14\nUnit-impulse\nresponse curves of\nthe system shown in\nFigure 5–6.\nImpulse Response of Second-Order Systems. For a unit-impulse input r(t), the\ncorresponding Laplace transform is unity, or R(s)=1.The unit-impulse response C(s)\nof the second-order system shown in Figure 5-6 is\nThe inverse Laplace transform of this equation yields the time solution for the response\nc(t) as follows:\nFor 0 /H11349z<1,\nfor t /H113500 (5–26)\nFor z=1,\nfor t /H113500 (5–27)\nFor z>1,\nfor t /H113500 (5–28)\nNote that without taking the inverse Laplace transform of C(s) we can also obtain\nthe time response c(t) by differentiating the corresponding unit-step response, since\nthe unit-impulse function is the time derivative of the unit-step function. A family of\nunit-impulse response curves given by Equations (5–26) and (5–27) with various val-\nues of z is shown in Figure 5–14. The curves c(t)/v\nn\nare plotted against the dimen-\nsionless variable v\nn\nt, and thus they are functions only of z. For the critically damped\nand overdamped cases, the unit-impulse response is always positive or zero; that is,\nc(t) /H113500. This can be seen from Equations (5–27) and (5–28). For the underdamped\ncase, the unit-impulse response c(t) oscillates about zero and takes both positive and\nnegative values.\nc(t) = v\nn\n22z\n2\n- 1\ne\n-Az- 2z\n2\n- 1\nBv\nn\n \nt\n- v\nn\n22z\n2\n- 1\n e\n-Az+ 2z\n2\n- 1\nBv\nn\n \nt\n,\nc(t) = v\n2\nn\n \nte\n-v\nn\n \nt\n,\nc(t) = v\nn\n21 - z\n2\ne\n-zv\nn\n \nt\nsin v\nn\n21 - z\n2\nt,\nC(s) = v\n2\nn\ns\n2\n+ 2zv\nn\n \ns + v\n2\nn\nOpenmirrors.comaa\nSection 5–4 / Higher-Order Systems 179\nc(t)\n0\nUnit-impulse response\n1 + Mp\ntp\nt\nFigure 5–15\nUnit-impulse\nresponse curve of the\nsystem shown in\nFigure 5–6.\nFrom the foregoing analysis, we may conclude that if the impulse response c(t) does\nnot change sign, the system is either critically damped or overdamped, in which case\nthe corresponding step response does not overshoot but increases or decreases monot-\nonically and approaches a constant value.\nThe maximum overshoot for the unit-impulse response of the underdamped system\noccurs at\nwhere 0<z<1 (5–29)\n[Equation (5–29) can be obtained by equating dc/H20862dt to zero and solving for t.] The max-\nimum overshoot is\nwhere 0<z<1 (5–30)\n[Equation (5–30) can be obtained by substituting Equation (5–29) into Equation (5–26).]\nSince the unit-impulse response function is the time derivative of the unit-step\nresponse function, the maximum overshoot Mp for the unit-step response can be\nfound from the corresponding unit-impulse response.That is, the area under the unit-\nimpulse response curve from t=0 to the time of the first zero, as shown in Figure\n5–15, is 1+Mp , where Mp is the maximum overshoot (for the unit-step response)\ngiven by Equation (5–21). The peak time tp (for the unit-step response) given by\nEquation (5–20) corresponds to the time that the unit-impulse response first crosses\nthe time axis.\n5–4 HIGHER-ORDER SYSTEMS\nIn this section we shall present a transient-response analysis of higher-order systems in\ngeneral terms. It will be seen that the response of a higher-order system is the sum of the\nresponses of first-order and second-order systems.\nc(t)max = vn exp a- z\n21 - z2\ntan-1 21 - z2\nz b,\nt =\ntan-1 21 - z2\nz\nvn 21 - z2\n,aa\n180\nChapter 5 / Transient and Steady-State Response Analyses\n+ –\nR(s) C(s)\nG(s)\nH(s)\nFigure 5–16\nControl system.\nTransient Response of Higher-Order Systems. Consider the system shown in\nFigure 5–16. The closed-loop transfer function is\n(5–31)\nIn general, G(s) and H(s) are given as ratios of polynomials in s,o r\nand\nwhere p(s), q(s), n(s), and d(s) are polynomials in s.The closed-loop transfer function\ngiven by Equation (5–31) may then be written\nThe transient response of this system to any given input can be obtained by a computer\nsimulation. (See Section 5–5.) If an analytical expression for the transient response is de-\nsired, then it is necessary to factor the denominator polynomial. [MATLAB may be\nused for finding the roots of the denominator polynomial. Use the command roots(den).]\nOnce the numerator and the denominator have been factored, C(s)/R(s) can be writ-\nten in the form\n(5–32)\nLet us examine the response behavior of this system to a unit-step input. Consider\nfirst the case where the closed-loop poles are all real and distinct. For a unit-step input,\nEquation (5–32) can be written\n(5–33)\nwhere a\ni\nis the residue of the pole at s=–p\ni\n. (If the system involves multiple poles,\nthen C(s) will have multiple-pole terms.) [The partial-fraction expansion of C(s),a s\ngiven by Equation (5–33), can be obtained easily with MATLAB. Use the residue\ncommand. (See Appendix B.)]\nIf all closed-loop poles lie in the left-half s plane, the relative magnitudes of the\nresidues determine the relative importance of the components in the expanded form of\nC(s) = a\ns + a\nn\ni = 1\na\ni\ns + p\ni\nC(s)\nR(s) =\nKAs + z\n1\nBAs + z\n2\nBp As + z\nm\nB\nAs + p\n1\nBAs + p\n2\nBp As + p\nn\nB\n = b\n0\n \ns\nm\n+ b\n1\n \ns\nm - 1\n+ p + b\nm - 1\n \ns + b\nm\na\n0\n \ns\nn\n+ a\n1\n \ns\nn - 1\n+ p + a\nn - 1\n \ns + a\nn\n  \n(m /H11349n)\n C(s)\nR(s) = p(s)d(s)\nq(s)d(s) + p(s)n(s)\nH(s) = n(s)\nd(s)G(s) = p(s)\nq(s)\nC(s)\nR(s) = G(s)\n1 + G(s)H(s)\nOpenmirrors.comaa\nSection 5–4 / Higher-Order Systems 181\nC(s). If there is a closed-loop zero close to a closed-loop pole, then the residue at this\npole is small and the coefficient of the transient-response term corresponding to this pole\nbecomes small. A pair of closely located poles and zeros will effectively cancel each\nother. If a pole is located very far from the origin, the residue at this pole may be small.\nThe transients corresponding to such a remote pole are small and last a short time.Terms\nin the expanded form of C(s) having very small residues contribute little to the transient\nresponse, and these terms may be neglected. If this is done, the higher-order system may\nbe approximated by a lower-order one. (Such an approximation often enables us to es-\ntimate the response characteristics of a higher-order system from those of a simplified\none.)\nNext, consider the case where the poles of C(s) consist of real poles and pairs of\ncomplex-conjugate poles.A pair of complex-conjugate poles yields a second-order term\nins. Since the factored form of the higher-order characteristic equation consists of first-\nand second-order terms, Equation (5–33) can be rewritten\nwhere we assumed all closed-loop poles are distinct. [If the closed-loop poles involve\nmultiple poles,C(s) must have multiple-pole terms.] From this last equation, we see that\nthe response of a higher-order system is composed of a number of terms involving the\nsimple functions found in the responses of first- and second-order systems. The unit-\nstep response c(t), the inverse Laplace transform of C(s), is then\nfor t /H113500 (5–34)\nThus the response curve of a stable higher-order system is the sum of a number of\nexponential curves and damped sinusoidal curves.\nIf all closed-loop poles lie in the left-half s plane, then the exponential terms and\nthe damped exponential terms in Equation (5–34) will approach zero as time t increases.\nThe steady-state output is then c(q)=a.\nLet us assume that the system considered is a stable one.Then the closed-loop poles\nthat are located far from the jv axis have large negative real parts. The exponential\nterms that correspond to these poles decay very rapidly to zero. (Note that the hori-\nzontal distance from a closed-loop pole to the jvaxis determines the settling time of tran-\nsients due to that pole. The smaller the distance is, the longer the settling time.)\nRemember that the type of transient response is determined by the closed-loop\npoles, while the shape of the transient response is primarily determined by the closed-\nloop zeros. As we have seen earlier, the poles of the input R(s) yield the steady-state\nresponse terms in the solution, while the poles of C(s)/R(s) enter into the exponential\ntransient-response terms and/or damped sinusoidal transient-response terms.The zeros\nofC(s)/R(s) do not affect the exponents in the exponential terms, but they do affect the\nmagnitudes and signs of the residues.\n+ a\nr\nk = 1\nck e-zk vk t sin vk 21 - z2\nk t,\nc(t) = a + a\nq\nj = 1\naj e-pj t + a\nr\nk = 1\nbk e-zk vk t cos vk 21 - z2\nk t\nC(s) = a\ns + a\nq\nj = 1\naj\ns + pj\n+ a\nr\nk = 1\nbkAs + zk vkB + ck vk 21 - z2\nk\ns2 + 2zk vk s + v2\nk\n  (q + 2r = n)aa\n182\nChapter 5 / Transient and Steady-State Response Analyses\nDominant Closed-Loop Poles. The relative dominance of closed-loop poles is\ndetermined by the ratio of the real parts of the closed-loop poles, as well as by the rel-\native magnitudes of the residues evaluated at the closed-loop poles. The magnitudes of\nthe residues depend on both the closed-loop poles and zeros.\nIf the ratios of the real parts of the closed-loop poles exceed 5 and there are no zeros\nnearby, then the closed-loop poles nearest the jv axis will dominate in the transient-\nresponse behavior because these poles correspond to transient-response terms that\ndecay slowly. Those closed-loop poles that have dominant effects on the transient-\nresponse behavior are called dominant closed-loop poles. Quite often the dominant\nclosed-loop poles occur in the form of a complex-conjugate pair. The dominant closed-\nloop poles are most important among all closed-loop poles.\nNote that the gain of a higher-order system is often adjusted so that there will exist\na pair of dominant complex-conjugate closed-loop poles. The presence of such poles in\na stable system reduces the effects of such nonlinearities as dead zone, backlash, and\ncoulomb-friction.\nStability Analysis in the Complex Plane. The stability of a linear closed-loop\nsystem can be determined from the location of the closed-loop poles in the s plane. If\nany of these poles lie in the right-half s plane, then with increasing time they give rise\nto the dominant mode, and the transient response increases monotonically or oscillates\nwith increasing amplitude. This represents an unstable system. For such a system, as\nsoon as the power is turned on, the output may increase with time. If no saturation\ntakes place in the system and no mechanical stop is provided, then the system may\neventually be subjected to damage and fail, since the response of a real physical sys-\ntem cannot increase indefinitely.Therefore, closed-loop poles in the right-half s plane\nare not permissible in the usual linear control system. If all closed-loop poles lie to the\nleft of the jv axis, any transient response eventually reaches equilibrium. This repre-\nsents a stable system.\nWhether a linear system is stable or unstable is a property of the system itself and\ndoes not depend on the input or driving function of the system. The poles of the input,\nor driving function, do not affect the property of stability of the system, but they con-\ntribute only to steady-state response terms in the solution.Thus, the problem of absolute\nstability can be solved readily by choosing no closed-loop poles in the right-half s plane,\nincluding the jv axis. (Mathematically, closed-loop poles on the jv axis will yield oscil-\nlations, the amplitude of which is neither decaying nor growing with time. In practical\ncases, where noise is present, however, the amplitude of oscillations may increase at a\nrate determined by the noise power level. Therefore, a control system should not have\nclosed-loop poles on the jv axis.)\nNote that the mere fact that all closed-loop poles lie in the left-half s plane does not\nguarantee satisfactory transient-response characteristics. If dominant complex-conjugate\nclosed-loop poles lie close to the jv axis, the transient response may exhibit excessive\noscillations or may be very slow.Therefore, to guarantee fast, yet well-damped, transient-\nresponse characteristics, it is necessary that the closed-loop poles of the system lie in a\nparticular region in the complex plane, such as the region bounded by the shaded area\nin Figure 5–17.\nSince the relative stability and transient-response performance of a closed-loop con-\ntrol system are directly related to the closed-loop pole-zero configuration in the s plane,\nOpenmirrors.comaa\nSection 5–5 / Transient-Response Analysis with MATLAB 183\n0\ns\ns\njv\nIn this region\nz /H11022 0.4\ns\n4ts /H11021\nFigure 5–17\nRegion in the\ncomplex plane\nsatisfying the\nconditionsz>0.4\nand ts<4/s.\nit is frequently necessary to adjust one or more system parameters in order to obtain suit-\nable configurations. The effects of varying system parameters on the closed-loop poles\nwill be discussed in detail in Chapter 6.\n5–5 TRANSIENT-RESPONSE ANALYSIS WITH MATLAB\nIntroduction. The practical procedure for plotting time response curves of systems\nhigher than second order is through computer simulation. In this section we present the\ncomputational approach to the transient-response analysis with MATLAB. In particular,\nwe discuss step response, impulse response, ramp response, and responses to other simple\ninputs.\nMATLAB Representation of Linear Systems. The transfer function of a system\nis represented by two arrays of numbers. Consider the system\n(5–35)\nThis system can be represented as two arrays, each containing the coefficients of the\npolynomials in decreasing powers of s as follows:\nnum = [2  25]\nden = [1  4  25]\nAn alternative representation is\nnum = [0  2  25]\nden = [1  4  25]\nC(s)\nR(s) = 2s + 25\ns2 + 4s + 25aa\n184\nChapter 5 / Transient and Steady-State Response Analyses\nIn this expression a zero is padded. Note that if zeros are padded, the dimensions of\n“num” vector and “den” vector become the same.An advantage of padding zeros is that\nthe “num” vector and “den” vector can be directly added. For example,\nnum + den = [0  2  25] + [1  4  25]\n= [1  6  50]\nIf num and den (the numerator and denominator of the closed-loop transfer function)\nare known, commands such as\nstep(num,den),    step(num,den,t)\nwill generate plots of unit-step responses (t in the step command is the user-specified time.)\nFor a control system defined in a state-space form, where state matrix A, control\nmatrix B, output matrix C, and direct transmission matrix D of state-space equations are\nknown, the command\nstep(A,B,C,D),    step(A,B,C,D,t)\nwill generate plots of unit-step responses. When t is not explicitly included in the step\ncommands, the time vector is automatically determined.\nNote that the command step(sys) may be used to obtain the unit-step response of a\nsystem. First, define the system by\nsys = tf(num,den)\nor\nsys = ss(A,B,C,D)\nThen, to obtain, for example, the unit-step response, enter\nstep(sys)\ninto the computer.\nWhen step commands have left-hand arguments such as\n[y,x,t] = step(num,den,t)\n[y,x,t] = step(A,B,C,D,iu)\n[y,x,t] = step(A,B,C,D,iu,t) (5–36)\nno plot is shown on the screen. Hence it is necessary to use a plot command to see the\nresponse curves. The matrices y and x contain the output and state response of the sys-\ntem, respectively, evaluated at the computation time points t.( y has as many columns as\noutputs and one row for each element in t. x has as many columns as states and one row\nfor each element in t.)\nNote in Equation (5–36) that the scalar iu is an index into the inputs of the system\nand specifies which input is to be used for the response, and t is the user-specified time.\nIf the system involves multiple inputs and multiple outputs, the step command, such as\ngiven by Equation (5–36), produces a series of step-response plots, one for each input\nand output combination of\n(For details, see Example 5–3.)\ny = Cx + Du\nx# = Ax + Bu\nOpenmirrors.comaa\nSection 5–5 / Transient-Response Analysis with MATLAB 185\nEXAMPLE 5–3 Consider the following system:\nObtain the unit-step response curves.\nAlthough it is not necessary to obtain the transfer-matrix expression for the system to obtain\nthe unit-step response curves with MATLAB, we shall derive such an expression for reference.\nFor the system defined by\nthe transfer matrix G(s) is a matrix that relates Y(s) and U(s) as follows:\nTaking Laplace transforms of the state-space equations, we obtain\n(5–37)\n(5–38)\nIn deriving the transfer matrix, we assume that Then, from Equation (5–37), we get\n(5–39)\nSubstituting Equation (5–39) into Equation (5–38), we obtain\nThus the transfer matrix G(s) is given by\nThe transfer matrix G(s) for the given system becomes\nHence\nSince this system involves two inputs and two outputs, four transfer functions may be defined,\ndepending on which signals are considered as input and output. Note that, when considering the\nBY1(s)\nY2(s) R = ≥\ns - 1\ns2 + s + 6.5\ns + 7.5\ns2 + s + 6.5\ns\ns2 + s + 6.5\n6.5\ns2 + s + 6.5\n¥BU1(s)\nU2(s) R\n = 1\ns2 + s + 6.5 Bs - 1\ns + 7.5\ns\n6.5 R\n = 1\ns2 + s + 6.5 Bs\n6.5\n- 1\ns + 1 RB1\n1\n1\n0 R\n = B1\n0\n0\n1 RBs + 1\n- 6.5\n1\ns R\n-1\nB1\n1\n1\n0 R\n G(s) = C(s I - A)-1 B\nG(s) = C(s I - A)-1 B + D\nY(s) = CC(s I - A)-1 B + DD U(s)\nX(s) = (s I - A)-1 BU(s)\nx(0) = 0.\n Y(s) = CX(s) + DU(s)\n s X(s) - x(0) = AX(s) + BU(s)\nY(s) = G(s) U(s)\ny = Cx + Du\nx# = Ax + Bu\nBy1\ny2\nR = B1\n0\n0\n1 RBx1\nx2\nR + B0\n0\n0\n0 RBu1\nu2\nR\nBx#\n1\nx#\n2\nR = B- 1\n6.5\n- 1\n0 RBx1\nx2\nR+ B1\n1\n1\n0 RBu1\nu2\nRaa\n186\nChapter 5 / Transient and Steady-State Response Analyses\nTo: Y2\n1.5\n2\n1\n0.5\n0\n048 1 2\nTime (sec)\n1.5\n2\n1\n0.5\n0\n048 1 2\nTo: Y1\n0.4\n0.6\n0.2\n−0.2\n00\n−0.4\n0.4\n0.6\n0.2\n−0.2\n−0.4\n048 1 2\n048 1 2\nFrom: U1 From: U2\nStep Response\nAmplitude\nFigure 5–18\nUnit-step response\ncurves.\nMATLAB Program 5–1\nA = [–1  –1;6.5  0];\nB = [1  1;1  0];\nC = [1  0;0  1];\nD = [0  0;0  0];\nstep(A,B,C,D)\nsignal u\n1\nas the input, we assume that signal u\n2\nis zero, and vice versa.The four transfer functions\nare\nAssume that u\n1\nand u\n2\nare unit-step functions. The four individual step-response curves can then\nbe plotted by use of the command\nstep(A,B,C,D)\nMATLAB Program 5–1 produces four such step-response curves.The curves are shown in Figure 5–18.\n(Note that the time vector t is automatically determined, since the command does not include t.)\nY\n2\n(s)\nU\n2\n(s) = 6.5\ns\n2\n+ s + 6.5\nY\n2\n(s)\nU\n1\n(s) = s + 7.5\ns\n2\n+ s + 6.5 ,\nY\n1\n(s)\nU\n2\n(s) = s\ns\n2\n+ s + 6.5\nY\n1\n(s)\nU\n1\n(s) = s - 1\ns\n2\n+ s + 6.5 ,\nOpenmirrors.comaa\nSection 5–5 / Transient-Response Analysis with MATLAB 187\nMATLAB Program 5–2\n% ***** In this program we plot step-response curves of a system\n% having two inputs (u1 and u2) and two outputs (y1 and y2) *****\n% ***** We shall first plot step-response curves when the input is\n% u1. Then we shall plot step-response curves when the input is\n% u2 *****\n% ***** Enter matrices A, B, C, and D *****\nA = [-1  -1;6.5  0];\nB = [1  1;1  0];\nC = [1  0;0  1];\nD = [0  0;0  0];\n% ***** To plot step-response curves when the input is u1, enter\n% the command 'step(A,B,C,D,1)' *****\nstep(A,B,C,D,1)\ngrid\ntitle ('Step-Response Plots: Input = u1 (u2 = 0)')\ntext(3.4, -0.06,'Y1')\ntext(3.4, 1.4,'Y2')\n% ***** Next, we shall plot step-response curves when the input\n% is u2. Enter the command 'step(A,B,C,D,2)' *****\nstep(A,B,C,D,2)\ngrid\ntitle ('Step-Response Plots: Input = u2 (u1 = 0)')\ntext(3,0.14,'Y1')\ntext(2.8,1.1,'Y2')\nTo plot two step-response curves for the input u1 in one diagram and two step-response curves\nfor the input u2 in another diagram, we may use the commands\nstep(A,B,C,D,1)\nand\nstep(A,B,C,D,2)\nrespectively. MATLAB Program 5–2 is a program to plot two step-response curves for the\ninput u1 in one diagram and two step-response curves for the input u2 in another diagram.\nFigure 5–19 shows the two diagrams, each consisting of two step-response curves. (This\nMATLAB program uses text commands. For such commands, refer to the paragraph following\nthis example.)aa\n188\nChapter 5 / Transient and Steady-State Response Analyses\nStep-Response Plots: Input = u2 (u1 = 0)\nTime (sec)\nAmplitude\n0123456789 1 0\n1.6\n1.2\n0.8\n0.4\n0\n–0.2\n1.4\n1\n0.6\n0.2\nY2\nY1\n(b)\nStep-Response Plots: Input = u1 (u2 = 0)\n2\n1.5\n1\n0.5\n0\n–0.5\n0123456789 1 0\nTime (sec)\nAmplitude\nY2\nY1\n(a)\nFigure 5–19\nUnit-step response\ncurves. (a) u\n1\nis the\ninput Au\n2\n=0B; (b) u\n2\nis the input Au\n1\n=0B.\nWriting Text on the Graphics Screen. To write text on the graphics screen, enter,\nfor example, the following statements:\ntext(3.4, -0.06,'Y1')\nand\ntext(3.4,1.4,'Y2')\nThe first statement tells the computer to write ‘Y1’ beginning at the coordinates x=3.4,\ny=–0.06. Similarly, the second statement tells the computer to write ‘Y2’ beginning at\nthe coordinates x=3.4, y=1.4. [See MATLAB Program 5–2 and Figure 5–19(a).]\nOpenmirrors.comaa\nSection 5–5 / Transient-Response Analysis with MATLAB 189\nMATLAB Program 5–3\nwn = 5;\ndamping_ratio = 0.4;\n[num0,den] = ord2(wn,damping_ratio);\nnum = 5^2*num0;\nprintsys(num,den,'s')\nnum/den =\n25\nS^2 + 4s + 25\nAnother way to write a text or texts in the plot is to use the gtext command. The\nsyntax is\ngtext('text')\nWhen gtext is executed, the computer waits until the cursor is positioned (using a\nmouse) at the desired position in the screen. When the left mouse button is pressed,\nthe text enclosed in simple quotes is written on the plot at the cursor’s position. Any\nnumber of gtext commands can be used in a plot. (See, for example, MATLAB \nProgram 5–15.)\nMATLAB Description of Standard Second-Order System.As noted earlier, the\nsecond-order system\n(5–40)\nis called the standard second-order system. Given vn and z, the command\nprintsys(num,den) or printsys(num,den,s)\nprints num/den as a ratio of polynomials in s.\nConsider, for example, the case where vn=5 rad/H20862sec and z=0.4. MATLAB Program\n5–3 generates the standard second-order system, where vn=5 rad/H20862sec and z=0.4.\nNote that in MATLAB Program 5–3, “num 0” is 1.\nG(s) = v2\nn\ns2 + 2zvn s + v2\nn\nObtaining the Unit-Step Response of the Transfer-Function System. Let us\nconsider the unit-step response of the system given by\nG(s) = 25\ns2 + 4s + 25aa\n190\nChapter 5 / Transient and Steady-State Response Analyses\nMATLAB Program 5–4\n% ------------- Unit-step response -------------\n% ***** Enter the numerator and denominator of the transfer\n% function *****\nnum = [25];\nden = [1  4  25];\n% ***** Enter the following step-response command *****\nstep(num,den)\n% ***** Enter grid and title of the plot *****\ngrid\ntitle (' Unit-Step Response of G(s) = 25/(s^2+4s+25)')\n1.4\n1.2\n1\n0.8\n0.6\n0.4\n0.2\n0\n0 0.5 1 1.5 2 2.5 3\nTime (sec)\nUnit-Step Response of G(s) = 25/(s\n2\n+4s+25)\nAmplitude\nFigure 5–20\nUnit-step response\ncurve.\nNotice in Figure 5–20 (and many others) that the x-axis and y-axis labels are auto-\nmatically determined. If it is desired to label the x axis and y axis differently, we need\nto modify the step command. For example, if it is desired to label the x axis as 't Sec'\nand the y axis as ‘Output,’ then use step-response commands with left-hand arguments,\nsuch as\nc = step(num,den,t)\nor, more generally,\n[y,x,t] = step(num,den,t)\nand use plot(t,y) command. See, for example, MATLAB Program 5–5 and Figure 5–21.\nMATLAB Program 5–4 will yield a plot of the unit-step response of this system.A plot\nof the unit-step response curve is shown in Figure 5–20.\nOpenmirrors.comaa\nSection 5–5 / Transient-Response Analysis with MATLAB 191\nMATLAB Program 5–5\n% ------------- Unit-step response -------------\nnum = [25];\nden = [1  4  25];\nt = 0:0.01:3;\n[y,x,t] = step(num,den,t);\nplot(t,y)\ngrid\ntitle('Unit-Step Response of G(s)=25/(sˆ2+4s+25)')\nxlabel('t Sec')\nylabel('Output')\n1.4\n1.2\n1\n0.8\n0.6\n0.4\n0.2\n0\n0 0.5 1 1.5 2 2.5 3\nt  Sec\nUnit-Step Response of G(s) = 25/(s2+4s+25)\nOutput\nFigure 5–21\nUnit-step response\ncurve.\nObtaining Three-Dimensional Plot of Unit-Step Response Curves with\nMATLAB. MATLAB enables us to plot three-dimensional plots easily.The commands\nto obtain three-dimensional plots are “mesh” and “surf.” The difference between the\n“mesh” plot and “surf” plot is that in the former only the lines are drawn and in the lat-\nter the spaces between the lines are filled in by colors. In this book we use only the\n“mesh” command.\nEXAMPLE 5–4 Consider the closed-loop system defined by\n(The undamped natural frequency vn is normalized to 1.) Plot unit-step response curves c(t) when\nz assumes the following values:\nz=0, 0.2, 0.4, 0.6. 0.8, 1.0\nAlso plot a three-dimensional plot.\nC(s)\nR(s) = 1\ns2 + 2zs + 1aa\n192\nChapter 5 / Transient and Steady-State Response Analyses\nMATLAB Program 5–6\n% ------- Two-dimensional plot and three-dimensional plot of unit-step\n% response curves for the standard second-order system with wn = 1\n% and zeta = 0, 0.2, 0.4, 0.6, 0.8, and 1. -------\nt = 0:0.2:10;\nzeta = [0 0.2 0.4 0.6 0.8 1];\nfor n = 1:6;\nnum = [1];\nden = [1 2*zeta(n) 1];\n[y(1:51,n),x,t] = step(num,den,t);\nend\n% To plot a two-dimensional diagram, enter the command plot(t,y).\nplot(t,y)\ngrid\ntitle('Plot of Unit-Step Response Curves with \\omega_n = 1 and \\zeta = 0, 0.2, 0.4, 0.6, 0.8, 1')\nxlabel('t (sec)')\nylabel('Response')\ntext(4.1,1.86,'\\zeta = 0')\ntext(3.5,1.5,'0.2')\ntext(3 .5,1.24,'0.4')\ntext(3.5,1.08,'0.6')\ntext(3.5,0.95,'0.8')\ntext(3.5,0.86,'1.0')\n% To plot a three-dimensional diagram, enter the command mesh(t,zeta,y').\nmesh(t,zeta,y')\ntitle('Three-Dimensional Plot of Unit-Step Response Curves')\nxlabel('t Sec')\nylabel('\\zeta')\nzlabel('Response')\nAn illustrative MATLAB Program for plotting a two-dimensional diagram and a three-\ndimensional diagram of unit-step response curves of this second-order system is given in MATLAB\nProgram 5–6. The resulting plots are shown in Figures 5–22(a) and (b), respectively. Notice that\nwe used the command mesh(t,zeta,y') to plot the three-dimensional plot.We may use a command\nmesh(y') to get the same result. [Note that command mesh(t,zeta,y) or mesh(y) will produce a\nthree-dimensional plot the same as Figure 5–22(b), except that x axis and y axis are interchanged.\nSee Problem A–5–15.]\nWhen we want to solve a problem using MATLAB and if the solution process involves many\nrepetitive computations, various approaches may be conceived to simplify the MATLAB pro-\ngram.A frequently used approach to simplify the computation is to use “for loops.” MATLAB Pro-\ngram 5–6 uses such a “for loop.” In this book many MATLAB programs using “for loops” are\npresented for solving a variety of problems. Readers are advised to study all those problems care-\nfully to familiarize themselves with the approach.\nOpenmirrors.comaa\nSection 5–5 / Transient-Response Analysis with MATLAB 193\nPlot of Unit-Step Response Curves with /H9275n = 1 and /H9256 = 0, 0.2, 0.4, 0.6, 0.8, 1\nResponse\n0.2\n0.4\n0.6\n0.8\n1\n1.2\n1.4\n1.6\n1.8\n2\n0\nt (sec)\n0123456789 1 0\n/H9256 = 0/H9256 = 0\n0.20.2\n0.40.4\n0.60.6\n0.80.8\n1.01.0\n(a)\n01\n0.8\n0.6\n0.4\n0.2\n0 0\n2\n4\n6\n8\n10\n0.5\n1\n1.5\n2\nResponse\n/H9256 t Sec\n(b)\nThree-Dimensional Plot of Unit-Step Response Curves\nFigure 5–22\n(a) Two-dimensional\nplot of unit-step\nresponse curves for\nz=0, 0.2, 0.4, 0.6, 0.8,\nand 1.0; (b) three-\ndimensional plot of\nunit-step response\ncurves.\nObtaining Rise Time, Peak Time, Maximum Overshoot, and Settling Time\nwith MATLAB. MATLAB can conveniently be used to obtain the rise time, peak time,\nmaximum overshoot, and settling time. Consider the system defined by\nMATLAB Program 5–7 yields the rise time, peak time, maximum overshoot, and settling\ntime. A unit-step response curve for this system is given in Figure 5–23 to verify the\nC(s)\nR(s) = 25\ns2 + 6s + 25aa\n194\nChapter 5 / Transient and Steady-State Response Analyses\nMATLAB Program 5–7\n% ------- This is a MATLAB program to find the rise time, peak time,\n% maximum overshoot, and settling time of the second-order system\n% and higher-order system -------\n% ------- In this example, we assume zeta = 0.6 and wn = 5 -------\nnum = [25];\nden = [1  6  25];\nt = 0:0.005:5;\n[y,x,t] = step(num,den,t);\nr = 1; while y(r) < 1.0001; r = r + 1; end;\nrise_time = (r - 1)*0.005\nrise_time =\n0.5550\n[ymax,tp] = max(y);\npeak_time = (tp - 1)*0.005\npeak_time =\n0.7850\nmax_overshoot = ymax-1\nmax_overshoot =\n0.0948\ns = 1001; while y(s) > 0.98 & y(s) < 1.02; s = s - 1; end;\nsettling_time = (s - 1)*0.005\nsettling_time =\n1.1850\nAmplitude\nTime (sec)\nStep Response\n0.6\n0.4\n0.2\n0.8\n1\n1.2\n1.4\n0\n0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5\nFigure 5–23\nUnit-step response\ncurve.\nresults obtained with MATLAB Program 5–7. (Note that this program can also be\napplied to higher-order systems. See Problem A–5–10.)\nOpenmirrors.comaa\nSection 5–5 / Transient-Response Analysis with MATLAB 195\nImpulse Response. The unit-impulse response of a control system may be\nobtained by using any of the impulse commands such as\nimpulse(num,den)\nimpulse(A,B,C,D)\n[y,x,t] = impulse(num,den)\n[y,x,t] = impulse(num,den,t)(5–41)\n[y,x,t] = impulse(A,B,C,D)\n[y,x,t] = impulse(A,B,C,D,iu)(5–42)\n[y,x,t] = impulse(A,B,C,D,iu,t) (5–43)\nThe command impulse(num,den) plots the unit-impulse response on the screen. The\ncommand impulse(A,B,C,D) produces a series of unit-impulse-response plots, one for\neach input and output combination of the system\nNote that in Equations (5–42) and (5–43) the scalar iu is an index into the inputs of the\nsystem and specifies which input to be used for the impulse response.\nNote also that if the command used does not include “ t” explicitly, the time vector\nis automatically determined. If the command includes the user-supplied time vector “t”,\nas do the commands given by Equations (5–41) and (5–43)], this vector specifies the\ntimes at which the impulse response is to be computed.\nIf MATLAB is invoked with the left-hand argument [y,x,t], such as in the case of\n[y,x,t] = impulse(A,B,C,D), the command returns the output and state responses of the\nsystem and the time vector t. No plot is drawn on the screen. The matrices y and x con-\ntain the output and state responses of the system evaluated at the time points t.( y has\nas many columns as outputs and one row for each element in t. x has as many columns\nas state variables and one row for each element in t.) To plot the response curve, we\nmust include a plot command, such as plot(t,y).\ny = Cx + Du\nx# = Ax + Bu\nEXAMPLE 5–5 Obtain the unit-impulse response of the following system:\nC(s)\nR(s) = G(s) = 1\ns2 + 0.2s + 1196\nChapter 5 / Transient and Steady-State Response Analyses\naa\nUnit-Impulse Response of G(s) = 1/(s\n2\n+0.2s+1)\nTime (sec)\nAmplitude\n0 5 10 15 20 25 30 35 40 45 50\n1\n0.8\n0.2\n–0.6\n–0.8\n0.6\n0.4\n0\n–0.2\n–0.4\nFigure 5–24\nUnit-impulse-\nresponse curve.\nMATLAB Program 5–8 will produce the unit-impulse response. The resulting plot is shown in\nFigure 5–24.\nMATLAB Program 5–8\nnum = [1];\nden = [1  0.2  1];\nimpulse(num,den);\ngrid\ntitle(‘Unit-Impulse Response of G(s) = 1/(s^2 + 0.2s + 1)‘)\nAlternative Approach to Obtain Impulse Response. Note that when the initial\nconditions are zero, the unit-impulse response of G(s) is the same as the unit-step\nresponse of sG(s).\nConsider the unit-impulse response of the system considered in Example 5–5. Since\nR(s)=1 for the unit-impulse input, we have\nWe can thus convert the unit-impulse response of G(s) to the unit-step response of\nsG(s).\nIf we enter the following num and den into MATLAB,\nnum = [0  1  0]\nden = [1  0.2  1]\n = s\ns\n2\n+ 0.2s + 1 1\ns\n C(s)\nR(s) = C(s) = G(s) = 1\ns\n2\n+ 0.2s + 1\nOpenmirrors.comSection 5–5 / Transient-Response Analysis with MATLAB 197\naa\nUnit-Step Response of sG(s) = s/(s2+0.2s+1)\nTime (sec)\nAmplitude\n0 5 10 15 20 25 30 35 40 45 50\n1\n0.8\n0.2\n–0.6\n–0.8\n0.6\n0.4\n0\n–0.2\n–0.4\nFigure 5–25\nUnit-impulse-\nresponse curve\nobtained as the unit-\nstep response of\nsG(s)=\ns/As2+0.2s+1B.\nMATLAB Program 5–9\nnum = [1  0];\nden = [1  0.2  1];\nstep(num,den);\ngrid\ntitle(‘Unit-Step Response of sG(s) = s/(s^2 + 0.2s + 1)‘)\nand use the step-response command; as given in MATLAB Program 5–9, we obtain a\nplot of the unit-impulse response of the system as shown in Figure 5–25.\nRamp Response. There is no ramp command in MATLAB. Therefore, we need\nto use the step command or the lsim command (presented later) to obtain the ramp re-\nsponse. Specifically, to obtain the ramp response of the transfer-function system G(s),\ndivide G(s) by s and use the step-response command. For example, consider the closed-\nloop system\nFor a unit-ramp input, R(s)=1/s2 . Hence\nTo obtain the unit-ramp response of this system, enter the following numerator and de-\nnominator into the MATLAB program:\nnum = [2  1];\nden = [1  1  1  0];\nC(s) = 2s + 1\ns2 + s + 1\n1\ns2 = 2s + 1\n(s2 + s + 1)s\n1\ns\nC(s)\nR(s) = 2s + 1\ns2 + s + 1aa\n198\nChapter 5 / Transient and Steady-State Response Analyses\nMATLAB Program 5–10\n% --------------- Unit-ramp response ---------------\n% ***** The unit-ramp response is obtained as the unit-step\n% response of G(s)/s *****\n% ***** Enter the numerator and denominator of G(s)/s *****\nnum = [2  1];\nden = [1  1  1  0];\n% ***** Specify the computing time points (such as t = 0:0.1:10)\n% and then enter step-response command: c = step(num,den,t) *****\nt = 0:0.1:10;\nc = step(num,den,t);\n% ***** In plotting the ramp-response curve, add the reference\n% input to the plot. The reference input is t. Add to the\n% argument of the plot command with the following: t,t,'-'. Thus\n% the plot command becomes as follows: plot(t,c,'o',t,t,'-') *****\nplot(t,c,'o',t,t,'-')\n% ***** Add grid, title, xlabel, and ylabel *****\ngrid\ntitle('Unit-Ramp Response Curve for System G(s) = (2s + 1)/(s^2 + s + 1)')\nxlabel('t Sec')\nylabel('Input and Output')\nand use the step-response command. See MATLAB Program 5–10. The plot obtained\nby using this program is shown in Figure 5–26.\nUnit-Ramp Response Curve for System G(s) = (2s + 1)/(s\n2\n + s +1)\nt Sec\n0123456789 1 0\nInput and Output\n12\n0\n4\n2\n6\n8\n10\nFigure 5–26\nUnit-ramp response\ncurve.\nOpenmirrors.comaa\nSection 5–5 / Transient-Response Analysis with MATLAB 199\nUnit-Ramp Response of a System Defined in State Space.Next, we shall treat\nthe unit-ramp response of the system in state-space form. Consider the system described by\nwhere u is the unit-ramp function. In what follows, we shall consider a simple example\nto explain the method. Consider the case where\nWhen the initial conditions are zeros, the unit-ramp response is the integral of the unit-\nstep response. Hence the unit-ramp response can be given by\n(5–44)\nFrom Equation (5–44), we obtain\n(5–45)\nLet us define\nThen Equation (5–45) becomes\n(5–46)\nCombining Equation (5–46) with the original state-space equation, we obtain\n(5–47)\n(5–48)\nwhere u appearing in Equation (5–47) is the unit-step function. These equations can be\nwritten as\nwhere\nNote that x3 is the third element of x. A plot of the unit-ramp response curve z(t) can\nbe obtained by entering MATLAB Program 5–11 into the computer.A plot of the unit-\nramp response curve obtained from this MATLAB program is shown in Figure 5–27.\nBB = C\n0\n1\n0\nS = BB\n0 R,  CC = [0 0 1],  DD = [0]\nAA = C\n0\n- 1\n1\n1\n- 1\n0\n0\n0\n0\nS = CA\nC\n  \n0\n0\n0\nS\nz = CCx + DDu\nx# = AAx + BBu\n z = [0 0 1] C\nx1\nx2\nx3\nS\n C\nx#\n1\nx#\n2\nx#\n3\nS = C\n0\n- 1\n1\n1\n- 1\n0\n0\n0\n0\nSC\nx1\nx2\nx3\nS + C\n0\n1\n0\nSu\nx#\n3 = x1\nz = x3\nz# = y = x1\nz =\n3\nt\n0\ny dt\nD = [0]C = [1 0],\nx(0) = 0B = B0\n1 R,A = B 0\n- 1\n1\n- 1 R,\ny = Cx + Du\nx# = Ax + Buaa\n200\nChapter 5 / Transient and Steady-State Response Analyses\nMATLAB Program 5–11\n% --------------- Unit-ramp response ---------------\n% ***** The unit-ramp response is obtained by adding a new\n% state variable x3. The dimension of the state equation\n% is enlarged by one *****\n% ***** Enter matrices A, B, C, and D of the original state\n% equation and output equation *****\nA = [0  1;-1  -1];\nB = [0;  1];\nC = [1  0];\nD = [0];\n% ***** Enter matrices AA, BB, CC, and DD of the new,\n% enlarged state equation and output equation *****\nAA = [A zeros(2,1);C  0];\nBB = [B;0];\nCC = [0  0  1];\nDD = [0];\n% ***** Enter step-response command: [z,x,t] = step(AA,BB,CC,DD) *****\n[z,x,t] = step(AA,BB,CC,DD);\n% ***** In plotting x3 add the unit-ramp input t in the plot\n% by entering the following command: plot(t,x3,'o',t,t,'-') *****\nx3 = [0  0  1]*x'; plot(t,x3,'o',t,t,'-')\ngrid\ntitle('Unit-Ramp Response')\nxlabel('t Sec')\nylabel('Input and Output')\nUnit-Ramp Response\nt  Sec\nInput and Output\n01234 56789 1 0\n9\n5\n1\n0\n8\n6\n3\n2\n4\n7\n10\nFigure 5–27\nUnit-ramp response\ncurve.\nOpenmirrors.comaa\nSection 5–5 / Transient-Response Analysis with MATLAB 201\nObtaining Response to Arbitrary Input. To obtain the response to an arbitrary\ninput, the command lsim may be used. The commands like\nlsim(num,den,r,t)\nlsim(A,B,C,D,u,t)\ny = lsim(num,den,r,t)\ny = lsim(A,B,C,D,u,t)\nwill generate the response to input time function r or u. See the following two examples.\n(Also, see Problems A–5–14 through A–5–16.)\nEXAMPLE 5–6 Using the lsim command, obtain the unit-ramp response of the following system:\nWe may enter MATLAB Program 5–12 into the computer to obtain the unit-ramp response.The\nresulting plot is shown in Figure 5–28.\nC(s)\nR(s) = 2s + 1\ns2 + s + 1\nMATLAB Program 5–12\n% ------- Ramp Response -------\nnum = [2  1];\nden = [1  1  1];\nt = 0:0.1:10;\nr = t;\ny = lsim(num,den,r,t);\nplot(t,r,'-',t,y,'o')\ngrid\ntitle('Unit-Ramp Response Obtained by Use of Command \"lsim\"')\nxlabel('t Sec')\nylabel('Unit-Ramp Input and System Output')\ntext(6.3,4.6,'Unit-Ramp Input')\ntext(4.75,9.0,'Output')\nUnit-Ramp Response Obtained by use of Command “Isim”\nt Sec\n0123456789 1 0\nUnit-Ramp Input and System Output\n12\n0\n4\n2\n6\n8\n10\nOutput\nUnit-Ramp Input\nFigure 5–28\nUnit-ramp response.aa\n202\nChapter 5 / Transient and Steady-State Response Analyses\nEXAMPLE 5–7\nConsider the system\nUsing MATLAB, obtain the response curves y(t) when the input u is given by\n1. u=unit-step input\n2. u=e\n–t\nAssume that the initial state is x(0)=0.\nA possible MATLAB program to produce the responses of this system to the unit-step input\nCu=1(t)Dand the exponential input Cu=e\n–t\nDis shown in MATLAB Program 5–13. The result-\ning response curves are shown in Figures 5–29(a) and (b), respectively.\n y = [1\n \n0]\nB\nx\n1\nx\n2\nR\n \nB\nx#\n1\nx#\n2\nR\n=\nB\n- 1\n- 1\n0.5\n0\nRB\nx\n1\nx\n2\nR\n+\nB\n0\n1\nR\nu\nMATLAB Program 5–13\nt = 0:0.1:12;\nA = [-1  0.5;-1  0];\nB = [0;1];\nC = [1  0];\nD = [0];\n% For the unit-step input u = 1(t), use the command \"y = step(A,B,C,D,1,t)\".\ny = step(A,B,C,D,1,t);\nplot(t,y)\ngrid\ntitle('Unit-Step Response')\nxlabel('t Sec')\nylabel('Output')\n% For the response to exponential input u = exp(-t), use the command\n% \"z = lsim(A,B,C,D,u,t)\".\nu = exp(-t);\nz = lsim(A,B,C,D,u,t);\nplot(t,u,'-',t,z,'o')\ngrid\ntitle('Response to Exponential Input u = exp(-t)')\nxlabel('t Sec')\nylabel('Exponential Input and System Output')\ntext(2.3,0.49,'Exponential input')\ntext(6.4,0.28,'Output')\nOpenmirrors.comaa\nSection 5–5 / Transient-Response Analysis with MATLAB 203\nUnit-Step Response\nt  Sec\n02468 1 0 1 2\nOutput\n1\n0.2\n0\n1.2\n0.6\n0.4\n0.8\n1.4\n(a)\nResponse to Exponential Input u = e−t\nt  Sec\n02468 1 0 1 2−0.2\n(b)\nExponential Input and System Output\n0.8\n0\n1\n0.4\n0.2\n0.6\n1.2\nExponential Input\nOuput\nFigure 5–29\n(a) Unit-step\nresponse;\n(b) response to input\nu=e–t.\nResponse to Initial Condition. In what follows we shall present a few methods\nfor obtaining the response to an initial condition. Commands that we may use are “step”\nor “initial”. We shall first present a method to obtain the response to the initial condi-\ntion using a simple example. Then we shall discuss the response to the initial condition\nwhen the system is given in state-space form. Finally, we shall present a command initial\nto obtain the response of a system given in a state-space form.aa\n204\nChapter 5 / Transient and Steady-State Response Analyses\nEXAMPLE 5–8\nConsider the mechanical system shown in Figure 5–30, where m=1 kg, b=3 N-sec/H20862m, and\nk=2 N/H20862m. Assume that at t=0 the mass m is pulled downward such that x(0)=0.1 m and \n(0)=0.05 m/H20862sec. The displacement x(t) is measured from the equilibrium position before the\nmass is pulled down. Obtain the motion of the mass subjected to the initial condition. (Assume\nno external forcing function.)\nThe system equation is\nwith the initial conditions x(0)=0.1 m and ( x is measured from the equilib-\nrium position.) The Laplace transform of the system equation gives\nor\nSolving this last equation for X(s) and substituting the given numerical values, we obtain\nThis equation can be written as\nHence the motion of the mass m may be obtained as the unit-step response of the following\nsystem:\nMATLAB Program 5–14 will give a plot of the motion of the mass.The plot is shown in Figure 5–31.\nG(s) = 0.1s\n2\n+ 0.35s\ns\n2\n+ 3s + 2\nX(s) = 0.1s\n2\n+ 0.35s\ns\n2\n+ 3s + 2\n1\ns\n = 0.1s + 0.35\ns\n2\n+ 3s + 2\n X(s) =\nmx(0)s + mx# (0) + bx(0)\nms\n2\n+ bs + k\nAms\n2\n+ bs + kBX(s) = mx(0)s + mx# (0) + bx(0)\nmCs\n2\nX(s) - sx(0) - x# (0)D + bCsX(s) - x(0)D + kX(s) = 0\nx# (0) = 0.05 m/H20862sec.\nmx$ + bx# + kx = 0\nx#\nMATLAB Program 5–14\n% --------------- Response to initial condition ---------------\n% ***** System response to initial condition is converted to\n% a unit-step response by modifying the numerator polynomial *****\n% ***** Enter the numerator and denominator of the transfer\n% function G(s) *****\nnum = [0.1  0.35  0];\nden = [1  3  2];\n% ***** Enter the following step-response command *****\nstep(num,den)\n% ***** Enter grid and title of the plot *****\ngrid\ntitle('Response of Spring-Mass-Damper System to Initial Condition')\nm\nk\nb x\nFigure 5–30\nMechanical system.\nOpenmirrors.comaa\nSection 5–5 / Transient-Response Analysis with MATLAB 205\nResponse of Spring-Mass-Damper System to Initial Condition\nAmplitude\n0.12\n0.02\n0\n0.08\n0.04\n0.06\n0.1\nTime (sec)\n0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5\nFigure 5–31\nResponse of the\nmechanical system\nconsidered in\nExample 5–8.\nResponse to Initial Condition (State-Space Approach, Case 1). Consider the\nsystem defined by\n(5–49)\nLet us obtain the response x(t)when the initial condition x(0)is specified.Assume that there\nis no external input function acting on this system. Assume also that x is an n-vector.\nFirst, take Laplace transforms of both sides of Equation (5–49).\nThis equation can be rewritten as\n(5–50)\nTaking the inverse Laplace transform of Equation (5–50), we obtain\n(5–51)\n(Notice that by taking the Laplace transform of a differential equation and then by\ntaking the inverse Laplace transform of the Laplace-transformed equation we generate\na differential equation that involves the initial condition.)\nNow define\n(5–52)\nThen Equation (5–51) can be written as\n(5–53)\nBy integrating Equation (5–53) with respect to t, we obtain\n(5–54)\nwhere\nB = x(0),  u = 1(t)\nz# = Az + x(0)1(t) = Az + Bu\nz$ = Az# + x(0) d(t)\nz# = x\nx# = Ax + x(0) d(t)\ns X(s) = AX(s) + x(0)\ns X(s) - x(0) = AX(s)\nx# = Ax,  x(0) = x0aa\n206\nChapter 5 / Transient and Steady-State Response Analyses\nReferring to Equation (5–52), the state x(t) is given by Thus,\n(5–55)\nThe solution of Equations (5–54) and (5–55) gives the response to the initial condition.\nSummarizing, the response of Equation (5–49) to the initial condition x(0) is obtained\nby solving the following state-space equations:\nwhere\nMATLAB commands to obtain the response curves, where we do not specify the time\nvector t (that is, we let the time vector be determined automatically by MATLAB), are\ngiven next.\n% Specify matrices A and B \n[x,z,t] = step(A,B,A,B);\nx1 = [1  0  0 ... 0]*x';\nx2 = [0  1  0 ... 0]*x';\n/H11080\n/H11080\n/H11080\nxn = [0  0  0 ... 1]*x';\nplot(t,x1,t,x2, ... ,t,xn)\nIf we choose the time vector t (for example, let the computation time duration be\nfrom t = 0 to t = tp with the computing time increment of ), then we use the following\nMATLAB  commands:\nt = 0: Δt: tp;\n% Specify matrices A and B \n[x,z,t] = step(A,B,A,B,1,t);\nx1 = [1  0  0 ... 0]*x';\nx2 = [0  1  0 ... 0]*x';\n/H11080\n/H11080\n/H11080\nxn = [0  0  0 ... 1]*x';\nplot(t,x1,t,x2, ... ,t,xn)\n(See, for example, Example 5–9.) \n¢t\nB = x(0),\n  \nu = 1(t)\nx = Az + Bu\nz# = Az + Bu\nx = z# = Az + Bu\nz# (t).\nOpenmirrors.comaa\nSection 5–5 / Transient-Response Analysis with MATLAB 207\nResponse to Initial Condition (State-Space Approach, Case 2). Consider the\nsystem defined by\n(5–56)\n(5–57)\n(Assume that x is an n-vector and y is an m-vector.)\nSimilar to case 1, by defining\nwe can obtain the following equation:\n(5–58)\nwhere\nNoting that Equation (5–57) can be written as\n(5–59)\nBy substituting Equation (5–58) into Equation (5–59), we obtain\n(5–60)\nThe solution of Equations (5–58) and (5–60), rewritten here\nwhere gives the response of the system to a given initial condi-\ntion. MATLAB commands to obtain the response curves (output curves y1 versus t, y2\nversus t, ... , ym versus t) are shown next for two cases:\nCase A. When the time vector t is not specified (that is, the time vector t is to be de-\ntermined automatically by MATLAB):\n% Specify matrices A, B, and C \n[y,z,t] = step(A,B,C*A,C*B);\ny1 = [1  0  0 ... 0]*y';\ny2 = [0  1  0 ... 0]*y';\n/H11080\n/H11080\n/H11080\nym = [0  0  0 ... 1]*y';\nplot(t,y1,t,y2, ... ,t,ym)\nB = x(0) and u = 1(t),\ny = CAz + CBu\nz# = Az + Bu\ny = C(Az + Bu) = CAz + CBu\ny = Cz#\nx = z# ,\nB = x(0),  u = 1(t)\nz# = Az + x(0)1(t) = Az + Bu\nz# = x\ny = Cx\nx# = Ax,  x(0) = x0aa\n208\nChapter 5 / Transient and Steady-State Response Analyses\nMATLAB Program 5–15\nt = 0:0.01:3;\nA = [0  1;-10  -5];\nB = [2;1];\n[x,z,t] = step(A,B,A,B,1,t);\nx1 = [1  0]*x';\nx2 = [0  1]*x';\nplot(t,x1,'x',t,x2,'-')\ngrid\ntitle('Response to Initial Condition')\nxlabel('t Sec')\nylabel('State Variables x1 and x2')\ngtext('x1')\ngtext('x2')\nCase B\n.\nWhen the time vector t is specified:\nt = 0: Δt: tp;\n% Specify matrices A, B, and C \n[y,z,t] = step(A,B,C*A,C*B,1,t)\ny1 = [1  0  0 ... 0]*y';\ny2 = [0  1  0 ... 0]*y';\n/H11080\n/H11080\n/H11080\nym = [0  0  0 ... 1]*y';\nplot(t,y1,t,y2, ... ,t,ym)\nEXAMPLE 5–9\nObtain the response of the system subjected to the given initial condition.\nor\nObtaining the response of the system to the given initial condition resolves to solving the unit-step\nresponse of the following system:\nwhere\nHence a possible MATLAB program for obtaining the response may be given as shown in\nMATLAB Program 5–15. The resulting response curves are shown in Figure 5–32.\nB = x(0),\n  \nu = 1(t)\nx = Az + Bu\nz# = Az + Bu\nx# = Ax,\n  \nx(0) = x\n0\nB\nx#\n1\nx#\n2\nR\n=\nB\n0\n- 10\n1\n- 5\nRB\nx\n1\nx\n2\nR\n,\n \nB\nx\n1\n(0)\nx\n2\n(0)\nR\n=\nB\n2\n1\nR\nOpenmirrors.comaa\nSection 5–5 / Transient-Response Analysis with MATLAB 209\nResponse to Initial Condition\nt Sec\n0 0.5 1 1.5 2 2.5 3\nState Variables x1 and x2\n3\n−2\n−3\n1\n−1\n0\n2\nx1\nx2Figure 5–32\nResponse of system\nin Example 5–9 to\ninitial condition.\nFor an illustrative example of how to use Equations (5–58) and (5–60) to find the re-\nsponse to the initial condition, see Problem A–5–16.\nObtaining Response to Initial Condition by Use of Command Initial. If the\nsystem is given in the state-space form, then the following command\ninitial(A,B,C,D,[initial condition],t)\nwill produce the response to the initial condition.\nSuppose that we have the system defined by\nwhere\nx0 = B2\n1 R\nA = B 0\n- 10\n1\n- 5 R,  B = B0\n0 R,  C = [0 0],  D = 0\ny = Cx + Du\nx# = Ax + Bu,  x(0) = x0aa\n210\nChapter 5 / Transient and Steady-State Response Analyses\nMATLAB Program 5–16\nt = 0:0.05:3;\nA = [0  1;-10  -5];\nB = [0;0];\nC = [0  0];\nD = [0];\n[y,x] = initial(A,B,C,D,[2;1],t);\nx1 = [1  0]*x';\nx2 = [0  1]*x';\nplot(t,x1,'o',t,x1,t,x2,'x',t,x2)\ngrid\ntitle('Response to Initial Condition')\nxlabel('t Sec')\nylabel('State Variables x1 and x2')\ngtext('x1')\ngtext('x2')\nResponse to Initial Condition\nt Sec\n0 0.5 1 1.5 2 2.5 3\nState Variables x\n1\n and x\n2\n3\n−3\n−2\n−1\n0\n1\n2\nx\n1\nx\n2\nFigure 5–33\nResponse curves to\ninitial condition.\nEXAMPLE 5–10\nConsider the following system that is subjected to the initial condition. (No external forcing\nfunction is present.)\nObtain the response y(t) to the given initial condition.\n y(0) = 2,\n  \ny# (0) = 1,\n  \ny$(0) = 0.5\n y% + 8y$ + 17y# + 10y = 0\nThen the command “initial” can be used as shown in MATLAB Program 5–16 to obtain\nthe response to the initial condition. The response curves x\n1\n(t) and x\n2\n(t) are shown in\nFigure 5–33. They are the same as those shown in Figure 5–32.\nOpenmirrors.com\nOpenmirrors.comaa\nSection 5–5 / Transient-Response Analysis with MATLAB 211\nMATLAB Program 5–17\nt = 0:0.05:10;\nA = [0  1  0;0  0  1;-10  -17  -8];\nB = [0;0;0];\nC = [1  0  0];\nD = [0];\ny = initial(A,B,C,D,[2;1;0.5],t);\nplot(t,y)\ngrid\ntitle('Response to Initial Condition')\nxlabel('t (sec)')\nylabel('Output y')\nOutput y\nt (sec)\nResponse to Initial Condition\n0.5\n1\n1.5\n2\n2.5\n0\n0123456789 1 0\nFigure 5–34\nResponse y(t) to\ninitial condition.\nBy defining the state variables as\nwe obtain the following state-space representation for the system:\nA possible MATLAB program to obtain the response y(t) is given in MATLAB Program 5–17.\nThe resulting response curve is shown in Figure 5–34.\ny = [1 0 0] C\nx1\nx2\nx3\nS\nC\nx#\n1\nx#\n2\nx#\n3\nS = C\n0\n0\n- 10\n1\n0\n- 17\n0\n1\n- 8\nSC\nx1\nx2\nx3\nS,  C\nx1(0)\nx2(0)\nx3(0)\nS = C\n2\n1\n0.5\nS\nx3 = y$\nx2 = y#\nx1 = yaa\n212\nChapter 5 / Transient and Steady-State Response Analyses\n5–6 ROUTH’S STABILITY CRITERION\nThe most important problem in linear control systems concerns stability. That is, under\nwhat conditions will a system become unstable? If it is unstable, how should we stabi-\nlize the system? In Section 5–4 it was stated that a control system is stable if and only if\nall closed-loop poles lie in the left-half s plane. Most linear closed-loop systems have\nclosed-loop transfer functions of the form\nwhere the a’s and b’s are constants and m /H11349n. A simple criterion, known as Routh’s\nstability criterion, enables us to determine the number of closed-loop poles that lie in\nthe right-half s plane without having to factor the denominator polynomial. (The\npolynomial may include parameters that MATLAB cannot handle.)\nRouth’s Stability Criterion. Routh’s stability criterion tells us whether or not\nthere are unstable roots in a polynomial equation without actually solving for them.\nThis stability criterion applies to polynomials with only a finite number of terms. When\nthe criterion is applied to a control system, information about absolute stability can be\nobtained directly from the coefficients of the characteristic equation.\nThe procedure in Routh’s stability criterion is as follows:\n1. Write the polynomial in s in the following form:\n(5–61)\nwhere the coefficients are real quantities. We assume that a\nn\nZ 0; that is, any zero\nroot has been removed.\n2. If any of the coefficients are zero or negative in the presence of at least one posi-\ntive coefficient, a root or roots exist that are imaginary or that have positive real\nparts.Therefore, in such a case, the system is not stable. If we are interested in only\nthe absolute stability, there is no need to follow the procedure further. Note that\nall the coefficients must be positive. This is a necessary condition, as may be seen\nfrom the following argument: A polynomial in s having real coefficients can al-\nways be factored into linear and quadratic factors, such as (s+a) and\nAs\n2\n+bs+cB, where a, b, and c are real. The linear factors yield real roots and\nthe quadratic factors yield complex-conjugate roots of the polynomial.The factor\nAs\n2\n+bs+cByields roots having negative real parts only if b and c are both pos-\nitive. For all roots to have negative real parts, the constants a, b, c, and so on, in all\nfactors must be positive.The product of any number of linear and quadratic factors\ncontaining only positive coefficients always yields a polynomial with positive\ncoefficients. It is important to note that the condition that all the coefficients be\npositive is not sufficient to assure stability. The necessary but not sufficient\ncondition for stability is that the coefficients of Equation (5–61) all be present and\nall have a positive sign. (If all a’s are negative, they can be made positive by\nmultiplying both sides of the equation by –1.)\na\n0\n \ns\nn\n+ a\n1\n \ns\nn - 1\n+ p + a\nn - 1\n \ns + a\nn\n= 0\nC(s)\nR(s) = b\n0\n \ns\nm\n+ b\n1\n \ns\nm - 1\n+ p + b\nm - 1\n \ns + b\nm\na\n0\n \ns\nn\n+ a\n1\n \ns\nn - 1\n+ p + a\nn - 1\n \ns + a\nn\n= B(s)\nA(s)\nOpenmirrors.comaa\nSection 5–6 / Routh’s Stability Criterion 213\n3. If all coefficients are positive, arrange the coefficients of the polynomial in rows\nand columns according to the following pattern:\nThe process of forming rows continues until we run out of elements. (The total number\nof rows is n+1.) The coefficients b1 ,b 2 ,b 3 , and so on, are evaluated as follows:\nThe evaluation of the b’s is continued until the remaining ones are all zero. The same\npattern of cross-multiplying the coefficients of the two previous rows is followed in\nevaluating the c’s,d’s,e’s, and so on. That is,\n /H11080\n /H11080\n /H11080\n c3 = b1 a7 - a1 b4\nb1\n c2 = b1 a5 - a1 b3\nb1\n c1 = b1 a3 - a1 b2\nb1\n /H11080\n /H11080\n /H11080\n b3 = a1 a6 - a0 a7\na1\n b2 = a1 a4 - a0 a5\na1\n b1 = a1 a2 - a0 a3\na1\nsn\nsn - 1\nsn - 2\nsn - 3\nsn - 4\n/H11080\n/H11080\n/H11080\ns2\ns1\ns0\na0\na1\nb1\nc1\nd1\n/H11080\n/H11080\n/H11080\ne1\nf1\ng1\na2\na3\nb2\nc2\nd2\n/H11080\n/H11080\n/H11080\ne2\na4\na5\nb3\nc3\nd3\na6\na7\nb4\nc4\nd4\np\np\np\np\npaa\n214\nChapter 5 / Transient and Steady-State Response Analyses\nand\nThis process is continued until the nth row has been completed. The complete array of\ncoefficients is triangular. Note that in developing the array an entire row may be divid-\ned or multiplied by a positive number in order to simplify the subsequent numerical\ncalculation without altering the stability conclusion.\nRouth’s stability criterion states that the number of roots of Equation (5–61) with\npositive real parts is equal to the number of changes in sign of the coefficients of the first\ncolumn of the array. It should be noted that the exact values of the terms in the first col-\numn need not be known; instead, only the signs are needed. The necessary and suffi-\ncient condition that all roots of Equation (5–61) lie in the left-half s plane is that all the\ncoefficients of Equation (5–61) be positive and all terms in the first column of the array\nhave positive signs.\nEXAMPLE 5–11\nLet us apply Routh’s stability criterion to the following third-order polynomial:\nwhere all the coefficients are positive numbers. The array of coefficients becomes\nThe condition that all roots have negative real parts is given by\nEXAMPLE 5–12\nConsider the following polynomial:\nLet us follow the procedure just presented and construct the array of coefficients. (The first \ntwo rows can be obtained directly from the given polynomial. The remaining terms are \ns\n4\n+ 2s\n3\n+ 3s\n2\n+ 4s + 5 = 0\na\n1\n \na\n2\n7 a\n0\n \na\n3\ns\n3\ns\n2\ns\n1\n \ns\n0\n \na\n0\na\n1\na\n1\n \na\n2\n- a\n0\n \na\n3\na\n1\na\n3\na\n2\na\n3\na\n0\n \ns\n3\n+ a\n1\n \ns\n2\n+ a\n2\n \ns + a\n3\n= 0\n /H11080\n /H11080\n /H11080\n d\n2\n= c\n1\n \nb\n3\n- b\n1\n \nc\n3\nc\n1\n d\n1\n= c\n1\n \nb\n2\n- b\n1\n \nc\n2\nc\n1\nOpenmirrors.comaa\nSection 5–6 / Routh’s Stability Criterion 215\nobtained from these. If any coefficients are missing, they may be replaced by zeros in \nthe array.)\nIn this example, the number of changes in sign of the coefficients in the first column is 2. This\nmeans that there are two roots with positive real parts. Note that the result is unchanged when the\ncoefficients of any row are multiplied or divided by a positive number in order to simplify the\ncomputation.\nSpecial Cases. If a first-column term in any row is zero, but the remaining terms\nare not zero or there is no remaining term, then the zero term is replaced by a very small\npositive number /H9280and the rest of the array is evaluated. For example, consider the\nfollowing equation:\n(5–62)\nThe array of coefficients is\nIf the sign of the coefficient above the zero (/H9280) is the same as that below it, it indicates\nthat there are a pair of imaginary roots. Actually, Equation (5–62) has two roots at\ns=; j.\nIf, however, the sign of the coefficient above the zero (/H9280) is opposite that below it, it\nindicates that there is one sign change. For example, for the equation\nthe array of coefficients is\nOne sign change:\nOne sign change:\nThere are two sign changes of the coefficients in the first column. So there are two roots\nin the right-half s plane. This agrees with the correct result indicated by the factored\nform of the polynomial equation.\ns1\ns0\n- 3 - 2\n/H9280\n2\ns3\ns2\n1\n0 L /H9280\n- 3\n2\ns3 - 3s + 2 = (s - 1)2(s + 2) = 0\ns3\ns2\ns1\ns0\n1\n2\n0 L /H9280\n2\n1\n2\ns3 + 2s2 + s + 2 = 0\nThe second row is divided\nby 2.6 \ns4\ns3\ns2\ns1\ns0    \n1\n2\n1\n1\n- 3\n5\n3\n4\n2\n5\n5\n0\n0\ns4\ns3\ns2\ns1\ns0    \n1\n2\n1\n- 6\n5\n3\n4\n5\n5\n0\n 6\n⁄\n⁄⁄\n⁄aa\n216\nChapter 5 / Transient and Steady-State Response Analyses\nIf all the coefficients in any derived row are zero, it indicates that there are roots of\nequal magnitude lying radially opposite in the s plane—that is, two real roots with equal\nmagnitudes and opposite signs and/or two conjugate imaginary roots. In such a case, the\nevaluation of the rest of the array can be continued by forming an auxiliary polynomi-\nal with the coefficients of the last row and by using the coefficients of the derivative of\nthis polynomial in the next row. Such roots with equal magnitudes and lying radially op-\nposite in the s plane can be found by solving the auxiliary polynomial, which is always\neven. For a 2n-degree auxiliary polynomial, there are n pairs of equal and opposite roots.\nFor example, consider the following equation:\nThe array of coefficients is\nThe terms in the s\n3\nrow are all zero. (Note that such a case occurs only in an odd-\nnumbered row.) The auxiliary polynomial is then formed from the coefficients of the s\n4\nrow. The auxiliary polynomial P(s) is\nwhich indicates that there are two pairs of roots of equal magnitude and opposite sign\n(that is, two real roots with the same magnitude but opposite signs or two complex-\nconjugate roots on the imaginary axis).These pairs are obtained by solving the auxiliary\npolynomial equation P(s)=0. The derivative of P(s) with respect to s is\nThe terms in the s\n3\nrow are replaced by the coefficients of the last equation—that is,\n8 and 96. The array of coefficients then becomes\nWe see that there is one change in sign in the first column of the new array.Thus, the orig-\ninal equation has one root with a positive real part. By solving for roots of the auxiliary\npolynomial equation,\nwe obtain\nor\n s =; j5 s =; 1,\n s\n2\n=- 25 s\n2\n= 1,\n2s\n4\n+ 48s\n2\n- 50 = 0\ns\n5\ns\n4\ns\n3\ns\n2\ns\n1\n s\n0\n \n1\n2\n8\n24\n112.7\n- 50\n24\n48\n96\n- 50\n0\n- 25\n- 50\nd Coefficients of dP (s)/H20862ds\ndP (s)\nds = 8s\n3\n+ 96s\nP(s) = 2s\n4\n+ 48s\n2\n- 50\ns\n5\ns\n4\ns\n3\n1\n2\n0\n24\n48\n0\n- 25\n- 50 d Auxiliary polynomial P(s)\ns\n5\n+ 2s\n4\n+ 24s\n3\n+ 48s\n2\n- 25s - 50 = 0\nOpenmirrors.comaa\nSection 5–6 / Routh’s Stability Criterion 217\nThese two pairs of roots of P(s) are a part of the roots of the original equation. As a\nmatter of fact, the original equation can be written in factored form as follows:\nClearly, the original equation has one root with a positive real part.\nRelative Stability Analysis. Routh’s stability criterion provides the answer to\nthe question of absolute stability. This, in many practical cases, is not sufficient. We usu-\nally require information about the relative stability of the system. A useful approach\nfor examining relative stability is to shift the s-plane axis and apply Routh’s stability\ncriterion. That is, we substitute\ninto the characteristic equation of the system, write the polynomial in terms of and\napply Routh’s stability criterion to the new polynomial in The number of changes of\nsign in the first column of the array developed for the polynomial in is equal to the num-\nber of roots that are located to the right of the vertical line s=–s.Thus, this test reveals\nthe number of roots that lie to the right of the vertical line s=–s.\nApplication of Routh’s Stability Criterion to Control-System Analysis.Routh’s\nstability criterion is of limited usefulness in linear control-system analysis, mainly because\nit does not suggest how to improve relative stability or how to stabilize an unstable\nsystem. It is possible, however, to determine the effects of changing one or two\nparameters of a system by examining the values that cause instability. In the following,\nwe shall consider the problem of determining the stability range of a parameter value.\nConsider the system shown in Figure 5–35. Let us determine the range of K for\nstability. The closed-loop transfer function is\nThe characteristic equation is\nThe array of coefficients becomes\ns4\ns3\ns2\ns1\n s0 \n1\n3\n7\n3\n2 - 9\n7 K\nK\n3\n2\nK\nK\n0\ns4 + 3s3 + 3s2 + 2s + K = 0\nC(s)\nR(s) = K\nsAs2 + s + 1B(s + 2) + K\nsˆ\nsˆ.\nsˆ;\ns = sˆ - s  (s = constant)\n(s + 1)(s - 1)(s + j5)(s - j5)(s + 2) = 0\n+ –\nR(s) C(s)K\ns(s2 + s + 1) (s + 2)\nFigure 5–35\nControl system.aa\n218\nChapter 5 / Transient and Steady-State Response Analyses\nFor stability,K must be positive, and all coefficients in the first column must be positive.\nTherefore,\nWhen the system becomes oscillatory and, mathematically, the oscillation is\nsustained at constant amplitude.\nNote that the ranges of design parameters that lead to stability may be determined\nby use of Routh’s stability criterion.\n5–7 EFFECTS OF INTEGRAL AND DERIVATIVE CONTROL\nACTIONS ON SYSTEM PERFORMANCE\nIn this section, we shall investigate the effects of integral and derivative control actions\non the system performance. Here we shall consider only simple systems, so that the\neffects of integral and derivative control actions on system performance can be clearly\nseen.\nIntegral Control Action. In the proportional control of a plant whose transfer\nfunction does not possess an integrator 1/H20862s, there is a steady-state error, or offset, in the\nresponse to a step input. Such an offset can be eliminated if the integral control action\nis included in the controller.\nIn the integral control of a plant, the control signal—the output signal from the\ncontroller—at any instant is the area under the actuating-error-signal curve up to that\ninstant.The control signal u(t) can have a nonzero value when the actuating error signal\ne(t) is zero, as shown in Figure 5–36(a).This is impossible in the case of the proportional\ncontroller, since a nonzero control signal requires a nonzero actuating error signal.\n(A nonzero actuating error signal at steady state means that there is an offset.) Figure\n5–36(b) shows the curve e(t) versus t and the corresponding curve u(t) versus t when the\ncontroller is of the proportional type.\nNote that integral control action, while removing offset or steady-state error, may lead\nto oscillatory response of slowly decreasing amplitude or even increasing amplitude,\nboth of which are usually undesirable.\nK =\n14\n9\n,\n14\n9 7 K 7 0\ne(t)\nu(t)\n0\n0\nt\nt\ne(t)\nu(t)\n0\n0\nt\nt\n(a) (b)\nFigure 5–36\n(a) Plots of e(t) and\nu(t) curves showing\nnonzero control\nsignal when the\nactuating error signal\nis zero (integral\ncontrol); (b) plots of\ne(t) and u(t) curves\nshowing zero control\nsignal when the\nactuating error signal\nis zero (proportional\ncontrol).\nOpenmirrors.comaa\nSection 5–7 / Effects of Integral and Derivative Control Actions on System Performance 219\nProportional Control of Systems. We shall show that the proportional control\nof a system without an integrator will result in a steady-state error with a step input.We\nshall then show that such an error can be eliminated if integral control action is included\nin the controller.\nConsider the system shown in Figure 5–37. Let us obtain the steady-state error in the\nunit-step response of the system. Define\nSince\nthe error E(s) is given by\nFor the unit-step input R(s)=1/s, we have\nThe steady-state error is\nSuch a system without an integrator in the feedforward path always has a steady-state\nerror in the step response. Such a steady-state error is called an offset. Figure 5–38 shows\nthe unit-step response and the offset.\ness = lim\nt Sq\ne(t) = lim\ns S 0\nsE(s) = lim\ns S 0\n Ts + 1\nTs + 1 + K = 1\nK + 1\nE(s) = Ts + 1\nTs + 1 + K\n1\ns\nE(s) = 1\n1 + G(s) R(s) = 1\n1 + K\nTs + 1\nR(s)\nE(s)\nR(s) = R(s) - C(s)\nR(s) = 1 - C(s)\nR(s) = 1\n1 + G(s)\nG(s) = K\nTs + 1\n1\nTs + 1+ –\nR(s) E(s) C(s)\nK\nProportional\ncontroller\nPlantFigure 5–37\nProportional control\nsystem.\nc(t)\n1\n0 t\nOffset\nFigure 5–38\nUnit-step response\nand offset.aa\n220\nChapter 5 / Transient and Steady-State Response Analyses\nIntegral Control of Systems. Consider the system shown in Figure 5–39. The\ncontroller is an integral controller. The closed-loop transfer function of the system is\nHence\nSince the system is stable, the steady-state error for the unit-step response can be\nobtained by applying the final-value theorem, as follows:\nIntegral control of the system thus eliminates the steady-state error in the response to\nthe step input. This is an important improvement over the proportional control alone,\nwhich gives offset.\nResponse to Torque Disturbances (Proportional Control). Let us investigate\nthe effect of a torque disturbance occurring at the load element. Consider the system\nshown in Figure 5–40.The proportional controller delivers torque T to position the load\nelement, which consists of moment of inertia and viscous friction.Torque disturbance is\ndenoted by D.\nAssuming that the reference input is zero or R(s)=0, the transfer function between\nC(s) and D(s) is given by\nC(s)\nD(s) = 1\nJs\n2\n+ bs + K\np\n = 0\n = lim\ns S 0\n s\n2\n(Ts + 1)\nTs\n2\n+ s + K 1\ns\n e\nss\n= lim\ns S 0\nsE(s)\nE(s)\nR(s) = R(s) - C(s)\nR(s) = s(Ts + 1)\ns(Ts + 1) + K\nC(s)\nR(s) = K\ns(Ts + 1) + K\n1\nTs + 1\n+ –\nR(s) C(s)E(s)\nK\ns\nFigure 5–39\nIntegral control\nsystem.\n+ –\n++\nR\nD\nCET\nK\np\n1\ns(Js + b)\nFigure 5–40\nControl system with\na torque disturbance.\nOpenmirrors.comaa\nSection 5–7 / Effects of Integral and Derivative Control Actions on System Performance 221\nHence\nThe steady-state error due to a step disturbance torque of magnitude is given by\nAt steady state, the proportional controller provides the torque which is equal in\nmagnitude but opposite in sign to the disturbance torque The steady-state output due\nto the step disturbance torque is\nThe steady-state error can be reduced by increasing the value of the gain Kp. Increasing\nthis value, however, will cause the system response to be more oscillatory.\nResponse to Torque Disturbances (Proportional-Plus-Integral Control). To\neliminate offset due to torque disturbance, the proportional controller may be replaced\nby a proportional-plus-integral controller.\nIf integral control action is added to the controller, then, as long as there is an error\nsignal, a torque is developed by the controller to reduce this error, provided the control\nsystem is a stable one.\nFigure 5–41 shows the proportional-plus-integral control of the load element,\nconsisting of moment of inertia and viscous friction.\nThe closed-loop transfer function between C(s) and D(s) is\nIn the absence of the reference input, or r(t)=0, the error signal is obtained from\nE(s) =- s\nJs3 + bs2 + Kp s +\nKp\nTi\nD(s)\nC(s)\nD(s) = s\nJs3 + bs2 + Kp s +\nKp\nTi\ncss =- ess = Td\nKp\nTd .\n-Td ,\n =-  Td\nKp\n = lim\ns S 0\n -s\nJs2 + bs + Kp\n Td\ns\n ess = lim\ns S 0\nsE(s)\nTd\nE(s)\nD(s) =- C(s)\nD(s) =- 1\nJs2 + bs + Kp\n++ CE\nD\nR = 0 TKp(1 + 1\nTis ) 1\ns(Js + b)+ –\nFigure 5–41\nProportional-plus-\nintegral control of a\nload element\nconsisting of moment\nof inertia and viscous\nfriction.aa\n222\nChapter 5 / Transient and Steady-State Response Analyses\nIf this control system is stable—that is, if the roots of the characteristic equation\nhave negative real parts—then the steady-state error in the response to a unit-step\ndisturbance torque can be obtained by applying the final-value theorem as follows:\nThus steady-state error to the step disturbance torque can be eliminated if the controller\nis of the proportional-plus-integral type.\nNote that the integral control action added to the proportional controller has\nconverted the originally second-order system to a third-order one. Hence the control\nsystem may become unstable for a large value of K\np\n, since the roots of the characteristic\nequation may have positive real parts. (The second-order system is always stable if the\ncoefficients in the system differential equation are all positive.)\nIt is important to point out that if the controller were an integral controller, as in\nFigure 5–42, then the system always becomes unstable, because the characteristic\nequation\nwill have roots with positive real parts. Such an unstable system cannot be used in\npractice.\nNote that in the system of Figure 5–41 the proportional control action tends to\nstabilize the system, while the integral control action tends to eliminate or reduce steady-\nstate error in response to various inputs.\nDerivative Control Action. Derivative control action, when added to a\nproportional controller, provides a means of obtaining a controller with high\nsensitivity. An advantage of using derivative control action is that it responds to the\nrate of change of the actuating error and can produce a significant correction before\nthe magnitude of the actuating error becomes too large. Derivative control thus\nanticipates the actuating error, initiates an early corrective action, and tends to\nincrease the stability of the system.\nJs\n3\n+ bs\n2\n+ K = 0\n = 0\n = lim\ns S 0\n -s\n2\nJs\n3\n+ bs\n2\n+ K\np\n \ns +\nK\np\nT\ni\n 1\ns\n e\nss\n= lim\ns S 0\nsE(s)\nJs\n3\n+ bs\n2\n+ K\np\n \ns +\nK\np\nT\ni\n= 0\n+ –\n++\nCE\nD\nR = 0 TK\ns\n1\ns(Js + b)\nFigure 5–42\nIntegral control of a\nload element\nconsisting of moment\nof inertia and viscous\nfriction.\nOpenmirrors.comaa\nSection 5–7 / Effects of Integral and Derivative Control Actions on System Performance 223\n+ –\nR(s) C(s)\n(a)\n(b)\nKp\n1\nJs2\nc(t)\n1\n0 t\nFigure 5–43\n(a) Proportional\ncontrol of a system\nwith inertia load;\n(b) response to a\nunit-step input.\nAlthough derivative control does not affect the steady-state error directly, it adds\ndamping to the system and thus permits the use of a larger value of the gain K, which\nwill result in an improvement in the steady-state accuracy.\nBecause derivative control operates on the rate of change of the actuating error and\nnot the actuating error itself, this mode is never used alone. It is always used in combi-\nnation with proportional or proportional-plus-integral control action.\nProportional Control of Systems with Inertia Load. Before we discuss further\nthe effect of derivative control action on system performance, we shall consider the\nproportional control of an inertia load.\nConsider the system shown in Figure 5–43(a). The closed-loop transfer function is\nobtained as\nSince the roots of the characteristic equation\nare imaginary, the response to a unit-step input continues to oscillate indefinitely, as\nshown in Figure 5–43(b).\nControl systems exhibiting such response characteristics are not desirable. We shall\nsee that the addition of derivative control will stabilize the system.\nProportional-Plus-Derivative Control of a System with Inertia Load. Let us\nmodify the proportional controller to a proportional-plus-derivative controller whose\ntransfer function is The torque developed by the controller is proportional\nto Derivative control is essentially anticipatory, measures the instantaneous\nerror velocity, and predicts the large overshoot ahead of time and produces an\nappropriate counteraction before too large an overshoot occurs.\nKpAe + Td e# B.\nKpA1 + Td sB.\nJs2 + Kp = 0\nC(s)\nR(s) =\nKp\nJs2 + Kpaa\n224\nChapter 5 / Transient and Steady-State Response Analyses\nConsider the system shown in Figure 5–44(a). The closed-loop transfer function is\ngiven by\nThe characteristic equation\nnow has two roots with negative real parts for positive values of J, K\np\n, and Thus\nderivative control introduces a damping effect. A typical response curve c(t) to a unit-\nstep input is shown in Figure 5–44(b). Clearly, the response curve shows a marked\nimprovement over the original response curve shown in Figure 5–46(b).\nProportional-Plus-Derivative Control of Second-Order Systems.A compromise\nbetween acceptable transient-response behavior and acceptable steady-state behavior may\nbe achieved by use of proportional-plus-derivative control action.\nConsider the system shown in Figure 5–45. The closed-loop transfer function is\nThe steady-state error for a unit-ramp input is\nThe characteristic equation is\nJs\n2\n+ AB + K\nd\nBs + K\np\n= 0\ne\nss\n= B\nK\np\nC(s)\nR(s) =\nK\np\n+ K\nd\n \ns\nJs\n2\n+ AB + K\nd\nBs + K\np\nT\nd\n \n.\nJs\n2\n+ K\np\n \nT\nd\n \ns + K\np\n= 0\nC(s)\nR(s) =\nK\np\nA1 + T\nd\n \nsB\nJs\n2\n+ K\np\n \nT\nd\n \ns + K\np\n+ –\nR(s) C(s)\nK\np\n+ K\nd\ns 1\ns(Js + B)\nFigure 5–44\n(a) Proportional-plus-derivative control of a system with inertia load; (b) response to a unit-step input.\nR(s) C(s)\n(a) (b)\nK\np\n(1 + T\nd\ns)\nc(t)\n1\n0 t\n1\nJs\n2\n+ –\nFigure 5–45\nControl system.\nOpenmirrors.comaa\nSection 5–8 / Steady-State Errors in Unity-Feedback Control Systems 225\nThe effective damping coefficient of this system is thus B+Kd rather than B. Since the\ndamping ratio z of this system is\nit is possible to make both the steady-state error ess for a ramp input and the maximum\novershoot for a step input small by making B small,Kp large, and Kd large enough so that\nz is between 0.4 and 0.7.\n5–8 STEADY-STATE ERRORS IN UNITY-FEEDBACK\nCONTROL SYSTEMS\nErrors in a control system can be attributed to many factors. Changes in the reference\ninput will cause unavoidable errors during transient periods and may also cause steady-\nstate errors. Imperfections in the system components, such as static friction, backlash, and\namplifier drift, as well as aging or deterioration, will cause errors at steady state. In this\nsection, however, we shall not discuss errors due to imperfections in the system com-\nponents. Rather, we shall investigate a type of steady-state error that is caused by the\nincapability of a system to follow particular types of inputs.\nAny physical control system inherently suffers steady-state error in response to\ncertain types of inputs.A system may have no steady-state error to a step input, but the\nsame system may exhibit nonzero steady-state error to a ramp input. (The only way we\nmay be able to eliminate this error is to modify the system structure.) Whether a given\nsystem will exhibit steady-state error for a given type of input depends on the type of\nopen-loop transfer function of the system, to be discussed in what follows.\nClassification of Control Systems. Control systems may be classified according\nto their ability to follow step inputs, ramp inputs, parabolic inputs, and so on. This is a\nreasonable classification scheme, because actual inputs may frequently be considered\ncombinations of such inputs. The magnitudes of the steady-state errors due to these\nindividual inputs are indicative of the goodness of the system.\nConsider the unity-feedback control system with the following open-loop transfer\nfunction G(s):\nIt involves the term sN in the denominator, representing a pole of multiplicity N at the\norigin.The present classification scheme is based on the number of integrations indicated\nby the open-loop transfer function.A system is called type 0, type 1, type 2,p , if N=0,\nN=1, N=2, p , respectively. Note that this classification is different from that of the\norder of a system. As the type number is increased, accuracy is improved; however,\nincreasing the type number aggravates the stability problem. A compromise between\nsteady-state accuracy and relative stability is always necessary.\nWe shall see later that, if G(s) is written so that each term in the numerator and\ndenominator, except the term sN, approaches unity as s approaches zero, then the open-\nloop gain K is directly related to the steady-state error.\nG(s) =\nKATa s + 1BATb s + 1Bp ATm s + 1B\nsNAT1 s + 1BAT2 s + 1Bp ATp s + 1B\nz = B + Kd\n22Kp Jaa\n226\nChapter 5 / Transient and Steady-State Response Analyses\nSteady-State Errors. Consider the system shown in Figure 5–46.The closed-loop\ntransfer function is\nThe transfer function between the error signal e(t) and the input signal r(t) is\nwhere the error e(t) is the difference between the input signal and the output signal.\nThe final-value theorem provides a convenient way to find the steady-state\nperformance of a stable system. Since E(s) is\nthe steady-state error is\nThe static error constants defined in the following are figures of merit of control systems.\nThe higher the constants, the smaller the steady-state error. In a given system, the out-\nput may be the position, velocity, pressure, temperature, or the like. The physical form\nof the output, however, is immaterial to the present analysis.Therefore, in what follows,\nwe shall call the output “position,” the rate of change of the output “velocity,” and so on.\nThis means that in a temperature control system “position” represents the output tem-\nperature,“velocity” represents the rate of change of the output temperature, and so on.\nStatic Position Error Constant K\np\n. The steady-state error of the system for a\nunit-step input is\nThe static position error constant K\np\nis defined by\nThus, the steady-state error in terms of the static position error constant K\np\nis given by\ne\nss\n= 1\n1 + K\np\nK\np\n= lim\ns S 0\nG(s) = G(0)\n = 1\n1 + G(0)\n e\nss\n= lim\ns S 0\ns\n1 + G(s)\n1\ns\ne\nss\n= lim\nt Sq\ne(t) = lim\ns S 0\nsE(s) = lim\ns S 0\n sR(s)\n1 + G(s)\nE(s) = 1\n1 + G(s) R(s)\nE(s)\nR(s) = 1 - C(s)\nR(s) = 1\n1 + G(s)\nC(s)\nR(s) = G(s)\n1 + G(s)\n+ –\nR(s) C(s)E(s)\nG(s)\nFigure 5–46\nControl system.\nOpenmirrors.comaa\nSection 5–8 / Steady-State Errors in Unity-Feedback Control Systems 227\nFor a type 0 system,\nFor a type 1 or higher system,\nfor N /H113501\nHence, for a type 0 system, the static position error constant Kp is finite, while for a type\n1 or higher system, Kp is infinite.\nFor a unit-step input, the steady-state error ess may be summarized as follows:\nfor type 0 systems\nfor type 1 or higher systems\nFrom the foregoing analysis, it is seen that the response of a feedback control system\nto a step input involves a steady-state error if there is no integration in the feedforward\npath. (If small errors for step inputs can be tolerated, then a type 0 system may be\npermissible, provided that the gain K is sufficiently large. If the gain K is too large, how-\never, it is difficult to obtain reasonable relative stability.) If zero steady-state error for\na step input is desired, the type of the system must be one or higher.\nStatic Velocity Error Constant Kv. The steady-state error of the system with a\nunit-ramp input is given by\nThe static velocity error constant Kv is defined by\nThus, the steady-state error in terms of the static velocity error constant Kv is given by\nThe term velocity error is used here to express the steady-state error for a ramp\ninput.The dimension of the velocity error is the same as the system error.That is, velocity\nerror is not an error in velocity, but it is an error in position due to a ramp input.\nFor a type 0 system,\nKv = lim\ns S 0\nsKATa s + 1BATb s + 1Bp\nAT1 s + 1BAT2 s + 1Bp = 0\ness = 1\nKv\nKv = lim\ns S 0\nsG(s)\n = lim\ns S 0\n 1\nsG(s)\n ess = lim\ns S 0\ns\n1 + G(s)\n1\ns2\ness = 0,\ness = 1\n1 + K ,\nKp = lim\ns S 0\nKATa s + 1BATb s + 1Bp\nsNAT1 s + 1BAT2 s + 1Bp =q ,\nKp = lim\ns S 0\nKATa s + 1BATb s + 1Bp\nAT1 s + 1BAT2 s + 1Bp = Kaa\n228\nChapter 5 / Transient and Steady-State Response Analyses\nFor a type 1 system,\nFor a type 2 or higher system,\nfor N /H113502\nThe steady-state error e\nss\nfor the unit-ramp input can be summarized as follows:\nfor type 0 systems\nfor type 1 systems\nfor type 2 or higher systems\nThe foregoing analysis indicates that a type 0 system is incapable of following a ramp\ninput in the steady state.The type 1 system with unity feedback can follow the ramp input\nwith a finite error. In steady-state operation, the output velocity is exactly the same as the\ninput velocity, but there is a positional error. This error is proportional to the velocity of\nthe input and is inversely proportional to the gain K. Figure 5–47 shows an example of the\nresponse of a type 1 system with unity feedback to a ramp input. The type 2 or higher\nsystem can follow a ramp input with zero error at steady state.\nStatic Acceleration Error Constant K\na\n. The steady-state error of the system\nwith a unit-parabolic input (acceleration input), which is defined by\nfor t /H113500\nfor t<0 = 0,\n r(t) = t\n2\n2 ,\ne\nss\n= 1\nK\nv\n= 0,\ne\nss\n= 1\nK\nv\n= 1\nK ,\ne\nss\n= 1\nK\nv\n=q ,\nK\nv\n= lim\ns S 0\nsKAT\na\n \ns + 1BAT\nb\n \ns + 1Bp\ns\nN\nAT\n1\n \ns + 1BAT\n2\n \ns + 1Bp =q ,\nK\nv\n= lim\ns S 0\nsKAT\na\n \ns + 1BAT\nb\n \ns + 1Bp\nsAT\n1\n \ns + 1BAT\n2\n \ns + 1Bp = K\nr(t)\nc(t)\n0 t\nr(t)\nc(t)\nFigure 5–47\nResponse of a type 1\nunity-feedback\nsystem to a ramp\ninput.\nOpenmirrors.comaa\nSection 5–8 / Steady-State Errors in Unity-Feedback Control Systems 229\nis given by\nThe static acceleration error constant Ka is defined by the equation\nThe steady-state error is then\nNote that the acceleration error, the steady-state error due to a parabolic input, is an\nerror in position.\nThe values of Ka are obtained as follows:\nFor a type 0 system,\nFor a type 1 system,\nFor a type 2 system,\nFor a type 3 or higher system,\nfor N /H113503\nThus, the steady-state error for the unit parabolic input is\nfor type 0 and type 1 systems\nfor type 2 systems\nfor type 3 or higher systemsess = 0,\ness = 1\nK ,\ness =q ,\nKa = lim\ns S 0\ns2KATa s + 1BATb s + 1Bp\nsNAT1 s + 1BAT2 s + 1Bp =q ,\nKa = lim\ns S 0\ns2KATa s + 1BATb s + 1Bp\ns2AT1 s + 1BAT2 s + 1Bp = K\nKa = lim\ns S 0\ns2KATa s + 1BATb s + 1Bp\nsAT1 s + 1BAT2 s + 1Bp = 0\nKa = lim\ns S 0\ns2KATa s + 1BATb s + 1Bp\nAT1 s + 1BAT2 s + 1Bp = 0\ness = 1\nKa\nKa = lim\ns S 0\ns2G(s)\n = 1\nlim\ns S 0\ns2G(s)\n ess = lim\ns S 0\ns\n1 + G(s)\n1\ns3aa\n230\nChapter 5 / Transient and Steady-State Response Analyses\nNote that both type 0 and type 1 systems are incapable of following a parabolic input\nin the steady state. The type 2 system with unity feedback can follow a parabolic input\nwith a finite error signal. Figure 5–48 shows an example of the response of a type 2 sys-\ntem with unity feedback to a parabolic input. The type 3 or higher system with unity\nfeedback follows a parabolic input with zero error at steady state.\nSummary. Table 5–1 summarizes the steady-state errors for type 0, type 1, and\ntype 2 systems when they are subjected to various inputs. The finite values for steady-\nstate errors appear on the diagonal line.Above the diagonal, the steady-state errors are\ninfinity; below the diagonal, they are zero.\nr(t)\nc(t)\n0 t\nr(t)\nc(t)\nFigure 5–48\nResponse of a type 2\nunity-feedback\nsystem to a parabolic\ninput.\nStep Input Ramp Input Acceleration Input\nr(t)=1 r(t)=t\nType 0 system qq\nType 1 system 0 q\nType 2 system 0 0 1\nK\n1\nK\n1\n1 + K\nr(t) =\n1\n2\nt\n2\nTable 5–1\nSteady-State Error in Terms of Gain K\nRemember that the terms position error, velocity error, and acceleration error mean\nsteady-state deviations in the output position. A finite velocity error implies that after\ntransients have died out, the input and output move at the same velocity but have a\nfinite position difference.\nThe error constants K\np\n, K\nv\n, and K\na\ndescribe the ability of a unity-feedback system\nto reduce or eliminate steady-state error.Therefore, they are indicative of the steady-state\nperformance. It is generally desirable to increase the error constants, while maintaining\nthe transient response within an acceptable range. It is noted that to improve the steady-\nstate performance we can increase the type of the system by adding an integrator or\nintegrators to the feedforward path. This, however, introduces an additional stability\nproblem.The design of a satisfactory system with more than two integrators in series in\nthe feedforward path is generally not easy.\nOpenmirrors.comaa\nExample Problems and Solutions 231\nEXAMPLE PROBLEMS AND SOLUTIONS\nA–5–1. In the system of Figure 5–49, x(t) is the input displacement and u(t) is the output angular\ndisplacement. Assume that the masses involved are negligibly small and that all motions are\nrestricted to be small; therefore, the system can be considered linear. The initial conditions for x\nand u are zeros, or x(0–)=0 and u(0–)=0. Show that this system is a differentiating element.\nThen obtain the response u(t) when x(t) is a unit-step input.\nSolution. The equation for the system is\nor\nThe Laplace transform of this last equation, using zero initial conditions, gives\nAnd so\nThus the system is a differentiating system.\nFor the unit-step input X(s)=1/H20862s, the output becomes\nThe inverse Laplace transform of gives\nu(t) = 1\nL e-(k/H20862b)t\nQ(s)\nQ(s) = 1\nL\n1\ns + (k/H20862b)\nQ(s)\nQ(s)\nX(s) = 1\nL\ns\ns + (k/H20862b)\naLs + k\nb L bQ(s) = sX(s)\nLu# + k\nb Lu = x#\nbAx# - Lu\n#\nB= kLu\nNo friction\nx\nb\nk\nu\nL\nFigure 5–49\nMechanical system.aa\n232\nChapter 5 / Transient and Steady-State Response Analyses\nNote that if the value of k/H20862b is large, the response u(t) approaches a pulse signal, as shown in\nFigure 5–50.\nA–5–2. Gear trains are often used in servo systems to reduce speed, to magnify torque, or to obtain the\nmost efficient power transfer by matching the driving member to the given load.\nConsider the gear-train system shown in Figure 5–51. In this system, a load is driven by a\nmotor through the gear train. Assuming that the stiffness of the shafts of the gear train is infinite\n(there is neither backlash nor elastic deformation) and that the number of teeth on each gear is\nproportional to the radius of the gear, obtain the equivalent moment of inertia and equivalent\nviscous-friction coefficient referred to the motor shaft and referred to the load shaft.\nIn Figure 5–51 the numbers of teeth on gears 1, 2, 3, and 4 are N\n1\n, N\n2\n, N\n3\n, and N\n4\n, respectively.\nThe angular displacements of shafts, 1, 2, and 3 are u\n1\n, u\n2\n, and u\n3\n, respectively.Thus,\nand The moment of inertia and viscous-friction coefficient of each gear-train\ncomponent are denoted by J\n1\n, b\n1\n; J\n2\n, b\n2\n; and J\n3\n, b\n3\n; respectively. (J\n3\nand b\n3\ninclude the moment of\ninertia and friction of the load.)\nu\n3\n \n/H20862u\n2\n= N\n3\n \n/H20862N\n4\n \n.\nu\n2\n \n/H20862u\n1\n= N\n1\n \n/H20862N\n2\nx(t)\nt\nt\n1\n0\n0\nu(t)\n1\nL\nFigure 5–50\nUnit-step input and\nthe response of the\nmechanical system\nshown in Figure\n5–49.\nShaft 1\nGear 2\nGear 1\nGear 3\nGear 4\nShaft 2\nShaft 3\nJ\n1,\nb\n1\nN\n1\nInput torque\nfrom motor\nTm (t)\nu\n1\nN\n2\nN\n3\nN\n4\nu\n2\nu\n3\nLoad\ntorque\nT\nL\n(t)\nJ\n2,\nb\n2\nJ\n3,\nb\n3\nFigure 5–51\nGear-train system.\nOpenmirrors.comaa\nExample Problems and Solutions 233\nSolution. For this gear-train system, we can obtain the following equations: For shaft 1,\n(5–63)\nwhere is the torque developed by the motor and is the load torque on gear 1 due to the rest\nof the gear train. For shaft 2,\n(5–64)\nwhere is the torque transmitted to gear 2 and is the load torque on gear 3 due to the rest of\nthe gear train. Since the work done by gear 1 is equal to that of gear 2,\nor\nIf the gear ratio reduces the speed as well as magnifies the torque. For shaft 3,\n(5–65)\nwhere is the load torque and is the torque transmitted to gear 4. and are related by\nand u3 and u1 are related by\nEliminating and from Equations (5–63), (5–64), and (5–65) yields\nEliminating u2 and u3 from this last equation and writing the resulting equation in terms of u1 and\nits time derivatives, we obtain\n(5–66)\nThus, the equivalent moment of inertia and viscous-friction coefficient of the gear train referred\nto shaft 1 are given, respectively, by\nSimilarly, the equivalent moment of inertia and viscous-friction coefficient of the gear train referred\nto the load shaft (shaft 3) are given, respectively, by\nb3eq = b3 + aN4\nN3\nb\n2\nb2 + aN2\nN1\nb\n2\naN4\nN3\nb\n2\nb1\nJ3eq = J3 + aN4\nN3\nb\n2\nJ2 + aN2\nN1\nb\n2\naN4\nN3\nb\n2\nJ1\nb1eq = b1 + aN1\nN2\nb\n2\nb2 + aN1\nN2\nb\n2\naN3\nN4\nb\n2\nb3\nJ1eq = J1 + aN1\nN2\nb\n2\nJ2 + aN1\nN2\nb\n2\naN3\nN4\nb\n2\nJ3\n+ cb1 + aN1\nN2\nb\n2\nb2 + aN1\nN2\nb\n2\naN3\nN4\nb\n2\nb3 du#\n1 + aN1\nN2\nba N3\nN4\nbTL = Tm\ncJ1 + aN1\nN2\nb\n2\nJ2 + aN1\nN2\nb\n2\naN3\nN4\nb\n2\nJ3 du$\n1\nJ1 u$\n1 + b1 u#\n1 + N1\nN2\n AJ2 u$\n2 + b2 u#\n2B+ N1 N3\nN2 N4\n AJ3 u$\n3 + b3 u#\n3 + TLB= Tm\nT4T1 ,T2 ,T3 ,\nu3 = u2\nN3\nN4\n= u1\nN1\nN2\nN3\nN4\nT4 = T3\nN4\nN3\nT4T3T4TL\nJ3 u$\n3 + b3 u#\n3 + TL = T4\nN1 /H20862N2 6 1,\nT2 = T1\nN2\nN1\nT1 u1 = T2 u2\nT3T2\nJ2 u\n$\n2 + b2 u\n#\n2 + T3 = T2\nT1Tm\nJ1 u\n$\n1 + b1 u\n#\n1 + T1 = Tmaa\n234\nChapter 5 / Transient and Steady-State Response Analyses\nThe relationship between J\n1eq\nand J\n3eq\nis thus\nand that between b\n1eq\nand b\n3eq\nis\nThe effect of J\n2\nand J\n3\non an equivalent moment of inertia is determined by the gear ratios \nand For speed-reducing gear trains, the ratios, and are usually less than unity.\nIf and then the effect of J\n2\nand J\n3\non the equivalent moment of inertia J\n1eq\nis negligible. Similar comments apply to the equivalent viscous-friction coefficient b\n1eq\nof the gear\ntrain. In terms of the equivalent moment of inertia J\n1eq\nand equivalent viscous-friction coefficient\nb\n1eq\n, Equation (5–66) can be simplified to give\nwhere\nA–5–3. When the system shown in Figure 5–52(a) is subjected to a unit-step input, the system output\nresponds as shown in Figure 5–52(b). Determine the values of K and T from the response curve.\nSolution. The maximum overshoot of 25.4 % corresponds to z=0.4. From the response curve\nwe have\nConsequently,\nt\np\n= p\nv\nd\n= p\nv\nn\n21 - z\n2\n= p\nv\nn\n21 - 0.4\n2\n= 3\nt\np\n= 3\nn = N\n1\nN\n2\nN\n3\nN\n4\nJ\n1eq\n \nu\n$\n1\n+ b\n1eq\n \nu\n#\n1\n+ nT\nL\n= T\nm\nN\n3\n \n/H20862N\n4\n/H112701,N\n1\n \n/H20862N\n2\n/H112701\nN\n3\n \n/H20862N\n4\n \nN\n1\n \n/H20862N\n2\nN\n3\n \n/H20862N\n4\n \n.\nN\n1\n \n/H20862N\n2\nb\n1eq\n=\na\nN\n1\nN\n2\nb\n2\na\nN\n3\nN\n4\nb\n2\nb\n3eq\nJ\n1eq\n=\na\nN\n1\nN\n2\nb\n2\na\nN\n3\nN\n4\nb\n2\nJ\n3eq\n+ –\nR(s) C(s)\n(a)\n(b)\nc(t)\n1\n03 t\n0.254\nK\ns(Ts + 1)\nFigure 5–52\n(a) Closed-loop\nsystem; (b) unit-step\nresponse curve.\nOpenmirrors.comaa\nExample Problems and Solutions 235\nIt follows that\nFrom the block diagram we have\nfrom which\nTherefore, the values of T and K are determined as\nA–5–4. Determine the values of K andk of the closed-loop system shown in Figure 5–53 so that the maximum\novershoot in unit-step response is 25% and the peak time is 2 sec. Assume that J=1 kg-m2.\nSolution. The closed-loop transfer function is\nBy substituting J=1 kg-m2 into this last equation, we have\nNote that in this problem\nThe maximum overshoot Mp is\nwhich is specified as 25%. Hence\nfrom which\nzp\n21 - z2\n= 1.386\ne-zp/H2086221 - z2\n= 0.25\nMp = e-zp/H2086221 - z2\nvn = 1K ,  2zvn = Kk\nC(s)\nR(s) = K\ns2 + Kks + K\nC(s)\nR(s) = K\nJs2 + Kks + K\n K = v2\nn T = 1.142 * 1.09 = 1.42\n T = 1\n2zvn\n= 1\n2 * 0.4 * 1.14 = 1.09\nvn = A\nK\nT ,  2zvn = 1\nT\nC(s)\nR(s) = K\nTs2 + s + K\nvn = 1.14\n+ – + –\nR(s) C(s)\nk\n1\ns\nK\nJs\nFigure 5–53\nClosed-loop system.aa\n236\nChapter 5 / Transient and Steady-State Response Analyses\nor\nThe peak time t\np\nis specified as 2 sec. And so\nor\nThen the undamped natural frequency v\nn\nis\nTherefore, we obtain\nA–5–5. Figure 5–54(a) shows a mechanical vibratory system.When 2 lb of force (step input) is applied to\nthe system, the mass oscillates, as shown in Figure 5–54(b). Determine m, b, and k of the system\nfrom this response curve. The displacement x is measured from the equilibrium position.\nSolution. The transfer function of this system is\nSince\nwe obtain\nIt follows that the steady-state value of x is\nx(q) = lim\ns S 0\nsX(s) = 2\nk = 0.1 ft\nX(s) = 2\nsAms\n2\n+ bs + kB\nP(s) = 2\ns\nX(s)\nP(s) = 1\nms\n2\n+ bs + k\n k = 2zv\nn\nK = 2 * 0.404 * 1.72\n2.95 = 0.471 sec\n K = v\n2\nn\n= 1.72\n2\n= 2.95 N-m\nv\nn\n= v\nd\n21 - z\n2\n= 1.57\n21 - 0.404\n2\n= 1.72\nv\nd\n= 1.57\nt\np\n= p\nv\nd\n= 2\nz = 0.404\nk\nb\nx\n(a) (b)\nP(2-lb force)\nx(t)\nft\n0.1\n012345 t\n0.0095 ft\nm\nFigure 5–54\n(a) Mechanical\nvibratory system;\n(b) step-response\ncurve.\nOpenmirrors.comaa\nExample Problems and Solutions 237\nHence\nNote that Mp=9.5% corresponds to z=0.6. The peak time tp is given by\nThe experimental curve shows that tp=2 sec. Therefore,\nSince v2\nn=k/H20862m=20/H20862m, we obtain\n(Note that 1 slug=1 lbf-sec2/H20862ft.) Then b is determined from\nor\nA–5–6. Consider the unit-step response of the second-order system\nThe amplitude of the exponentially damped sinusoid changes as a geometric series. At time\nt=tp=p/H20862vd , the amplitude is equal to After one oscillation, or at\nt=tp+2p/H20862/H9275d=3p/H20862vd, the amplitude is equal to after another cycle of oscillation, the\namplitude is The logarithm of the ratio of successive amplitudes is called the logarithmic\ndecrement. Determine the logarithmic decrement for this second-order system. Describe a method\nfor experimental determination of the damping ratio from the rate of decay of the oscillation.\nSolution. Let us define the amplitude of the output oscillation at t=ti to be xi , where\nti=tp+(i-1)T(T=period of oscillation ). The amplitude ratio per one period of damped\noscillation is\nThus, the logarithmic decrement d is\nIt is a function only of the damping ratio z. Thus, the damping ratio z can be determined by use\nof the logarithmic. decrement.\nIn the experimental determination of the damping ratio z from the rate of decay of the oscil-\nlation, we measure the amplitude x1 at t=tp and amplitude xn at t=tp+(n-1)T. Note that\nit is necessary to choose n large enough so that the ratio x1/xn is not near unity. Then\nx1\nxn\n= e(n - 1)2zp/H2086221 - z2\nd = ln x1\nx2\n= 2zp\n21 - z2\nx1\nx2\n= e-As/H20862vdBp\ne-As/H20862vdB3p = e2As/H20862vdBp = e2zp/H2086221 - z2\ne-As/H20862vdB5p.\ne-As/H20862vdB3p;\ne-As/H20862vdBp.\nC(s)\nR(s) = v2\nn\ns2 + 2zvn s + v2\nn\nb = 2zvn m = 2 * 0.6 * 1.96 * 5.2 = 12.2 lbf/H20862ft/H20862sec\n2zvn = b\nm\nm = 20\nv2\nn\n= 20\n1.962 = 5.2 slugs = 167 lb\nvn = 3.14\n2 * 0.8 = 1.96 rad/H20862sec\ntp = p\nvd\n= p\nvn 21 - z2\n= p\n0.8vn\nk = 20 lbf/H20862ftaa\n238\nChapter 5 / Transient and Steady-State Response Analyses\nor\nHence\nA–5–7. In the system shown in Figure 5–55, the numerical values of m, b, and k are given as m=1 kg,\nb=2 N-sec/H20862m, and k=100 N/H20862m. The mass is displaced 0.05 m and released without initial ve-\nlocity. Find the frequency observed in the vibration. In addition, find the amplitude four cycles later.\nThe displacement x is measured from the equilibrium position.\nSolution. The equation of motion for the system is\nSubstituting the numerical values for m, b, and k into this equation gives\nwhere the initial conditions are x(0)=0.05 and From this last equation the undamped\nnatural frequency v\nn\nand the damping ratio z are found to be\nThe frequency actually observed in the vibration is the damped natural frequency v\nd\n.\nIn the present analysis, is given as zero. Thus, solution x(t) can be written as\nIt follows that at t=nT, where T=2p/H20862v\nd\n,\nConsequently, the amplitude four cycles later becomes\nA–5–8. Obtain both analytically and computationally the unit-step response of tbe following higher-order\nsystem:\n[Obtain the partial-fraction expansion of C(s) with MATLAB when R(s) is a unit-step function.]\nC(s)\nR(s) = 3s\n3\n+ 25s\n2\n+ 72s + 80\ns\n4\n+ 8s\n3\n+ 40s\n2\n+ 96s + 80\n = 0.05e\n-2.526\n= 0.05 * 0.07998 = 0.004 m\n x(4T) = x(0)e\n-zv\nn\n \n4T\n= x(0)e\n-(0.1)(10)(4)(0.6315)\nx(nT) = x(0)e\n-zv\nn\n \nnT\nx(t) = x(0)e\n-zv\nn\n \nt\na\ncos v\nd\n \nt + z\n21 - z\n2\nsin v\nd\n \nt\nb\nx# (0)\nv\nd\n= v\nn\n21 - z\n2\n= 1011 - 0.01\n= 9.95 rad/H20862sec\nv\nn\n= 10,\n  \nz = 0.1\nx# (0) = 0.\nx$ + 2x# + 100x = 0\nmx$ + bx# + kx = 0\nz =\n1\nn - 1\na\nln x\n1\nx\nn\nb\nB4p\n2\n+\nc\n1\nn - 1\na\nln x\n1\nx\nn\nb\nd\n2\nln x\n1\nx\nn\n= (n - 1) 2zp\n21 - z\n2\nk\nm\nb\nx\nFigure 5–55\nSpring-mass-damper\nsystem.\nOpenmirrors.comaa\nExample Problems and Solutions 239\nSolution. MATLAB Program 5–18 yields the unit-step response curve shown in Figure 5–56. It\nalso yields the partial-fraction expansion of C(s) as follows:\n - 0.4375\ns + 2 - 0.375\n(s + 2)2 + 1\ns\n =\n-0.5626(s + 2)\n(s + 2)2 + 42 +\n(0.3438) * 4\n(s + 2)2 + 42\n + -0.4375\ns + 2 + -0.375\n(s + 2)2 + 1\ns\n = -0.2813 - j0.1719\ns + 2 - j4 + -0.2813 + j0.1719\ns + 2 + j4\n C(s) = 3s3 + 25s2 + 72s + 80\ns4 + 8s3 + 40s2 + 96s + 80 1\ns\nMATLAB Program 5–18\n% ------- Unit-Step Response of C(s)/R(s) and Partial-Fraction Expansion of C(s) -------\nnum = [3  25  72  80];\nden = [1  8  40  96  80];\nstep(num,den);\nv = [0  3  0  1.2]; axis(v), grid\n% To obtain the partial-fraction expansion of C(s), enter commands\n%      num1 = [3  25  72  80];\n%     den1 = [1  8  40  96  80  0];\n%      [r,p,k] = residue(num1,den1)\nnum1 = [25  72  80];\nden1 = [1  8  40  96  80  0];\n[r,p,k] = residue(num1,den1)\nr =\n-0.2813- 0.1719i\n-0.2813+ 0.1719i\n-0.4375\n-0.3750\n-1.0000\np =\n-2.0000+ 4.0000i\n-2.0000- 4.0000i\n-2.0000\n-2.0000\n-0\nk =\n[]aa\n240\nChapter 5 / Transient and Steady-State Response Analyses\nHence, the time response c(t) can be given by\nThe fact that the response curve is an exponential curve superimposed by damped sinusoidal\ncurves can be seen from Figure 5–56.\nA–5–9. When the closed-loop system involves a numerator dynamics, the unit-step response curve \nmay exhibit a large overshoot. Obtain the unit-step response of the following system with \nMATLAB:\nObtain also the unit-ramp response with MATLAB.\nSolution. MATLAB Program 5–19 produces the unit-step response as well as the unit-ramp\nresponse of the system.The unit-step response curve and unit-ramp response curve, together with\nthe unit-ramp input, are shown in Figures 5–57(a) and (b), respectively.\nNotice that the unit-step response curve exhibits over 215 % of overshoot. The unit-ramp\nresponse curve leads the input curve.These phenomena occurred because of the presence of a large\nderivative term in the numerator.\nC(s)\nR(s) = 10s + 4\ns\n2\n+ 4s + 4\n - 0.4375e\n-2t\n- 0.375te\n-2t\n+ 1\n c(t) =- 0.5626e\n-2t\ncos 4t + 0.3438e\n-2t\nsin 4t\nAmplitude\nTime (sec)\nStep Response\n0.6\n0.4\n0.2\n0.8\n1\n1.2\n0\n0 0.5 1 1.5 2 2.5 3\nFigure 5–56\nUnit-step response\ncurve.\nOpenmirrors.comaa\nExample Problems and Solutions 241\nOutput\nt (sec)\nUnit-Step Response\n(a)\n0.5\n1\n1.5\n2\n2.5\n0\n0123456789 1 0\nUnit-Ramp Input and Output\nt (sec)\nUnit-Ramp Response\n(b)\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n0\n0123456789 1 0\nUnit-Ramp Input\nOutput\nFigure 5–57\n(a) Unit-step response curve; (b) unit-ramp response curve plotted with unit-ramp input.\nMATLAB Program 5–19\nnum = [10  4];\nden = [1  4  4];\nt = 0:0.02:10;\ny = step(num,den,t);\nplot(t,y)\ngrid\ntitle('Unit-Step Response')\nxlabel('t (sec)')\nylabel('Output')\nnum1 = [10  4];\nden1 = [1  4  4  0];\ny1 = step(num1,den1,t);\nplot(t,t,'--',t,y1)\nv = [0  10  0  10]; axis(v); \ngrid\ntitle('Unit-Ramp Response')\nxlabel('t (sec)')\nylabel('Unit-Ramp Input and Output')\ntext(6.1,5.0,'Unit-Ramp Input')\ntext(3.5,7.1,'Output')aa\nA–5–10. Consider a higher-order system defined by\nUsing MATLAB, plot the unit-step response curve of this system. Using MATLAB, obtain the rise\ntime, peak time, maximum overshoot, and settling time.\nSolution. MATLAB Program 5–20 plots the unit-step response curve as well as giving the rise\ntime, peak time, maximum overshoot, and settling time. The unit-step response curve is shown in\nFigure 5–58.\nC(s)\nR(s) = 6.3223s\n2\n+ 18s + 12.811\ns\n4\n+ 6s\n3\n+ 11.3223s\n2\n+ 18s + 12.811\n242\nChapter 5 / Transient and Steady-State Response Analyses\nMATLAB Program 5–20\n% ------- This program is to plot the unit-step response curve, as well as to\n% find the rise time, peak time, maximum overshoot, and settling time.\n% In this program the rise time is calculated as the time required for the\n% response to rise from 10% to 90% of its final value. -------\nnum = [6.3223  18  12.811];\nden = [1  6  11.3223  18  12.811];\nt = 0:0.02:20;\n[y,x,t] = step(num,den,t);\nplot(t,y)\ngrid\ntitle('Unit-Step Response')\nxlabel('t (sec)')\nylabel('Output y(t)')\nr1 = 1; while y(r1) < 0.1, r1 = r1+1; end;\nr2 = 1; while y(r2) < 0.9, r2 = r2+1; end;\nrise_time = (r2-r1)*0. 02\nrise_time =\n0.5800\n[ymax,tp] = max(y);\npeak_time = (tp-1)*0.02\npeak_time =\n1.6600\nmax_overshoot = ymax-1\nmax_overshoot =\n0.6182\ns = 1001; while y(s) > 0.98 & y(s) < 1.02; s = s-1; end;\nsettling_time = (s-1)*0.02\nsettling_time =\n10.0200\nOpenmirrors.com\nOpenmirrors.comaa\nExample Problems and Solutions 243\nA–5–11. Consider the closed-loop system defined by\nUsing a “for loop,” write a MATLAB program to obtain unit-step response of this system for the\nfollowing four cases:\nSolution. Define v2\nn=a and 2zvn=b. Then,a and b each have four elements as follows:\na=[1 41 63 6 ]\nb=[0.6 2 5.6 9.6 ]\nCase 4:  z = 0.8,  vn = 6\nCase 3:  z = 0.7,  vn = 4\nCase 2:  z = 0.5,  vn = 2\nCase 1:  z = 0.3,  vn = 1\nC(s)\nR(s) = v2\nn\ns2 + 2zvn s + v2\nn\nOutput y(t)\nt (sec)\nUnit-Step Response\n0.6\n0.4\n0.2\n0.8\n1\n1.2\n1.4\n1.6\n1.8\n0\n0 2 4 6 8 10 12 14 16 18 20\nFigure 5–58\nUnit-step response\ncurve.aa\n244\nChapter 5 / Transient and Steady-State Response Analyses\nUsing vectors a and b, MATLAB Program 5–21 will produce the unit-step response curves as\nshown in Figure 5–59.\nUnit-Step Response Curves for Four Cases\nt Sec\n012345678\nOutputs\n1.4\n0\n0.4\n0.2\n0.6\n0.8\n1\n1.2\n1\n2\n34\nFigure 5–59\nUnit-step response\ncurves for four cases.\nMATLAB Program 5–21\na = [1  4  16  36];\nb = [0.6  2  5.6  9.6];\nt = 0:0.1:8;\ny = zeros(81,4);\nfor i = 1:4;\nnum = [a(i)];\nden = [1  b(i)  a(i)];\ny(:,i) = step(num,den,t);\nend\nplot(t,y(:,1),'o',t,y(:,2),'x',t,y(:,3),'-',t,y(:,4),'-.')\ngrid\ntitle('Unit-Step Response Curves for Four Cases')\nxlabel('t Sec')\nylabel('Outputs')\ngtext('1')\ngtext('2')\ngtext('3')\ngtext('4')\nOpenmirrors.comaa\nExample Problems and Solutions 245\nA–5–12. Using MATLAB, obtain the unit-ramp response of the closed-loop control system whose closed-\nloop transfer function is\nAlso, obtain the response of this system when the input is given by\nSolution. MATLAB Program 5–22 produces the unit-ramp response and the response to the\nexponential input r=e–0.5t. The resulting response curves are shown in Figures 5–60(a) and (b),\nrespectively.\nr = e-0.5t\nC(s)\nR(s) = s + 10\ns3 + 6s2 + 9s + 10\nMATLAB Program 5–22\n% --------- Unit-Ramp Response ---------\nnum = [1  10];\nden = [1  6  9  10];\nt = 0:0.1:10;\nr = t;\ny = lsim(num,den,r,t);\nplot(t,r,'-',t,y,'o')\ngrid\ntitle('Unit-Ramp Response by Use of Command \"lsim\"')\nxlabel('t Sec')\nylabel('Output')\ntext(3.2,6.5,'Unit-Ramp Input')\ntext(6.0,3.1,'Output')\n% --------- Response to Input r1 = exp(-0.5t). ---------\nnum = [0  0  1  10];\nden = [1  6  9  10];\nt = 0:0.1:12;\nr1 = exp(-0.5*t);\ny1 = lsim(num,den,r1,t);\nplot(t,r1,'-',t,y1,'o')\ngrid\ntitle('Response to Input r1 = exp(-0.5t)')\nxlabel('t Sec')\nylabel('Input and Output')\ntext(1.4,0.75,'Input r1 = exp(-0.5t)')\ntext(6.2,0.34,'Output')aa\n246\nChapter 5 / Transient and Steady-State Response Analyses\nUnit-Ramp Response by Use of Command “lsim”\nt  Sec\nOutput\n9\n5\n1\n8\n6\n3\n2\n4\n7\n10\nUnit-Ramp Input\n(a)\n00123456789 1 0\nOutput\nResponse to Input r\n1\n = e\n−0.5t\nInput r\n1\n = e\n−0.5t\nOutput\nt Sec\n02468 1 0 1 2\n(b)\nInput and Output\n1\n0.1\n0\n0.4\n0.2\n0.3\n0.5\n0.6\n0.7\n0.8\n0.9\nFigure 5–60\n(a) Unit-ramp\nresponse curve;\n(b) response to\nexponential input\nr\n1\n=e\n–0.5t\n.\nA–5–13. Obtain the response of the closed-loop system defined by\nwhen the input r(t) is given by\nr(t)=2+t\n[The input r(t) is a step input of magnitude 2 plus unit-ramp input.]\nC(s)\nR(s) = 5\ns\n2\n+ s + 5\nOpenmirrors.comaa\nExample Problems and Solutions 247\nMATLAB Program 5–23\nnum = [5];\nden = [1  1  5];\nt = 0:0.05:10;\nr = 2+t;\nc = lsim(num,den,r,t);\nplot(t,r,'-',t,c,'o')\ngrid\ntitle('Response to Input r(t) = 2 + t')\nxlabel('t Sec')\nylabel('Output c(t) and Input r(t) = 2 + t')\nResponse to Input r(t) = 2 + t\nt Sec\n0123456789 1 0\nOutput c(t) and Input r(t) = 2 + t\n12\n0\n4\n2\n6\n8\n10\nFigure 5–61\nResponse to input\nr(t)=2+t.\n2\ns(s + 1)\nR(s) C(s)\n+−\nFigure 5–62\nControl system.\nSolution. A possible MATLAB program is shown in MATLAB Program 5–23. The resulting\nresponse curve, together with a plot of the input function, is shown in Figure 5–61.\nA–5–14. Obtain the response of the system shown in Figure 5–62 when the input r(t) is given by\n[The input r(t) is the unit-acceleration input.]\nr(t) = 1\n2 t2aa\n248\nChapter 5 / Transient and Steady-State Response Analyses\nSolution. The closed-loop transfer function is\nMATLAB Program 5–24 produces the unit-acceleration response.The resulting response, together\nwith the unit-acceleration input, is shown in Figure 5–63.\nC(s)\nR(s) = 2\ns\n2\n+ s + 2\nMATLAB Program 5–24\nnum = [2];\nden = [1  1  2];\nt = 0:0.2:10;\nr = 0.5*t.^2;\ny = lsim(num,den,r,t);\nplot(t,r,'-',t,y,'o',t,y,'-')\ngrid\ntitle('Unit-Acceleration Response')\nxlabel('t Sec')\nylabel('Input and Output')\ntext(2.1,27.5,'Unit-Acceleration Input')\ntext(7.2,7.5,'Output')\nUnit-Acceleration Response\nt Sec\n0123456789 1 0\nInput and Output\n50\n0\n10\n5\n15\n20\n25\n30\n35\n40\n45\nUnit-Acceleration Input\nOuput\nFigure 5–63\nResponse to unit-\nacceleration input.\nA–5–15. Consider the system defined by\nC(s)\nR(s) = 1\ns\n2\n+ 2zs + 1\nOpenmirrors.comaa\nExample Problems and Solutions 249\nMATLAB Program 5–25\nt = 0:0.2:12;\nfor n = 1:6;\nnum = [1];\nden = [1  2*(n-1)*0.2  1];\n[y(1:61,n),x,t] = step(num,den,t);\nend\nplot(t,y)\ngrid\ntitle('Unit-Step Response Curves')\nxlabel('t Sec')\nylabel('Outputs')\ngtext('\\zeta = 0'),\ngtext('0.2')\ngtext('0.4')\ngtext('0.6')\ngtext('0.8')\ngtext('1.0')\n% To draw a three-dimensional plot, enter the following command: mesh(y) or mesh(y').\n% We shall show two three-dimensional plots, one using “mesh(y)” and the other using\n% \"mesh(y')\". These two plots are the same, except that the x axis and y axis are\n% interchanged.\nmesh(y)\ntitle('Three-Dimensional Plot of Unit-Step Response Curves using Command \"mesh(y)\"')\nxlabel('n, where n = 1,2,3,4,5,6')\nylabel('Computation Time Points')\nzlabel('Outputs')\nmesh(y')\ntitle('Three-Dimensional Plot of Unit-Step Response Curves using Command \"mesh(y transpose)\"')\nxlabel('Computation Time Points')\nylabel('n, where n = 1,2,3,4,5,6')\nzlabel('Outputs')\nwhere z=0, 0.2, 0.4, 0.6, 0.8, and 1.0. Write a MATLAB program using a “for loop” to\nobtain the two-dimensional and three-dimensional plots of the system output. The input is the\nunit-step function.\nSolution. MATLAB Program 5–25 is a possible program to obtain two-dimensional and three-\ndimensional plots. Figure 5–64(a) is the two-dimensional plot of the unit-step response curves for\nvarious values of z. Figure 5–64(b) is the three-dimensional plot obtained by use of the command\n“mesh(y)” and Figure 5–64(c) is obtained by use of the command “mesh(y ¿)”. (These two\nthree-dimensional plots are basically the same.The only difference is that x axis and y axis are in-\nterchanged.)aa\n250\nChapter 5 / Transient and Steady-State Response Analyses\nA–5–16. Consider the system subjected to the initial condition as given below.\n(There is no input or forcing function in this system.) Obtain the response y(t) versus t to the\ngiven initial condition by use of Equations (5–58) and (5–60).\ny = [1  0  0]\nC\nx\n1\nx\n2\nx\n3\nS\nC\nx#\n1\nx#\n2\nx#\n3\nS\n=\nC\n    0     1   0\n    0     0    1\n-10 -17 -8\nSC\nx\n1\nx\n2\nx\n3\nS\n,\nC\nx\n1\n(0)\nx\n2\n(0)\nx\n3\n(0)\nS\n=\nC\n2\n1\n0.5\nS\n(a)\n0\n0\n0.2\n0.4\n0.6\n0.8\n1\n1.2\n1.4\n1.6\n1.8\n2\n2 4 6 8 10 12\nOutputs\nt Sec\n/H9256 = 0/H9256 = 0\n0.20.2\n0.40.4\n0.60.6\n0.80.8\n1.01.0\nUnit-Step Response Curves\nThree-Dimensional Plot of Unit-Step Response Curves using Command “mesh(y)”\n080\n60\n40\n20\n0 1\n2\n3\n4\n5\n6\n0.5\n1\n1.5\n2\nOutputs\nComputation Time Points n, where n = 1, 2, 3, 4, 5, 6\n(b)\n06\n5\n4\n3\n2\n1 0 10 20 30 40 50 60 70\n0.5\n1\n1.5\n2\nOutputs\nThree-Dimensional Plot of Unit-Step Response Curves using Command “mesh(y transpose)”\nn, where n = 1, 2, 3, 4, 5, 6 Computation Time Points\n(c)\nFigure 5–64\n(a) Two-dimensional\nplot of unit-step\nresponse curves;\n(b) three-dimensional\nplot of unit-step\nresponse curves\nusing command\n“mesh(y)”;\n(c) three-dimensional\nplot of unit-step\nresponse curves\nusing command\n“mesh(y¿)”.\nOpenmirrors.comaa\nExample Problems and Solutions 251\nSolution. A possible MATLAB program based on Equations (5–58) and (5–60) is given by MAT-\nLAB program 5–26. The response curve obtained here is shown in Figure 5–65. (Notice that this\nproblem was solved by use of the command “initial” in Example 5–16.The response curve obtained\nhere is exactly the same as that shown in Figure 5–34.)\nMATLAB Program 5–26\nt = 0:0.05:10;\nA = [0 1 0;0 0 1;-10 -17 -8];\nB = [2;1;0.5];\nC=[1 0 0];\n[y,x,t] = step(A,B,C*A,C*B,1,t);\nplot(t,y)\ngrid;\ntitle('Response to Initial Condition')\nxlabel('t (sec)')\nylabel('Output y')\nA–5–17. Consider the following characteristic equation:\nDetermine the range of K for stability.\nSolution. The Routh array of coefficients is\ns4\ns3\ns2\ns1\ns0\n1\nK\nK - 1\nK\n1 - K2\nK - 1\n1\n1\n1\n1\n1\n0\ns4 + Ks3 + s2 + s + 1 = 0\nFigure 5–65\nResponse y(t) to \nthe given initial\ncondition.\nOutput y\nt (sec)\nResponse to Initial Condition\n0.5\n1\n1.5\n2\n2.5\n0\n0123456789 1 0aa\n252\nChapter 5 / Transient and Steady-State Response Analyses\nFor stability, we require that\nFrom the first and second conditions, K must be greater than 1. For K>1, notice that the term\n1-CK\n2\n/(K-1)Dis always negative, since\nThus, the three conditions cannot be fulfilled simultaneously.Therefore, there is no value of K that\nallows stability of the system.\nA–5–18. Consider the characteristic equation given by\n(5–67)\nThe Hurwitz stability criterion, given next, gives conditions for all the roots to have negative real\nparts in terms of the coefficients of the polynomial.As stated in the discussions of Routh’s stability\ncriterion in Section 5–6, for all the roots to have negative real parts, all the coefficients a’s must\nbe positive.This is a necessary condition but not a sufficient condition. If this condition is not sat-\nisfied, it indicates that some of the roots have positive real parts or are imaginary or zero. A suf-\nficient condition for all the roots to have negative real parts is given in the following Hurwitz\nstability criterion: If all the coefficients of the polynomial are positive, arrange these coefficients\nin the following determinant:\nwhere we substituted zero for a\ns\nif s>n. For all the roots to have negative real parts, it is neces-\nsary and sufficient that successive principal minors of be positive. The successive principal\nminors are the following determinants:\nwhere a\ns\n=0 if s>n. (It is noted that some of the conditions for the lower-order determinants\nare included in the conditions for the higher-order determinants.) If all these determinants are\npositive, and a\n0\n>0 as already assumed, the equilibrium state of the system whose characteristic\n¢\ni\n=\n5\na\n1\na\n0\n0\n/H11080\n0\na\n3\na\n2\na\n1\n/H11080\n0\np\np\np\np\na\n2i - 1\na\n2i - 2\na\n2i - 3\n/H11080\na\ni\n5\n  \n(i = 1, 2, p ,n - 1)\n¢\nn\n¢\nn\n=\n7\na\n1\na\n0\n0\n0\n/H11080\n/H11080\n0\na\n3\na\n2\na\n1\na\n0\n/H11080\n/H11080\n0\na\n5\na\n4\na\n3\na\n2\n/H11080\n/H11080\n0\np\np\np\np\np\n0\n/H11080\na\nn\na\nn - 1\na\nn - 2\na\nn - 3\na\nn - 4\n0\n/H11080\n0\n0\na\nn\na\nn - 1\na\nn - 2\n0\n/H11080\n0\n0\n0\n0\na\nn\n7\na\n0\n \ns\nn\n+ a\n1\n \ns\nn - 1\n+ a\n2\n \ns\nn - 2\n+ p + a\nn - 1\n \ns + a\nn\n= 0\nK - 1 - K\n2\nK - 1 =\n-1 + K(1 - K)\nK - 1 6 0\nK 7 0\nK - 1\nK 7 0\n1 - K\n2\nK - 1 7 0\nOpenmirrors.comaa\nExample Problems and Solutions 253\nequation is given by Equation (5–67) is asymptotically stable. Note that exact values of determi-\nnants are not needed; instead, only signs of these determinants are needed for the stability criterion.\nNow consider the following characteristic equation:\nObtain the conditions for stability using the Hurwitz stability criterion.\nSolution. The conditions for stability are that all the a’s be positive and that\nIt is clear that, if all the a’s are positive and if the condition is satisfied, the condition\nis also satisfied.Therefore, for all the roots of the given characteristic equation to have neg-\native real parts, it is necessary and sufficient that all the coefficients a’s are positive and \nA–5–19. Show that the first column of the Routh array of\nis given by\nwhere\nSolution. The Routh array of coefficients has the form\n1\na1\nb1\nc1\n/H11080\n/H11080\n/H11080\na2\na3\nb2\nc2\n/H11080\n/H11080\n/H11080\na4\na5\nb3\n/H11080\n/H11080\n/H11080\n/H11080\na6\np\np\np an\nak = 0  if k 7 n\n¢r = 7\na1\na3\na5\n/H11080\n/H11080\n/H11080\na2r - 1\n1\na2\na4\n/H11080\n/H11080\n/H11080\n/H11080\n0\na1\na3\n/H11080\n/H11080\n/H11080\n/H11080\n0\n1\na2\n/H11080\n/H11080\n/H11080\n/H11080\n/H11080\n/H11080\n/H11080\n/H11080\n0\n0\n0\n/H11080\n/H11080\n/H11080\nar\n7,  (n /H11350r /H113501)\n1, ¢1 , ¢2\n¢1\n, ¢3\n¢2\n, p , ¢n\n¢n - 1\nsn + a1 sn - 1 + a2 sn - 2 + p + an - 1 s + an = 0\n¢3 7 0.\n¢2 7 0\n¢3 7 0\n= a3Aa1 a2 - a0 a3B- a2\n1 a4 7 0\n= a1Aa2 a3 - a1 a4B- a0 a2\n3\n¢3 = 3\na1\na0\n0\na3\na2\na1\n0\na4\na3\n3\n¢2 = 2a1\na0\na3\na2\n2= a1 a2 - a0 a3 7 0\na0 s4 + a1 s3 + a2 s2 + a3 s + a4 = 0aa\n254\nChapter 5 / Transient and Steady-State Response Analyses\nThe first term in the first column of the Routh array is 1. The next term in the first column is a\n1\n,\nwhich is equal to The next term is b\n1\n, which is equal to\nThe next term in the first column is c\n1\n, which is equal to\nIn a similar manner the remaining terms in the first column of the Routh array can be found.\nThe Routh array has the property that the last nonzero terms of any columns are the same;\nthat is, if the array is given by\nthen\nand if the array is given by\nthen\nIn any case, the last term of the first column is equal to a\nn\n,o r\na\nn\n= ¢\nn - 1\n \na\nn\n¢\nn - 1\n= ¢\nn\n¢\nn - 1\na\n6\n= b\n3\n= d\n2\n= f\n1\na\n0\na\n1\nb\n1\nc\n1\nd\n1\ne\n1\nf\n1\na\n2\na\n3\nb\n2\nc\n2\nd\n2\n0\na\n4\na\n5\nb\n3\n0\na\n6\n0\na\n7\n= c\n3\n= e\n2\n= g\n1\na\n0\na\n1\nb\n1\nc\n1\nd\n1\ne\n1\nf\n1\ng\n1\na\n2\na\n3\nb\n2\nc\n2\nd\n2\ne\n2\na\n4\na\n5\nb\n3\nc\n3\na\n6\na\n7\n= ¢\n3\n¢\n2\n= a\n1\n \na\n2\n \na\n3\n- a\n2\n3\n- a\n2\n1\n \na\n4\n+ a\n1\n \na\n5\na\n1\n \na\n2\n- a\n3\nb\n1\n \na\n3\n- a\n1\n \nb\n2\nb\n1\n=\nc\na\n1\n \na\n2\n- a\n3\na\n1\nd\na\n3\n- a\n1\nc\na\n1\n \na\n4\n- a\n5\na\n1\nd\nc\na\n1\na\n2\n- a\n3\na\n1\nd\na\n1\n \na\n2\n- a\n3\na\n1\n= ¢\n2\n¢\n1\n¢\n1\n \n.\nOpenmirrors.comaa\nExample Problems and Solutions 255\nFor example, if n=4, then\nThus it has been shown that the first column of the Routh array is given by\nA–5–20. Show that the Routh’s stability criterion and Hurwitz stability criterion are equivalent.\nSolution. If we write Hurwitz determinants in the triangular form\nwhere the elements below the diagonal line are all zeros and the elements above the diagonal\nline any numbers, then the Hurwitz conditions for asymptotic stability become\nwhich are equivalent to the conditions\nWe shall show that these conditions are equivalent to\nwhere a1 ,b 1 ,c 1 , p , are the elements of the first column in the Routh array.\nConsider, for example, the following Hurwitz determinant, which corresponds to i=4:\nThe determinant is unchanged if we subtract from the ith row k times the jth row. By subtracting\nfrom the second row a0 /a1 times the first row, we obtain\n¢4 = 4\na11\n0\n0\n0\na3\na22\na1\na0\na5\na23\na3\na2\na7\na24\na5\na4\n4\n¢4 = 4\na1\na0\n0\n0\na3\na2\na1\na0\na5\na4\na3\na2\na7\na6\na5\na4\n4\na1 7 0,  b1 7 0,  c1 7 0,  p\na11 7 0,  a22 7 0,  p ,  ann 7 0\n¢i = a11 a22 p aii 7 0,  (i = 1, 2, p , n)\n¢i = 6\na11 *\na22\n/H11554\n/H11554\n/H11554\n0 aii\n6,  (i = 1, 2, p , n)\n1, ¢1 , ¢2\n¢1\n, ¢3\n¢2\n, p, ¢n\n¢n - 1\n¢4 = 4\na1\na3\na5\na7\n1\na2\na4\na6\n0\na1\na3\na5\n0\n1\na2\na4\n4= 4\na1\na3\n0\n0\n1\na2\na4\n0\n0\na1\na3\n0\n0\n1\na2\na4\n4=¢ 3 a4aa\n256\nChapter 5 / Transient and Steady-State Response Analyses\nwhere\nSimilarly, subtracting from the fourth row a\n0\n/a\n1\ntimes the third row yields\nwhere\nNext, subtracting from the third row a\n1\n/a\n22\ntimes the second row yields\nwhere\nFinally, subtracting from the last row times the third row yields\nwhere\na\n44\n= a\nˆ\n44\n- a\nˆ\n43\na\n33\n a\n34\n¢\n4\n=\n4\na\n11\n0\n0\n0\na\n3\na\n22\n0\n0\na\n5\na\n23\na\n33\n0\na\n7\na\n24\na\n34\na\n44\n4\na\nˆ\n43\n \n/H20862a\n33\na\n34\n= a\n5\n- a\n1\na\n22\na\n24\na\n33\n= a\n3\n- a\n1\na\n22\na\n23\n¢\n4\n=\n4\na\n11\n0\n0\n0\na\n3\na\n22\n0\n0\na\n5\na\n23\na\n33\na\nˆ\n43\na\n7\na\n24\na\n34\na\nˆ\n44\n4\na\nˆ\n44\n= a\n4\n- a\n0\na\n1\na\n5\na\nˆ\n43\n= a\n2\n- a\n0\na\n1\na\n3\n¢\n4\n=\n4\na\n11\n0\n0\n0\na\n3\na\n22\na\n1\n0\na\n5\na\n23\na\n3\na\nˆ\n43\na\n7\na\n24\na\n5\na\nˆ\n44\n4\na\n24\n= a\n6\n- a\n0\na\n1\na\n7\na\n23\n= a\n4\n- a\n0\na\n1\na\n5\na\n22\n= a\n2\n- a\n0\na\n1\na\n3\na\n11\n= a\n1\nOpenmirrors.comaa\nExample Problems and Solutions 257\nFrom this analysis, we see that\nThe Hurwitz conditions for asymptotic stability\nreduce to the conditions\nThe Routh array for the polynomial\nwherea0>0 and n=4, is given by\nFrom this Routh array, we see that\n(The last equation is obtained using the fact that ) Hence the\nHurwitz conditions for asymptotic stability become\nThus we have demonstrated that Hurwitz conditions for asymptotic stability can be reduced to\nRouth’s conditions for asymptotic stability. The same argument can be extended to Hurwitz\ndeterminants of any order, and the equivalence of Routh’s stability criterion and Hurwitz stabil-\nity criterion can be established.\nA–5–21. Consider the characteristic equation\nUsing the Hurwitz stability criterion, determine the range of K for stability.\nSolution. Comparing the given characteristic equation\ns4 + 2s3 + (4 + K)s2 + 9s + 25 = 0\ns4 + 2s3 + (4 + K)s2 + 9s + 25 = 0\na1 7 0,  b1 7 0,  c1 7 0,  d1 7 0\na34 = 0, aˆ44 = a4 , and a4 = b2 = d1 .\na44 = aˆ44 - aˆ43\na33\n a34 = a4 = d1\na33 = a3 - a1\na22\na23 = a3 b1 - a1 b2\nb1\n= c1\na22 = a2 - a0\na1\na3 = b1\na11 = a1\na0\na1\nb1\nc1\nd1\na2\na3\nb2\na4\na0 s4 + a1 s3 + a2 s2 + a3 s + a4 = 0\na11 7 0,  a22 7 0,  a33 7 0,  a44 7 0,  p\n¢1 7 0,  ¢2 7 0,  ¢3 7 0,  ¢4 7 0,  p\n¢1 = a11\n¢2 = a11 a22\n¢3 = a11 a22 a33\n¢4 = a11 a22 a33 a44aa\n258\nChapter 5 / Transient and Steady-State Response Analyses\nwith the following standard fourth-order characteristic equation:\nwe find\nThe Hurwitz stability criterion states that is given by\nFor all the roots to have negative real parts, it is necessary and sufficient that succesive principal\nminors of be positive. The successive principal minors are\nFor all principal minors to be positive, we require that be positive.Thus, we require\nfrom which we obtain the region of K for stability to be\nA–5–22. Explain why the proportional control of a plant that does not possess an integrating property\n(which means that the plant transfer function does not include the factor 1/s) suffers offset in\nresponse to step inputs.\nSolution. Consider, for example, the system shown in Figure 5–66.At steady state, if c were equal\nto a nonzero constant r, then e=0 and u=Ke=0, resulting in c=0, which contradicts the\nassumption that c=r=nonzero constant.\nA nonzero offset must exist for proper operation of such a control system. In other words, at\nsteady state, if e were equal to r/(1+K), then u=Kr/(1+K) and c=Kr/(1+K), which\nresults in the assumed error signal e=r/(1+K).Thus the offset of r/(1+K) must exist in such\na system.\nK 7 109\n18\n 18K - 109 7 0\n 2K - 1 7 0\n¢\ni\n(i = 1, 2, 3)\n¢\n3\n=\n3\na\n1\na\n0\n0\na\n3\na\n2\na\n1\n0\na\n4\na\n3\n3\n=\n3\n2\n1\n0\n9\n4 + K\n2\n0\n25\n9\n3\n= 18K - 109\n¢\n2\n=\n2\na\n1\na\n0\na\n3\na\n2\n2\n=\n2\n2\n1\n9\n4 + K\n2\n= 2K - 1\n¢\n1\n= @a\n1\n@ = 2\n¢\n4\n¢\n4\n=\n4\na\n1\na\n0\n0\n0\na\n3\na\n2\na\n1\na\n0\n0\na\n4\na\n3\na\n2\n0\n0\n0\na\n4\n4\n¢\n4\na\n0\n= 1,\n \na\n1\n= 2,\n \na\n2\n= 4 + K,\n \na\n3\n= 9,\n \na\n4\n= 25\na\n0\n \ns\n4\n+ a\n1\n \ns\n3\n+ a\n2\ns\n2\n+ a\n3\n \ns + a\n4\n= 0\n+ –\nrc eu K 1\nTs + 1\nFigure 5–66\nControl system.\nOpenmirrors.comaa\nExample Problems and Solutions 259\nA–5–23. The block diagram of Figure 5–67 shows a speed control system in which the output member of\nthe system is subject to a torque disturbance. In the diagram, and D(s) are the\nLaplace transforms of the reference speed, output speed, driving torque, and disturbance torque,\nrespectively. In the absence of a disturbance torque, the output speed is equal to the reference\nspeed.\nVr(s), V(s), T(s),\n+ – ++\nD(s)\nE(s) T(s) V (s)Vr(s)\nK 1\nJs\nFigure 5–67\nBlock diagram of a\nspeed control system.\n+ –\nK\n1\nJs\nVD(s)D(s)\nFigure 5–68\nBlock diagram of the\nspeed control system\nof Figure 5–67 when\nVr(s) = 0.\nInvestigate the response of this system to a unit-step disturbance torque. Assume that the\nreference input is zero, or \nSolution. Figure 5–68 is a modified block diagram convenient for the present analysis.The closed-\nloop transfer function is\nwhere is the Laplace transform of the output speed due to the disturbance torque. For a unit-\nstep disturbance torque, the steady-state output velocity is\nFrom this analysis, we conclude that, if a step disturbance torque is applied to the output\nmember of the system, an error speed will result so that the ensuing motor torque will exactly can-\ncel the disturbance torque. To develop this motor torque, it is necessary that there be an error in\nspeed so that nonzero torque will result. (Discussions continue to Problem A–5–24.)\n= 1\nK\n= lim\ns S 0\ns\nJs + K\n1\ns\nvD(q) = lim\ns S 0\nsVD(s)\nVD(s)\nVD(s)\nD(s) = 1\nJs + K\nVr(s) = 0.aa\n260\nChapter 5 / Transient and Steady-State Response Analyses\nA–5–24. In the system considered in Problem A–5–23, it is desired to eliminate as much as possible the\nspeed errors due to torque disturbances.\nIs it possible to cancel the effect of a disturbance torque at steady state so that a constant\ndisturbance torque applied to the output member will cause no speed change at steady state?\nSolution. Suppose that we choose a suitable controller whose transfer function is G\nc\n(s), as shown\nin Figure 5–69. Then in the absence of the reference input the closed-loop transfer function\nbetween the output velocity and the disturbance torque D(s) is\nThe steady-state output speed due to a unit-step disturbance torque is\nTo satisfy the requirement that\nwe must choose G\nc\n(0)=q. This can be realized if we choose\nIntegral control action will continue to correct until the error is zero. This controller, however,\npresents a stability problem, because the characteristic equation will have two imaginary roots.\nOne method of stabilizing such a system is to add a proportional mode to the controller or\nchoose\nG\nc\n(s) = K\np\n+ K\ns\nG\nc\n(s) = K\ns\nv\nD\n(q) = 0\n= 1\nG\nc\n(0)\n= lim\ns S 0\ns\nJs + G\nc\n(s)\n1\ns\nv\nD\n(q) = lim\ns S 0\nsV\nD\n(s)\n= 1\nJs + G\nc\n(s)\nV\nD\n(s)\nD(s) =\n1\nJs\n1 + 1\nJs G\nc\n(s)\nV\nD\n(s)\n+ –\n++\nD(s)\nE(s) T(s) V(s)V\nr\n(s)\nG\nc\n(s) 1\nJs\nFigure 5–69\nBlock diagram of a\nspeed control system.\nOpenmirrors.comaa\nExample Problems and Solutions 261\nWith this controller, the block diagram of Figure 5–69 in the absence of the reference input can\nbe modified to that of Figure 5–70. The closed-loop transfer function becomes\nFor a unit-step disturbance torque, the steady-state output speed is\nThus, we see that the proportional-plus-integral controller eliminates speed error at steady state.\nThe use of integral control action has increased the order of the system by 1. (This tends to\nproduce an oscillatory response.)\nIn the present system, a step disturbance torque will cause a transient error in the output\nspeed, but the error will become zero at steady state. The integrator provides a nonzero output\nwith zero error. (The nonzero output of the integrator produces a motor torque that exactly\ncancels the disturbance torque.)\nNote that even if the system may have an integrator in the plant (such as an integrator in the\ntransfer function of the plant), this does not eliminate the steady-state error due to a step distur-\nbance torque.To eliminate this, we must have an integrator before the point where the disturbance\ntorque enters.\nA–5–25. Consider the system shown in Figure 5–71(a). The steady-state error to a unit-ramp input is\ness=2z/H20862vn . Show that the steady-state error for following a ramp input may be eliminated if the\ninput is introduced to the system through a proportional-plus-derivative filter, as shown in Figure\n5–71(b), and the value of k is properly set. Note that the error e(t) is given by r(t)-c(t).\nSolution. The closed-loop transfer function of the system shown in Figure 5–71(b) is\nThen\nR(s) - C(s) = as2 + 2zvn s - v2\nn ks\ns2 + 2zvn s + v2\nn\nbR(s)\nC(s)\nR(s) =\n(1 + ks)v2\nn\ns2 + 2zvn s + v2\nn\nvD(q) = lim\ns S 0\nsVD(s) = lim\ns S 0\ns2\nJs2 + Kp s + K\n1\ns = 0\nVD(s)\nD(s) = s\nJs2 + Kp s + K\nVD(s)/H20862D(s)\n1\nJs\nKps + K\ns\nVD(s)D(s)\n+ –\nFigure 5–70\nBlock diagram of the\nspeed control system\nof Figure 5–69 when\nGc(s)=Kp+(K/s)\nand Vr(s) = 0.\n+ – + –\nR(s) C(s)\n(a) (b)\n1 + ks vn\ns(s + 2zvn)\n2vn\ns(s + 2zvn)\n2\nFigure 5–71\n(a) Control system;\n(b) control system\nwith input filter.aa\n262\nChapter 5 / Transient and Steady-State Response Analyses\nIf the input is a unit ramp, then the steady-state error is\nTherefore, if k is chosen as\nthen the steady-state error for following a ramp input can be made equal to zero. Note that, if there\nare any variations in the values of z and/or v\nn\ndue to environmental changes or aging, then a\nnonzero steady-state error for a ramp response may result.\nA–5–26. Consider the stable unity-feedback control system with feedforward transfer function G(s).\nSuppose that the closed-loop transfer function can be written\nShow that\nwhere e(t) = r(t)-c(t) is the error in the unit-step response. Show also that\nSolution. Let us define\nand\nThen\nand\nFor a unit-step input, R(s)=1/s and\nE(s) =\nQ(s) - P(s)\nsQ(s)\nE(s) =\nQ(s) - P(s)\nQ(s) R(s)\nC(s)\nR(s) =\nP(s)\nQ(s)\nAT\n1\n \ns + 1BAT\n2\n \ns + 1Bp AT\nn\n \ns + 1B= Q(s)\nAT\na\n \ns + 1BAT\nb\n \ns + 1B p AT\nm\n \ns + 1B= P(s)\n1\nK\nv\n= 1\nlim\ns S 0\nsG(s) = AT\n1\n+ T\n2\n+ p + T\nn\nB- AT\na\n+ T\nb\n+ p + T\nm\nB\n3\nq\n0\ne(t) dt = AT\n1\n+ T\n2\n+ p + T\nn\nB- AT\na\n+ T\nb\n+ p + T\nm\nB\nC(s)\nR(s) =\nG(s)\n1 + G(s) =\nAT\na\n \ns + 1BAT\nb\n \ns + 1Bp AT\nm\n \ns + 1B\nAT\n1\n \ns + 1BAT\n2\n \ns + 1Bp AT\nn\n \ns + 1B\n  \n(m /H11349n)\nk = 2z\nv\nn\n = 2zv\nn\n- v\n2\nn\n \nk\nv\n2\nn\n = lim\ns S 0\ns \na\ns\n2\n+ 2zv\nn\n \ns - v\n2\nn\n \nks\ns\n2\n+ 2zv\nn\n \ns + v\n2\nn\nb\n 1\ns\n2\n e(q) = r(q) - c(q)\nOpenmirrors.comaa\nProblems 263\nSince the system is stable, converges to a constant value. Noting that\nwe have\nSince\nwe have\nFor a unit-step input r(t), since\nwe have\nNote that zeros in the left half-plane (that is, positive ) will improve Kv . Poles close\nto the origin cause low velocity-error constants unless there are zeros nearby.\nPROBLEMS\nTa ,Tb , p ,Tm\n1\nKv\n= 1\nlim\ns S 0\nsG(s) = AT1 + T2 + p + TnB- ATa + Tb + p + TmB\n= lim\ns S 0\n1\n1 + G(s)\n1\ns = 1\nlim\ns S 0\nsG(s) = 1\nKv3\nq\n0\ne(t) dt = lim\ns S 0\nE(s) = lim\ns S 0\n1\n1 + G(s) R(s)\n3\nq\n0\ne(t) dt = AT1 + T2 + p + TnB- ATa + Tb + p + TmB\nlim\ns S 0\nQ¿(s) = T1 + T2 + p + Tn\nlim\ns S 0\nP¿(s) = Ta + Tb + p + Tm\n = lim\ns S 0\nCQ¿(s) - P¿(s)D\n = lim\ns S 0\n \nQ¿(s) - P¿(s)\nQ(s) + sQ¿(s)\n \n3\nq\n0\ne(t) dt = lim\ns S 0\nQ(s) - P(s)\nsQ(s)\n3\nq\n0\ne(t) dt = lim\ns S 0\ns\nE(s)\ns = lim\ns S 0\nE(s)\n1\nq\n0 e(t) dt\nB–5–1. A thermometer requires 1 min to indicate 98 % of\nthe response to a step input. Assuming the thermometer to\nbe a first-order system, find the time constant.\nIf the thermometer is placed in a bath, the temperature\nof which is changing linearly at a rate of 10°/H20862min, how much\nerror does the thermometer show?\nB–5–2. Consider the unit-step response of a unity-feedback\ncontrol system whose open-loop transfer function is\nG(s) = 1\ns(s + 1)\nObtain the rise time, peak time, maximum overshoot, and\nsettling time.\nB–5–3. Consider the closed-loop system given by\nDetermine the values of z and vn so that the system\nresponds to a step input with approximately 5 % overshoot\nand with a settling time of 2 sec. (Use the 2% criterion.)\nC(s)\nR(s) = v2\nn\ns2 + 2zvn s + v2\nnaa\n264\nChapter 5 / Transient and Steady-State Response Analyses\nx\nm\nkImpulsive\nforce\nd(t)\nFigure 5–72\nMechanical system.\nx\n1\nT\ntt\n1\nx\nn\nt\nn\nFigure 5–73\nDecaying oscillation.\n+ –\n+ –\nR(s) C(s)\nR(s) C(s)\n(a)\n(b)\n10\ns (s + 1)\nK\nh\n10\ns + 1\n1\ns\n+ –\nFigure 5–74\n(a) Control system; (b) control system with tachometer feedback.\nB–5–4. Consider the system shown in Figure 5–72.The sys-\ntem is initially at rest. Suppose that the cart is set into mo-\ntion by an impulsive force whose strength is unity. Can it be\nstopped by another such impulsive force?\nB–5–5. Obtain the unit-impulse response and the unit-\nstep response of a unity-feedback system whose open-loop\ntransfer function is\nB–5–6. An oscillatory system is known to have a transfer\nfunction of the following form:\nG(s) = v\n2\nn\ns\n2\n+ 2zv\nn\n \ns + v\n2\nn\nG(s) = 2s + 1\ns\n2\nB–5–7. Consider the system shown in Figure 5–74(a). The\ndamping ratio of this system is 0.158 and the undamped nat-\nural frequency is 3.16 rad/H20862sec. To improve the relative sta-\nbility, we employ tachometer feedback. Figure 5–74(b) shows\nsuch a tachometer-feedback system.\nDetermine the value of K\nh\nso that the damping ratio of\nthe system is 0.5. Draw unit-step response curves of both the\noriginal and tachometer-feedback systems. Also draw the\nerror-versus-time curves for the unit-ramp response of both\nsystems.\nAssume that a record of a damped oscillation is available\nas shown in Figure 5–73. Determine the damping ratio z of\nthe system from the graph.\nOpenmirrors.comaa\nProblems 265\n+ – + –\nR(s) C(s)1\ns\n16\ns + 0.8\nk\nR(s) C(s)1\ns\nK\ns + 2\nk\n+ – + –\nFigure 5–75\nClosed-loop system.\nFigure 5–76\nBlock diagram of a system.\nB–5–8. Referring to the system shown in Figure 5–75, de-\ntermine the values of K and k such that the system has a\ndamping ratio z of 0.7 and an undamped natural frequency\nvn of 4 rad/H20862sec.\nB–5–9. Consider the system shown in Figure 5–76. Deter-\nmine the value of k such that the damping ratio zis 0.5.Then\nobtain the rise time tr , peak time tp , maximum overshoot\nMp , and settling time ts in the unit-step response.\nB–5–10. Using MATLAB, obtain the unit-step response,\nunit-ramp response, and unit-impulse response of the fol-\nlowing system:\nwhere R(s) and C(s) are Laplace transforms of the input\nr(t) and output c(t), respectively.\nC(s)\nR(s) = 10\ns2 + 2s + 10\nB–5–11. Using MATLAB, obtain the unit-step response,\nunit-ramp response, and unit-impulse response of the fol-\nlowing system:\nwhere u is the input and y is the output.\nB–5–12. Obtain both analytically and computationally \nthe rise time, peak time, maximum overshoot, and settling\ntime in the unit-step response of a closed-loop system \ngiven by\nC(s)\nR(s) = 36\ns2 + 2s + 36\n y = [1 0] Bx1\nx2\nR\n Bx#\n1\nx#\n2\nR= B-1 -0.5\n10 RBx1\nx2\nR + B0.5\n0Ruaa\n266\nChapter 5 / Transient and Steady-State Response Analyses\nB–5–13. Figure 5–77 shows three systems. System I is a po-\nsitional servo system. System II is a positional servo system\nwith PD control action. System III is a positional servo sys-\ntem with velocity feedback. Compare the unit-step, unit-\nimpulse, and unit-ramp responses of the three systems.\nWhich system is best with respect to the speed of response\nand maximum overshoot in the step response?\nB–5–14. Consider the position control system shown in Fig-\nure 5–78. Write a MATLAB program to obtain a unit-step\nresponse and a unit-ramp response of the system. Plot curves\nx\n1\n(t) versus t, x\n2\n(t) versus t, x\n3\n(t) versus t, and e(t) versus t\nCwhere e(t)=r(t)-x\n1\n(t)Dfor both the unit-step response\nand the unit-ramp response.\n0.8\n5\n5\nC\nIII\n(s)R(s)\nSystem III\n1\n5s + 1\n1\ns\nC\nII\n(s)R(s)\nSystem II\n5(1 + 0.8s) 1\ns(5s + 1)\nC(s)R(s)\nSystem I\n1\ns(5s + 1)\n+ –\n+ –\n+ –\n+ –\nFigure 5–77\nPositional servo system (System I), positional servo system with PD control\naction (System II), and positional servo system with velocity feedback\n(System III).\n5\n4\nx\n1\nx\n2\nx\n3\nre\n1\ns\n1\ns\n2\n0.1s + 1\n+ –\n+ –\nFigure 5–78\nPosition control system.\nOpenmirrors.comProblems 267\naa\nB–5–15. Using MATLAB, obtain the unit-step response\ncurve for the unity-feedback control system whose open-\nloop transfer function is\nUsing MATLAB, obtain also the rise time, peak time, max-\nimum overshoot, and settling time in the unit-step response\ncurve.\nB–5–16. Consider the closed-loop system defined by\nwhere z=0.2, 0.4, 0.6, 0.8, and 1.0. Using MATLAB, plot a\ntwo-dimensional diagram of unit-impulse response curves.\nAlso plot a three-dimensional plot of the response curves.\nB–5–17. Consider the second-order system defined by\nwhere z=0.2, 0.4, 0.6, 0.8, 1.0. Plot a three-dimensional\ndiagram of the unit-step response curves.\nB–5–18. Obtain the unit-ramp response of the system\ndefined by\nwhere u is the unit-ramp input. Use the lsim command to\nobtain the response.\n y = [1 0] Bx1\nx2\nR\n Bx#\n1\nx#\n2\nR= B 0\n- 1\n1\n- 1 RBx1\nx2\nR+ B0\n1 Ru\nC(s)\nR(s) = s + 1\ns2 + 2zs + 1\nC(s)\nR(s) = 2zs + 1\ns2 + 2zs + 1\nG(s) = 10\ns(s + 2)(s + 4)\nB–5–19. Consider the differential equation system given by\nUsing MATLAB, obtain the response y(t), subject to the\ngiven initial condition.\nB–5–20. Determine the range of K for stability of a unity-\nfeedback control system whose open-loop transfer function is\nB–5–21. Consider the following characteristic equation:\nUsing the Routh stability criterion, determine the range of\nK for stability.\nB–5–22. Consider the closed-loop system shown in Figure 5–79.\nDetermine the range of K for stability. Assume that K>0.\ns4 + 2s3 + (4 + K)s2 + 9s + 25 = 0\nG(s) = K\ns(s + 1)(s + 2)\ny$ + 3y# + 2y = 0,  y(0) = 0.1,  y# (0) = 0.05\n+ –\nR(s) C(s)\nK s – 2\n(s + 1)(s2 + 6s + 25)\nFigure 5–79 Closed-loop system.\nB–5–23. Consider the satellite attitude control system\nshown in Figure 5–80(a). The output of this system exhibits\ncontinued oscillations and is not desirable. This system can\nbe stabilized by use of tachometer feedback, as shown in\nFigure 5–80(b). If K/J=4, what value of Kh will yield the\ndamping ratio to be 0.6?\n+ – + –\nR(s) C(s)\n(b)\nKh\nK\nJs\n1\ns\n+ –\nR(s) C(s)\n(a)\nK 1\nJs2\nFigure 5–80\n(a) Unstable satellite \nattitude control system;\n(b) stabilized system.aa\n268\nChapter 5 / Transient and Steady-State Response Analyses\nK\nh\nK\nC(s)R(s) 20\n(s + 1) (s + 4)\n1\ns\n+ –\n+ –\nFigure 5–81\nServo system with tachometer feedback.\nB–5–24. Consider the servo system with tachometer\nfeedback shown in Figure 5–81. Determine the ranges of\nstability for K and K\nh\n. (Note that K\nh\nmust be positive.)\nB–5–25. Consider the system\nwhere matrix A is given by\n(A is called Schwarz matrix.) Show that the first column of\nthe Routh’s array of the characteristic equation |sI-A|=0\nconsists of 1, b\n1\n,b\n2\n, and b\n1\nb\n3\n.\nB–5–26. Consider a unity-feedback control system with the\nclosed-loop transfer function\nDetermine the open-loop transfer function G(s).\nShow that the steady-state error in the unit-ramp\nresponse is given by\ne\nss\n= 1\nK\nv\n= a - K\nb\nC(s)\nR(s) = Ks + b\ns\n2\n+ as + b\nA =\nC\n0\n- b\n3\n0\n1\n0\n- b\n2\n0\n1\n- b\n1\nS\nx# = Ax\nB–5–27. Consider a unity-feedback control system whose\nopen-loop transfer function is\nDiscuss the effects that varying the values of K and B has\non the steady-state error in unit-ramp response. Sketch\ntypical unit-ramp response curves for a small value,\nmedium value, and large value of K, assuming that B is\nconstant.\nB–5–28. If the feedforward path of a control system\ncontains at least one integrating element, then the output\ncontinues to change as long as an error is present. The out-\nput stops when the error is precisely zero. If an external dis-\nturbance enters the system, it is desirable to have an\nintegrating element between the error-measuring element\nand the point where the disturbance enters, so that the ef-\nfect of the external disturbance may be made zero at steady\nstate.\nShow that, if the disturbance is a ramp function, then\nthe steady-state error due to this ramp disturbance may be\neliminated only if two integrators precede the point where\nthe disturbance enters.\nG(s) = K\ns(Js + B)\nOpenmirrors.com6\n269\nControl Systems Analysis\nand Design by the \nRoot-Locus Method\n6–1 INTRODUCTION\nThe basic characteristic of the transient response of a closed-loop system is closely\nrelated to the location of the closed-loop poles. If the system has a variable loop gain,\nthen the location of the closed-loop poles depends on the value of the loop gain chosen.\nIt is important, therefore, that the designer know how the closed-loop poles move in\nthes plane as the loop gain is varied.\nFrom the design viewpoint, in some systems simple gain adjustment may move the\nclosed-loop poles to desired locations. Then the design problem may become the selec-\ntion of an appropriate gain value. If the gain adjustment alone does not yield a desired\nresult, addition of a compensator to the system will become necessary. (This subject is\ndiscussed in detail in Sections 6–6 through 6–9.)\nThe closed-loop poles are the roots of the characteristic equation. Finding the roots\nof the characteristic equation of degree higher than 3 is laborious and will need computer\nsolution. (MATLAB provides a simple solution to this problem.) However, just finding\nthe roots of the characteristic equation may be of limited value, because as the gain of\nthe open-loop transfer function varies, the characteristic equation changes and the\ncomputations must be repeated.\nA simple method for finding the roots of the characteristic equation has been\ndeveloped by W. R. Evans and used extensively in control engineering. This method,\ncalled the root-locus method, is one in which the roots of the characteristic equation270\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nH(s)\nG(s)\nC(s)R(s)\n+ –\nFigure 6–1\nControl system.\nare plotted for all values of a system parameter. The roots corresponding to a par-\nticular value of this parameter can then be located on the resulting graph. Note that\nthe parameter is usually the gain, but any other variable of the open-loop transfer\nfunction may be used. Unless otherwise stated, we shall assume that the gain of the\nopen-loop transfer function is the parameter to be varied through all values, from zero\nto infinity.\nBy using the root-locus method the designer can predict the effects on the location\nof the closed-loop poles of varying the gain value or adding open-loop poles and/or\nopen-loop zeros.Therefore, it is desired that the designer have a good understanding of\nthe method for generating the root loci of the closed-loop system, both by hand and by\nuse of a computer software program like MATLAB.\nIn designing a linear control system, we find that the root-locus method proves to be\nquite useful, since it indicates the manner in which the open-loop poles and zeros should\nbe modified so that the response meets system performance specifications.This method\nis particularly suited to obtaining approximate results very quickly.\nBecause generating the root loci by use of MATLAB is very simple, one may think\nsketching the root loci by hand is a waste of time and effort. However, experience in\nsketching the root loci by hand is invaluable for interpreting computer-generated root\nloci, as well as for getting a rough idea of the root loci very quickly.\nOutline of the Chapter. The outline of the chapter is as follows: Section 6–1 has\npresented an introduction to the root-locus method. Section 6–2 details the concepts\nunderlying the root-locus method and presents the general procedure for sketching root\nloci using illustrative examples. Section 6–3 discusses generating root-locus plots with\nMATLAB. Section 6–4 treats a special case when the closed-loop system has positive\nfeedback. Section 6–5 presents general aspects of the root-locus approach to the design\nof closed-loop systems. Section 6–6 discusses the control systems design by lead com-\npensation. Section 6–7 treats the lag compensation technique. Section 6–8 deals with\nthe lag–lead compensation technique. Finally, Section 6–9 discusses the parallel com-\npensation technique.\n6–2 ROOT-LOCUS PLOTS\nAngle and Magnitude Conditions. Consider the negative feedback system shown\nin Figure 6–1. The closed-loop transfer function is\n(6–1)C(s)\nR(s) = G(s)\n1 + G(s)H(s)\nOpenmirrors.comSection 6–2 / Root-Locus Plots 271\nThe characteristic equation for this closed-loop system is obtained by setting the\ndenominator of the right-hand side of Equation (6–1) equal to zero. That is,\nor\n(6–2)\nHere we assume that G(s)H(s) is a ratio of polynomials in s. [It is noted that we\ncan extend the analysis to the case when G(s)H(s) involves the transport lag e–Ts.]\nSince G(s)H(s) is a complex quantity, Equation (6–2) can be split into two equations\nby equating the angles and magnitudes of both sides, respectively, to obtain the\nfollowing:\nAngle condition:\n(6–3)\nMagnitude condition:\n(6–4)\nThe values of s that fulfill both the angle and magnitude conditions are the roots of\nthe characteristic equation, or the closed-loop poles. A locus of the points in the\ncomplex plane satisfying the angle condition alone is the root locus. The roots of\nthe characteristic equation (the closed-loop poles) corresponding to a given value\nof the gain can be determined from the magnitude condition. The details of applying\nthe angle and magnitude conditions to obtain the closed-loop poles are presented\nlater in this section.\nIn many cases, G(s)H(s) involves a gain parameter K, and the characteristic equa-\ntion may be written as\nThen the root loci for the system are the loci of the closed-loop poles as the gain K is\nvaried from zero to infinity.\nNote that to begin sketching the root loci of a system by the root-locus method we\nmust know the location of the poles and zeros of G(s)H(s). Remember that the angles\nof the complex quantities originating from the open-loop poles and open-loop zeros to\nthe test point s are measured in the counterclockwise direction. For example, if G(s)H(s)\nis given by\nG(s)H(s) =\nKAs + z1B\nAs + p1BAs + p2BAs + p3BAs + p4B\n1 +\nKAs + z1BAs + z2Bp As + zmB\nAs + p1BAs + p2Bp As + pnB = 0\n∑G(s)H(s)∑ = 1\n/G(s)H(s) =; 180°(2k + 1)  (k = 0, 1, 2, p )\nG(s)H(s) =- 1\n1 + G(s)H(s) = 0272\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nTest point\nTest point\n–p\n4\n–p\n3\n–p\n2\n–p\n1\ns\ns\n–z\n1\nf\n1\nf\n1\njv\nu\n4\nu\n2\nu\n3\nu\n4\nu\n1\nu\n3\nu\n1\nu\n2\n/H92680–p\n4\n–p\n2\nA\n4\nB\n1\nA\n3\nA\n2\nA\n1\n–p\n1\n–p\n3\n–z\n1\njv\n/H92680\n(b)(a)\nwhere –p\n2\nand –p\n3\nare complex-conjugate poles, then the angle of G(s)H(s) is\nwhere f\n1\n, u\n1\n, u\n2\n, u\n3\n, and u\n4\nare measured counterclockwise as shown in Figures 6–2(a)\nand (b). The magnitude of G(s)H(s) for this system is\nwhere A\n1\n, A\n2\n, A\n3\n, A\n4\n, and B\n1\nare the magnitudes of the complex quantities s+p\n1\n,\ns+p\n2\n, s+p\n3\n, s+p\n4\n, and s+z\n1\n, respectively, as shown in Figure 6–2(a).\nNote that, because the open-loop complex-conjugate poles and complex-conjugate\nzeros, if any, are always located symmetrically about the real axis, the root loci are always\nsymmetrical with respect to this axis.Therefore, we only need to construct the upper half\nof the root loci and draw the mirror image of the upper half in the lower-half s plane.\nIllustrative Examples. In what follows, two illustrative examples for constructing\nroot-locus plots will be presented. Although computer approaches to the construction\nof the root loci are easily available, here we shall use graphical computation, combined\nwith inspection, to determine the root loci upon which the roots of the characteristic\nequation of the closed-loop system must lie. Such a graphical approach will enhance\nunderstanding of how the closed-loop poles move in the complex plane as the open-\nloop poles and zeros are moved.Although we employ only simple systems for illustrative\npurposes, the procedure for finding the root loci is no more complicated for higher-\norder systems.\nBecause graphical measurements of angles and magnitudes are involved in the analy-\nsis, we find it necessary to use the same divisions on the abscissa as on the ordinate axis\nwhen sketching the root locus on graph paper.\n∑G(s)H(s)∑ = KB\n1\nA\n1\n \nA\n2\n \nA\n3\n \nA\n4\n/\nG(s)H(s)\n= f\n1\n- u\n1\n- u\n2\n- u\n3\n- u\n4\nFigure 6–2\n(a) and (b) Diagrams\nshowing angle\nmeasurements from\nopen-loop poles and\nopen-loop zero to\ntest point s.\nOpenmirrors.comSection 6–2 / Root-Locus Plots\n273\nR(s) C(s)K\ns(s + 1) (s + 2)\n+ –\nFigure 6–3\nControl system.\nEXAMPLE 6–1\nConsider the negative feedback system shown in Figure 6–3. (We assume that the value of gain\nK is nonnegative.) For this system,\nLet us sketch the root-locus plot and then determine the value of K such that the damping ratio\nz of a pair of dominant complex-conjugate closed-loop poles is 0.5.\nFor the given system, the angle condition becomes\nThe magnitude condition is\nA typical procedure for sketching the root-locus plot is as follows:\n1. Determine the root loci on the real axis. The first step in constructing a root-locus plot is to\nlocate the open-loop poles,s=0, s=–1, and s=–2, in the complex plane. (There are no open-\nloop zeros in this system.) The locations of the open-loop poles are indicated by crosses. (The lo-\ncations of the open-loop zeros in this book will be indicated by small circles.) Note that the starting\npoints of the root loci (the points corresponding to K=0) are open-loop poles. The number of\nindividual root loci for this system is three, which is the same as the number of open-loop poles.\nTo determine the root loci on the real axis, we select a test point,s. If the test point is on the\npositive real axis, then\nThis shows that the angle condition cannot be satisfied. Hence, there is no root locus on the positive\nreal axis. Next, select a test point on the negative real axis between 0 and –1. Then\nThus\nand the angle condition is satisfied.Therefore, the portion of the negative real axis between 0 and\n–1 forms a portion of the root locus. If a test point is selected between –1 and –2, then\nand\n-\n/\ns\n-\n/\ns + 1\n-\n/\ns + 2\n=- 360°\n/\ns\n=\n/\ns + 1\n= 180°,\n  \n/\ns + 2\n= 0°\n-\n/\ns\n-\n/\ns + 1\n-\n/\ns + 2\n=- 180°\n/\ns\n= 180°,\n  \n/\ns + 1\n=\n/\ns + 2\n= 0°\n/\ns\n=\n/\ns + 1\n=\n/\ns + 2\n= 0°\n∑G(s)∑ =\n2\nK\ns(s + 1)(s + 2)\n2\n= 1\n =; 180°(2k + 1)\n  \n(k = 0, 1, 2, p )\n =-\n/\ns\n-\n/\ns + 1\n-\n/\ns + 2\n \n/\nG(s)\n=\nn\nK\ns(s + 1)(s + 2)\nG(s) = K\ns(s + 1)(s + 2) ,\n  \nH(s) = 1\nOpenmirrors.com274\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nIt can be seen that the angle condition is not satisfied. Therefore, the negative real axis from –1\nto –2 is not a part of the root locus. Similarly, if a test point is located on the negative real axis from\n–2 to –q, the angle condition is satisfied. Thus, root loci exist on the negative real axis between\n0 and –1 and between –2 and –q.\n2. Determine the asymptotes of the root loci. The asymptotes of the root loci as s approaches\ninfinity can be determined as follows: If a test point s is selected very far from the origin, then\nand the angle condition becomes\nor\nSince the angle repeats itself as k is varied, the distinct angles for the asymptotes are determined\nas 60°, –60°, and 180°. Thus, there are three asymptotes. The one having the angle of 180° is the\nnegative real axis.\nBefore we can draw these asymptotes in the complex plane, we must find the point where\nthey intersect the real axis. Since\nif a test point is located very far from the origin, then G(s) may be written as\nFor large values of s, this last equation may be approximated by\n(6–5)\nA root-locus diagram of G(s) given by Equation (6–5) consists of three straight lines.This can be\nseen as follows: The equation of the root locus is\nor\nwhich can be written as\n \n/\ns + 1\n=; 60°(2k + 1)\n -3\n/\ns + 1\n=; 180°(2k + 1)\n \nn\nK\n(s + 1)\n3\n=; 180°(2k + 1)\nG(s) /H11216K\n(s + 1)\n3\nG(s) = K\ns\n3\n+ 3s\n2\n+ p\nG(s) = K\ns(s + 1)(s + 2)\nAngles of asymptotes =\n;180°(2k + 1)\n3\n  \n(k = 0, 1, 2, p )\n-3\n/\ns\n=; 180°(2k + 1)\n  \n(k = 0, 1, 2, p )\nlim\ns Sq\nG(s) = lim\ns Sq\nK\ns(s + 1)(s + 2) = lim\ns Sq\nK\ns\n3\nOpenmirrors.comSection 6–2 / Root-Locus Plots 275\njv\ns\nv = 0\n–1\n– j 3\nj 3\ns + 1 –  \n3\nv = 0\ns + 1 +  \n3\nv = 0\n0\nFigure 6–4\nThree asymptotes.\nBy substituting s=s+jv into this last equation, we obtain\nor\nTaking the tangent of both sides of this last equation,\nwhich can be written as\nThese three equations represent three straight lines, as shown in Figure 6–4.The three straight lines\nshown are the asymptotes. They meet at point s=–1. Thus, the abscissa of the intersection of\nthe asymptotes and the real axis is obtained by setting the denominator of the right-hand side\nof Equation (6–5) equal to zero and solving for s. The asymptotes are almost parts of the root loci\nin regions very far from the origin.\n3. Determine the breakaway point. To plot root loci accurately, we must find the breakaway\npoint, where the root-locus branches originating from the poles at 0 and –1 break away (as K is\nincreased) from the real axis and move into the complex plane.The breakaway point corresponds\nto a point in the s plane where multiple roots of the characteristic equation occur.\nA simple method for finding the breakaway point is available. We shall present this method\nin the following: Let us write the characteristic equation as\n(6–6)f(s) = B(s) + KA(s) = 0\n s + 1 - v\n13 = 0,  s + 1 + v\n13 = 0,  v = 0\n v\ns + 1 = 13 ,  -13 ,  0\n tan-1 v\ns + 1 = 60°,  -60°,  0°\n /s + jv + 1 =; 60°(2k + 1)276\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nwhere A(s) and B(s) do not contain K. Note that f(s)=0 has multiple roots at points where\nThis can be seen as follows: Suppose that f(s) has multiple roots of order r, where .Then f(s)\nmay be written as\nNow we differentiate this equation with respect to s and evaluate df(s)/ds at s=s\n1\n. Then we get\n(6–7)\nThis means that multiple roots of f(s) will satisfy Equation (6–7). From Equation (6–6), we\nobtain\n(6–8)\nwhere\nThe particular value of K that will yield multiple roots of the characteristic equation is obtained\nfrom Equation (6–8) as\nIf we substitute this value of K into Equation (6–6), we get\nor\n(6–9)\nIf Equation (6–9) is solved for s, the points where multiple roots occur can be obtained. On the\nother hand, from Equation (6–6) we obtain\nand\nIf dK/ds is set equal to zero, we get the same equation as Equation (6–9). Therefore, the break-\naway points can be simply determined from the roots of\nIt should be noted that not all the solutions of Equation (6–9) or of dK/ds=0 correspond to\nactual breakaway points. If a point at which dK/ds=0 is on a root locus, it is an actual breakaway\nor break-in point. Stated differently, if at a point at which dK/ds=0 the value of K takes a real\npositive value, then that point is an actual breakaway or break-in point.\ndK\nds = 0\ndK\nds =-\nB¿(s)A(s) - B(s)A¿(s)\nA\n2\n(s)\nK =-\nB(s)\nA(s)\nB(s)A¿(s) - B¿(s)A(s) = 0\nf(s) = B(s) -\nB¿(s)\nA¿(s) A(s) = 0\nK =-\nB¿(s)\nA¿(s)\nA¿(s) =\ndA(s)\nds ,\n  \nB¿(s) =\ndB(s)\nds\ndf(s)\nds = B¿(s) + KA¿(s) = 0\ndf(s)\nds\n2\ns = s\n1\n= 0\nf(s) = As - s\n1\nB\nr\nAs - s\n2\nBp As - s\nn\nB\nr /H113502\ndf(s)\nds = 0\nOpenmirrors.comSection 6–2 / Root-Locus Plots 277\nFor the present example, the characteristic equation G(s)+1=0 is given by\nor\nBy setting dK/ds=0, we obtain\nor\nSince the breakaway point must lie on a root locus between 0 and –1, it is clear that s=–0.4226\ncorresponds to the actual breakaway point. Point s=–1.5774 is not on the root locus. Hence, this\npoint is not an actual breakaway or break-in point. In fact, evaluation of the values of K corre-\nsponding to s=–0.4226 and s=–1.5774 yields\n4. Determine the points where the root loci cross the imaginary axis.These points can be found\nby use of Routh’s stability criterion as follows: Since the characteristic equation for the present\nsystem is\nthe Routh array becomes\nThe value of K that makes the s1 term in the first column equal zero is K=6. The crossing points\non the imaginary axis can then be found by solving the auxiliary equation obtained from the s2\nrow; that is,\nwhich yields\nThe frequencies at the crossing points on the imaginary axis are thus The gain value\ncorresponding to the crossing points is K=6.\nAn alternative approach is to let s=jv in the characteristic equation, equate both the real\npart and the imaginary part to zero, and then solve for v and K. For the present system, the char-\nacteristic equation, with s=jv,i s\nor\nEquating both the real and imaginary parts of this last equation to zero, respectively, we obtain\nK - 3v2 = 0,  2v - v3 = 0\nAK - 3v2B+ jA2v - v3B= 0\n(jv)3 + 3(jv)2 + 2(jv) + K = 0\nv =; 12 .\ns =; j12\n3s2 + K = 3s2 + 6 = 0\ns3\ns2\ns1\ns0\n1\n3\n6 - K\n3\nK\n2\nK\ns3 + 3s2 + 2s + K = 0\n K =- 0.3849,   for s =- 1.5774\n K = 0.3849,    for s =- 0.4226\ns =- 0.4226,  s =- 1.5774\ndK\nds =- A3s2 + 6s + 2B= 0\nK =- As3 + 3s2 + 2sB\nK\ns(s + 1)(s + 2) + 1 = 0278\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\njv\nj1\n– j1\n–1–2\ns + 1\ns + 2\nu\n2\nu\n1\nu\n3\n0\ns\ns\nFigure 6–5\nConstruction of root\nlocus.\njv\nj1\n– j1\n1–2–30 s\nK = 6\nK = 6\nK = 1.0383\nK = 1.0383\nK\n`\nK\n`\nj2\n– j2\n60°\n–1\nFigure 6–6\nRoot-locus plot.\nfrom which\nThus, root loci cross the imaginary axis at and the value of K at the crossing points is 6.\nAlso, a root-locus branch on the real axis touches the imaginary axis at v=0. The value of K is\nzero at this point.\n5. Choose a test point in the broad neighborhood of the jv axis and the origin, as shown in\nFigure 6–5, and apply the angle condition. If a test point is on the root loci, then the sum of the\nthree angles, u\n1\n+u\n2\n+u\n3\n, must be 180°. If the test point does not satisfy the angle condition,\nselect another test point until it satisfies the condition. (The sum of the angles at the test point will\nindicate the direction in which the test point should be moved.) Continue this process and locate\na sufficient number of points satisfying the angle condition.\n6. Draw the root loci, based on the information obtained in the foregoing steps, as shown in\nFigure 6–6.\nv =; 12\n \n,\nv =; 12\n,\n  \nK = 6\n  \nor\n  \nv = 0,\n  \nK = 0\nOpenmirrors.comSection 6–2 / Root-Locus Plots 279\n7. Determine a pair of dominant complex-conjugate closed-loop poles such that the damping\nratio z is 0.5. Closed-loop poles with z=0.5 lie on lines passing through the origin and making\nthe angles with the negative real axis. From Figure 6–6, such closed-\nloop poles having z=0.5 are obtained as follows:\nThe value of K that yields such poles is found from the magnitude condition as follows:\nUsing this value of K, the third pole is found at s=–2.3326.\nNote that, from step 4, it can be seen that for K=6 the dominant closed-loop poles lie on the\nimaginary axis at With this value of K, the system will exhibit sustained oscillations.\nFor K>6, the dominant closed-loop poles lie in the right-half s plane, resulting in an unstable\nsystem.\nFinally, note that, if necessary, the root loci can be easily graduated in terms of K by use of the\nmagnitude condition. We simply pick out a point on a root locus, measure the magnitudes of the\nthree complex quantities s, s+1, and s+2, and multiply these magnitudes; the product is equal\nto the gain value K at that point, or\nGraduation of the root loci can be done easily by use of MATLAB. (See Section 6–3.)\nEXAMPLE 6–2 In this example, we shall sketch the root-locus plot of a system with complex-conjugate open-\nloop poles. Consider the negative feedback system shown in Figure 6–7. For this system,\nwhere K /H113500. It is seen that G(s) has a pair of complex-conjugate poles at\nA typical procedure for sketching the root-locus plot is as follows:\n1. Determine the root loci on the real axis. For any test point s on the real axis, the sum of the\nangular contributions of the complex-conjugate poles is 360°, as shown in Figure 6–8.Thus the net\neffect of the complex-conjugate poles is zero on the real axis.The location of the root locus on the\nreal axis is determined from the open-loop zero on the negative real axis.A simple test reveals that\na section of the negative real axis, that between –2 and –q, is a part of the root locus. It is noted\nthat, since this locus lies between two zeros (at s=–2 and s=–q), it is actually a part of two\nroot loci, each of which starts from one of the two complex-conjugate poles. In other words, two\nroot loci break in the part of the negative real axis between –2 and –q.\ns =- 1 + j12 ,  s =- 1 - j12\nG(s) =\nK(s + 2)\ns2 + 2s + 3 ,  H(s) = 1\n∑s∑ /H11554∑s + 1∑ /H11554∑s + 2∑ = K\ns =; j12 .\n = 1.0383\n K = ∑s(s + 1)(s + 2)∑s =- 0.3337 + j0.5780\ns1 =- 0.3337 + j0.5780,  s2 =- 0.3337 - j0.5780\n;cos-1 z =; cos-1 0.5 =; 60°\nR(s) C(s)K(s + 2)\ns2 + 2s + 3+ –\nFigure 6–7\nControl system.280\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\njv\n0 s\nu9\n2\ns\n–p\n2\nf\n1\nf9\n1\n–z\n1\n–p\n1\nu\n2\nu\n1\nFigure 6–9\nDetermination of the\nangle of departure.\nSince there are two open-loop poles and one zero, there is one asymptote, which coincides with\nthe negative real axis.\n2. Determine the angle of departure from the complex-conjugate open-loop poles. The pres-\nence of a pair of complex-conjugate open-loop poles requires the determination of the angle of\ndeparture from these poles. Knowledge of this angle is important, since the root locus near a com-\nplex pole yields information as to whether the locus originating from the complex pole migrates\ntoward the real axis or extends toward the asymptote.\nReferring to Figure 6–9, if we choose a test point and move it in the very vicinity of the com-\nplex open-loop pole at s=–p\n1\n, we find that the sum of the angular contributions from the pole\nat s=p\n2\nand zero at s=–z\n1\nto the test point can be considered remaining the same. If the test\npoint is to be on the root locus, then the sum of –u\n1\n, and must be where\nk=0,1 ,2 ,p . Thus, in the example,\nor\nThe angle of departure is then\nu\n1\n= 180° - u\n2\n+ f\n1\n= 180° - 90° + 55° = 145°\nu\n1\n= 180° - u\nœ\n2\n+ f\nœ\n1\n= 180° - u\n2\n+ f\n1\nf\nœ\n1\n- Au\n1\n+ u\nœ\n2\nB=; 180°(2k + 1)\n;180°(2k + 1),-u\nœ\n2\nf\nœ\n1\n \n,\njv\n–10–2 s\nj 2\n– j 2\nTest\npoint u\n2\nu\n1\nFigure 6–8\nDetermination of the\nroot locus on the real\naxis.\nOpenmirrors.comSection 6–2 / Root-Locus Plots 281\njv\nj1\n– j1\n1–2–3–4 0 s\nz = 0.7 line\nj2\n– j2\n145°\n–1\nFigure 6–10\nRoot-locus plot.\nSince the root locus is symmetric about the real axis, the angle of departure from the pole at\ns=–p2 is –145°.\n3. Determine the break-in point. A break-in point exists where a pair of root-locus branches\ncoalesces as K is increased. For this problem, the break-in point can be found as follows: Since\nwe have\nwhich gives\nor\nNotice that point s=–3.7320 is on the root locus. Hence this point is an actual break-in point.\n(Note that at point s=–3.7320 the corresponding gain value is K=5.4641. ) Since point\ns=–0.2680 is not on the root locus, it cannot be a break-in point. (For point s=–0.2680, the cor-\nresponding gain value is K=–1.4641.)\n4. Sketch a root-locus plot, based on the information obtained in the foregoing steps .T o\ndetermine accurate root loci, several points must be found by trial and error between the break-\nin point and the complex open-loop poles. (To facilitate sketching the root-locus plot, we should\nfind the direction in which the test point should be moved by mentally summing up the changes\non the angles of the poles and zeros.) Figure 6–10 shows a complete root-locus plot for the system\nconsidered.\ns =- 3.7320  or  s =- 0.2680\ns2 + 4s + 1 = 0\ndK\nds =-\n(2s + 2)(s + 2) - As2 + 2s + 3B\n(s + 2)2 = 0\nK =- s2 + 2s + 3\ns + 2282\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nThe value of the gain K at any point on root locus can be found by applying the magnitude\ncondition or by use of MATLAB (see Section 6–3). For example, the value of K at which the\ncomplex-conjugate closed-loop poles have the damping ratio z=0.7 can be found by locating the\nroots, as shown in Figure 6–10, and computing the value of K as follows:\nOr use MATLAB to find the value of K. (See Section 6–4.)\nIt is noted that in this system the root locus in the complex plane is a part of a circle. Such a\ncircular root locus will not occur in most systems. Circular root loci may occur in systems that in-\nvolve two poles and one zero, two poles and two zeros, or one pole and two zeros. Even in such\nsystems, whether circular root loci occur depends on the locations of poles and zeros involved.\nTo show the occurrence of a circular root locus in the present system, we need to derive the\nequation for the root locus. For the present system, the angle condition is\nIf s=s+jv is substituted into this last equation, we obtain\nwhich can be written as\nor\nTaking tangents of both sides of this last equation using the relationship\n(6–10)\nwe obtain\nor\nwhich can be simplified to\nor\nThis last equation is equivalent to\nor (s + 2)\n2\n+ v\n2\n= A13\nB\n2\nv = 0\nvC(s + 2)\n2\n+ v\n2\n- 3D = 0\n2v(s + 1)\n(s + 1)\n2\n- Av\n2\n- 2B\n= v\ns + 2\nv - 12\ns + 1 + v + 12\ns + 1\n1 -\na\nv - 12\ns + 1\nba\nv + 12\ns + 1\nb\n=\nv\ns + 2 ; 0\n1 < v\ns + 2 * 0\ntan\n \nc\ntan\n-1\n \na\nv - 12\ns + 1\nb\n+ tan\n-1\n \na\nv + 12\ns + 1\nb\nd\n= tan\n \nc\ntan\n-1\n \na\nv\ns + 2\nb\n; 180°(2k + 1)\nd\ntan\n \n(x ; y) = tan x ; tan y\n1 < tan x tan y\ntan\n-1\n \na\nv - 12\ns + 1\nb\n+ tan\n-1\n \na\nv + 12\ns + 1\nb\n= tan\n-1\n \na\nv\ns + 2\nb\n; 180°(2k + 1)\ntan\n-1\n \na\nv\ns + 2\nb\n- tan\n-1\n \na\nv - 12\ns + 1\nb\n- tan\n-1\n \na\nv + 12\ns + 1\nb\n=; 180°(2k + 1)\n/\ns + 2 + jv\n-\n/\ns + 1 + jv - j12\n-\n/\ns + 1 + jv + j12\n=; 180°(2k + 1)\n/\ns + 2\n-\n/\ns + 1 - j12\n-\n/\ns + 1 + j12\n=; 180°(2k + 1)\nK =\n2\nAs + 1 - j12\nBAs + 1 + j12\nB\ns + 2\n2\ns =- 1.67 + j1.70\n= 1.34\nOpenmirrors.comSection 6–2 / Root-Locus Plots 283\nThese two equations are the equations for the root loci for the present system. Notice that the first\nequation, v=0, is the equation for the real axis. The real axis from s=–2 to s=–q corre-\nsponds to a root locus for K /H113500. The remaining part of the real axis corresponds to a root locus\nwhen K is negative. (In the present system, K is nonnegative.) (Note that K < 0 corresponds to\nthe positive-feedback case.) The second equation for the root locus is an equation of a circle with\ncenter at s=–2, v=0 and the radius equal to That part of the circle to the left of the\ncomplex-conjugate poles corresponds to a root locus for K /H113500. The remaining part of the circle\ncorresponds to a root locus when K is negative.\nIt is important to note that easily interpretable equations for the root locus can be derived for\nsimple systems only. For complicated systems having many poles and zeros, any attempt to derive\nequations for the root loci is discouraged. Such derived equations are very complicated and their\nconfiguration in the complex plane is difficult to visualize.\nGeneral Rules for Constructing Root Loci. For a complicated system with many\nopen-loop poles and zeros, constructing a root-locus plot may seem complicated, but\nactually it is not difficult if the rules for constructing the root loci are applied. By locat-\ning particular points and asymptotes and by computing angles of departure from com-\nplex poles and angles of arrival at complex zeros, we can construct the general form of\nthe root loci without difficulty.\nWe shall now summarize the general rules and procedure for constructing the root\nloci of the negative feedback control system shown in Figure 6–11.\nFirst, obtain the characteristic equation\nThen rearrange this equation so that the parameter of interest appears as the multiply-\ning factor in the form\n(6–11)\nIn the present discussions, we assume that the parameter of interest is the gain K, where\nK>0. (If K<0, which corresponds to the positive-feedback case, the angle condi-\ntion must be modified. See Section 6–4.) Note, however, that the method is still appli-\ncable to systems with parameters of interest other than gain. (See Section 6–6.)\n1. Locate the poles and zeros of G(s)H(s)on the s plane.The root-locus branches start\nfrom open-loop poles and terminate at zeros (finite zeros or zeros at infinity). From the\nfactored form of the open-loop transfer function, locate the open-loop poles and zeros\nin the s plane. CNote that the open-loop zeros are the zeros of G(s)H(s), while the\nclosed-loop zeros consist of the zeros of G(s) and the poles of H(s).D\n1 +\nKAs + z1BAs + z2Bp As + zmB\nAs + p1BAs + p2Bp As + pnB = 0\n1 + G(s)H(s) = 0\n13 .\nH(s)\nG(s)\nC(s)R(s)\n+ –\nFigure 6–11\nControl system.284\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nNote that the root loci are symmetrical about the real axis of the s plane, because the\ncomplex poles and complex zeros occur only in conjugate pairs.\nA root-locus plot will have just as many branches as there are roots of the character-\nistic equation. Since the number of open-loop poles generally exceeds that of zeros, the\nnumber of branches equals that of poles. If the number of closed-loop poles is the same\nas the number of open-loop poles, then the number of individual root-locus branches\nterminating at finite open-loop zeros is equal to the number m of the open-loop zeros.\nThe remaining n-m branches terminate at infinity (n-m implicit zeros at infinity)\nalong asymptotes.\nIf we include poles and zeros at infinity, the number of open-loop poles is equal\nto that of open-loop zeros. Hence we can always state that the root loci start at the\npoles of G(s)H(s) and end at the zeros of G(s)H(s), as K increases from zero to in-\nfinity, where the poles and zeros include both those in the finite s plane and those at\ninfinity.\n2. Determine the root loci on the real axis. Root loci on the real axis are determined\nby open-loop poles and zeros lying on it. The complex-conjugate poles and complex-\nconjugate zeros of the open-loop transfer function have no effect on the location of the\nroot loci on the real axis because the angle contribution of a pair of complex-conjugate\npoles or complex-conjugate zeros is 360° on the real axis. Each portion of the root\nlocus on the real axis extends over a range from a pole or zero to another pole or zero.\nIn constructing the root loci on the real axis, choose a test point on it. If the total num-\nber of real poles and real zeros to the right of this test point is odd, then this point lies\non a root locus. If the open-loop poles and open-loop zeros are simple poles and sim-\nple zeros, then the root locus and its complement form alternate segments along the\nreal axis.\n3. Determine the asymptotes of root loci.If the test point s is located far from the ori-\ngin, then the angle of each complex quantity may be considered the same. One open-loop\nzero and one open-loop pole then cancel the effects of the other. Therefore, the root\nloci for very large values of s must be asymptotic to straight lines whose angles (slopes)\nare given by\nwhere number of finite poles of G(s)H(s)\nnumber of finite zeros of G(s)H(s)\nHere,k=0 corresponds to the asymptotes with the smallest angle with the real axis.Al-\nthough k assumes an infinite number of values, as k is increased the angle repeats itself,\nand the number of distinct asymptotes is n-m.\nAll the asymptotes intersect at a point on the real axis. The point at which they do\nso is obtained as follows: If both the numerator and denominator of the open-loop trans-\nfer function are expanded, the result is\nG(s)H(s) =\nKCs\nm\n+ Az\n1\n+ z\n2\n+ p + z\nm\nBs\nm - 1\n+ p + z\n1\n \nz\n2\np z\nm\nD\ns\nn\n+ Ap\n1\n+ p\n2\n+ p + p\nn\nBs\nn - 1\n+ p + p\n1\n \np\n2\np p\nn\n m =\n n =\nAngles of asymptotes = ;180°(2k + 1)\nn - m\n  \n(k = 0, 1, 2, p )\nOpenmirrors.comSection 6–2 / Root-Locus Plots 285\nIf a test point is located very far from the origin, then by dividing the denominator by\nthe numerator, it is possible to write G(s)H(s) as\nor\n(6–12)\nThe abscissa of the intersection of the asymptotes and the real axis is then obtained by\nsetting the denominator of the right-hand side of Equation (6–12) equal to zero and\nsolving for s, or\n(6–13)\n[Example 6–1 shows why Equation (6–13) gives the intersection.] Once this intersection\nis determined, the asymptotes can be readily drawn in the complex plane.\nIt is important to note that the asymptotes show the behavior of the root loci for\nA root-locus branch may lie on one side of the corresponding asymptote or may\ncross the corresponding asymptote from one side to the other side.\n4. Find the breakaway and break-in points. Because of the conjugate symmetry of\nthe root loci, the breakaway points and break-in points either lie on the real axis or\noccur in complex-conjugate pairs.\nIf a root locus lies between two adjacent open-loop poles on the real axis, then there\nexists at least one breakaway point between the two poles. Similarly, if the root locus lies\nbetween two adjacent zeros (one zero may be located at –q) on the real axis, then there\nalways exists at least one break-in point between the two zeros. If the root locus lies be-\ntween an open-loop pole and a zero (finite or infinite) on the real axis, then there may\nexist no breakaway or break-in points or there may exist both breakaway and break-in\npoints.\nSuppose that the characteristic equation is given by\nThe breakaway points and break-in points correspond to multiple roots of the charac-\nteristic equation. Hence, as discussed in Example 6–1, the breakaway and break-in points\ncan be determined from the roots of\n(6–14)\nwhere the prime indicates differentiation with respect to s. It is important to note that\nthe breakaway points and break-in points must be the roots of Equation (6–14), but not\nall roots of Equation (6–14) are breakaway or break-in points. If a real root of Equation\n(6–14) lies on the root-locus portion of the real axis, then it is an actual breakaway or\nbreak-in point. If a real root of Equation (6–14) is not on the root-locus portion of the\nreal axis, then this root corresponds to neither a breakaway point nor a break-in point.\ndK\nds =- B¿(s)A(s) - B(s)A¿(s)\nA2(s) = 0\nB(s) + KA(s) = 0\n∑s∑ /H112711.\ns =-\nAp1 + p2 + p + pnB - Az1 + z2 + p + zmB\nn - m\nG(s)H(s) = K\ncs +\nAp1 + p2 + p + pnB - Az1 + z2 + p + zmB\nn - m d\nn - m\nG(s)H(s) = K\nsn - m + CAp1 + p2 + p + pnB - Az1 + z2 + p + zmBDsn - m - 1 + p286\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\njv\ns\nAngle of\ndeparture\nu\n2\nu\n1\nf\n0\nFigure 6–12\nConstruction of the\nroot locus. [Angle of\ndeparture\n=180°-\n(\nu\n1\n+u\n2\n)\n+f.]\nIf two roots s=s\n1\nand s=–s\n1\nof Equation (6–14) are a complex-conjugate pair and if\nit is not certain whether they are on root loci, then it is necessary to check the corre-\nsponding K value. If the value of K corresponding to a root s=s\n1\nof is pos-\nitive, point s=s\n1\nis an actual breakaway or break-in point. (Since K is assumed to be\nnonnegative, if the value of K thus obtained is negative, or a complex quantity, then\npoint s=s\n1\nis neither a breakaway nor a break-in point.)\n5. Determine the angle of departure (angle of arrival) of the root locus from a com-\nplex pole (at a complex zero). To sketch the root loci with reasonable accuracy, we must\nfind the directions of the root loci near the complex poles and zeros. If a test point is cho-\nsen and moved in the very vicinity of a complex pole (or complex zero), the sum of the\nangular contributions from all other poles and zeros can be considered to remain the\nsame. Therefore, the angle of departure (or angle of arrival) of the root locus from a\ncomplex pole (or at a complex zero) can be found by subtracting from 180° the sum of\nall the angles of vectors from all other poles and zeros to the complex pole (or complex\nzero) in question, with appropriate signs included.\nAngle of departure from a complex pole=180°\n– (sum of the angles of vectors to a complex pole in question from other poles)\n± (sum of the angles of vectors to a complex pole in question from zeros)\nAngle of arrival at a complex zero=180°\n– (sum of the angles of vectors to a complex zero in question from other zeros)\n± (sum of the angles of vectors to a complex zero in question from poles)\nThe angle of departure is shown in Figure 6–12.\n6. Find the points where the root loci may cross the imaginary axis.The points where\nthe root loci intersect the jv axis can be found easily by (a) use of Routh’s stability cri-\nterion or (b) letting s=jvin the characteristic equation, equating both the real part and\nthe imaginary part to zero, and solving for v and K.The values of v thus found give the\nfrequencies at which root loci cross the imaginary axis. The K value corresponding to\neach crossing frequency gives the gain at the crossing point.\n7. Taking a series of test points in the broad neighborhood of the origin of the s plane,\nsketch the root loci. Determine the root loci in the broad neighborhood of the jv axis\nand the origin. The most important part of the root loci is on neither the real axis nor\nthe asymptotes but is in the broad neighborhood of the jv axis and the origin.The shape\ndK/H20862ds = 0\nOpenmirrors.comSection 6–2 / Root-Locus Plots 287\nof the root loci in this important region in the s plane must be obtained with reasonable\naccuracy. (If accurate shape of the root loci is needed, MATLAB may be used rather than\nhand calculations of the exact shape of the root loci.)\n8. Determine closed-loop poles. A particular point on each root-locus branch will be\na closed-loop pole if the value of K at that point satisfies the magnitude condition. Con-\nversely, the magnitude condition enables us to determine the value of the gain K at any\nspecific root location on the locus. (If necessary, the root loci may be graduated in terms\nofK. The root loci are continuous with K.)\nThe value of K corresponding to any point s on a root locus can be obtained using\nthe magnitude condition, or\nThis value can be evaluated either graphically or analytically. (MATLAB can be used\nfor graduating the root loci with K. See Section 6–3.)\nIf the gain K of the open-loop transfer function is given in the problem, then by ap-\nplying the magnitude condition, we can find the correct locations of the closed-loop\npoles for a given K on each branch of the root loci by a trial-and-error approach or by\nuse of MATLAB, which will be presented in Section 6–3.\nComments on the Root-Locus Plots. It is noted that the characteristic equa-\ntion of the negative feedback control system whose open-loop transfer function is\nis an nth-degree algebraic equation in s. If the order of the numerator of G(s)H(s) is\nlower than that of the denominator by two or more (which means that there are two or\nmore zeros at infinity), then the coefficient a1 is the negative sum of the roots of the\nequation and is independent of K. In such a case, if some of the roots move on the locus\ntoward the left as K is increased, then the other roots must move toward the right as K\nis increased. This information is helpful in finding the general shape of the root loci.\nIt is also noted that a slight change in the pole–zero configuration may cause signif-\nicant changes in the root-locus configurations. Figure 6–13 demonstrates the fact that a\nslight change in the location of a zero or pole will make the root-locus configuration\nlook quite different.\nG(s)H(s) =\nKAsm + b1 sm - 1 + p + bmB\nsn + a1 sn - 1 + p + an\n  (n /H11350m)\nK = product of lengths between point s to poles\nproduct of lengths between point s to zeros\njv\ns\njv\ns\nFigure 6–13\nRoot-locus plots.288\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nC(s)R(s)\n(a)\n1\ns\nK\n(s + 1) (s + 2)\nC(s)R(s)\n(c)\n1\ns + 1\nK\ns(s + 1) (s + 2)\nK\ns(s + 2)\ns + 1\nH(s)\nC(s)R(s)\n(b)\n+ –\n+ –\n+ –\nG(s)\n+ –\nFigure 6–14\n(a) Control system\nwith velocity\nfeedback; (b) and \n(c) modified block\ndiagrams.\nCancellation of Poles of G(s) with Zeros of H(s). It is important to note that\nif the denominator of G(s) and the numerator of H(s) involve common factors, then the\ncorresponding open-loop poles and zeros will cancel each other, reducing the degree of\nthe characteristic equation by one or more. For example, consider the system shown in\nFigure 6–14(a). (This system has velocity feedback.) By modifying the block diagram of\nFigure 6–14(a) to that shown in Figure 6–14(b), it is clearly seen that G(s) and H(s)\nhave a common factor s+1. The closed-loop transfer function C(s)/R(s) is\nThe characteristic equation is\nBecause of the cancellation of the terms (s+1) appearing in G(s) and H(s), however,\nwe have\nThe reduced characteristic equation is\nThe root-locus plot of G(s)H(s) does not show all the roots of the characteristic equa-\ntion, only the roots of the reduced equation.\nTo obtain the complete set of closed-loop poles, we must add the canceled pole of\nG(s)H(s) to those closed-loop poles obtained from the root-locus plot of G(s)H(s).\nThe important thing to remember is that the canceled pole of G(s)H(s) is a closed-loop\npole of the system, as seen from Figure 6–14(c).\ns(s + 2) + K = 0\n = s(s + 2) + K\ns(s + 2)\n 1 + G(s)H(s) = 1 + K(s + 1)\ns(s + 1)(s + 2)\nCs(s + 2) + KD(s + 1) = 0\nC(s)\nR(s) = K\ns(s + 1)(s + 2) + K(s + 1)\nOpenmirrors.comSection 6–2 / Root-Locus Plots 289\nTypical Pole–Zero Configurations and Corresponding Root Loci. In summa-\nrizing, we show several open-loop pole–zero configurations and their corresponding\nroot loci in Table 6–1. The pattern of the root loci depends only on the relative separa-\ntion of the open-loop poles and zeros. If the number of open-loop poles exceeds the\nnumber of finite zeros by three or more, there is a value of the gain K beyond which root\nloci enter the right-half s plane, and thus the system can become unstable. A stable sys-\ntem must have all its closed-loop poles in the left-half s plane.\nTable 6–1 Open-Loop Pole–Zero Configurations \nand the Corresponding Root Loci\njv\ns\njv\ns\njv\ns\njv\ns\njv\ns\njv\ns\njv\ns\njv\ns\njv\ns\njv\ns\njv\ns\njv\ns290\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nNote that once we have some experience with the method, we can easily evaluate the\nchanges in the root loci due to the changes in the number and location of the open-loop\npoles and zeros by visualizing the root-locus plots resulting from various pole–zero\nconfigurations.\nSummary. From the preceding discussions, it should be clear that it is possible to\nsketch a reasonably accurate root-locus diagram for a given system by following simple\nrules. (The reader should study the various root-locus diagrams shown in the solved\nproblems at the end of the chapter.) At preliminary design stages, we may not need the\nprecise locations of the closed-loop poles. Often their approximate locations are all that\nis needed to make an estimate of system performance. Thus, it is important that the\ndesigner have the capability of quickly sketching the root loci for a given system.\n6–3 PLOTTING ROOT LOCI WITH MATLAB\nIn this section we present the MATLAB approach to the generation of root-locus plots\nand finding relevant information from the root-locus plots.\nPlotting Root Loci with MATLAB. In plotting root loci with MATLAB we\ndeal with the system equation given in the form of Equation (6–11), which may be\nwritten as\nwhere num is the numerator polynomial and den is the denominator polynomial.\nThat is,\nNote that both vectors num and den must be written in descending powers of s.\nA MATLAB command commonly used for plotting root loci is\nrlocus(num,den)\nUsing this command, the root-locus plot is drawn on the screen.The gain vector K is au-\ntomatically determined. (The vector K contains all the gain values for which the closed-\nloop poles are to be computed.)\nFor the systems defined in state space, rlocus(A,B,C,D) plots the root locus of the\nsystem with the gain vector automatically determined.\nNote that commands\nrlocus(num,den,K)     and     rlocus(A,B,C,D,K)\nuse the user-supplied gain vector K.\n = s\nn\n+ Ap\n1\n+ p\n2\n+ p + p\nn\nBs\nn - 1\n+ p + p\n1\n \np\n2\n p p\nn\n den = As + p\n1\nBAs + p\n2\nBp As + p\nn\nB\n = s\nm\n+ Az\n1\n+ z\n2\n+ p + z\nm\nBs\nm - 1\n+ p + z\n1\n \nz\n2\n p z\nm\n num = As + z\n1\nBAs + z\n2\nBp As + z\nm\nB\n1 + K num\nden = 0\nOpenmirrors.comSection 6–3 / Plotting Root Loci with MATLAB 291\nK(s + 3)\ns(s + 1)(s2 + 4s + 16)+ –\nFigure 6–15\nControl system.\nIf it is desired to plot the root loci with marks 'o' or 'x', it is necessary to use the fol-\nlowing command:\nr = rlocus(num,den)\nplot(r,'o')     or     plot(r,'x')\nPlotting root loci using marks o or x is instructive, since each calculated closed-loop pole\nis graphically shown; in some portion of the root loci those marks are densely placed and\nin another portion of the root loci they are sparsely placed. MATLAB supplies its own set\nof gain values used to calculate a root-locus plot. It does so by an internal adaptive step-\nsize routine.Also, MATLAB uses the automatic axis-scaling feature of the plot command.\nEXAMPLE 6–3 Consider the system shown in Figure 6–15. Plot root loci with a square aspect ratio so that a line\nwith slope 1 is a true 45° line. Choose the region of root-locus plot to be\nwhere x and y are the real-axis coordinate and imaginary-axis coordinate, respectively.\nTo set the given plot region on the screen to be square, enter the command\nv = [-6  6  -6  6]; axis (v); axis('square')\nWith this command, the region of the plot is as specified and a line with slope 1 is at a true 45°,\nnot skewed by the irregular shape of the screen.\nFor this problem, the denominator is given as a product of first- and second-order terms. So\nwe must multiply these terms to get a polynomial in s. The multiplication of these terms can be\ndone easily by use of the convolution command, as shown next.\nDefine\na = s (s + 1): a = [1   1   0]\nb = s2 + 4s + 16: b = [1   4   16]\nThen we use the following command:\nc = conv(a, b)\nNote that conv(a, b)gives the product of two polynomials a and b. See the following computer output:\n-6 /H11349x /H113496,  -6 /H11349y /H113496\na = [1  1   0];\nb = [1  4  16];\nc = conv (a,b)\nc =\n1  5  20  16  0\nThe denominator polynomial is thus found to be\nden = [1  5  20  16  0]292\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\n0−2\nReal Axis\nImag Axis\n642−4−6\n0\n−2\n6\n4\n2\n−4\n−6\nRoot-Locus Plot of G(s) = K(s + 3)/[s(s + 1)(s\n2\n+ 4s + 16)]\nFigure 6–16\nRoot-locus plot.\nMATLAB Program 6–1\n% --------- Root-locus plot ---------\nnum = [1   3];\nden = [1   5  20  16   0];\nrlocus(num,den)\nv = [-6  6  -6  6];\naxis(v); axis('square')\ngrid;\ntitle ('Root-Locus Plot of G(s) = K(s + 3)/[s(s + 1)(s^2 + 4s + 16)]')\nTo find the complex-conjugate open-loop poles (the roots of s\n2\n+4s+16=0), we may enter\nthe roots command as follows:\nNote that in MATLAB Program 6–1, instead of\nden = [1  5  20  16  0]\nwe may enter\nden = conv ([1  1  0], [1  4  16])\nThe results are the same.\nr = roots(b)\nr =\n–2.0000 + 3.464li\n–2.0000 - 3.464li\nThus, the system has the following open-loop zero and open-loop poles:\nOpen-loop zero: s=–3\nOpen-loop poles: s=0, s=–1, s=–2 ; j3.4641\nMATLAB Program 6–1 will plot the root-locus diagram for this system. The plot is shown in\nFigure 6–16.\nOpenmirrors.comSection 6–3 / Plotting Root Loci with MATLAB 293\nEXAMPLE 6–4 Consider the negative feedback system whose open-loop transfer function G(s)H(s) is\nThere are no open-loop zeros. Open-loop poles are located at s=–0.3+j3.1480, \ns=–0.3-j3.1480, s=–0.5, and s=0.\nEntering MATLAB Program 6–2 into the computer, we obtain the root-locus plot shown in\nFigure 6–17.\n = K\ns4 + 1.1s3 + 10.3s2 + 5s\n G(s)H(s) = K\ns(s + 0.5)As2 + 0.6s + 10B\nMATLAB Program 6–2\n% --------- Root-locus plot ---------\nnum = [1];\nden = [1  1.1  10.3  5  0];\nr = rlocus(num,den);\nplot(r,'o')\nv = [-6  6  -6  6]; axis(v)\ngrid\ntitle('Root-Locus Plot of G(s) = K/[s(s + 0.5)(s^2 + 0.6s + 10)]')\nxlabel('Real Axis')\nylabel('Imag Axis')\nReal Axis\n–6 –4 642–2 0\nImag Axis\n6\n–2\n4\n–6\n2\n0\n–4\nRoot-Locus Plot of G(s) = K/[s(s+0.5)(s2+0.6s+10)]\nFigure 6–17\nRoot-locus plot.\nNotice that in the regions near x=–0.3, y=2.3 and x=–0.3, y=–2.3 two loci approach\neach other. We may wonder if these two branches should touch or not. To explore this situation,\nwe may plot the root loci using smaller increments of K in the critical region.294\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nReal Axis\n–4 –2\n–3\n42\n1\n3\n–1\n0\nImag Axis\n4\n–1\n3\n–3\n–4\n2\n0\n1\n–2\nRoot-Locus Plot of G(s) = K/[s(s+0.5)(s\n2\n+0.6s+10)]\nFigure 6–18\nRoot-locus plot.\nMATLAB Program 6–3\n% --------- Root-locus plot ---------\nnum = [1];\nden = [1  1.1  10.3  5  0];\nK1 = 0:0.2:20;\nK2 = 20:0.1:30;\nK3 = 30:5:1000;\nK = [K1  K2  K3];\nr = rlocus(num,den,K);\nplot(r, 'o')\nv = [-4  4  -4  4]; axis(v)\ngrid\ntitle('Root-Locus Plot of G(s) = K/[s(s + 0.5)(s^2 + 0.6s + 10)]')\nxlabel('Real Axis')\nylabel('Imag Axis')\nBy a conventional trial-and-error approach or using the command rlocfind to be presented\nlater in this section, we find the particular region of interest to be 20 /H11349K /H1134930. By entering\nMATLAB Program 6–3, we obtain the root-locus plot shown in Figure 6–18. From this plot, it\nis clear that the two branches that approach in the upper half-plane (or in the lower half-plane)\ndo not touch.\nEXAMPLE 6–5\nConsider the system shown in Figure 6–19. The system equations are\n u = r - y\n y = Cx + Du\n x# = Ax + Bu\nOpenmirrors.comSection 6–3 / Plotting Root Loci with MATLAB 295\nru\nB\ny\nA\nC\nD\nxx•\n/H20848+ –\n++ ++\nFigure 6–19\nClosed-loop control\nsystem.\nIn this example problem we shall obtain the root-locus diagram of the system defined in state\nspace. As an example let us consider the case where matrices A, B, C, and D are\n(6–15)\nThe root-locus plot for this system can be obtained with MATLAB by use of the following\ncommand:\nrlocus(A,B,C,D)\nThis command will produce the same root-locus plot as can be obtained by use of the rlocus\n(num,den) command, where num and den are obtained from\n[num,den] = ss2tf(A,B,C,D)\nas follows:\nnum = [0  0  1  0]\nden = [1  14  56  160]\nMATLAB Program 6–4 is a program that will generate the root-locus plot as shown in Figure 6–20.\n C = [1 0 0],    D = [0]\n A = C\n0\n0\n-160\n1\n0\n-56\n0\n1\n-14\nS,   B = C\n0\n1\n-14\nS\nMATLAB Program 6–4\n% --------- Root-locus plot ---------\nA = [0  1  0;0  0  1;-160  -56  -14];\nB = [0;1;-14];\nC = [1  0  0];\nD = [0];\nK = 0:0.1:400;\nrlocus(A,B,C,D,K);\nv = [-20  20  -20  20]; axis(v)\ngrid\ntitle('Root-Locus Plot of System Defined in State Space')296\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\n0\njv jv\nv\nn\nv\nd\nf\ns 0 s\n0.2\n0.2\n0.5\n0.5\n0.7\n0.7\n0.8\n0.8\nz = 0.9\nz = 0.9\nz = 0\nz /H11021 0\nz /H11021 0\nz /H11091 1\n(a) (b)\nFigure 6–21\n(a) Complex poles;\n(b) lines of constant\ndamping ratio z.\nReal Axis\n–20 –15 20 01 5–10\n–5\n5\n10\nImag Axis\n20\n–5\n–20\n–10\n15\n0\n–15\n10\n5\nRoot-Locus Plot of System Defined in State Space\nFigure 6–20\nRoot-locus plot of\nsystem defined in\nstate space, where A,\nB, C, and D are as\ngiven by Equation\n(6–15).\nConstant Z Loci and Constant V\nn\nLoci. Recall that in the complex plane the\ndamping ratio z of a pair of complex-conjugate poles can be expressed in terms of the\nangle f, which is measured from the negative real axis, as shown in Figure 6–21(a) with\nIn other words, lines of constant damping ratio z are radial lines passing through the\norigin as shown in Figure 6–21(b). For example, a damping ratio of 0.5 requires that\nthe complex-conjugate poles lie on the lines drawn through the origin making angles\nof ; 60° with the negative real axis. (If the real part of a pair of complex-conjugate\npoles is positive, which means that the system is unstable, the corresponding z is\nnegative.) The damping ratio determines the angular location of the poles, while the\nz = cos f\nOpenmirrors.comSection 6–3 / Plotting Root Loci with MATLAB 297\ndistance of the pole from the origin is determined by the undamped natural frequen-\ncy vn . The constant vn loci are circles.\nTo draw constant z lines and constant vn circles on the root-locus diagram with\nMATLAB, use the command sgrid.\nPlotting Polar Grids in the Root-Locus Diagram. The command\nsgrid\noverlays lines of constant damping ratio (z=0 ~ 1 with 0.1 increment) and circles of\nconstantvn on the root-locus plot. See MATLAB Program 6–5 and the resulting diagram\nshown in Figure 6–22.\nMATLAB Program 6–5\nsgrid\nv = [-3  3  -3  3]; axis(v); axis('square')\ntitle('Constant \\zeta Lines and Constant \\omega_n Circles')\nxlabel('Real Axis')\nylabel('Imag Axis')\nIf only particular constant z lines (such as the z=0.5 line and z=0.707 line) and\nparticular constant vn circles (such as the vn=0.5 circle, vn=1 circle, and vn=2 cir-\ncle) are desired, use the following command:\nsgrid([0.5,  0.707],  [0.5,  1,  2])\nIf we wish to overlay lines of constant z and circles of constant vn as given above to a\nroot-locus plot of a negative feedback system with\nnum = [0  0  0  1]\nden = [1  4  5  0]\n3210−3 −2 −1\n0\n1\n3\n2\n−1\n−3\n−2\nReal Axis\nConstant z Lines and Constant vn Circles\nImag Axis\n2\n1\n2\n1\n0.160.340.50.64\n0.160.340.50.64\n0.76\n0.86\n0.94\n0.985\n0.76\n0.86\n0.94\n0.985\nFigure 6–22\nConstant z lines and\nconstant vn circles.298\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\n0.5\n0.707\n0.5\n0.707\nω\nn\n = 1\nω\nn\n = 0.5\nω\nn\n = 2\n−1 −0.5 0 0.5 1−1.5−2−2.5−3\n0\n0.5\n1\n1.5\n2\n−0.5\n−1\n−1.5\n−2\nReal Axis\nRoot-Locus Plot with ζ = 0.5 and 0.707 Lines\nand ω\nn\n= 0.5, 1, and 2 Circles\nImag Axis\n0.512\nFigure 6–23\nConstant z lines and\nconstant v\nn\ncircles\nsuperimposed on a\nroot-locus plot.\nMATLAB Program 6–6\nnum = [1];\nden = [1  4  5  0];\nK = 0:0.01:1000;\nr = rlocus(num,den,K);\nplot(r,'-'); v = [-3  1  -2  2]; axis(v); axis('square')\nsgrid([0.5,0.707], [0.5,1,2])\ngrid\ntitle('Root-Locus Plot with \\zeta = 0.5 and 0.707 Lines and \\omega_n = 0.5,1, and 2 Circles')\nxlabel('Real Axis'); ylabel('Imag Axis')\ngtext('\\omega_n = 2')\ngtext('\\omega_n = 1')\ngtext('\\omega_n = 0.5')\n% Place 'x' mark at each of 3 open-loop poles.\ngtext('x')\ngtext('x')\ngtext('x')\nthen enter MATLAB Program 6–6 into the computer. The resulting root-locus plot is\nshown in Figure 6–23.\nIf we want to omit either the entire constant z lines or entire constant v\nn\ncircles, we\nmay use empty brackets [ ] in the arguments of the sgrid command. For example, if we want\nto overlay only the constant damping ratio line corresponding to z=0.5 and no constant\nv\nn\ncircles on the root-locus plot, then we may use the command\nsgrid(0.5,  [])\nOpenmirrors.comSection 6–3 / Plotting Root Loci with MATLAB 299\nConditionally Stable Systems. Consider the negative feedback system shown\nin Figure 6–24.We can plot the root loci for this system by applying the general rules and\nprocedure for constructing root loci, or use MATLAB to get root-locus plots. MAT-\nLAB Program 6–7 will plot the root-locus diagram for the system. The plot is shown in\nFigure 6–25.\nR(s) C(s)K(s2 + 2s +4)\ns(s + 4) (s + 6)(s2 + 1.4s + 1)+ –\nFigure 6–24\nControl system.\nMATLAB Program 6–7\nnum = [1  2  4];\nden = conv(conv([1  4  0],[1  6]), [1  1.4  1]);\nrlocus(num, den)\nv = [-7  3  -5  5]; axis(v); axis('square')\ngrid\ntitle('Root-Locus Plot of G(s) = K(s^2 + 2s + 4)/[s(s + 4)(s + 6)(s^2 + 1.4s + 1)]')\ntext(1.0, 0.55,'K = 12')\ntext(1.0,3.0,'K = 73')\ntext(1.0,4.15,'K = 154')\nReal Axis\n−5 −4 −3 −2 −1−6−73 02 1\nImag Axis\n−5\n5\n4\n3\n2\n−3\n−2\n−1\n−4\n0\n1\nRoot-Locus Plot of G(s) = K(s2 + 2s + 4)/[s(s + 4)(s + 6)(s2 + 1.4s + 1)]\nK = 12\nK = 73\nK = 154\nFigure 6–25\nRoot-locus plot of\nconditionally stable\nsystem.\nIt can be seen from the root-locus plot of Figure 6–25 that this system is stable only\nfor limited ranges of the value of K—that is, 0<K<12 and 73<K<154. The sys-\ntem becomes unstable for 12<K<73 and 154<K. (If K assumes a value corre-\nsponding to unstable operation, the system may break down or may become nonlinear\ndue to a saturation nonlinearity that may exist.) Such a system is called conditionally\nstable.300\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nIn practice, conditionally stable systems are not desirable. Conditional stability is\ndangerous but does occur in certain systems—in particular, a system that has an unsta-\nble feedforward path. Such an unstable feedforward path may occur if the system has a\nminor loop. It is advisable to avoid such conditional stability since, if the gain drops be-\nyond the critical value for any reason, the system becomes unstable. Note that the ad-\ndition of a proper compensating network will eliminate conditional stability. [An addition\nof a zero will cause the root loci to bend to the left. (See Section 6–5.) Hence condi-\ntional stability may be eliminated by adding proper compensation.]\nNonminimum-Phase Systems. If all the poles and zeros of a system lie in the left-\nhalf s plane, then the system is called minimum phase. If a system has at least one pole\nor zero in the right-half s plane, then the system is called nonminimum phase. The term\nnonminimum phase comes from the phase-shift characteristics of such a system when\nsubjected to sinusoidal inputs.\nConsider the system shown in Figure 6–26(a). For this system\nThis is a nonminimum-phase system, since there is one zero in the right-half s plane.\nFor this system, the angle condition becomes\nor\n(6–16)\nThe root loci can be obtained from Equation (6–16). Figure 6–26(b) shows a root-locus\nplot for this system. From the diagram, we see that the system is stable if the gain K is\nless than 1/ T\na\n.\nn\nKAT\na\n \ns - 1B\ns(Ts + 1)\n= 0°\n=; 180°(2k + 1)\n  \n(k = 0, 1, 2, p )\n=\nn\nKAT\na\n \ns - 1B\ns(Ts + 1)\n+ 180°\n/\nG(s)\n=\nn\n-\nKAT\na\n \ns - 1B\ns(Ts + 1)\nG(s) =\nKA1 - T\na\n \nsB\ns(Ts + 1)\n  \nAT\na\n7 0B,\n  \nH(s) = 1\n(a) (b)\nR(s) C(s)\njv\nK = 0 K = 0 K = `\nK `\n1\nT\na\nK =\n1\nT\na\nK =\n1\nT\na\n1\nT\n– s\nK(1 – T\na\ns)\ns(Ts + 1)\n+ –\nFigure 6–26\n(a) Nonminimum-\nphase system;\n(b) root-locus plot.\nOpenmirrors.comSection 6–3 / Plotting Root Loci with MATLAB 301\nTo obtain a root-locus plot with MATLAB, enter the numerator and denominator\nas usual. For example, if T=1 sec and enter the following num and den\nin the program:\nnum = [-0.5  1]\nden = [1  1  0]\nMATLAB Program 6–8 gives the plot of the root loci shown in Figure 6–27.\nTa = 0.5 sec,\nMATLAB Program 6–8\nnum = [-0.5  1];\nden = [1  1  0];\nk1 = 0:0.01:30;\nk2 = 30:1:100;\nK3 = 100:5:500;\nK = [k1  k2  k3];\nrlocus(num,den,K)\nv = [-2  6  -4  4]; axis(v); axis('square')\ngrid\ntitle('Root-Locus Plot of G(s) = K(1 - 0.5s)/[s(s + 1)]')\n% Place 'x' mark at each of 2 open-loop poles.\n% Place 'o' mark at open-loop zero.\ngtext('x')\ngtext('x')\ngtext('o')\nRoot-Locus Plot of G(s) = K(1 − 0.5s)/[s(s + 1)]\nReal Axis\nImag Axis\n1\n−3\n−4−2 −1 0123456\n2\n−1\n−2\n0\n3\n4\nFigure 6–27\nRoot-locus plot of \nG(s) =\nK(1 - 0.5s)\ns(s + 1) .\nOrthogonality of Root Loci and Constant-Gain Loci. Consider the negative\nfeedback system whose open-loop transfer function is G(s)H(s).In the G(s)H(s) plane,\nthe loci of constant are circles centered at the origin, and the loci corre-\nsponding to (k=0, 1, 2, p) lie on the negative real axis/G(s)H(s) =; 180°(2k + 1)\n∑G(s)H(s)∑ =302\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nof the G(s)H(s) plane, as shown in Figure 6–28. [Note that the complex plane employed\nhere is not the s plane, but the G(s)H(s) plane.]\nThe root loci and constant-gain loci in the s plane are conformal mappings of the loci\nof and of constant in the G(s)H(s) plane.\nSince the constant-phase and constant-gain loci in the G(s)H(s) plane are orthog-\nonal, the root loci and constant-gain loci in the s plane are orthogonal. Figure 6–29(a)\nshows the root loci and constant-gain loci for the following system:\nG(s) = K(s + 2)\ns\n2\n+ 2s + 3 ,\n  \nH(s) = 1\n∑G(s)H(s)∑ =\n/\nG(s)H(s)\n=; 180°(2k + 1)\nRe\nIm\n0\nG(s) H(s) Plane\nRe\nIm\n0\nG(s) H(s) Plane\n|G(s) H(s)| = constant\nG(s) H(s)\n= /H11006180° (2k + 1)\nFigure 6–28\nPlots of constant-\ngain and constant-\nphase loci in the\nG(s)H(s) plane.\n(a) (b)\ns\njv\n0\nK = 6\nK = 6\nj4\nj6\n–j4\nK = 1\nK = 2\nK = 1\n–6 –42 4 6\nK = 10\nK = 0.3j2\n–j2\n–j6\nK = 0.3 K = 0.3\n–2 s\njv\n0\nj2\nj3\n–j2\n–3 –21 2\nj1\n–j1\n–j3\n–1\nB\nC\nA\nFigure 6–29\nPlots of root loci and constant-gain loci. (a) System with G(s)=K(s+2)/As\n2\n+2s+3B,\nH(s)=1; (b) system with G(s)=K/Cs(s+1)(s+2)D, H(s)=1.\nOpenmirrors.comSection 6–4 / Root-Locus Plots of Positive Feedback Systems 303\nNotice that since the pole–zero configuration is symmetrical about the real axis, the\nconstant-gain loci are also symmetrical about the real axis.\nFigure 6–29(b) shows the root loci and constant-gain loci for the system:\nNotice that since the configuration of the poles in the s plane is symmetrical about the\nreal axis and the line parallel to the imaginary axis passing through point (s=–1,\nv=0), the constant-gain loci are symmetrical about the v=0 line (real axis) and the\ns=–1 line.\nFrom Figures 6–29(a) and (b), notice that every point in the s plane has the corre-\nsponding K value. If we use a command rlocfind (presented next), MATLAB will give\nthe K value of the specified point as well as the nearest closed-loop poles corresponding\nto this K value.\nFinding the Gain Value K at an Arbitrary Point on the Root Loci. In MAT-\nLAB analysis of closed-loop systems, it is frequently desired to find the gain value K at\nan arbitrary point on the root locus. This can be accomplished by using the following\nrlocfind command:\n[K, r] = rlocfind(num, den)\nThe rlocfind command, which must follow an rlocus command, overlays movable x-y co-\nordinates on the screen. Using the mouse, we position the origin of the x-y coordinates\nover the desired point on the root locus and press the mouse button. Then MATLAB\ndisplays on the screen the coordinates of that point, the gain value at that point, and the\nclosed-loop poles corresponding to this gain value.\nIf the selected point is not on the root locus, such as point A in Figure 6–29(a), the\nrlocfind command gives the coordinates of this selected point, the gain value of this\npoint, such as K = 2, and the locations of the closed-loop poles, such as points B and C\ncorresponding to this K value. [Note that every point on the s plane has a gain value. See,\nfor example, Figures 6–29 (a) and (b).]\n6–4 ROOT-LOCUS PLOTS OF POSITIVE FEEDBACK SYSTEMS\nRoot Loci for Positive-Feedback Systems.* In a complex control system, there\nmay be a positive-feedback inner loop as shown in Figure 6–30. Such a loop is usually\nstabilized by the outer loop. In what follows, we shall be concerned only with the positive-\nfeedback inner loop. The closed-loop transfer function of the inner loop is\nThe characteristic equation is\n(6–17)1 - G(s)H(s) = 0\nC(s)\nR(s) = G(s)\n1 - G(s)H(s)\nG(s) = K\ns(s + 1)(s + 2) ,  H(s) = 1\n* Reference W-4304\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nC(s)\nG\n1\n(s)\nH\n1\n(s)\nR(s)\nH(s)\nG(s)\n+ –\n+ +\nFigure 6–30\nControl system.\nThis equation can be solved in a manner similar to the development of the root-locus\nmethod for negative-feedback systems presented in Section 6–2. The angle condition,\nhowever, must be altered.\nEquation (6–17) can be rewritten as\nwhich is equivalent to the following two equations:\nFor the positive-feedback case, the total sum of all angles from the open-loop poles and\nzeros must be equal to Thus the root locus follows a 0° locus in contrast to\nthe 180° locus considered previously. The magnitude condition remains unaltered.\nTo illustrate the root-locus plot for the positive-feedback system, we shall use the fol-\nlowing transfer functions G(s) and H(s) as an example.\nThe gain K is assumed to be positive.\nThe general rules for constructing root loci for negative-feedback systems given in\nSection 6–2 must be modified in the following way:\nRule 2 is Modified as Follows:If the total number of real poles and real zeros to the right\nof a test point on the real axis is even, then this test point lies on the root locus.\nRule 3 is Modified as Follows:\nwhere number of finite poles of G(s)H(s)\nnumber of finite zeros of G(s)H(s)\nRule 5 is Modified as Follows: When calculating the angle of departure (or angle of ar-\nrival) from a complex open-loop pole (or at a complex zero), subtract from 0° the sum\nof all angles of the vectors from all the other poles and zeros to the complex pole (or com-\nplex zero) in question, with appropriate signs included.\n m =\n n =\nAngles of asymptotes = ;k360°\nn - m\n  \n(k = 0, 1, 2, p )\nG(s) = K(s + 2)\n(s + 3)As\n2\n+ 2s + 2B\n \n,\n  \nH(s) = 1\n0° ; k360°.\n ∑G(s)H(s)∑ = 1\n \n/\nG(s)H(s)\n= 0° ; k360°\n  \n(k = 0, 1, 2, p )\nG(s)H(s) = 1\nOpenmirrors.comSection 6–4 / Root-Locus Plots of Positive Feedback Systems 305\nOther rules for constructing the root-locus plot remain the same.We shall now apply\nthe modified rules to construct the root-locus plot.\n1. Plot the open-loop poles (s=–1+j, s=–1-j, s=–3) and zero (s=–2) in\nthe complex plane.As K is increased from 0 to q, the closed-loop poles start at the\nopen-loop poles and terminate at the open-loop zeros (finite or infinite), just as in\nthe case of negative-feedback systems.\n2. Determine the root loci on the real axis. Root loci exist on the real axis between\n–2 and ±q and between –3 and –q.\n3. Determine the asymptotes of the root loci. For the present system,\nThis simply means that asymptotes are on the real axis.\n4. Determine the breakaway and break-in points. Since the characteristic equation is\nwe obtain\nBy differentiating K with respect to s, we obtain\nNote that\nPoint s=–0.8 is on the root locus. Since this point lies between two zeros (a finite\nzero and an infinite zero), it is an actual break-in point. Points \ndo not satisfy the angle condition and, therefore, they are neither breakaway nor\nbreak-in points.\n5. Find the angle of departure of the root locus from a complex pole. For the com-\nplex pole at s=–1+j, the angle of departure u is\nor\n(The angle of departure from the complex pole at s=–1-j is 72°.)\n6. Choose a test point in the broad neighborhood of the jv axis and the origin and\napply the angle condition. Locate a sufficient number of points that satisfy the\nangle condition.\nFigure 6–31 shows the root loci for the given positive-feedback system.The root loci\nare shown with dashed lines and a curve.\nNote that if\nK 7\n(s + 3)As2 + 2s + 2B\ns + 2\n2\ns = 0\n= 3\nu =- 72°\nu = 0° - 27° - 90° + 45°\ns =- 2.35 ; j0.77\n = 2(s + 0.8)(s + 2.35 + j0.77)(s + 2.35 - j0.77)\n 2s3 + 11s2 + 20s + 10 = 2(s + 0.8)As2 + 4.7s + 6.24B\ndK\nds = 2s3 + 11s2 + 20s + 10\n(s + 2)2\nK =\n(s + 3)As2 + 2s + 2B\ns + 2\n(s + 3)As2 + 2s + 2B - K(s + 2) = 0\nAngles of asymptote = ;k360°\n3 - 1 =; 180°306\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\n–5 –4 –3 –2 –11 2 s\njv\n0\nj1\nj2\n–j1\n–j2\nFigure 6–31\nRoot-locus plot for the\npositive-feedback\nsystem with\nG(s)=K(s+2)/\nC(s+3)As\n2\n+2s+2BD,\nH(s)=1.\none real root enters the right-half s plane. Hence, for values of K greater than 3, the sys-\ntem becomes unstable. (For K>3, the system must be stabilized with an outer loop.)\nNote that the closed-loop transfer function for the positive-feedback system is\ngiven by\nTo compare this root-locus plot with that of the corresponding negative-feedback sys-\ntem, we show in Figure 6–32 the root loci for the negative-feedback system whose closed-\nloop transfer function is\nTable 6–2 shows various root-locus plots of negative-feedback and positive-feedback\nsystems. The closed-loop transfer functions are given by\nfor negative-feedback systems\nfor positive-feedback systemsC\nR = G\n1 - GH ,\nC\nR = G\n1 + GH ,\nC(s)\nR(s) = K(s + 2)\n(s + 3)As\n2\n+ 2s + 2B + K(s + 2)\n = K(s + 2)\n(s + 3)As\n2\n+ 2s + 2B - K(s + 2)\n C(s)\nR(s) = G(s)\n1 - G(s)H(s)\n–5 –4 –3 –2 –11 2 s\njv\n0\nj1\nj2\nj3\n–j1\n–j3\n–j2\nFigure 6–32\nRoot-locus plot for the\nnegative-feedback\nsystem with\nG(s)=K(s+2)/\nC(s+3)As\n2\n+2s+2BD,\nH(s)=1.\nOpenmirrors.comSection 6–4 / Root-Locus Plots of Positive Feedback Systems\n307\nwhere GH is the open-loop transfer function. In Table 6–2, the root loci for negative-\nfeedback systems are drawn with heavy lines and curves, and those for positive-feedback\nsystems are drawn with dashed lines and curves.\njv\ns\njv\ns\njv\ns\njv\ns\njv\ns\njv\ns\njv\ns\njv\ns\njv\ns\njv\ns\nTable 6–2\nRoot-Locus Plots of Negative-Feedback and Positive-\nFeedback Systems\nHeavy lines and curves correspond to negative-feedback systems; dashed lines and\ncurves correspond to positive-feedback systems.\nOpenmirrors.com308\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\n6–5 ROOT-LOCUS APPROACH TO CONTROL-SYSTEMS DESIGN\nPreliminary Design Consideration. In building a control system, we know that\nproper modification of the plant dynamics may be a simple way to meet the performance\nspecifications.This, however, may not be possible in many practical situations because the\nplant may be fixed and not modifiable.Then we must adjust parameters other than those\nin the fixed plant. In this book, we assume that the plant is given and unalterable.\nIn practice, the root-locus plot of a system may indicate that the desired performance\ncannot be achieved just by the adjustment of gain (or some other adjustable parameter).\nIn fact, in some cases, the system may not be stable for all values of gain (or other ad-\njustable parameter). Then it is necessary to reshape the root loci to meet the perform-\nance specifications.\nThe design problems, therefore, become those of improving system performance by\ninsertion of a compensator. Compensation of a control system is reduced to the design\nof a filter whose characteristics tend to compensate for the undesirable and unalterable\ncharacteristics of the plant.\nDesign by Root-Locus Method.The design by the root-locus method is based on re-\nshaping the root locus of the system by adding poles and zeros to the system’s open-loop\ntransfer function and forcing the root loci to pass through desired closed-loop poles in the\ns plane.The characteristic of the root-locus design is its being based on the assumption that\nthe closed-loop system has a pair of dominant closed-loop poles.This means that the effects\nof zeros and additional poles do not affect the response characteristics very much.\nIn designing a control system, if other than a gain adjustment (or other parameter\nadjustment) is required, we must modify the original root loci by inserting a suitable com-\npensator. Once the effects on the root locus of the addition of poles and/or zeros are fully\nunderstood, we can readily determine the locations of the pole(s) and zero(s) of the com-\npensator that will reshape the root locus as desired. In essence, in the design by the root-\nlocus method, the root loci of the system are reshaped through the use of a compensator\nso that a pair of dominant closed-loop poles can be placed at the desired location.\nSeries Compensation and Parallel (or Feedback) Compensation. Figures\n6–33(a) and (b) show compensation schemes commonly used for feedback control sys-\ntems. Figure 6–33(a) shows the configuration where the compensator G\nc\n(s) is placed in\nseries with the plant. This scheme is called series compensation.\nAn alternative to series compensation is to feed back the signal(s) from some ele-\nment(s) and place a compensator in the resulting inner feedback path, as shown in Figure\n6–33(b). Such compensation is called parallel compensation or feedback compensation.\nIn compensating control systems, we see that the problem usually boils down to a\nsuitable design of a series or parallel compensator. The choice between series compen-\nsation and parallel compensation depends on the nature of the signals in the system,\nthe power levels at various points, available components, the designer’s experience, eco-\nnomic considerations, and so on.\nIn general, series compensation may be simpler than parallel compensation; however,\nseries compensation frequently requires additional amplifiers to increase the gain and/or\nto provide isolation. (To avoid power dissipation, the series compensator is inserted at the\nlowest energy point in the feedforward path.) Note that, in general, the number of com-\nponents required in parallel compensation will be less than the number of components\nOpenmirrors.comSection 6–5 / Root-Locus Approach to Control Systems Design 309\nG1(s) G2(s)\nH(s)\nGc(s)\n(b)\n+ –+ –\nGc(s) G(s)\nH(s)\n(a)\n+ –\nFigure 6–33\n(a) Series\ncompensation;\n(b) parallel or feed-\nback compensation.\nin series compensation, provided a suitable signal is available, because the energy trans-\nfer is from a higher power level to a lower level. (This means that additional amplifiers\nmay not be necessary.)\nIn Sections 6–6 through 6–9 we first discuss series compensation techniques and then\npresent a parallel compensation technique using a design of a velocity-feedback control\nsystem.\nCommonly Used Compensators. If a compensator is needed to meet the per-\nformance specifications, the designer must realize a physical device that has the pre-\nscribed transfer function of the compensator.\nNumerous physical devices have been used for such purposes. In fact, many noble and\nuseful ideas for physically constructing compensators may be found in the literature.\nIf a sinusoidal input is applied to the input of a network, and the steady-state output\n(which is also sinusoidal) has a phase lead, then the network is called a lead network.\n(The amount of phase lead angle is a function of the input frequency.) If the steady-state\noutput has a phase lag, then the network is called a lag network. In a lag–lead network,\nboth phase lag and phase lead occur in the output but in different frequency regions;\nphase lag occurs in the low-frequency region and phase lead occurs in the high-frequency\nregion.A compensator having a characteristic of a lead network, lag network, or lag–lead\nnetwork is called a lead compensator, lag compensator, or lag–lead compensator.\nAmong the many kinds of compensators, widely employed compensators are the\nlead compensators, lag compensators, lag–lead compensators, and velocity-feedback\n(tachometer) compensators. In this chapter we shall limit our discussions mostly to these\ntypes. Lead, lag, and lag–lead compensators may be electronic devices (such as circuits\nusing operational amplifiers) or RC networks (electrical, mechanical, pneumatic,\nhydraulic, or combinations thereof) and amplifiers.\nFrequently used series compensators in control systems are lead, lag, and lag–lead\ncompensators. PID controllers which are frequently used in industrial control systems\nare discussed in Chapter 8.310\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nIt is noted that in designing control systems by the root-locus or frequency-response\nmethods the final result is not unique, because the best or optimal solution may not be pre-\ncisely defined if the time-domain specifications or frequency-domain specifications are given.\nEffects of the Addition of Poles. The addition of a pole to the open-loop transfer\nfunction has the effect of pulling the root locus to the right, tending to lower the system’s\nrelative stability and to slow down the settling of the response. (Remember that the ad-\ndition of integral control adds a pole at the origin, thus making the system less stable.)\nFigure 6–34 shows examples of root loci illustrating the effects of the addition of a pole\nto a single-pole system and the addition of two poles to a single-pole system.\nEffects of the Addition of Zeros. The addition of a zero to the open-loop trans-\nfer function has the effect of pulling the root locus to the left, tending to make the system\nmore stable and to speed up the settling of the response. (Physically, the addition of a\nzero in the feedforward transfer function means the addition of derivative control to\nthe system.The effect of such control is to introduce a degree of anticipation into the sys-\ntem and speed up the transient response.) Figure 6–35(a) shows the root loci for a system\n(a)\njv\ns\n(b)\njv\ns\n(c)\njv\ns\nFigure 6–34\n(a) Root-locus plot\nof a single-pole\nsystem;\n(b) root-locus plot of\na two-pole system;\n(c) root-locus plot of\na three-pole system.\n(a)\njv\ns\n(b)\njv\ns\n(c)\njv\ns\n(d)\njv\ns\nFigure 6–35\n(a) Root-locus plot\nof a three-pole\nsystem; (b), (c), and\n(d) root-locus plots\nshowing effects of\naddition of a zero to\nthe three-pole\nsystem.\nOpenmirrors.comSection 6–6 / Lead Compensation 311\nthat is stable for small gain but unstable for large gain. Figures 6–35(b), (c), and (d) show\nroot-locus plots for the system when a zero is added to the open-loop transfer function.\nNotice that when a zero is added to the system of Figure 6–35(a), it becomes stable for\nall values of gain.\n6–6 LEAD COMPENSATION\nIn Section 6–5 we presented an introduction to compensation of control systems and dis-\ncussed preliminary materials for the root-locus approach to control-systems design and\ncompensation. In this section we shall present control-systems design by use of the lead\ncompensation technique. In carrying out a control-system design, we place a compen-\nsator in series with the unalterable transfer function G(s) to obtain desirable behavior.\nThe main problem then involves the judicious choice of the pole(s) and zero(s) of the\ncompensatorGc(s) to have the dominant closed-loop poles at the desired location in the\ns plane so that the performance specifications will be met.\nLead Compensators and Lag Compensators. There are many ways to realize\nlead compensators and lag compensators, such as electronic networks using operational\namplifiers, electrical RC networks, and mechanical spring-dashpot systems.\nFigure 6–36 shows an electronic circuit using operational amplifiers. The transfer\nfunction for this circuit was obtained in Chapter 3 as follows [see Equation (3–36)]:\n(6–18)\nwhere\nT = R1 C1 ,  aT = R2 C2 ,  Kc = R4 C1\nR3 C2\n = Kc a Ts + 1\naTs + 1 = Kc\ns + 1\nT\ns + 1\naT\n Eo(s)\nEi(s) = R2 R4\nR1 R3\nR1 C1 s + 1\nR2 C2 s + 1 = R4 C1\nR3 C2\ns + 1\nR1 C1\ns + 1\nR2 C2\n–\n+ –\n+\nC1\nC2\nR1\nR2 R3\nR4\nEi(s)\nEo(s)E(s)\nFigure 6–36\nElectronic circuit\nthat is a lead network\nif and a\nlag network if\nR1 C1 6 R2 C2 .\nR1 C1 7 R2 C2312\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nNotice that\nThis network has a dc gain of \nFrom Equation (6–18), we see that this network is a lead network if \nor It is a lag network if The pole-zero configurations of this net-\nwork when and are shown in Figure 6–37(a) and (b),\nrespectively.\nLead Compensation Techniques Based on the Root-Locus Approach. The\nroot-locus approach to design is very powerful when the specifications are given in\nterms of time-domain quantities, such as the damping ratio and undamped natural\nfrequency of the desired dominant closed-loop poles, maximum overshoot, rise time,\nand settling time.\nConsider a design problem in which the original system either is unstable for all val-\nues of gain or is stable but has undesirable transient-response characteristics. In such a\ncase, the reshaping of the root locus is necessary in the broad neighborhood of the jv\naxis and the origin in order that the dominant closed-loop poles be at desired locations\nin the complex plane.This problem may be solved by inserting an appropriate lead com-\npensator in cascade with the feedforward transfer function.\nThe procedures for designing a lead compensator for the system shown in Figure\n6–38 by the root-locus method may be stated as follows:\n1. From the performance specifications, determine the desired location for the dom-\ninant closed-loop poles.\nR\n1\n \nC\n1\n6 R\n2\n \nC\n2\n \nR\n1\n \nC\n1\n7 R\n2\n \nC\n2\n \nR\n1\n \nC\n1\n6 R\n2\n \nC\n2\n \n.a 6 1.\nR\n1\n \nC\n1\n7 R\n2\n \nC\n2\n \n,\nK\nc\n \na = R\n2\n \nR\n4\n/H20862AR\n1\n \nR\n3\nB.\nK\nc\n \na = R\n4\n \nC\n1\nR\n3\n \nC\n2\n R\n2\n \nC\n2\nR\n1\n \nC\n1\n= R\n2\n \nR\n4\nR\n1\n \nR\n3\n,\n  \na = R\n2\n \nC\n2\nR\n1\n \nC\n1\njv\ns\n(a)\n1\nR\n2\nC\n2\n– 1\nR\n1\nC\n1\n–\njv\ns\n(b)\n1\nR\n2\nC\n2\n–1\nR\n1\nC\n1\n–00\nFigure 6–37\nPole-zero\nconfigurations:\n(a) lead network;\n(b) lag network.\nG\nc\n(s) G(s)\n+ –\nFigure 6–38\nControl system.\nOpenmirrors.comSection 6–6 / Lead Compensation 313\n2. By drawing the root-locus plot of the uncompensated system (original system),\nascertain whether or not the gain adjustment alone can yield the desired closed-\nloop poles. If not, calculate the angle deficiency f.This angle must be contributed\nby the lead compensator if the new root locus is to pass through the desired loca-\ntions for the dominant closed-loop poles.\n3. Assume the lead compensator Gc(s) to be\nwhere a and T are determined from the angle deficiency. Kc is determined from\nthe requirement of the open-loop gain.\n4. If static error constants are not specified, determine the location of the pole and\nzero of the lead compensator so that the lead compensator will contribute the nec-\nessary angle f. If no other requirements are imposed on the system, try to make\nthe value of a as large as possible. A larger value of a generally results in a larger\nvalue of Kv , which is desirable. Note that\n5. Determine the value of Kc of the lead compensator from the magnitude condition.\nOnce a compensator has been designed, check to see whether all performance spec-\nifications have been met. If the compensated system does not meet the performance\nspecifications, then repeat the design procedure by adjusting the compensator pole and\nzero until all such specifications are met. If a large static error constant is required, cas-\ncade a lag network or alter the lead compensator to a lag–lead compensator.\nNote that if the selected dominant closed-loop poles are not really dominant, or if\nthe selected dominant closed-loop poles do not yield the desired result, it will be nec-\nessary to modify the location of the pair of such selected dominant closed-loop poles.\n(The closed-loop poles other than dominant ones modify the response obtained from the\ndominant closed-loop poles alone.The amount of modification depends on the location\nof these remaining closed-loop poles.) Also, the closed-loop zeros affect the response if\nthey are located near the origin.\nEXAMPLE 6–6 Consider the position control system shown in Figure 6–39(a). The feedforward transfer\nfunction is\nThe root-locus plot for this system is shown in Figure 6–39(b). The closed-loop transfer function\nfor the system is\n= 10\n(s + 0.5 + j3.1225)(s + 0.5 - j3.1225)\nC(s)\nR(s) = 10\ns2 + s + 10\nG(s) = 10\ns(s + 1)\nKv = lim\ns S 0\nsGc(s)G(s) = Kca lim\ns S 0\nsGc(s)\nGc(s) = Kc a Ts + 1\naTs + 1 = Kc\ns + 1\nT\ns + 1\naT\n,  (0 6 a 6 1)314\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nThe closed-loop poles are located at\nThe damping ratio of the closed-loop poles is .The undamped natural fre-\nquency of the closed-loop poles is 3.1623 rad /H20862sec. Because the damping ratio is small,\nthis system will have a large overshoot in the step response and is not desirable.\nIt is desired to design a lead compensator G\nc\n(s) as shown in Figure 6–40(a) so that the dom-\ninant closed-loop poles have the damping ratio and the undamped natural frequency\nThe desired location of the dominant closed-loop poles can be determined from\nas follows:\ns =- 1.5 ; j 2.5981\n= (s + 1.5 + j 2.5981)(s + 1.5 - j 2.5981)\ns\n2\n+ 2zv\nn\ns + v\nn\n2\n= s\n2\n+ 3s + 9\nv\nn\n= 3 rad/H20862sec.\nz = 0.5\nv\nn\n= 210\n=\nz = (1/H208622)/H20862210\n= 0.1581\ns =- 0.5 ; j3.1225\nR(s) C(s)\n(a) (b)\n10\ns(s + 1)\nG(s)\nClosed-loop\npole\njv\n1−3 −2 −1\nj3\nj2\nj1\n−j3\n−j2\n−j1\n+ –\ns\nFigure 6–39\n(a) Control system;\n(b) root-locus plot.\n(a)\n10\ns(s + 1)\nG(s)\nR(s) C(s)\nG\nc\n(s)\n(b)\nDesired\nclosed-loop\npole\njv\n1–3 –1.5\nj2.5981\nj2\nj1\n–j3\n–j2\n–j1\ns\n60°\nv\nn\n = 3\n+ –\nFigure 6–40\n(a) Compensated\nsystem; (b) desired\nclosed-loop pole\nlocation.\nOpenmirrors.comSection 6–6 / Lead Compensation 315\n[See Figure 6–40 (b).] In some cases, after the root loci of the original system have been obtained,\nthe dominant closed-loop poles may be moved to the desired location by simple gain adjustment.\nThis is, however, not the case for the present system. Therefore, we shall insert a lead compensator\nin the feedforward path.\nA general procedure for determining the lead compensator is as follows: First, find the sum\nof the angles at the desired location of one of the dominant closed-loop poles with the open-loop\npoles and zeros of the original system, and determine the necessary angle f to be added so that\nthe total sum of the angles is equal to The lead compensator must contribute this\nangle f. (If the angle f is quite large, then two or more lead networks may be needed rather than\na single one.)\nAssume that the lead compensator Gc(s) has the transfer function as follows:\nThe angle from the pole at the origin to the desired dominant closed-loop pole at s = –1.5+j 2.5981\nis 120°. The angle from the pole at s=–1 to the desired closed-loop pole is 100.894°. Hence, the\nangle deficiency is\nAngle deficiency=180° – 120° – 100.894°=–40.894°\nDeficit angle 40.894° must be contributed by a lead compensator.\nNote that the solution to such a problem is not unique. There are infinitely many solutions.\nWe shall present two solutions to the problem in what follows.\nMethod 1. There are many ways to determine the locations of the zero and pole of the lead\ncompensator. In what follows we shall introduce a procedure to obtain a largest possible value for\na. (Note that a larger value of a will produce a larger value of Kv. In most cases, the larger the Kv is,\nthe better the system performance.) First, draw a horizontal line passing through point P, the desired\nlocation for one of the dominant closed-loop poles. This is shown as line PA in Figure 6–41. Draw\nalso a line connecting point P and the origin. Bisect the angle between the lines PA and PO,a s\nshown in Figure 6–41. Draw two lines PC and PD that make angles with the bisector PB.T he\nintersections of PC and PD with the negative real axis give the necessary locations for the pole and\nzero of the lead network.The compensator thus designed will make point P a point on the root locus\nof the compensated system. The open-loop gain is determined by use of the magnitude condition.\nIn the present system, the angle of G(s) at the desired closed-loop pole is\nn 10\ns(s + 1)\n2\ns =- 1.5 + j2.5981\n=- 220.894°\n;f/H208622\nGc(s) = Kc a Ts + 1\naTs + 1 = Kc\ns + 1\nT\ns + 1\naT\n,  (0 6 a 6 1)\n;180°(2k + 1).\njv\nsO\nA\nP\nCB D\n1\naT– 1\nT–\nf\n2 f\n2\nFigure 6–41\nDetermination of the\npole and zero of a\nlead network.316\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nThus, if we need to force the root locus to go through the desired closed-loop pole, the lead com-\npensator must contribute f=40.894° at this point. By following the foregoing design procedure,\nwe can determine the zero and pole of the lead compensator.\nReferring to Figure 6–42, if we bisect angle APO and take 40.894°/2 each side, then the loca-\ntions of the zero and pole are found as follows:\nzero at s=–1.9432\npole at s=–4.6458\nThus,G\nc\n(s) can be given as\n(For this compensator the value of a is a = 1.9432/4.6458 = 0.418.)\nThe value of K\nc\ncan be determined by use of the magnitude condition.\nor\nHence, the lead compensator G\nc\n(s) just designed is given by\nThen, the open-loop transfer function of the designed system becomes\nand the closed-loop transfer function becomes\n= 12.287s + 23.876\ns\n3\n+ 5.646s\n2\n+ 16.933s + 23.876\nC(s)\nR(s) =\n12.287(s + 1.9432)\ns(s + 1)(s + 4.6458) + 12.287(s + 1.9432)\nG\nc\n(s)G(s) = 1.2287\na\ns + 1.9432\ns + 4.6458\nb\n10\ns(s + 1)\nG\nc\n(s) = 1.2287 s + 1.9432\ns + 4.6458\nK\nc\n=\n2\n(s + 4.6458)s(s + 1)\n10(s + 1.9432)\n2\ns =- 1.5 + j2.5981\n= 1.2287\n2\nK\nc\ns + 1.9432\ns + 4.6458\n10\ns(s + 1)\n2\ns =- 1.5 + j2.5981\n= 1\nG\nc\n(s) = K\nc\ns + 1\nT\ns + 1\n/H9251T\n= K\nc\ns + 1.9432\ns + 4.6458\njv\n102−1.9432−4.6458\nAP\nj3\nj2\nj1\n−j2\n−j1\ns\n20.447°\n20.447°\n−3\nFigure 6–42\nDetermination of the\npole and zero of the\nlead compensator.\nOpenmirrors.comSection 6–6 / Lead Compensation 317\nFigure 6–43 shows the root-locus plot for the designed system.\nIt is worthwhile to check the static velocity error constant Kv for the system just designed.\nNote that the third closed-loop pole of the designed system is found by dividing the charac-\nteristic equation by the known factors as follows:\nThe foregoing compensation method enables us to place the dominant closed-loop poles at\nthe desired points in the complex plane. The third pole at s = /H110022.65 is fairly close to the added\nzero at /H110021.9432. Therefore, the effect of this pole on the transient response is relatively small.\nSince no restriction has been imposed on the nondominant pole and no specification has been\ngiven concerning the value of the static velocity error coefficient, we conclude that the present de-\nsign is satisfactory.\nMethod 2. If we choose the zero of the lead compensator at s = /H110021 so that it will cancel the\nplant pole at s = /H110021, then the compensator pole must be located at s = /H110023. (See Figure 6–44.)\nHence the lead compensator becomes\nThe value of Kc can be determined by use of the magnitude condition.\n2Kc\ns + 1\ns + 3\n10\ns(s + 1)\n2\ns =- 1.5 + j2.5981\n= 1\nGc(s) = Kc\ns + 1\ns + 3\ns3 + 5.646s2 + 16.933s + 23.875 = (s + 1.5 + j2.5981)(s + 1.5 - j2.5981)(s + 2.65)\n= 5.139\n= lim\ns S 0\ns c1.2287 s + 1.9432\ns + 4.6458\n10\ns(s + 1) d\nKv = lim\ns S 0\nsGc(s)G(s)\njv\n1–3 –1 –2–4–5\nj2\nj1\nj3\n–j3\n–j2\n–j1\ns\nFigure 6–43\nRoot-locus plot \nof the designed\nsystem.318\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nor\nHence\nThe open-loop transfer function of the designed system then becomes\nThe closed-loop transfer function of the compensated system becomes\nNote that in the present case the zero of the lead compensator will cancel a pole of the plant, re-\nsulting in the second-order system, rather than the third-order system as we designed using Method 1.\nThe static velocity error constant for the present case is obtained as follows:\nNotice that the system designed by Method 1 gives a larger value of the static velocity error con-\nstant.This means that the system designed by Method 1 will give smaller steady-state errors in fol-\nlowing ramp inputs than the system designed by Method 2.\nFor different combinations of a zero and pole of the compensator that contributes 40.894°, the\nvalue of K\nv\nwill be different. Although a certain change in the value of K\nv\ncan be made by alter-\ning the pole-zero location of the lead compensator, if a large increase in the value of K\nv\nis desired,\nthen we must alter the lead compensator to a lag–lead compensator.\nComparison of step and ramp responses of the compensated and uncompensated systems.\nIn what follows we shall compare the unit-step and unit-ramp responses of the three systems: the\noriginal uncompensated system, the system designed by Method 1, and the system designed by\nMethod 2. The MATLAB program used to obtain unit-step response curves is given in\n= lim\ns S 0\ns\nc\n9\ns(s + 3)\nd\n= 3\nK\nv\n= lim\ns S 0\nsG\nc\n(s)G(s)\nC(s)\nR(s) = 9\ns\n2\n+ 3s + 9\nG\nc\n(s)G(s) = 0.9 s + 1\ns + 3\n10\ns(s + 1) = 9\ns(s + 3)\nG\nc\n(s) = 0.9 s + 1\ns + 3\nK\nc\n=\n2\ns(s + 3)\n10\n2\ns =- 1.5 + j2.5981\n= 0.9\njv\n1–3 –1 –2–4\nj2\nj1\nj3\n–j2\n–j1\ns\nDesired\nclosed-loop pole\nCompensator\npole\nCompensator\nzero\n60°\n120°\nFigure 6–44\nCompensator pole\nand zero.\nOpenmirrors.comSection 6–6 / Lead Compensation 319\nMATLAB Program 6–9, where num1 and den1 denote the numerator and denominator of the\nsystem designed by Method 1 and num2 and den2 denote that designed by Method 2. Also, num\nand den are used for the original uncompensated system.The resulting unit-step response curves\nare shown in Figure 6–45.The MATLAB program to obtain the unit-ramp response curves of the\nMATLAB Program 6–9\n% ***** Unit-Step Response of Compensated and Uncompensated Systems *****\nnum1 = [12.287  23.876];\nden1 = [1  5.646  16.933  23.876];\nnum2 = [9];\nden2 = [1  3  9];\nnum = [10];\nden = [1  1  10];\nt = 0:0.05:5;\nc1 = step(num1,den1,t);\nc2 = step(num2,den2,t);\nc = step(num,den,t);\nplot(t,c1,'-',t,c2,'.',t,c,'x')\ngrid\ntitle('Unit-Step Responses of Compensated Systems and Uncompensated System')\nxlabel('t Sec')\nylabel('Outputs c1, c2, and c')\ntext(1.51,1.48,'Compensated System (Method 1)')\ntext(0.9,0.48,'Compensated System (Method 2)')\ntext(2.51,0.67,'Uncompensated System')\nOutputs c1, c2, and c\n0.4\n0.8\n1.8\n0\n10.5 1.50 2 2.5\nt Sec\n3 3.5 4 4.5 5\n1.2\n0.6\n1\n0.2\n1.4\n1.6\nUnit-Step Responses of Compensated Systems and Uncompensated System\nCompensated System (Method 1)\nCompensated System (Method 2)\nUncompensated System\nFigure 6–45\nUnit-step response\ncurves of designed\nsystems and original\nuncompensated\nsystem.320\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\ndesigned systems is given in MATLAB Program 6–10, where we used the step command to ob-\ntain unit-ramp responses by using the numerators and denominators for the systems designed by\nMethod 1 and Method 2 as follows:\nnum1 = [12.287  23.876]\nden1 = [1  5.646  16.933  23.876  0]\nnum2 = [9]\nden2 = [1  3  9  0]\nThe resulting unit-ramp response curves are shown in Figure 6–46.\nMATLAB Program 6–10\n% ***** Unit-Ramp Responses of Compensated Systems *****\nnum1 = [12.287  23.876];\nden1 = [1  5.646  16.933  23.876  0];\nnum2 = [9];\nden2 = [1  3  9  0];\nt = 0:0.05:5;\nc1 = step(num1,den1,t);\nc2 = step(num2,den2,t);\nplot(t,c1,'-',t,c2,'.',t,t,'-')\ngrid\ntitle('Unit-Ramp Responses of Compensated Systems')\nxlabel('t Sec')\nylabel('Unit-Ramp Input and Outputs c1 and c2')\ntext(2.55,3.8,'Input')\ntext(0.55,2.8,'Compensated System (Method 1)')\ntext(2.35,1.75,'Compensated System (Method 2)')\nUnit-Ramp Input and Outputs c1 and c2\nUnit-Ramp Responses of Compensated Systems\nCompensated System (Method 1)\nInput\nCompensated System (Method 2)\n10.5 1.50 2 2.5 3 3.5 4 4.5 5\nt Sec\n5\n2\n0\n3\n4.5\n1\n0.5\n4\n2.5\n3.5\n1.5\nFigure 6–46\nUnit-ramp response\ncurves of designed\nsystems.\nOpenmirrors.comSection 6–7 / Lag Compensation 321\nIn examining these response curves notice that the compensated system designed by Method 1\nexhibits a little bit larger overshoot in the step response than the compensated system designed\nby Method 2. However, the former has better response characteristics for the ramp input than the\nlatter. So it is difficult to say which one is better. The decision on which one to choose should be\nmade by the response requirements (such as smaller overshoots for step type inputs or smaller\nsteady-state errors in following ramp or changing inputs) expected in the designed system. If both\nsmaller overshoots in step inputs and smaller steady-state errors in following changing inputs are\nrequired, then we might use a lag–lead compensator. (See Section 6–8 for the lag–lead compen-\nsation techniques.)\n6–7 LAG COMPENSATION\nElectronic Lag Compensator Using Operational Amplifiers. The configuration of\nthe electronic lag compensator using operational amplifiers is the same as that for the\nlead compensator shown in Figure 6–36. If we choose in the circuit shown\nin Figure 6–36, it becomes a lag compensator. Referring to Figure 6–36, the transfer\nfunction of the lag compensator is given by\nwhere\nNote that we use b instead of a in the above expressions. [In the lead compensator we\nused a to indicate the ratio which was less than 1, or 0 <a<1.] In this\nbook we always assume that 0<a<1 and b>1.\nLag Compensation Techniques Based on the Root-Locus Approach.Consider\nthe problem of finding a suitable compensation network for the case where the system\nexhibits satisfactory transient-response characteristics but unsatisfactory steady-state\ncharacteristics. Compensation in this case essentially consists of increasing the open-\nloop gain without appreciably changing the transient-response characteristics.This means\nthat the root locus in the neighborhood of the dominant closed-loop poles should not\nbe changed appreciably, but the open-loop gain should be increased as much as needed.\nThis can be accomplished if a lag compensator is put in cascade with the given\nfeedforward transfer function.\nTo avoid an appreciable change in the root loci, the angle contribution of the lag\nnetwork should be limited to a small amount, say less than  5°. To assure this, we place\nthe pole and zero of the lag network relatively close together and near the origin of the\nsplane.Then the closed-loop poles of the compensated system will be shifted only slight-\nly from their original locations. Hence, the transient-response characteristics will be\nchanged only slightly.\nR2 C2/H20862AR1 C1B,\nT = R1 C1 ,  bT = R2 C2 ,  b = R2 C2\nR1 C1\n7 1,  Kˆ c = R4 C1\nR3 C2\nEo(s)\nEi(s) = Kˆ c b Ts + 1\nbTs + 1 = Kˆ c\ns + 1\nT\ns + 1\nbT\nR2 C2 7 R1 C1322\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nConsider a lag compensator where\n(6–19)\nIf we place the zero and pole of the lag compensator very close to each other, then at\nwhere s\n1\nis one of the dominant closed-loop poles, the magnitudes and\nare almost equal, or\nTo make the angle contribution of the lag portion of the compensator small, we require\nThis implies that if gain of the lag compensator is set equal to 1, the alteration in the\ntransient-response characteristics will be very small, despite the fact that the overall gain of\nthe open-loop transfer function is increased by a factor of b, where b>1. If the pole and\nzero are placed very close to the origin, then the value of b can be made large. (A large\nvalue of bmay be used, provided physical realization of the lag compensator is possible.)\nIt is noted that the value of T must be large, but its exact value is not critical. However,\nit should not be too large in order to avoid difficulties in realizing the phase-lag com-\npensator by physical components.\nAn increase in the gain means an increase in the static error constants. If the open-\nloop transfer function of the uncompensated system is G(s), then the static velocity\nerror constant K\nv\nof the uncompensated system is\nIf the compensator is chosen as given by Equation (6–19), then for the compensated\nsystem with the open-loop transfer function the static velocity error constant\nwhere K\nv\nis the static velocity error constant of the uncompensated system.\nThus if the compensator is given by Equation (6–19), then the static velocity error\nconstant is increased by a factor of where is approximately unity.K\nˆ\nc\nK\nˆ\nc\nb,\n= K\nˆ\nc\n \nbK\nv\n= lim\ns S 0\nG\nc\n(s)K\nv\n K\nˆ\nv\n= lim\ns S 0\nsG\nc\n(s)G(s)\nK\nˆ\nv\n becomes\nG\nc\n(s)G(s)\nK\nv\n= lim\ns S 0\nsG(s)\nK\nˆ\nc\n-5° 6\nn\ns\n1\n+ 1\nT\ns\n1\n+ 1\nbT\n6 0°\n∑G\nc\nAs\n1\nB∑ =\n4\nK\nˆ\nc\n \ns\n1\n+ 1\nT\ns\n1\n+ 1\nbT\n4\n/H11216K\nˆ\nc\ns\n1\n+ C1/H20862(bT)D\ns\n1\n+ (1/H20862T)s = s\n1\n \n,\nG\nc\n(s) = K\nˆ\nc\n \nb Ts + 1\nbTs + 1 = K\nˆ\nc\ns + 1\nT\ns + 1\nbT\nG\nc\n(s),\nOpenmirrors.comSection 6–7 / Lag Compensation 323\nThe main negative effect of the lag compensation is that the compensator zero that\nwill be generated near the origin creates a closed-loop pole near the origin.This closed-\nloop pole and compensator zero will generate a long tail of small amplitude in the step\nresponse, thus increasing the settling time.\nDesign Procedures for Lag Compensation by the Root-Locus Method. The\nprocedure for designing lag compensators for the system shown in Figure 6–47 by the\nroot-locus method may be stated as follows (we assume that the uncompensated system\nmeets the transient-response specifications by simple gain adjustment; if this is not the\ncase, refer to Section 6–8):\n1. Draw the root-locus plot for the uncompensated system whose open-loop trans-\nfer function is G(s). Based on the transient-response specifications, locate the\ndominant closed-loop poles on the root locus.\n2. Assume the transfer function of the lag compensator to be given by Equation (6–19):\nThen the open-loop transfer function of the compensated system becomes\n3. Evaluate the particular static error constant specified in the problem.\n4. Determine the amount of increase in the static error constant necessary to satis-\nfy the specifications.\n5. Determine the pole and zero of the lag compensator that produce the necessary\nincrease in the particular static error constant without appreciably altering the\noriginal root loci. (Note that the ratio of the value of gain required in the spec-\nifications and the gain found in the uncompensated system is the required ratio\nbetween the distance of the zero from the origin and that of the pole from the\norigin.)\n6. Draw a new root-locus plot for the compensated system. Locate the desired dom-\ninant closed-loop poles on the root locus. (If the angle contribution of the lag net-\nwork is very small—that is, a few degrees—then the original and new root loci are\nalmost identical. Otherwise, there will be a slight discrepancy between them.Then\nlocate, on the new root locus, the desired dominant closed-loop poles based on\nthe transient-response specifications.)\n7. Adjust gain of the compensator from the magnitude condition so that the dom-\ninant closed-loop poles lie at the desired location. A will be approximately 1.BKˆ c\nKˆ c\nGc(s)G(s).\nGc(s) = Kˆ c b Ts + 1\nbTs + 1 = Kˆ c\ns + 1\nT\ns + 1\nbT\nGc(s) G(s)+ –\nFigure 6–47\nControl system.324\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nEXAMPLE 6–7\nConsider the system shown in Figure 6–48(a). The feedforward transfer function is\nThe root-locus plot for the system is shown in Figure 6–48(b). The closed-loop transfer function\nbecomes\nThe dominant closed-loop poles are\nThe damping ratio of the dominant closed-loop poles is The undamped natural\nfrequency of the dominant closed-loop poles is 0.673 rad/H20862sec.The static velocity error constant is\n0.53 sec\n–1\n.\nIt is desired to increase the static velocity error constant K\nv\nto about 5 sec\n–1\nwithout appreciably\nchanging the location of the dominant closed-loop poles.\nTo meet this specification, let us insert a lag compensator as given by Equation (6–19) in\ncascade with the given feedforward transfer function.To increase the static velocity error con-\nstant by a factor of about 10, let us choose b=10 and place the zero and pole of the lag com-\npensator at s=–0.05 and s=–0.005, respectively.The transfer function of the lag compensator\nbecomes\nG\nc\n(s) = K\nˆ\nc\ns + 0.05\ns + 0.005\nz = 0.491.\ns =- 0.3307 ; j0.5864\n = 1.06\n(s + 0.3307 - j0.5864)(s + 0.3307 + j0.5864)(s + 2.3386)\n \nC(s)\nR(s) = 1.06\ns(s + 1)(s + 2) + 1.06\nG(s) = 1.06\ns(s + 1)(s + 2)\n1.06\ns(s + 1) (s + 2)\nClosed-loop poles\nj1\n–j2\n–j1\n0–1–2–31\njv\ns\n(a) (b)\nj2\n+ –\nFigure 6–48\n(a) Control system;\n(b) root-locus plot.\nOpenmirrors.comSection 6–7 / Lag Compensation 325\nThe angle contribution of this lag network near a dominant closed-loop pole is about 4°. Because\nthis angle contribution is not very small, there is a small change in the new root locus near the\ndesired dominant closed-loop poles.\nThe open-loop transfer function of the compensated system then becomes\nwhere\nThe block diagram of the compensated system is shown in Figure 6–49.The root-locus plot for the\ncompensated system near the dominant closed-loop poles is shown in Figure 6–50(a), together with\nthe original root-locus plot. Figure 6–50(b) shows the root-locus plot of the compensated system\nK = 1.06Kˆ c\n =\nK(s + 0.05)\ns(s + 0.005)(s + 1)(s + 2)\n Gc(s)G(s) = Kˆ c s + 0.05\ns + 0.005 1.06\ns(s + 1)(s + 2)\nKc\ns + 0.05\ns + 0.005\nKc = 0.966\n1.06\ns(s + 1) (s + 2)+ –\n^\n^Figure 6–49\nCompensated\nsystem.\nFigure 6–50\n(a) Root-locus plots of the compensated system and uncompensated system; (b) root-locus plot of compensated\nsystem near the origin.\nReal Axis\n−2.5−3 0 1−0.5 0.5−1.5−2 −1\n(a)\nImag Axis\n2\n−2\n1.5\n−1\n−1.5\n1\n0\n0.5\n−0.5\nRoot-Locus Plots of Compensated and Uncompensated Systems\nUncompensated system\nOriginal closed-loop pole\nCompensated system\nNew closed-\nloop pole\n0.4 0.60.2−0.2−0.4 0\nRoot-Locus Plot of Compensated System near the Origin\nReal Axis\nImag Axis−0.1\n0.1\n0.5\n−0.3\n−0.4\n0.3\n0\n0.2\n−0.2\n0.4\n−0.5\n(b)326\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nnear the origin.The MATLAB program to generate the root-locus plots shown in Figures 6–50(a)\nand (b) is given in MATLAB Program 6–11.\nIf the damping ratio of the new dominant closed-loop poles is kept the same, then these poles\nare obtained from the new root-locus plot as follows:\nThe open-loop gain K is determined from the magnitude condition as follows:\n = 1.0235\n K =\n2\ns(s + 0.005)(s + 1)(s + 2)\ns + 0.05\n2\ns =- 0.31 + j0.55\ns\n1\n=- 0.31 + j0.55,\n  \ns\n2\n=- 0.31 - j0.55\nMATLAB Program 6–11\n% ***** Root-locus plots of the compensated system and\n% uncompensated system *****\n% ***** Enter the numerators and denominators of the\n% compensated and uncompensated systems *****\nnumc = [1  0.05];\ndenc = [1  3.005  2.015  0.01  0];\nnum = [1.06];\nden = [1  3  2  0];\n% ***** Enter rlocus command. Plot the root loci of both\n% systems *****\nrlocus(numc,denc)\nhold\nCurrent plot held\nrlocus(num,den)\nv = [-3  1  -2  2]; axis(v); axis('square')\ngrid\ntext(-2.8,0.2,'Compensated system')\ntext(-2.8,1.2,'Uncompensated system')\ntext(-2.8,0.58,'Original closed-loop pole')\ntext(-0.1,0.85,'New closed-')\ntext(-0.1,0.62,'loop pole')\ntitle('Root-Locus Plots of Compensated and Uncompensated Systems')\nhold\nCurrent plot released\n% ***** Plot root loci of the compensated system near the origin *****\nrlocus(numc,denc)\nv = [-0.6  0.6  -0.6  0.6]; axis(v); axis('square')\ngrid\ntitle('Root-Locus Plot of Compensated System near the Origin')\nOpenmirrors.comSection 6–7 / Lag Compensation 327\nThen the lag compensator gain is determined as\nThus the transfer function of the lag compensator designed is\n(6–20)\nThen the compensated system has the following open-loop transfer function:\nThe static velocity error constant Kv is\nIn the compensated system, the static velocity error constant has increased to 5.12 sec –1, or\n5.12/0.53=9.66 times the original value. (The steady-state error with ramp inputs has decreased\nto about 10% of that of the original system.) We have essentially accomplished the design objective\nof increasing the static velocity error constant to 5 sec–1.\nNote that, since the pole and zero of the lag compensator are placed close together and are lo-\ncated very near the origin, their effect on the shape of the original root loci has been small. Except\nfor the presence of a small closed root locus near the origin, the root loci of the compensated and the\nuncompensated systems are very similar to each other. However, the value of the static velocity error\nconstant of the compensated system is 9.66 times greater than that of the uncompensated system.\nThe two other closed-loop poles for the compensated system are found as follows:\nThe addition of the lag compensator increases the order of the system from 3 to 4, adding one ad-\nditional closed-loop pole close to the zero of the lag compensator. (The added closed-loop pole\nats=–0.0549 is close to the zero at s=–0.05.) Such a pair of a zero and pole creates a long tail\nof small amplitude in the transient response, as we will see later in the unit-step response. Since\nthe pole at s=–2.326 is very far from the jv axis compared with the dominant closed-loop poles,\nthe effect of this pole on the transient response is also small. Therefore, we may consider the\nclosed-loop poles at to be the dominant closed-loop poles.\nThe undamped natural frequency of the dominant closed-loop poles of the compensated sys-\ntem is 0.631 rad/H20862sec.This value is about 6% less than the original value, 0.673 rad/H20862sec.This implies\nthat the transient response of the compensated system is slower than that of the original system.\nThe response will take a longer time to settle down.The maximum overshoot in the step response\nwill increase in the compensated system. If such adverse effects can be tolerated, the lag com-\npensation as discussed here presents a satisfactory solution to the given design problem.\nNext, we shall compare the unit-ramp responses of the compensated system against the\nuncompensated system and verify that the steady-state performance is much better in the\ncompensated system than the uncompensated system.\nTo obtain the unit-ramp response with MATLAB, we use the step command for the system\nSince for the compensated system is\n = 1.0235s + 0.0512\ns5 + 3.005s4 + 2.015s3 + 1.0335s2 + 0.0512s\n \nC(s)\nsR(s) =\n1.0235(s + 0.05)\nsCs(s + 0.005)(s + 1)(s + 2) + 1.0235(s + 0.05)D\nC(s)/H20862CsR(s)DC(s)/H20862CsR(s)D.\ns =- 0.31 ; j0.55\ns3 =- 2.326,  s4 =- 0.0549\nKv = lim\ns S 0\nsG1(s) = 5.12 sec-1\n =\n5.12(20s + 1)\ns(200s + 1)(s + 1)(0.5s + 1)\n G1(s) =\n1.0235(s + 0.05)\ns(s + 0.005)(s + 1)(s + 2)\nGc(s) = 0.9656 s + 0.05\ns + 0.005 = 9.656 20s + 1\n200s + 1\nKˆ c = K\n1.06 = 1.0235\n1.06 = 0.9656\nKˆ c328\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nwe have\nnumc = [1.0235  0.0512]\ndenc = [1  3.005  2.015  1.0335  0.0512  0]\nAlso, for the uncompensated system is\nHence,\nnum = [1.06]\nden = [1  3  2  1.06  0]\nMATLAB Program 6–12 produces the plot of the unit-ramp response curves. Figure 6–51 shows\nthe result. Clearly, the compensated system shows much smaller steady-state error (one-tenth of\nthe original steady-state error) in following the unit-ramp input.\n = 1.06\ns\n4\n+ 3s\n3\n+ 2s\n2\n+ 1.06s\n \nC(s)\nsR(s) = 1.06\nsCs(s + 1)(s + 2) + 1.06D\nC(s)/H20862CsR(s)D\nMATLAB Program 6–12\n% ***** Unit-ramp responses of compensated system and\n% uncompensated system *****\n% ***** Unit-ramp response will be obtained as the unit-step\n% response of C(s)/[sR(s)] *****\n% ***** Enter the numerators and denominators of C1(s)/[sR(s)]\n% and C2(s)/[sR(s)], where C1(s) and C2(s) are Laplace\n% transforms of the outputs of the compensated and un-\n% compensated systems, respectively. *****\nnumc = [1.0235  0.0512];\ndenc = [1  3.005  2.015  1.0335  0.0512  0];\nnum = [1.06];\nden = [1  3  2  1.06  0];\n% ***** Specify the time range (such as t= 0:0.1:50) and enter\n% step command and plot command. *****\nt = 0:0.1:50;\nc1 = step(numc,denc,t);\nc2 = step(num,den,t);\nplot(t,c1,'-',t,c2,'.',t,t,'--')\ngrid\ntext(2.2,27,'Compensated system');\ntext(26,21.3,'Uncompensated system');\ntitle('Unit-Ramp Responses of Compensated and Uncompensated Systems')\nxlabel('t Sec');\nylabel('Outputs c1 and c2')\nOpenmirrors.comSection 6–7 / Lag Compensation 329\nt Sec\n1005 35 5030 40 452015 25\nOutputs c1 and c2\n50\n0\n15\n5\n35\n25\n30\n20\n45\n40\n10\nUnit-Ramp Responses of Compensated and Uncompensated Systems\nUncompensated system\nCompensated system\nFigure 6–51\nUnit-ramp responses\nof compensated and\nuncompensated\nsystems. [The\ncompensator is given\nby Equation (6–20).]\nMATLAB Program 6–13 gives the unit-step response curves of the compensated and un-\ncompensated systems. The unit-step response curves are shown in Figure 6–52. Notice that the\nlag-compensated system exhibits a larger maximum overshoot and slower response than the\noriginal uncompensated system. Notice that a pair of the pole at s=–0.0549 and zero at\nMATLAB Program 6–13\n% ***** Unit-step responses of compensated system and\n% uncompensated system *****\n% ***** Enter the numerators and denominators of the\n% compensated and uncompensated systems *****\nnumc = [1.0235  0.0512];\ndenc = [1  3.005  2.015  1.0335  0.0512];\nnum = [1.06];\nden = [1  3  2  1.06];\n% ***** Specify the time range (such as t = 0:0.1:40) and enter\n% step command and plot command. *****\nt = 0:0.1:40;\nc1 = step(numc,denc,t);\nc2 = step(num,den,t);\nplot(t,c1,'-',t,c2,'.')\ngrid\ntext(13,1.12,'Compensated system')\ntext(13.6,0.88,'Uncompensated system')\ntitle('Unit-Step Responses of Compensated and Uncompensated Systems')\nxlabel('t Sec')\nylabel('Outputs c1 and c2')330\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nUnit-Step Responses of Compensated and Uncompensated Systems\nOutputs c1 and c2\nUncompensated system\nCompensated system\nt Sec\n5\n0 30\n4025\n35\n15\n10\n20\n1.4\n0.4\n0\n1.2\n0.8\n1\n0.6\n0.2\nFigure 6–52\nUnit-step responses\nof compensated and\nuncompensated\nsystems. [The\ncompensator is given\nby Equation (6–20).]\ns=–0.05 generates a long tail of small amplitude in the transient response. If a larger maximum\novershoot and a slower response are not desired, we need to use a lag–lead compensator as\npresented in Section 6–8.\nComments. It is noted that under certain circumstances, however, both lead com-\npensator and lag compensator may satisfy the given specifications (both transient-\nresponse specifications and steady-state specifications.) Then either compensation may\nbe used.\n6–8 LAG–LEAD COMPENSATION\nLead compensation basically speeds up the response and increases the stability of the\nsystem. Lag compensation improves the steady-state accuracy of the system, but reduces\nthe speed of the response.\nIf improvements in both transient response and steady-state response are desired,\nthen both a lead compensator and a lag compensator may be used simultaneously. Rather\nthan introducing both a lead compensator and a lag compensator as separate units, how-\never, it is economical to use a single lag–lead compensator.\nLag–lead compensation combines the advantages of lag and lead compensations.\nSince the lag–lead compensator possesses two poles and two zeros, such a compensation\nincreases the order of the system by 2, unless cancellation of pole(s) and zero(s) occurs\nin the compensated system.\nElectronic Lag–Lead Compensator Using Operational Amplifiers. Figure 6–53\nshows an electronic lag–lead compensator using operational amplifiers. The transfer\nOpenmirrors.comSection 6–8 / Lag-Lead Compensation 331\nfunction for this compensator may be obtained as follows: The complex impedance Z1\nis given by\nor\nSimilarly, complex impedance Z2 is given by\nHence, we have\nThe sign inverter has the transfer function\nThus the transfer function of the compensator shown in Figure 6–53 is\n(6–21)\nLet us define\nT1 = AR1 + R3BC1 ,  T1\ng = R1 C1 ,  T2 = R2 C2 ,  bT2 = AR2 + R4BC2\nEo(s)\nEi(s) = Eo(s)\nE(s)\nE(s)\nEi(s) = R4 R6\nR3 R5\nc\nAR1 + R3BC1 s + 1\nR1 C1 s + 1 dc R2 C2 s + 1\nAR2 + R4BC2 s + 1 d\nEo(s)\nE(s) =- R6\nR5\nE(s)\nEi(s) =- Z2\nZ1\n=- R4\nR3\nAR1 + R3BC1 s + 1\nR1 C1 s + 1 /H11554R2 C2 s + 1\nAR2 + R4BC2 s + 1\nZ2 =\nAR2 C2 s + 1BR4\nAR2 + R4BC2 s + 1\nZ1 =\nAR1 C1 s + 1BR3\nAR1 + R3BC1 s + 1\n1\nZ1\n= 1\nR1 + 1\nC1 s\n+ 1\nR3\n–\n+ –\n+\nC1\nC2\nR1\nR5\nEi(s) Eo(s)E(s)\nLag–lead network Sign inverter\nZ1\nZ2\nR2\nR3\nR4\nR6\nFigure 6–53\nLag–lead\ncompensator.332\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nG\nc\n(s) G(s)\n+ –\nFigure 6–54\nControl system.\nThen Equation (6–21) becomes\n(6–22)\nwhere\nNote that g is often chosen to be equal to b.\nLag–lead Compensation Techniques Based on the Root-Locus Approach.\nConsider the system shown in Figure 6–54.Assume that we use the lag–lead compensator:\n(6–23)\nwhere and (Consider K\nc\nto belong to the lead portion of the lag–lead\ncompensator.)\nIn designing lag–lead compensators, we consider two cases where and \nCase 1.\nIn this case, the design process is a combination of the design of the\nlead compensator and that of the lag compensator.The design procedure for the lag–lead\ncompensator follows:\n1. From the given performance specifications, determine the desired location for the\ndominant closed-loop poles.\n2. Using the uncompensated open-loop transfer function G(s), determine the angle\ndeficiency fif the dominant closed-loop poles are to be at the desired location.The\nphase-lead portion of the lag–lead compensator must contribute this angle f.\n3. Assuming that we later choose sufficiently large so that the magnitude of the lag\nportion\n4\ns\n1\n+ 1\nT\n2\ns\n1\n+ 1\nbT\n2\n4\nT\n2\ng Z b.\ng = b.g Z b\ng 7 1.b 7 1\nG\nc\n(s) = K\nc\nb\ng\nAT\n1\n \ns + 1BAT\n2\n \ns + 1B\na\nT\n1\ng s + 1\nb\nAbT\n2\n \ns + 1B\n= K\nc\n±\ns + 1\nT\n1\ns + g\nT\n1\n≤±\ns + 1\nT\n2\ns + 1\nbT\n2\n≤\ng = R\n1\n+ R\n3\nR\n1\n7 1,\n  \nb = R\n2\n+ R\n4\nR\n2\n7 1,\n  \nK\nc\n= R\n2\n \nR\n4\n \nR\n6\nR\n1\n \nR\n3\n \nR\n5\n R\n1\n+ R\n3\nR\n2\n+ R\n4\nE\no\n(s)\nE\ni\n(s) = K\nc\nb\ng\n£\nT\n1\n \ns + 1\nT\n1\ng s + 1\n≥a\nT\n2\n \ns + 1\nbT\n2\n \ns + 1\nb\n= K\nc\na\ns + 1\nT\n1\nba\ns + 1\nT\n2\nb\na\ns + g\nT\n1\nba\ns + 1\nbT\n2\nb\nOpenmirrors.comSection 6–8 / Lag-Lead Compensation 333\nis approximately unity, where is one of the dominant closed-loop poles,\nchoose the values of and g from the requirement that\nThe choice of and g is not unique. (Infinitely many sets of and g are possible.)\nThen determine the value of Kc from the magnitude condition:\n4. If the static velocity error constant Kv is specified, determine the value of b to\nsatisfy the requirement for Kv . The static velocity error constant Kv is given by\nwhere Kc and g are already determined in step 3. Hence, given the value of Kv , the value\nof b can be determined from this last equation. Then, using the value of b thus deter-\nmined, choose the value of such that\n(The preceding design procedure is illustrated in Example 6–8.)\nCase 2. If g=b is required in Equation (6–23), then the preceeding design\nprocedure for the lag–lead compensator may be modified as follows:\n1. From the given performance specifications, determine the desired location for the\ndominant closed-loop poles.\ng = b.\n-5° 6 n\ns1 + 1\nT2\ns1 + 1\nbT2\n6 0°\n4\ns1 + 1\nT2\ns1 + 1\nbT2\n4/H112161\nT2\n = lim\ns S 0\nsKc\nb\ng G(s)\n = lim\ns S 0\nsKc ±\ns + 1\nT1\ns + g\nT1\n≤±\ns + 1\nT2\ns + 1\nbT2\n≤G(s)\n Kv = lim\ns S 0\nsGc(s)G(s)\n4Kc\ns1 + 1\nT1\ns1 + g\nT1\nGAs1B4= 1\nT1T1\nn\ns1 + 1\nT1\ns1 + g\nT1\n= f\nT1\ns = s1334\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\n2. The lag–lead compensator given by Equation (6–23) is modified to\n(6–24)\nwhere b>1. The open-loop transfer function of the compensated system is\nG\nc\n(s)G(s). If the static velocity error constant K\nv\nis specified, determine the value\nof constant K\nc\nfrom the following equation:\n3. To have the dominant closed-loop poles at the desired location, calculate the angle\ncontribution f needed from the phase-lead portion of the lag–lead compensator.\n4. For the lag–lead compensator, we later choose sufficiently large so that\nis approximately unity, where is one of the dominant closed-loop poles. De-\ntermine the values of and b from the magnitude and angle conditions:\n5. Using the value of b just determined, choose so that\nThe value of the largest time constant of the lag–lead compensator, should not be\ntoo large to be physically realized. (An example of the design of the lag–lead compen-\nsator when is given in Example 6–9.)g = b\nbT\n2\n \n,\n-5° 6\nn\ns\n1\n+ 1\nT\n2\ns\n1\n+ 1\nbT\n2\n6 0°\n4\ns\n1\n+ 1\nT\n2\ns\n1\n+ 1\nbT\n2\n4\n/H112161\nT\n2\n \nn\ns\n1\n+ 1\nT\n1\ns\n1\n+ b\nT\n1\n= f\n \n4\nK\nc\n±\ns\n1\n+ 1\nT\n1\ns\n1\n+ b\nT\n1\n≤\nGAs\n1\nB\n4\n= 1\nT\n1\ns = s\n1\n4\ns\n1\n+ 1\nT\n2\ns\n1\n+ 1\nbT\n2\n4\nT\n2\n = lim\ns S 0\nsK\nc\nG(s)\n K\nv\n= lim\ns S 0\nsG\nc\n(s)G(s)\nG\nc\n(s) = K\nc\nAT\n1\n \ns + 1BAT\n2\n \ns + 1B\na\nT\n1\nb s + 1\nb\nAbT\n2\n \ns + 1B\n= K\nc\na\ns + 1\nT\n1\nba\ns + 1\nT\n2\nb\na\ns + b\nT\n1\nba\ns + 1\nbT\n2\nb\nOpenmirrors.comSection 6–8 / Lag-Lead Compensation 335\nEXAMPLE 6–8 Consider the control system shown in Figure 6–55. The feedforward transfer function is\nThis system has closed-loop poles at\nThe damping ratio is 0.125, the undamped natural frequency is 2 rad/sec, and the static velocity\nerror constant is 8 sec–1.\nIt is desired to make the damping ratio of the dominant closed-loop poles equal to 0.5 and to\nincrease the undamped natural frequency to 5 rad /H20862sec and the static velocity error constant to\n80 sec–1. Design an appropriate compensator to meet all the performance specifications.\nLet us assume that we use a lag–lead compensator having the transfer function\nwhere g is not equal to b.Then the compensated system will have the open-loop transfer function\nFrom the performance specifications, the dominant closed-loop poles must be at\nSince\nthe phase-lead portion of the lag–lead compensator must contribute 55° so that the root locus\npasses through the desired location of the dominant closed-loop poles.\nTo design the phase-lead portion of the compensator, we first determine the location of the\nzero and pole that will give 55° contribution. There are many possible choices, but we shall here\nchoose the zero at s=–0.5 so that this zero will cancel the pole at s=–0.5 of the plant. Once\nthe zero is chosen, the pole can be located such that the angle contribution is 55°. By simple\ncalculation or graphical analysis, the pole must be located at s=–5.02. Thus, the phase-lead\nportion of the lag–lead compensator becomes\nKc\ns + 1\nT1\ns + g\nT1\n= Kc\ns + 0.5\ns + 5.02\nn 4\ns(s + 0.5)\n2\ns =- 2.50 + j4.33\n=- 235°\ns =- 2.50 ; j4.33\nGc(s)G(s) = Kc ±\ns + 1\nT1\ns + g\nT1\n≤±\ns + 1\nT2\ns + 1\nbT2\n≤G(s)\nGc(s) = Kc ±\ns + 1\nT1\ns + g\nT1\n≤±\ns + 1\nT2\ns + 1\nbT2\n≤  (g 7 1, b 7 1)\ns =- 0.2500 ; j1.9843\nG(s) = 4\ns(s + 0.5)\n4\ns(s + 0.5)+ –\nFigure 6–55\nControl system.336\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nThus\nNext we determine the value of K\nc\nfrom the magnitude condition:\nHence,\nThe phase-lag portion of the compensator can be designed as follows: First the value of b is\ndetermined to satisfy the requirement on the static velocity error constant:\nHence, b is determined as\nFinally, we choose the value  such that the following two conditions are satisfied:\nWe may choose several values for T\n2\nand check if the magnitude and angle conditions are satis-\nfied. After simple calculations we find for T\n2\n= 5 \nSince T\n2\n= 5 satisfies the two conditions, we may choose\nNow the transfer function of the designed lag–lead compensator is given by\n =\n10(2s + 1)(5s + 1)\n(0.1992s + 1)(80.19s + 1)\n = 6.26\na\ns + 0.5\ns + 5.02\nba\ns + 0.2\ns + 0.01247\nb\n G\nc\n(s) = (6.26)\n±\ns + 1\n2\ns + 10.04\n2\n≤±\ns + 1\n5\ns + 1\n16.04 * 5\n≤\nT\n2\n= 5\n1 7 magnitude 7 0.98, -2.10° 6 angle 6 0°\n-5° 6\nn\ns + 1\nT\n2\ns + 1\n16.04T\n2\n4\ns =- 2.5 + j4.33\n6 0°\n4\ns + 1\nT\n2\ns + 1\n16.04T\n2\n4\ns =- 2.5 + j4.33\n/H112161,\nT\n2\nb = 16.04\n = lim\ns S 0\ns(6.26) b\n10.04 4\ns(s + 0.5) = 4.988b = 80\n K\nv\n= lim\ns S 0\nsG\nc\n(s)G(s) = lim\ns S 0\nsK\nc\n b\ng G(s)\nK\nc\n=\n2\n(s + 5.02)s\n4\n2\ns =- 2.5 + j4.33\n= 6.26\n2\nK\nc\ns + 0.5\ns + 5.02\n4\ns(s + 0.5)\n2\ns =- 2.5 + j4.33\n= 1\nT\n1\n= 2,\n  \ng = 5.02\n0.5 = 10.04\nOpenmirrors.comSection 6–8 / Lag-Lead Compensation 337\nThe compensated system will have the open-loop transfer function\nBecause of the cancellation of the (s+0.5) terms, the compensated system is a third-order system.\n(Mathematically, this cancellation is exact, but practically such cancellation will not be exact be-\ncause some approximations are usually involved in deriving the mathematical model of the sys-\ntem and, as a result, the time constants are not precise.) The root-locus plot of the compensated\nsystem is shown in Figure 6–56(a).An enlarged view of the root-locus plot near the origin is shown\nin Figure 6–56(b). Because the angle contribution of the phase lag portion of the lag–lead\ncompensator is quite small, there is only a small change in the location of the dominant closed-\nloop poles from the desired location, The characteristic equation for the com-\npensated system is\nor\nHence the new closed-loop poles are located at\nThe new damping ratio is z=0.491.Therefore the compensated system meets all the required per-\nformance specifications. The third closed-loop pole of the compensated system is located at\nSince this closed-loop pole is very close to the zero at the effect of this pole\non the response is small. (Note that, in general, if a pole and a zero lie close to each other on the\nnegative real axis near the origin, then such a pole-zero combination will yield a long tail of small\namplitude in the transient response.)\ns =- 0.2,s =- 0.2078.\ns =- 2.4123 ; j4.2756\n= (s + 2.4123 + j4.2756)(s + 2.4123 - j4.2756)(s + 0.2078) = 0\ns3 + 5.0325s2 + 25.1026s + 5.008\ns(s + 5.02)(s + 0.01247) + 25.04(s + 0.2) = 0\ns =- 2.5 ; j4.33.\nGc(s)G(s) =\n25.04(s + 0.2)\ns(s + 5.02)(s + 0.01247)\nRoot-Locus Plot of Compensated System\nImag Axis\n105–5–10 0\nReal Axis\n(a)\n–2\n2\n8\n6\n0\n4\n10\n–10\n–4\n–6\n–8\nRoot-Locus Plot of Compensated System near the Origin\nRealAxis\nImag Axis\n–0.5 0–0.1–0.3–0.4 –0.2\n–0.05\n0.05\n0.2\n–0.15\n–0.25\n0.15\n0\n0.1\n–0.1\n0.25\n–0.2\n(b)\nFigure 6–56\n(a) Root-locus plot of the compensated system; (b) root-locus plot near the origin.338\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nt Sec\n1\n0 6\n85\n7\n3\n2\n4\n(a)\nOutputs\n0.4\n0.8\n1.8\n0\n1.2\n0.6\n1\n0.2\n1.4\n1.6\nUnit-Step Responses of Compensated and Uncompensated Systems\nUncompensated system\nCompensated\nsystem\nSteady-state error of compensated system = 0.0125\nSteady-state error of uncompensated\nsystem = 0.125\nCompensated\nsystem Uncompensated system\nt Sec\n2\n1\n7\n9\n6\n8\n100 4\n3\n5\n(b)\nOutputs\n10\n4\n0\n6\n9\n2\n1\n8\n5\n7\n3\nUnit-Ramp Responses of Compensated and Uncompensated Systems\nFigure 6–57\nTransient-response\ncurves for the\ncompensated system\nand uncompensated\nsystem. (a) Unit-step\nresponse curves;\n(b) unit-ramp\nresponse curves.\nThe unit-step response curves and unit-ramp response curves before and after compensation\nare shown in Figure 6–57. (Notice a long tail of a small amplitude in the unit-step response of the\ncompensated system.)\nEXAMPLE 6–9\nConsider the control system of Example 6–8 again. Suppose that we use a lag–lead compensator\nof the form given by Equation (6–24), or\nG\nc\n(s) = K\nc\na\ns + 1\nT\n1\nba\ns + 1\nT\n2\nb\na\ns + b\nT\n1\nba\ns + 1\nbT\n2\nb\n  \n(b 7 1)\nOpenmirrors.comSection 6–8 / Lag-Lead Compensation 339\nAssuming the specifications are the same as those given in Example 6–8, design a compensator\nGc(s).\nThe desired locations for the dominant closed-loop poles are at\nThe open-loop transfer function of the compensated system is\nSince the requirement on the static velocity error constant Kv is 80 sec–1, we have\nThus\nThe time constant and the value of b are determined from\n(The angle deficiency of 55° was obtained in Example 6–8.) Referring to Figure 6–58, we can\neasily locate points A and B such that\n(Use a graphical approach or a trigonometric approach.) The result is\nor\nThe phase-lead portion of the lag–lead network thus becomes\nFor the phase-lag portion, we choose such that it satisfies the conditions\n-5° 6 n\ns + 1\nT2\ns + 1\n3.503T2\n4\ns =- 2.50 + j4.33\n6 0°4\ns + 1\nT2\ns + 1\n3.503T2\n4\ns =- 2.50 + j4.33\n/H112161,\nT2\n10 as + 2.38\ns + 8.34 b\nT1 = 1\n2.38 = 0.420,  b = 8.34T1 = 3.503\nAO = 2.38,  BO = 8.34\n/APB = 55°,  PA\nPB\n= 4.77\n8\nn\ns + 1\nT1\ns + b\nT1\n4\ns =- 2.5 + j4.33\n= 55°\n4\ns + 1\nT1\ns + b\nT1\n42 40\ns(s + 0.5)\n2\ns =- 2.5 + j4.33\n= 4\ns + 1\nT1\ns + b\nT1\n4 8\n4.77 = 1\nT1\nKc = 10\nKv = lim\ns S 0\nsGc(s)G(s) = lim\ns S 0\nKc\n4\n0.5 = 8Kc = 80\nGc(s)G(s) = Kc\nas + 1\nT1\nba s + 1\nT2\nb\nas + b\nT1\nba s + 1\nbT2\nb\n/H115544\ns(s + 0.5)\ns =- 2.50 ; j4.33340\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\n0\njv\ns\nAB\nP\n55°\nj5\nj4\nj3\nj2\nj1\n–j4\n–j3\n–j2\n–j1\n–10 –9 –8 –7 –6 –5 –4 –3 –2 –11 2\nFigure 6–58\nDetermination of the\ndesired pole-zero\nlocation.\nBy simple calculations, we find that if we choose , then\nand if we choose , then\nSince is one of the time constants of the lag–lead compensator, it should not be too large. If\ncan be acceptable from practical viewpoint, then we may choose . Then\nThus, the lag–lead compensator becomes\nThe compensated system will have the open-loop transfer function\nNo cancellation occurs in this case, and the compensated system is of fourth order. Because the\nangle contribution of the phase lag portion of the lag–lead network is quite small, the dominant\nclosed-loop poles are located very near the desired location. In fact, the location of the dominant\nclosed-loop poles can be found from the characteristic equation as follows: The characteristic\nequation of the compensated system is\nwhich can be simplified to \n= (s + 2.4539 + j4.3099)(s + 2.4539 - j4.3099)(s + 0.1003)(s + 3.8604) = 0\ns\n4\n+ 8.8685s\n3\n+ 44.4219s\n2\n+ 99.3188s + 9.52\n(s + 8.34)(s + 0.0285)s(s + 0.5) + 40(s + 2.38)(s + 0.1) = 0\nG\nc\n(s)G(s) =\n40(s + 2.38)(s + 0.1)\n(s + 8.34)(s + 0.0285)s(s + 0.5)\nG\nc\n(s) = (10)\na\ns + 2.38\ns + 8.34\nba\ns + 0.1\ns + 0.0285\nb\n1\nbT\n2\n= 1\n3.503 * 10 = 0.0285\nT\n2\n= 10T\n2\n= 10\nT\n2\n1 7 magnitude 7 0.99, -1° 6 angle 6 0°\nT\n2\n= 10\n1 7 magnitude 7 0.98, -1.5° 6 angle 6 0°\nT\n2\n= 5\nOpenmirrors.comSection 6–8 / Lag-Lead Compensation 341\nThe dominant closed-loop poles are located at\nThe other closed-loop poles are located at\nSince the closed-loop pole at is very close to a zero at they almost cancel\neach other. Thus, the effect of this closed-loop pole is very small. The remaining closed-loop pole\ndoes not quite cancel the zero at The effect of this zero is to cause a\nlarger overshoot in the step response than a similar system without such a zero. The unit-step\nresponse curves of the compensated and uncompensated systems are shown in Figure 6–59(a).The\nunit-ramp response curves for both systems are depicted in Figure 6–59(b).\ns =- 2.4.(s =- 3.8604)\ns =- 0.1,s =- 0.1003\ns =- 0.1003;  s =- 3.8604\ns =- 2.4539 ; j4.3099\nt Sec\n10.50 3.5 4.53 4 521.5 2.5\n(a)\nOutputs\n0.4\n0.8\n1.8\n0\n1.2\n0.6\n1\n0.2\n1.4\n1.6\nUnit-Step Responses of Compensated and Uncompensated Systems\nUncompensated system\nCompensated\nsystem\nt Sec\n0.503 42.5 3.51.51 2\n(b)\nOutputs\n1.5\n2.5\n4\n0.5\n0\n3.5\n2\n3\n1\nUnit-Ramp Responses of Compensated and Uncompensated Systems\nUncompensated systemCompensated\nsystem\nFigure 6–59\n(a) Unit-step\nresponse curves for\nthe compensated and\nuncompensated\nsystems;\n(b) unit-ramp\nresponse curves for\nboth systems.342\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nThe maximum overshoot in the step response of the compensated system is approximately\n38%. (This is much larger than the maximum overshoot of 21% in the design presented in Exam-\nple 6–8.) It is possible to decrease the maximum overshoot by a small amount from 38%, but not\nto 20% if g=b is required, as in this example. Note that by not requiring g=b, we have an ad-\nditional parameter to play with and thus can reduce the maximum overshoot.\n6–9 PARALLEL COMPENSATION\nThus far we have presented series compensation techniques using lead, lag, or lag–lead\ncompensators. In this section we discuss parallel compensation technique. Because in the\nparallel compensation design the controller (or compensator) is in a minor loop, the de-\nsign may seem to be more complicated than in the series compensation case. It is, how-\never, not complicated if we rewrite the characteristic equation to be of the same form\nas the characteristic equation for the series compensated system. In this section we pres-\nent a simple design problem involving parallel compensation.\nBasic Principle for Designing Parallel Compensated System. Referring to\nFigure 6–60(a), the closed-loop transfer function for the system with series compensa-\ntion is\nThe characteristic equation is\nGiven G and H, the design problem becomes that of determining the compensator G\nc\nthat satisfies the given specification.\n1 + G\nc\n \nGH = 0\nC\nR = G\nc\n \nG\n1 + G\nc\n \nGH\nG\n1\n(s) G\n2\n(s)\nH(s)\nG\nc\n(s)\nG\nc\n(s) G(s)\nH(s)\n(a)\n(b)\n+ –\n+ –\n+ –\nCR\nRC\nFigure 6–60\n(a) Series\ncompensation;\n(b) parallel or\nfeedback\ncompensation.\nOpenmirrors.comSection 6–9 / Parallel Compensation 343\nThe closed-loop transfer function for the system with parallel compensation \n[Figure 6–60(b)] is\nThe characteristic equation is\nBy dividing this characteristic equation by the sum of the terms that do not involve Gc ,\nwe obtain\n(6–25)\nIf we define\nthen Equation (6–25) becomes\nSince Gf is a fixed transfer function, the design of Gc becomes the same as the case of\nseries compensation. Hence the same design approach applies to the parallel compen-\nsated system.\nVelocity Feedback Systems. A velocity feedback system (tachometer feedback\nsystem) is an example of parallel compensated systems.The controller (or compensator)\nin such a system is a gain element.The gain of the feedback element in a minor loop must\nbe determined properly so that the entire system satisfies the given design specifica-\ntions. The characteristic of such a velocity feedback system is that the variable parame-\nter does not appear as a multiplying factor in the open-loop transfer function, so that\ndirect application of the root-locus design technique is not possible. However, by rewrit-\ning the characteristic equation such that the variable parameter appears as a multiply-\ning factor, then the root-locus approach to the design is possible.\nAn example of control system design using parallel compensation technique is pre-\nsented in Example 6–10.\nEXAMPLE 6–10 Consider the system shown in Figure 6–61. Draw a root-locus diagram.Then determine the value\nof k such that the damping ratio of the dominant closed-loop poles is 0.4.\nHere the system involves velocity feedback. The open-loop transfer function is\nOpen-loop transfer function = 20\ns(s + 1)(s + 4) + 20ks\n1 + Gc Gf = 0\nGf = G2\n1 + G1 G2 H\n1 + Gc G2\n1 + G1 G2 H = 0\n1 + G1 G2 H + G2 Gc = 0\nC\nR = G1 G2\n1 + G2 Gc + G1 G2 H\nC(s)R(s) 20\n(s + 1) (s + 4)\n1\ns+ – + –\nk\nFigure 6–61\nControl system.344\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nNotice that the adjustable variable k does not appear as a multiplying factor. The characteristic\nequation for the system is\n(6–26)\nDefine\nThen Equation (6–26) becomes\n(6–27)\nDividing both sides of Equation (6–27) by the sum of the terms that do not contain K, we get\nor\n(6–28)\nEquation (6–28) is of the form of Equation (6–11).\nWe shall now sketch the root loci of the system given by Equation (6–28). Notice that the\nopen-loop poles are located at s=j2, s=–j2, s=–5,and the open-loop zero is located at s=0.\nThe root locus exists on the real axis between 0 and –5. Since\nwe have\nThe intersection of the asymptotes with the real axis can be found from\nas\nThe angle of departure (angle u) from the pole at s=j2 is obtained as follows:\nThus, the angle of departure from the pole s=j2 is 158.2°. Figure 6–62 shows a root-locus plot\nfor the system. Notice that two branches of the root locus originate from the poles at and\nterminate on the zeros at infinity. The remaining one branch originates from the pole at s=–5\nand terminates on the zero at s=0.\nNote that the closed-loop poles with z=0.4 must lie on straight lines passing through the\norigin and making the angles with the negative real axis. In the present case, there are two\nintersections of the root-locus branch in the upper half s plane and the straight line of angle 66.42°.\nThus, two values of K will give the damping ratio zof the closed-loop poles equal to 0.4.At pointP,\nthe value of K is\nHence\nk = K\n20 = 0.4490\n  \nat point P\nK =\n2\n(s + j2)(s - j2)(s + 5)\ns\n2\ns =- 1.0490 + j2.4065\n= 8.9801\n;66.42°\ns =; j2\nu = 180° - 90° - 21.8° + 90° = 158.2°\ns =- 2.5\nlim\ns Sq\nKs\ns\n3\n+ 5s\n2\n+ 4s + 20 = lim\ns Sq\nK\ns\n2\n+ 5s + p = lim\ns Sq\nK\n(s + 2.5)\n2\nAngles of asymptote =\n;180°(2k + 1)\n2 =; 90°\nlim\ns Sq\nKs\n(s + j2)(s - j2)(s + 5) = lim\ns Sq\nK\ns\n2\n1 + Ks\n(s + j2)(s - j2)(s + 5) = 0\n1 + Ks\ns\n3\n+ 5s\n2\n+ 4s + 20 = 0\ns\n3\n+ 5s\n2\n+ 4s + Ks + 20 = 0\n20k = K\ns\n3\n+ 5s\n2\n+ 4s + 20ks + 20 = 0\nOpenmirrors.comSection 6–9 / Parallel Compensation 345\nAt point Q, the value of K is\nHence\nThus, we have two solutions for this problem. For k=0.4490, the three closed-loop poles are\nlocated at\nFor k=1.4130, the three closed-loop poles are located at\nIt is important to point out that the zero at the origin is the open-loop zero, but not the\nclosed-loop zero. This is evident, because the original system shown in Figure 6–61 does not\nhave a closed-loop zero, since\nG(s)\nR(s) = 20\ns(s + 1)(s + 4) + 20(1 + ks)\ns =- 2.1589 + j4.9652,  s =- 2.1589 - j4.9652,  s =- 0.6823\ns =- 1.0490 + j2.4065,  s =- 1.0490 - j2.4065,  s =- 2.9021\nk = K\n20 = 1.4130  at point Q\nK = 2(s + j2)(s - j2)(s + 5)\ns\n2\ns =- 2.1589 + j4.9652\n= 28.260\njv\nj6\nj5\nj4\nj3\nj2\nj1\n–j6\n–j5\n–j4\n–j3\n–j2\n–j1\ns–11 0–2–3–4–5–6–7\ns =– 2.1589 + j4.9652\nQ\nP\ns = –1.0490 + j2.4065\ns =– 2.9021 66.42°\nFigure 6–62\nRoot-locus plot for\nthe system shown in\nFigure 6–61.346\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nThe open-loop zero at s=0 was introduced in the process of modifying the characteristic equa-\ntion such that the adjustable variable K=20k was to appear as a multiplying factor.\nWe have obtained two different values of k to satisfy the requirement that the damping ratio\nof the dominant closed-loop poles be equal to 0.4. The closed-loop transfer function with\nk=0.4490 is given by\nThe closed-loop transfer function with k=1.4130 is given by\nNotice that the system with k=0.4490 has a pair of dominant complex-conjugate closed-loop\npoles, while in the system with k=1.4130 the real closed-loop pole at s=–0.6823 is dominant,\nand the complex-conjugate closed-loop poles are not dominant. In this case, the response char-\nacteristic is primarily determined by the real closed-loop pole.\nLet us compare the unit-step responses of both systems. MATLAB Program 6–14 may be\nused for plotting the unit-step response curves in one diagram. The resulting unit-step response\ncurves for k=0.4490 and c\n2\n(t) for k=1.4130Dare shown in Figure 6–63.Cc\n1\n(t)\n = 20\n(s + 2.1589 + j4.9652)(s + 2.1589 - j4.9652)(s + 0.6823)\n \nC(s)\nR(s) = 20\ns\n3\n+ 5s\n2\n+ 32.26s + 20\n = 20\n(s + 1.0490 + j2.4065)(s + 1.0490 - j2.4065)(s + 2.9021)\n \nC(s)\nR(s) = 20\ns\n3\n+ 5s\n2\n+ 12.98s + 20\nMATLAB Program 6–14\n% ---------- Unit-step response ----------\n% ***** Enter numerators and denominators of systems with\n% k = 0.4490 and k = 1.4130, respectively. *****\nnum1 = [20];\nden1 = [1  5  12.98  20];\nnum2 = [20];\nden2 = [1  5  32.26  20];\nt = 0:0.1:10;\nc1 = step(num1,den1,t);\nc2 = step(num2,den2,t);\nplot(t,c1,t,c2)\ntext(2.5,1.12,'k = 0.4490')\ntext(3.7,0.85,'k = 1.4130')\ngrid\ntitle('Unit-step Responses of Two Systems')\nxlabel('t Sec')\nylabel('Outputs c1 and c2')\nOpenmirrors.comExample Problems and Solutions 347\nFrom Figure 6–63 we notice that the response of the system with k=0.4490 is oscillatory.\n(The effect of the closed-loop pole at s=–2.9021 on the unit-step response is small.) For the\nsystem with k=1.4130, the oscillations due to the closed-loop poles at \ndamp out much faster than purely exponential response due to the closed-loop pole at s=–0.6823.\nThe system with k=0.4490 (which exhibits a faster response with relatively small overshoot)\nhas a much better response characteristic than the system with k=1.4130 (which exhibits a slow\noverdamped response). Therefore, we should choose k=0.4490 for the present system.\nEXAMPLE PROBLEMS AND SOLUTIONS\nA–6–1. Sketch the root loci for the system shown in Figure 6–64(a). (The gain K is assumed to be posi-\ntive.) Observe that for small or large values of K the system is overdamped and for medium val-\nues of K it is underdamped.\nSolution. The procedure for plotting the root loci is as follows:\n1. Locate the open-loop poles and zeros on the complex plane. Root loci exist on the negative\nreal axis between 0 and –1 and between –2 and –3.\n2. The number of open-loop poles and that of finite zeros are the same. This means that there\nare no asymptotes in the complex region of the s plane.\n3. Determine the breakaway and break-in points. The characteristic equation for the system is\nor\nK =-\ns(s + 1)\n(s + 2)(s + 3)\n1 +\nK(s + 2)(s + 3)\ns(s + 1) = 0\ns =- 2.1589 ; j4.9652\nt Sec\n01 1 0 52 3 4 6 7 8 9\nOutputs c1 and c2\n1.2\n0.4\n0\n0.6\n0.2\n1\n0.8\nUnit-Step Responses of Two Systems\nk = 1.4130\nk = 0.4490\nFigure 6–63\nUnit-step response\ncurves for the system\nshown in Figure 6–61\nwhen the damping\nratioz of the\ndominant closed-\nloop poles is set\nequal to 0.4. (Two\npossible values of k\ngive the damping\nratioz equal to 0.4.)348\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nThe breakaway and break-in points are determined from\nas follows:\nNotice that both points are on root loci. Therefore, they are actual breakaway or break-in\npoints. At point s=–0.634, the value of K is\nSimilarly, at s=–2.366,\n(Because point s=–0.634 lies between two poles, it is a breakaway point, and because point\ns=–2.366 lies between two zeros, it is a break-in point.)\nK =-\n(–2.366)(–1.366)\n(–0.366)(0.634) = 14\nK =-\n(-0.634)(0.366)\n(1.366)(2.366) = 0.0718\ns =- 0.634,\n  \ns =- 2.366\n = 0\n =-  \n4(s + 0.634)(s + 2.366)\nC(s + 2)(s + 3)D\n2\n dK\nds =-  \n(2s + 1)(s + 2)(s + 3) - s(s + 1)(2s + 5)\nC(s + 2)(s + 3)D\n2\n(a) (b)\nR(s) C(s)\njv\ns\nK = 0.0718\nK = 14\n–3– 2– 1 0 1\nj1\nj2\n–j1\n–j2\nK(s + 2) s + 3\ns(s + 1)\n+ –\nFigure 6–64\n(a) Control system; (b) root-locus plot.\nOpenmirrors.comExample Problems and Solutions\n349\n4. Determine a sufficient number of points that satisfy the angle condition. (It can be found\nthat the root loci involve a circle with center at –1.5 that passes through the breakaway and\nbreak-in points.) The root-locus plot for this system is shown in Figure 6–64(b).\nNote that this system is stable for any positive value of K since all the root loci lie in the left-\nhalf s plane.\nSmall values of K (0<K<0.0718) correspond to an overdamped system. Medium values\nof K (0.0718<K<14) correspond to an underdamped system. Finally, large values of\nK (14<K) correspond to an overdamped system. With a large value of K, the steady state can\nbe reached in much shorter time than with a small value of K.\nThe value of K should be adjusted so that system performance is optimum according to a\ngiven performance index.\nA–6–2. Sketch the root loci for the system shown in Figure 6–65(a).\nSolution. A root locus exists on the real axis between points s=–1 and s=–3.6. The asymp-\ntotes can be determined as follows:\nThe intersection of the asymptotes and the real axis is found from\ns =- 0 + 0 + 3.6 - 1\n3 - 1 =- 1.3\nAngles of asymptotes =\n;180°(2k + 1)\n3 - 1 = 90°, -90°\n(a)\n(b)\njv\ns–4 –3 –20 1\nj3\nj1\n–j1\n–j3\n–1\n–j2\nj2\nK(s + 1)\ns\n2\n(s + 3.6)\n+ –\nFigure 6–65\n(a) Control system; (b) root-locus plot.\nOpenmirrors.com350\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nSince the characteristic equation is\nwe have\nThe breakaway and break-in points are found from\nor\nfrom which we get\nPoint s=0 corresponds to the actual breakaway point. But points are neither\nbreakaway nor break-in points, because the corresponding gain values K become complex\nquantities.\nTo check the points where root-locus branches may cross the imaginary axis, substitute \ninto the characteristic equation, yielding.\nor\nNotice that this equation can be satisfied only if v=0, K=0. Because of the presence of a dou-\nble pole at the origin, the root locus is tangent to the jv axis at v=0. The root-locus branches do\nnot cross the jv axis. Figure 6–65(b) is a sketch of the root loci for this system.\nA–6–3. Sketch the root loci for the system shown in Figure 6–66(a).\nSolution. A root locus exists on the real axis between point s=–0.4 and s=–3.6. The angles of\nasymptotes can be found as follows:\nThe intersection of the asymptotes and the real axis is obtained from\nNext we shall find the breakaway points. Since the characteristic equation is\nwe have\nK =- s\n3\n+ 3.6s\n2\ns + 0.4\ns\n3\n+ 3.6s\n2\n+ Ks + 0.4K = 0\ns =- 0 + 0 + 3.6 - 0.4\n3 - 1 =- 1.6\nAngles of asymptotes =\n;180°(2k + 1)\n3 - 1 = 90°, -90°\nAK - 3.6v\n2\nB+ jvAK - v\n2\nB = 0\n(jv)\n3\n+ 3.6(jv)\n2\n+ Kjv + K = 0\ns = jv\ns = 1.65 ; j0.9367\ns = 0,\n  \ns =- 1.65 + j0.9367,\n  \ns =- 1.65 - j0.9367\ns\n3\n+ 3.3s\n2\n+ 3.6s = 0\ndK\nds =-\nA3s\n2\n+ 7.2sB(s + 1) - As\n3\n+ 3.6s\n2\nB\n(s + 1)\n2\n= 0\nK =- s\n3\n+ 3.6s\n2\ns + 1\ns\n3\n+ 3.6s\n2\n+ K(s + 1) = 0\nOpenmirrors.comExample Problems and Solutions 351\nThe breakaway and break-in points are found from\nfrom which we get\nor\nThus, the breakaway or break-in points are at s=0 and s=–1.2. Note that s=–1.2 is a double\nroot.When a double root occurs in at point s=–1.2, at this point.The\nvalue of gain K at point s=–1.2 is\nThis means that with K=4.32 the characteristic equation has a triple root at point s=–1.2. This\ncan be easily verified as follows:\ns3 + 3.6s2 + 4.32s + 1.728 = (s + 1.2)3 = 0\nK =- s3 + 3.6s2\ns + 4\n2\ns =- 1.2\n= 4.32\nd2K/H20862Ads2B= 0dK/H20862ds = 0\ns(s + 1.2)2 = 0\ns3 + 2.4s2 + 1.44s = 0\ndK\nds =-\nA3s2 + 7.2sB(s + 0.4) - As3 + 3.6s2B\n(s + 0.4)2 = 0\n(a) (b)\njv\ns–4 –3 –20 1\nj3\nj1\n–j1\n–j3\n–j2\nj2\nK(s + 0.4)\ns2(s + 3.6)\n–1\n–60°\n60°\n+ –\nFigure 6–66\n(a) Control system; (b) root-locus plot.352\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nHence, three root-locus branches meet at point s=–1.2. The angles of departures at point\ns=–1.2 of the root locus branches that approach the asymptotes are that is, 60° and\n–60°. (See Problem A–6–4.)\nFinally, we shall examine if root-locus branches cross the imaginary axis. By substituting s=jv\ninto the characteristic equation, we have\nor\nThis equation can be satisfied only if v=0, K=0. At point v=0, the root locus is tangent to\nthe jv axis because of the presence of a double pole at the origin.There are no points where root-\nlocus branches cross the imaginary axis.\nA sketch of the root loci for this system is shown in Figure 6–66(b).\nA–6–4. Referring to Problem A–6–3, obtain the equations for the root-locus branches for the system\nshown in Figure 6–66(a). Show that the root-locus branches cross the real axis at the breakaway\npoint at angles ; 60°.\nSolution. The equations for the root-locus branches can be obtained from the angle condition\nwhich can be rewritten as\nBy substituting we obtain\nor\nBy rearranging, we have\nTaking tangents of both sides of this last equation, and noting that\nwe obtain\nwhich can be simplified to\nvs - v(s + 0.4)\n(s + 0.4)s + v\n2\n=\nv(s + 3.6) + vs\ns(s + 3.6) - v\n2\nv\ns + 0.4 - v\ns\n1 + v\ns + 0.4\nv\ns\n=\nv\ns + v\ns + 3.6\n1 - v\ns\nv\ns + 3.6\ntan\n \nc\ntan\n-1\n \na\nv\ns + 3.6\nb\n; 180°(2k + 1)\nd\n= v\ns + 3.6\ntan\n-1\n \na\nv\ns + 0.4\nb\n- tan\n-1\n \na\nv\ns\nb\n= tan\n-1\n \na\nv\ns\nb\n+ tan\n-1\n \na\nv\ns + 3.6\nb\n;180°(2k + 1)\ntan\n-1\n \na\nv\ns + 0.4\nb\n- 2 tan\n-1\n \na\nv\ns\nb\n- tan\n-1\n \na\nv\ns + 3.6\nb\n=; 180°(2k + 1)\n/\ns + jv + 0.4\n- 2\n/\ns + jv\n-\n/\ns + jv + 3.6\n=; 180°(2k + 1)\ns = s + jv,\n/\ns + 0.4\n- 2\n/\ns\n-\n/\ns + 3.6\n=; 180°(2k + 1)\nn\nK(s + 0.4)\ns\n2\n(s + 3.6)\n=; 180°(2k + 1)\nA0.4K - 3.6v\n2\nB + jvAK - v\n2\nB = 0\n(jv)\n3\n+ 3.6(jv)\n2\n+ K(jv) + 0.4K = 0\n;180°/H208623,\nOpenmirrors.comExample Problems and Solutions 353\nor\nwhich can be further simplified to\nFor s Z –1.6, we may write this last equation as\nwhich gives the equations for the root locus as follows:\nThe equation v=0 represents the real axis. The root locus for 0 /H11349K /H11349q is between points\ns=–0.4 and s=–3.6. (The real axis other than this line segment and the origin s=0 corre-\nsponds to the root locus for –q /H11349K<0.)\nThe equations\n(6–29)\nrepresent the complex branches for 0 /H11349K /H11349q. These two branches lie between s=–1.6 and\ns=0. [See Figure 6–66(b).] The slopes of the complex root-locus branches at the breakaway\npoint (s=–1.2) can be found by evaluating of Equation (6–29) at point s=–1.2.\nSince the root-locus branches intersect the real axis with angles \nA–6–5. Consider the system shown in Figure 6–67(a). Sketch the root loci for the system. Observe that\nfor small or large values of K the system is underdamped and for medium values of K it is\noverdamped.\nSolution. A root locus exists on the real axis between the origin and –q. The angles of asymp-\ntotes of the root-locus branches are obtained as\nThe intersection of the asymptotes and the real axis is located on the real axis at\nThe breakaway and break-in points are found from Since the characteristic equation is\ns3 + 4s2 + 5s + K = 0\ndK/H20862ds = 0.\ns =- 0 + 2 + 2\n3 =- 1.3333\nAngles of asymptotes =\n;180°(2k + 1)\n3 = 60°, -60°, -180°\n;60°.tan-1 13 = 60°,\ndv\nds\n2\ns=- 1.2\n=; A\n-s\ns + 1.6\n2\ns=- 1.2\n=; A\n1.2\n0.4 =; 13\ndv/H20862ds\nv =; (s + 1.2)A\n-s\ns + 1.6\n v=- (s + 1.2)A\n-s\ns + 1.6\n v= (s + 1.2)A\n-s\ns + 1.6\n v= 0\nvcv - (s + 1.2)A\n-s\ns + 1.6 dcv + (s + 1.2)A\n-s\ns + 1.6 d= 0\nvCs(s + 1.2)2 + (s + 1.6)v2 D = 0\nvAs3 + 2.4s2 + 1.44s + 1.6v2 + sv2B= 0354\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nwe have\nNow we set\nwhich yields\nSince these points are on root loci, they are actual breakaway or break-in points. (At point s=–1,\nthe value of K is 2, and at point s=–1.6667, the value of K is 1.852.)\nThe angle of departure from a complex pole in the upper-half s plane is obtained from\nor\nThe root-locus branch from the complex pole in the upper-half s plane breaks into the real axis\nat s=–1.6667.\nNext we determine the points where root-locus branches cross the imaginary axis. By substi-\ntuting s=jv into the characteristic equation, we have\nor\nfrom which we obtain\nv =; 15\n,\n  \nK = 20\n  \nor\n  \nv = 0,\n  \nK = 0\nAK - 4v\n2\nB+ jvA5 - v\n2\nB= 0\n(jv)\n3\n+ 4(jv)\n2\n+ 5(jv) + K = 0\nu =- 63.43°\nu = 180° - 153.43° - 90°\ns =- 1,\n  \ns =- 1.6667\ndK\nds =- A3s\n2\n+ 8s + 5B = 0\nK =- As\n3\n+ 4s\n2\n+ 5sB\n(a)\n(b)\nK\ns(s\n2\n+ 4s + 5)\njv\ns–4 –3 –20 1\nj3\nj2\nj1\n–j2\n–j1\n–j3\n–1\nK = 2K = 1.852\n+ –\nFigure 6–67\n(a) Control system;\n(b) root-locus plot.\nOpenmirrors.comExample Problems and Solutions 355\nRoot-locus branches cross the imaginary axis at and The root-locus branch\non the real axis touches the jv axis at v=0. A sketch of the root loci for the system is shown in\nFigure 6–67(b).\nNote that since this system is of third order, there are three closed-loop poles. The nature of\nthe system response to a given input depends on the locations of the closed-loop poles.\nFor 0<K<1.852, there are a set of complex-conjugate closed-loop poles and a real closed-\nloop pole. For 1.852 /H11349K /H113492, there are three real closed-loop poles. For example, the closed-\nloop poles are located at\nFor 2<K, there are a set of complex-conjugate closed-loop poles and a real closed-loop pole.\nThus, small values of K (0<K<1.852) correspond to an underdamped system. (Since the real\nclosed-loop pole dominates, only a small ripple may show up in the transient response.) Medium\nvalues of K (1.852 /H11349K /H113492) correspond to an overdamped system. Large values ofK (2<K)\ncorrespond to an underdamped system.With a large value of K, the system responds much faster\nthan with a smaller value of K.\nA–6–6. Sketch the root loci for the system shown in Figure 6–68(a).\nSolution. The open-loop poles are located at s=0, s=–1, s=–2+j3,and s=–2-j3.A root\nlocus exists on the real axis between points s=0 and s=–1. The angles of the asymptotes are\nfound as follows:\nAngles of asymptotes =\n;180°(2k + 1)\n4 = 45°, -45°, 135°, -135°\n s =- 1,    s =- 1,    s =- 2,    for K = 2\n s =- 1.667,   s =- 1.667,   s =- 0.667,   for K = 1.852\nv =- 15 .v = 15\n(a) (b)\njv\ns–4 –3–6 –53 –22 01\nj3\nj4\nj5\nj1\n–j1\n–j3\n–j4\n–j5\n–1\n–j2\nj2\nK\ns(s + 1) (s2 + 4s +13)+ –\nFigure 6–68\n(a) Control system; (b) root-locus plot.356\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nThe intersection of the asymptotes and the real axis is found from\nThe breakaway and break-in points are found from Noting that\nwe have\nfrom which we get\nPoint s=–0.467 is on a root locus. Therefore, it is an actual breakaway point. The gain values K\ncorresponding to points are complex quantities. Since the gain values are\nnot real positive, these points are neither breakaway nor break-in points.\nThe angle of departure from the complex pole in the upper-half s plane is\nor\nNext we shall find the points where root loci may cross the jv axis. Since the characteristic\nequation is\nby substituting s=jv into it we obtain\nor\nfrom which we obtain\nThe root-locus branches that extend to the right-half s plane cross the imaginary axis at\nAlso, the root-locus branch on the real axis touches the imaginary axis at \nFigure 6–68(b) shows a sketch of the root loci for the system. Notice that each root-locus branch\nthat extends to the right-half s plane crosses its own asymptote.\nv = 0.v =; 1.6125.\nv =; 1.6125,\n  \nK = 37.44\n  \nor\n  \nv = 0,\n  \nK = 0\nAK + v\n4\n- 17v\n2\nB + jvA13 - 5v\n2\nB = 0\n(jv)\n4\n+ 5(jv)\n3\n+ 17(jv)\n2\n+ 13(jv) + K = 0\ns\n4\n+ 5s\n3\n+ 17s\n2\n+ 13s + K = 0\nu =- 142.13°\nu = 180° - 123.69° - 108.44° - 90°\ns =- 1.642 ; j2.067\ns =- 0.467,\n  \ns =- 1.642 + j2.067,\n  \ns =- 1.642 - j2.067\ndK\nds =- A4s\n3\n+ 15s\n2\n+ 34s + 13B = 0\nK =- s(s + 1)As\n2\n+ 4s + 13B =- As\n4\n+ 5s\n3\n+ 17s\n2\n+ 13sB\ndK/H20862ds = 0.\ns =- 0 + 1 + 2 + 2\n4 =- 1.25\nOpenmirrors.comExample Problems and Solutions 357\nA–6–7. Sketch the root loci of the control system shown in Figure 6–69(a). Determine the range of gain\nK for stability.\nSolution. Open-loop poles are located at s=1, and A root locus\nexists on the real axis between points s=1 and s=– q. The asymptotes of the root-locus\nbranches are found as follows:\nThe intersection of the asymptotes and the real axis is obtained as\nThe breakaway and break-in points can be located from Since\nwe have\nwhich yields\n(s+1)2=0\ndK\nds =- A3s2 + 6s + 3B= 0\nK =- (s - 1)As2 + 4s + 7B=- As3 + 3s2 + 3s - 7B\ndK/H20862ds = 0.\ns =- -1 + 2 + 2\n3 =- 1\nAngles of asymptotes =\n;180°(2k + 1)\n3 = 60°, -60°, 180°\ns =- 2 - j13 .s =- 2 + j13 ,\njv\ns\nj3\nj2\nj1\n(a) (b)\nK\n(s – 1) (s2 + 4s + 7)\n–j3\n–j1\n–4 –3 –20 1\nK = 7K = 8\nK = 16\n–1\n+ – –j2\nFigure 6–69\n(a) Control system; (b) root-locus plot.358\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nThus the equation dK/H20862ds=0 has a double root at s=–1. (This means that the characteristic\nequation has a triple root at s=–1.) The breakaway point is located at s=–1. Three root-locus\nbranches meet at this breakaway point.The angles of departure of the branches at the breakaway\npoint are ;180°/H208623—that is, 60° and –60°.\nWe shall next determine the points where root-locus branches may cross the imaginary axis.\nNoting that the characteristic equation is\nor\nwe substitute into it and obtain\nBy rewriting this last equation, we have\nThis equation is satisfied when\nThe root-locus branches cross the imaginary axis at (where K=16) and (where\nK=7). Since the value of gain K at the origin is 7, the range of gain value K for stability is\nFigure 6–69(b) shows a sketch of the root loci for the system. Notice that all branches consist of\nparts of straight lines.\nThe fact that the root-locus branches consist of straight lines can be verified as follows: Since\nthe angle condition is\nwe have\nBy substituting into this last equation,\nor\nwhich can be rewritten as\ntan\n-1\n \na\nv + 13\ns + 2\nb\n+ tan\n-1\n \na\nv - 13\ns + 2\nb\n=- tan\n-1\n \na\nv\ns - 1\nb\n; 180°(2k + 1)\n/\ns + 2 + jAv + 13\nB\n+\n/\ns + 2 + jAv - 13\nB\n=-\n/\ns - 1 + jv\n; 180°(2k + 1)\n/\ns - 1 + jv\n+\n/\ns + 2 + jv + j13\n+\n/\ns + 2 + jv - j13\n=; 180°(2k + 1)\ns = s + jv\n-\n/\ns - 1\n-\n/\ns + 2 + j13\n-\n/\ns + 2 - j13\n=; 180°(2k + 1)\nn\nK\n(s - 1)As + 2 + j13\nBAs + 2 - j13\nB\n=; 180°(2k + 1)\n7 6 K 6 16\nv = 0v =; 13\nv =; 13\n,\n  \nK = 7 + 3v\n2\n= 16\n  \nor\n  \nv = 0,\n  \nK = 7\nAK - 7 - 3v\n2\nB+ jvA3 - v\n2\nB = 0\n(jv)\n3\n+ 3(jv)\n2\n+ 3(jv) - 7 + K = 0\ns = jv\ns\n3\n+ 3s\n2\n+ 3s - 7 + K = 0\n(s - 1)As\n2\n+ 4s + 7B+ K = 0\nOpenmirrors.comExample Problems and Solutions 359\nTaking tangents of both sides of this last equation, we obtain\nor\nwhich can be simplified to\nor\nFurther simplification of this last equation yields\nwhich defines three lines:\nThus the root-locus branches consist of three lines. Note that the root loci for K>0 consist of\nportions of the straight lines as shown in Figure 6–69(b). (Note that each straight line starts from\nan open-loop pole and extends to infinity in the direction of 180°, 60°, or –60° measured from the\nreal axis.) The remaining portion of each straight line corresponds to K<0.\nA–6–8. Consider a unity-feedback control system with the following feedforward transfer function:\nUsing MATLAB, plot the root loci and their asymptotes.\nSolution. We shall plot the root loci and asymptotes on one diagram. Since the feedforward trans-\nfer function is given by \nthe equation for the asymptotes may be obtained as follows: Noting that\nthe equation for the asymptotes may be given by\nGa(s) = K\n(s + 1)3\nlim\ns Sq\nK\ns3 + 3s2 + 2s /H11216lim\ns Sq\nK\ns3 + 3s2 + 3s + 1 = K\n(s + 1)3\n= K\ns3 + 3s2 + 2s\nG(s) = K\ns(s + 1)(s + 2)\nG(s) = K\ns(s + 1)(s + 2)\nv = 0,  s + 1 + 1\n13 v = 0,  s + 1 - 1\n13 v = 0\nvas + 1 + 1\n13 vba s + 1 - 1\n13 vb = 0\nvA3s2 + 6s + 3 - v2B= 0\n2v(s + 2)(s - 1) =- vAs2 + 4s + 7 - v2B\n2v(s + 2)\ns2 + 4s + 4 - v2 + 3 =- v\ns - 1\nv + 13\ns + 2 + v - 13\ns + 2\n1 - av + 13\ns + 2 ba v - 13\ns + 2 b\n=- v\ns - 1360\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nHence, for the system we have\nnum = [1]\nden = [1  3  2  0]\nand for the asymptotes,\nnuma = [1]\ndena = [1  3  3  1]\nIn using the following root-locus and plot commands\nr = rlocus(num,den)\na = rlocus(numa,dena)\nplot([r  a])\nthe number of rows of r and that of a must be the same. To ensure this, we include the gain con-\nstant K in the commands. For example,\nK1 = 0:0.1:0.3;\nK2 = 0.3:0.005:0.5:\nK3 = 0.5:0.5:10;\nK4 = 10:5:100;\nK = [K1  K2  K3  K4]\nr = rlocus(num,den,K)\na = rlocus(numa,dena,K)\ny = [r    a]\nplot(y, '-')\nMATLAB Program 6–15 will generate a plot of root loci and their asymptotes as shown in Figure 6–70.\nMATLAB Program 6–15\n% ---------- Root-Locus Plots ----------\nnum = [1];\nden = [1  3  2  0];\nnuma = [1];\ndena = [1  3  3  1];\nK1 = 0:0.1:0.3;\nK2 = 0.3:0.005:0.5;\nK3 = 0.5:0.5:10;\nK4 = 10:5:100;\nK = [K1  K2  K3  K4];\nr = rlocus(num,den,K);\na = rlocus(numa,dena,K);\ny = [r    a];\nplot(y,'-')\nv = [-4  4  -4  4]; axis(v)\ngrid\ntitle('Root-Locus Plot of G(s) = K/[s(s + 1)(s + 2)] and Asymptotes')\nxlabel('Real Axis')\nylabel('Imag Axis')\n% ***** Manually draw open-loop poles in the hard copy *****\nOpenmirrors.comExample Problems and Solutions 361\nDrawing two or more plots in one diagram can also be accomplished by using the hold com-\nmand. MATLAB Program 6–16 uses the hold command. The resulting root-locus plot is shown\nin Figure 6–71.\nRoot-Locus Plot of G(s) = K/[(s(s+1)(s+2)] and Asymptotes\nImag Axis\n4\n–4\n0\n3\n2\n1\n–1\n–2\n–3\nReal Axis\n–4 1 –3 –2 –1 0 42 3Figure 6–70\nRoot-locus plot.\nMATLAB Program 6–16\n% ------------ Root-Locus Plots ------------\nnum = [1];\nden = [1  3  2  0];\nnuma = [1];\ndena = [1  3  3  1];\nK1 = 0:0.1:0.3;\nK2 = 0.3:0.005:0.5;\nK3 = 0.5:0.5:10;\nK4 = 10:5:100;\nK = [K1  K2  K3  K4];\nr = rlocus(num,den,K);\na = rlocus(numa,dena,K);\nplot(r,'o')\nhold\nCurrent plot held\nplot(a,'-')\nv = [-4  4  -4  4]; axis(v)\ngrid\ntitle('Root-Locus Plot of G(s) = K/[s(s+1)(s+2)] and Asymptotes')\nxlabel('Real Axis')\nylabel('Imag Axis')362\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nA–6–9. Plot the root loci and asymptotes for a unity-feedback system with the following feedforward\ntransfer function:\nDetermine the exact points where the root loci cross the jv axis\nSolution. The feedforward transfer function G(s) can be written as\nNote that as s approaches infinity, can be written as \nwhere we used the following formula:\nThe expression\ngives the equation for the asymptotes.\nlim\ns Sq\nG(s) = lim\ns Sq\nK\n(s + 1)\n4\n(s + a)\n4\n= s\n4\n+ 4as\n3\n+ 6a\n2\ns\n2\n+ 4a\n3\ns + a\n4\n= lim\ns Sq\nK\n(s + 1)\n4\n/H11216lim\ns Sq\nK\ns\n4\n+ 4s\n3\n+ 6s\n2\n+ 4s + 1\nlim\ns Sq\nG(s) = lim\ns Sq\nK\ns\n4\n+ 4s\n3\n+ 11s\n2\n+ 14s + 10\nlim\ns Sq\nG(s)\nG(s) = K\ns\n4\n+ 4s\n3\n+ 11s\n2\n+ 14s + 10\nG(s) = K\n(s\n2\n+ 2s + 2)(s\n2\n+ 2s + 5)\nRoot-Locus Plot of G(s) = K/[s(s+1)(s+2)] and Aysmptotes\nImag Axis\n4\n–4\n0\n3\n2\n1\n–1\n–2\n–3\nReal Axis\n–4 1 –3\n–2\n–1\n04\n2\n3\nFigure 6–71\nRoot-locus plot.\nOpenmirrors.comExample Problems and Solutions 363\nThe MATLAB program to plot the root loci of G(s) and the asymptotes is given in MATLAB\nProgram 6–17. Note that the numerator and denominator for G(s) are\nnum = [1]\nden = [1  4  11  14  10]\nFor the numerator and denominator of the asymptotes we used\nnuma = [1]\ndena = [1  4  6  4  1]\nFigure 6–72 shows the plot of the root loci and asymptotes.\nSince the characteristic equation for the system is \n(s2 + 2s + 2)(s2 + 2s + 5) + K = 0\nlim\ns Sq\nG(s)\nMATLAB Program 6–17\n% ***** Root-locus plot ***** \nnum = [1];\nden = [1   4  11  14   10];\nnuma = [1];\ndena = [1   4  6  4   1];\nr = rlocus(num,den);\nplot(r,'-')\nhold\nCurrent plot held\nplot(r,'o')\nrlocus(numa,dena);\nv = [-6  4  -5  5]; axis(v); axis('square')\ngrid\ntitle('Plot of Root Loci and Asymptotes')\n420−6 −4 −2\n0\n1\n5\n3\n2\n4\n−2\n−1\n−5\n−4\n−3\nReal Axis\nImag Axis\nPlot of Root Loci and Asymptotes\nFigure 6–72\nPlot of root loci and\nasymptotes.364\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nthe points where the root loci cross the imaginary axis can be found by substituting s=jv with\nthe characteristic equation as follows:\nand equating the imaginary part to zero. The result is\nThus the exact points where the root loci cross the jv axis are By equating the real\npart to zero, we get the gain value K at the crossing points to be 16.25.\nA–6–10. Consider a unity-feedback control system with the feed-forward transfer function G(s) given by\nPlot a root-locus diagram with MATLAB.\nSolution. The feedforward transfer function G(s) can be written as\nA possible MATLAB program to plot a root-locus diagram is shown in MATLAB Program 6–18.\nThe resulting root-locus plot is shown in Figure 6–73.\nG(s) =\nK(s + 1)\ns\n4\n+ 4s\n3\n+ 11s\n2\n+ 14s + 10\nG(s) =\nK(s + 1)\n(s\n2\n+ 2s + 2)(s\n2\n+ 2s + 5)\nv =; 1.8708.\nv =; 1.8708\n= (v\n4\n- 11v\n2\n+ 10 + K) + j(-4v\n3\n+ 14v) = 0\n[(jv)\n2\n+ 2jv + 2][(jv)\n2\n+ 2jv + 5] + K\nMATLAB Program 6–18\nnum = [1  1];\nden = [1  4  11  14  10];\nK1 = 0:0.1:2;\nK2 = 2:0.0.2:2.5;\nK3 = 2.5:0.5:10;\nK4 = 10:1:50;\nK = [K1  K2  K3  K4]\nr = rlocus(num,den,K);\nplot(r, 'o')\nv = [-8  2  -5  5]; axis(v); axis('square')\ngrid\ntitle('Root-Locus Plot of G(s) = K(s+1)/[(s^2+2s+2)(s^2+2s+5)]')\nxlabel('Real Axis')\nylabel('Imag Axis')\nOpenmirrors.comExample Problems and Solutions 365\nA–6–11. Obtain the transfer function of the mechanical system shown in Figure 6–74. Assume that the\ndisplacement xi is the input and displacement xo is the output of the system.\nSolution. From the diagram we obtain the following equations of motion:\nTaking the Laplace transforms of these two equations, assuming zero initial conditions, and then\neliminating Y(s), we obtain\nThis is the transfer function between and By defining\nwe obtain\nThis mechanical system is a mechanical lead network.\nXo(s)\nXi(s) = a Ts + 1\naTs + 1 =\ns + 1\nT\ns + 1\naT\nb1\nk = T,  b2\nb1 + b2\n= a 6 1\nXi(s).Xo(s)\nXo(s)\nXi(s) = b2\nb1 + b2\nb1\nk s + 1\nb2\nb1 + b2\nb1\nk s + 1\n b1Ax#\no - y# B= ky\n b2Ax#\ni - x#\noB= b1Ax#\no - y# B\n−3 −2 −10 1−4−5−8 2−7 −6\n0\n1\n3\n2\n4\n5\n−2\n−1\n−5\n−4\n−3\nReal Axis\nImag Axis\nRoot-Locus Plot of G(s) = K(s + 1)/[(s2 + 2s + 2)(s2 + 2s + 5)]\nFigure 6–73\nPlot of root loci.\nb2\nb1\nk y\nxi\nxo\nFigure 6–74\nMechanical system.366\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nA–6–12. Obtain the transfer function of the mechanical system shown in Figure 6–75.Assume that the dis-\nplacement x\ni\nis the input and displacement x\no\nis the output.\nSolution. The equations of motion for this system are\nBy taking the Laplace transforms of these two equations, assuming zero initial conditions, we\nobtain\nIf we eliminate Y(s) from the last two equations, the transfer function can be\nobtained as\nDefine\nIf k\n1\n, k\n2\n, b\n1\n, and b\n2\nare chosen such that there exists a ı that satisfies the following equation:\n(6–30)\nthen can be obtained as\n[Note that depending on the choice of k\n1\n, k\n2\n, b\n1\n, and b\n2\n, there does not exist a ı that satisfies\nEquation (6–30).]\nIf such a ı exists and if for a given s\n1\n(where s = s\n1\nis one of the dominant closed-loop poles\nof the control system to which we wish to use this mechanical device) the following conditions are\nsatisfied:\nthen the mechanical system shown in Figure 6–75 acts as a lag–lead compensator.\n-5° 6\nn\ns\n1\n+ 1\nT\n2\ns\n1\n+ 1\nbT\n2\n6 0°\n4\ns\n1\n+ 1\nT\n2\ns\n1\n+ 1\nbT\n2\n4\n/H112161,\n \nX\no\n(s)\nX\ni\n(s) =\nAT\n1\n \ns + 1BAT\n2\n \ns + 1B\na\nT\n1\nb s + 1\nb\nAbT\n2\n \ns + 1B\n=\na\ns + 1\nT\n1\nba\ns + 1\nT\n2\nb\na\ns + b\nT\n1\nba\ns + 1\nbT\n2\nb\nX\no\n(s)/H20862X\ni\n(s)\nb\n1\nk\n1\n+ b\n2\nk\n2\n+ b\n1\nk\n2\n= T\n1\nb + bT\n2\n  \n(b 7 1)\nT\n1\n= b\n1\nk\n1\n, T\n2\n= b\n2\nk\n2\n,\n \nX\no\n(s)\nX\ni\n(s) =\na\nb\n1\nk\n1\n s + 1\nba\nb\n2\nk\n2\n s + 1\nb\na\nb\n1\nk\n1\n s + 1\nba\nb\n2\nk\n2\n s + 1\nb\n+ b\n1\nk\n2\n s\nX\no\n(s)/H20862X\ni\n(s)\n b\n1\nCsX\no\n(s) - sY(s)D = k\n1\nY(s)\n b\n2\nCsX\ni\n(s) - sX\no\n(s)D + k\n2\nCX\ni\n(s) - X\no\n(s)D = b\n1\nCsX\no\n(s) - sY(s)D\nb\n1\nAx#\no\n- y# B = k\n1\ny\nb\n2\nAx#\ni\n- x#\no\nB+ k\n2\nAx\ni\n- x\no\nB = b\n1\nAx#\no\n- y# B\nb\n1\nb\n2\ny\nx\ni\nx\no\nk\n2\nk\n1\nFigure 6–75\nMechanical system.\nOpenmirrors.comExample Problems and Solutions 367\nA–6–13. Consider the model for a space-vehicle control system shown in Figure 6–76. Design a lead\ncompensator Gc(s) such that the damping ratio z and the undamped natural frequency vn of the\ndominant closed-loop poles are 0.5 and 2 rad/H20862sec, respectively.\nSolution.\nFirst Attempt: Assume the lead compensator Gc(s) to be\nFrom the given specifications,z=0.5 and vn=2 rad/H20862sec, the dominant closed-loop poles must\nbe located at\nWe first calculate the angle deficiency at this closed-loop pole.\nThis angle deficiency must be compensated by the lead compensator. There are many ways to\ndetermine the locations of the pole and zero of the lead network. Let us choose the zero of the\ncompensator at s=–1. Then, referring to Figure 6–77, we have the following equation:\n1.73205\nx - 1 = tan (90° - 70.8934°) = 0.34641\n =- 70.8934°\n Angle deficiency =- 120° - 120° - 10.8934° + 180°\ns =- 1 ; j13\nGc(s) = Kc ±\ns + 1\nT\ns + 1\naT\n≤  (0 6 a 6 1)\nR(s) C(s)\nLead\ncompensator\nGc(s)\nSpace\nvehicle\nSensor\n1\ns2\n1\n0.1s + 1\n+ –\nFigure 6–76\nSpace-vehicle control\nsystem.\njv\ns–10\n19.1066°\n70.8934°\nj1.73205\nx\nFigure 6–77\nDetermination of the\npole of the lead\nnetwork.368\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nor\nHence,\nThe value of can be determined from the magnitude condition\nas follows:\nThus\nSince the open-loop transfer function becomes\na root-locus plot of the compensated system can be obtained easily with MATLAB by entering\nnum and den and using rlocus command. The result is shown in Figure 6–78.\n =\n11.2(s + 1)\n0.1s\n4\n+ 1.6s\n3\n+ 6s\n2\n G\nc\n(s)G(s)H(s) = 11.2 s + 1\n(s + 6)s\n2\n(0.1s + 1)\nG\nc\n(s) = 11.2 s + 1\ns + 6\nK\nc\n=\n2\n(s + 6)s\n2\n(0.1s + 1)\ns + 1\n2\ns =- 1 + j13\n= 11.2000\nK\nc\n2\ns + 1\ns + 6\n1\ns\n2\n1\n0.1s + 1\n2\ns =- 1 + j13\n= 1\nK\nc\nG\nc\n(s) = K\nc\ns + 1\ns + 6\nx = 1 + 1.73205\n0.34641 = 6\nReal Axis\n–10\n5\n10\n–5\n0\nImag Axis\n0\n10\n–5\n5\n–10\nRoot-Locus Plot of Compensated System\nFigure 6–78\nRoot-locus plot of\nthe compensated\nsystem.\nOpenmirrors.comExample Problems and Solutions 369\nThe closed-loop transfer function for the compensated system becomes\nFigure 6–79 shows the unit-step response curve. Even though the damping ratio of the\ndominant closed-loop poles is 0.5, the amount of overshoot is very much higher than expected.A\ncloser look at the root-locus plot reveals that the presence of the zero at s=–1 is increasing the\namount of the maximum overshoot. [In general, if a closed-loop zero or zeros (compensator zero\nor zeros) lie to the right of the dominant pair of the complex poles, then the dominant poles are\nno longer dominant.] If large maximum overshoot cannot be tolerated, the compensator zero(s)\nshould be shifted sufficiently to the left.\nIn the current design, it is desirable to modify the compensator and make the maximum\novershoot smaller. This can be done by modifying the lead compensator, as presented in the\nfollowing second attempt.\nSecond Attempt: To modify the shape of the root loci, we may use two lead networks, each\ncontributing half the necessary lead angle, which is Let us choose the\nlocation of the zeros at s=–3. (This is an arbitrary choice. Other choices such as s=–2.5 and\ns=–4 may be made.)\nOnce we choose two zeros at s=–3, the necessary location of the poles can be determined\nas shown in Figure 6–80, or\nwhich yields\ny = 1 + 1.73205\n0.09535 = 19.1652\n = tan 5.4466° = 0.09535\n 1.73205\ny - 1 = tan (40.89334° - 35.4467°)\n70.8934°/H208622 = 35.4467°.\nC(s)\nR(s) =\n11.2(s + 1)(0.1s + 1)\n(s + 6)s2(0.1s + 1) + 11.2(s + 1)\nt Sec\n2107 96 8 1043 5\nOutput\n0.5\n1.5\n0\n1\nUnit-Step Response of Compensated System\nFigure 6–79\nUnit-step response of\nthe compensated\nsystem.370\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nHence, the lead compensator will have the following transfer function:\nThe value of can be determined from the magnitude condition as follows:\nor\nThen the lead compensator just designed is\nThen the open-loop transfer function becomes\nA root-locus plot for the compensated system is shown in Figure 6–81(a). Notice that there is no\nclosed-loop zero near the origin.An expanded view of the root-locus plot near the origin is shown\nin Figure 6–81(b).\nThe closed-loop transfer function becomes\nThe closed-loop poles are found as follows:\n s =- 27.9606\n s =- 9.1847 ; j7.4814\n s =- 1 ; j1.73205\nC(s)\nR(s) =\n174.3864(s + 3)\n2\n(0.1s + 1)\n(s + 19.1652)\n2\ns\n2\n(0.1s + 1) + 174.3864(s + 3)\n2\nG\nc\n(s)G(s)H(s) = 174.3864\na\ns + 3\ns + 19.1652\nb\n2\n1\ns\n2\n1\n0.1s + 1\nG\nc\n(s) = 174.3864\na\ns + 3\ns + 19.1652\nb\n2\nK\nc\n= 174.3864\n2\nK\nc\na\ns + 3\ns + 19.1652\nb\n2\n1\ns\n2\n1\n0.1s + 1\n2\ns =- 1 + j13\n= 1\nK\nc\nG\nc\n(s) = K\nc\na\ns + 3\ns + 19.1652\nb\n2\n–20 –16 –12 –8 –4 –10\njv\ns\n35.4467°\n40.89334°\nj1.73205\ny\nFigure 6–80\nDetermination of the\npole of the lead\nnetwork.\nOpenmirrors.comExample Problems and Solutions 371\nFigures 6–82(a) and (b) show the unit-step response and unit-ramp response of the compensated\nsystem. The unit-step response curve is reasonable and the unit-ramp response looks acceptable.\nNotice that in the unit-ramp response the output leads the input by a small amount.This is because\nthe system has a feedback transfer function 1/(0.1s+1). If the feedback signal versus t is plotted,\ntogether with the unit-ramp input, the former will not lead the input ramp at steady state. See\nFigure 6–82(c).\nReal Axis\n−41 0 2−2−3 −1\n(b)\nImag Axis\n−2\n1\n3\n−1\n2\n−3\n0\nRoot-Locus Plot of Compensated System near Origin\n: Closed-loop poles\nReal Axis\n–25–30 0 10−5 5–15–20 –10\n(a)\nImag Axis\n–10\n5\n15\n0\n10\n–15\n−5\n–20\n20\nRoot-Locus Plot of Compensated System\n: Closed-loop poles\nFigure 6–81\n(a) Root-locus plot of compensated system; (b) root-locus plot near the origin.372\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nA–6–14. Consider a system with an unstable plant as shown in Figure 6–83(a). Using the root-locus\napproach, design a proportional-plus-derivative controller that is, determine the values of K\np\nand such that the damping ratio z of the closed-loop system is 0.7 and the undamped natural\nfrequency v\nn\nis 0.5 rad/H20862sec.\nSolution. Note that the open-loop transfer function involves two poles at s=1.085and s=–1.085\nand one zero at which is unknown at this point.\nSince the desired closed-loop poles must have v\nn\n=0.5 rad/H20862sec and z=0.7, they must be\nlocated at\ns = 0.5\n/\n180° ; 45.573°\ns =- 1/H20862T\nd\n \n,\nT\nd\nB\nA\nt Sec\n2\n1\n07\n9\n6\n8\n104\n3\n5\n(a)\nOutput\n0.4\n0.8\n1.4\n0\n1.2\n0.6\n1\n0.2\nUnit-Step Response of Compensated System\nt Sec\n1\n0\n54\n2\n3\n(b)\nUnit-Ramp Input and Output\n1.5\n2.5\n3.5\n2\n3\n0\n0.5\n1\n4\n4.5\n5\nUnit-Ramp Response of Compensated System\nOutput\nt Sec\n1\n05 4\n2\n3\n(c)\nUnit-Ramp Input and Feedback Signal\n1.5\n2.5\n3.5\n2\n3\n0\n0.5\n1\n4\n4.5\n5\nFeedback Signal in Unit-Ramp Response\nFeedback Signal\nFigure 6–82\n(a) unit-step\nresponse of the\ncompensated system;\n(b) unit-ramp\nresponse of the\ncompensated system;\n(c) a plot of feedback\nsignal versus t in the\nunit-ramp response.\nOpenmirrors.comExample Problems and Solutions 373\n(z=0.7 corresponds to a line having an angle of 45.573° with the negative real axis.) Hence, the\ndesired closed-loop poles are at\nThe open-loop poles and the desired closed-loop pole in the upper half-plane are located in the\ndiagram shown in Figure 6–83(b). The angle deficiency at point s=–0.35+j0.357 is\nThis means that the zero at must contribute 11.939°, which, in turn, determines the\nlocation of the zero as follows:\ns =- 1\nTd\n=- 2.039\ns =- 1/H20862Td\n-166.026° - 25.913° + 180° =- 11.939°\ns =- 0.35 ; j0.357\n+ –\n(a)\n(b)\nKp(1 + Td s) 1\n10000 (s2 – 1.1772)\n0\njv\ns\n45.573°\nj3\nj2\nj1\n–j1\n–j3\n–j2\n25.913°\n166.026°\nClosed-loop pole\n1.085 2–1.085– 4 –3 –2.039\nFigure 6–83\n(a) PD control of an\nunstable plant;\n(b) root-locus\ndiagram for the\nsystem.374\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nHence, we have\n(6–31)\nThe value of is\nThe value of gain K\np\ncan be determined from the magnitude condition as follows:\nor\nHence,\nBy substituting the numerical values of and into Equation (6–31), we obtain\nwhich gives the transfer function of the desired proportional-plus-derivative controller.\nA–6–15. Consider the control system shown in Figure 6–84. Design a lag compensator G\nc\n(s) such that the\nstatic velocity error constant K\nv\nis 50 sec\n–1\nwithout appreciably changing the location of the orig-\ninal closed-loop poles, which are at \nSolution. Assume that the transfer function of the lag compensator is\nG\nc\n(s) = K\nˆ\nc\ns + 1\nT\ns + 1\nbT\n  \n(b 7 1)\ns =- 2 ; j16\n.\nK\np\nA1 + T\nd\n \nsB= 14,273(1 + 0.4904s) = 6999.5(s + 2.039)\nK\np\nT\nd\nK\np\n= 6999.5\n0.4904 = 14,273\nK\np\n \nT\nd\n= 6999.5\n2\nK\np\n \nT\nd\ns + 2.039\n10000As\n2\n- 1.1772B\n2\ns =- 0.35 + j0.357\n= 1\nT\nd\n= 1\n2.039 = 0.4904\nT\nd\nK\np\nA1 + T\nd\n \nsB= K\np\n \nT\nd\na\n1\nT\nd\n+ s\nb\n= K\np\n \nT\nd\n(s + 2.039)\nG\nc\n(s)\nR(s) C(s)10\ns(s + 4)\n+ –\nFigure 6–84\nControl system.\nOpenmirrors.comExample Problems and Solutions 375\nSince Kv is specified as 50 sec–1, we have\nThus\nNow choose Then\nChoose T=10. Then the lag compensator can be given by\nThe angle contribution of the lag compensator at the closed-loop pole is\nwhich is small. The magnitude of Gc(s) at is 0.981. Hence the change in the location\nof the dominant closed-loop poles is very small.\nThe open-loop transfer function of the system becomes\nThe closed-loop transfer function is\nTo compare the transient-response characteristics before and after the compensation, the unit-step\nand unit-ramp responses of the compensated and uncompensated systems are shown in Figures\n6–85(a) and (b), respectively.The steady-state error in the unit-ramp response is shown in Figure\n6–85(c). The designed lag compensator is acceptable.\nC(s)\nR(s) = 10s + 1\ns3 + 4.005s2 + 10.02s + 1\nGc(s)G(s) = s + 0.1\ns + 0.005\n10\ns(s + 4)\ns =- 2 + j6\n =- 1.3616°\n /Gc(s) 2\ns =- 2 + j16\n= tan-1 16\n-1.9 - tan-1 16\n-1.995\ns =- 2 + j16\nGc(s) = s + 0.1\ns + 0.005\nb = 20\nKˆ c = 1.\nKˆ c b = 20\nKv = lim\ns S 0\nsGc(s) 10\ns(s + 4) = Kˆ c b2.5 = 50376\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nt Sec\n2\n1\n07\n9\n6\n8\n104\n3\n5\n(a)\nOutputs\n0.4\n0.8\n0\n1.2\n0.6\n1\n0.2\nUnit-Step Responses of Compensated and Uncompensated Systems\nUncompensated system\nCompensated system\nt Sec\n2\n1\n07\n9\n6\n8\n104\n3\n5\n(b)\nInput Ramp and Outputs\n2\n4\n0\n6\n3\n5\n1\n7\n8\n9\n10\nUnit-Ramp Responses of Compensated and Uncompensated Systems\nUncompensated system has\nsteady-state error of 0.4\nCompensated system has\nsteady-state error of 0.02\nt Sec\n36\n35.5\n35 38.5\n39.5\n38\n39\n4037\n36.5\n37.5\n(c)\nInput Ramp and Outputs\n37.5\n38.5\n40\n35\n39.5\n38\n39\n35.5\n37\n36.5\n36\nUnit-Ramp Response (35 /H11021t /H11021 40)\nUncompensated system\nCompensated system\nFigure 6–85\n(a) Unit-step\nresponses of the\ncompensated and\nuncompensated\nsystems; (b) unit-\nramp responses of\nboth systems; (c)\nunit-ramp responses\nshowing steady-state\nerrors.\nOpenmirrors.comExample Problems and Solutions 377\nA–6–16. Consider a unity-feedback control system whose feedforward transfer function is given by\nDesign a compensator such that the dominant closed-loop poles are located at \nand the static velocity error constant Kv is equal to 80 sec–1.\nSolution. The static velocity error constant of the uncompensated system is \nSince Kv=80 is required, we need to increase the open-loop gain by 128. (This implies that we\nneed a lag compensator.) The root-locus plot of the uncompensated system reveals that it is not\npossible to bring the dominant closed-loop poles to by just a gain adjustment alone.\nSee Figure 6–86. (This means that we also need a lead compensator.) Therefore, we shall employ\na lag–lead compensator.\nLet us assume the transfer function of the lag–lead compensator to be\nwhere Kc=128. This is because\nand we obtain Kc=128. The angle deficiency at the desired closed-loop pole is\nThe lead portion of the lag–lead compensator must contribute . To choose we may use the\ngraphical method presented in Section 6–8.\nT160°\nAngle deficiency =- 120° - 90° - 30° + 180° =- 60°\ns =- 2 + j213\nKv = lim\ns S 0\nsGc(s)G(s) = lim\ns S 0\nsKcG(s) = Kc\n10\n16 = 80\nGc(s) = Kc ±\ns + 1\nT1\ns + b\nT1\n≤±\ns + 1\nT2\ns + 1\nbT2\n≤\n-2 ; j213\nKv = 10\n16 = 0.625.\ns =- 2 ; j213\nG(s) = 10\ns(s + 2)(s + 8)\nReal Axis\n−10 5 10−5 0\nImag Axis\n10\n−10\n6\n−6\n−8\n4\n0\n2\n−2\n8\n−4\nRoot-Locus Plot of G(s) = 10/[s(s+2)(s+8)]\nDesired closed-loop\npole\nComplex conjugate\nclosed-loop pole\nFigure 6–86\nRoot-locus plot of\nCs(s + 2)(s + 8)D.\nG(s) = 10/H20862The lead portion must satisfy the following conditions:\nand\nThe first condition can be simplified as\nBy using the same approach as used in Section 6–8, the zero and pole can\nbe determined as follows:\nSee Figure 6–87. The value of b is thus determined as\nFor the lag portion of the compensator, we may choose\n1\nbT\n2\n= 0.01\nb = 14.419\n1\nT\n1\n= 3.70,\n  \nb\nT\n1\n= 53.35\nAs = b/H20862T\n1\nBAs = 1/H20862T\n1\nB\n4\ns\n1\n+ 1\nT\n1\ns\n1\n+ b\nT\n1\n4\ns\n1\n=- 2 + j213\n= 1\n13.3333\nn\ns\n1\n+ 1\nT\n1\ns\n1\n+ b\nT\n1\n5\ns\n1\n=- 2 + j213\n= 60°\n4\n128\n±\ns\n1\n+ 1\nT\n1\ns\n1\n+ b\nT\n1\n≤\nGAs\n1\nB\n4\ns\n1\n=- 2 + j213\n= 1\n378\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\n–53.35\n13.3333x\n–3.70\n60°\nx\njv\ns\ns\n1\n0\nFigure 6–87\nGraphical\ndetermination of the\nzero and pole of\nthe lead portion\nof the compensator.\nOpenmirrors.comExample Problems and Solutions 379\nThen\nNoting that\nthe angle contribution of the lag portion is –1.697° and the magnitude contribution is 0.9837.This\nmeans that the dominant closed-loop poles lie close to the desired location\nThus the compensator designed,\nis acceptable. The feedforward transfer function of the compensated system becomes\nA root-locus plot of the compensated system is shown in Figure 6–88(a). An enlarged root-locus\nplot near the origin is shown in Figure 6–88(b).\nGc(s)G(s) =\n1280(s + 3.7)(s + 0.1442)\ns(s + 53.35)(s + 0.01)(s + 2)(s + 8)\nGc(s) = 128 a s + 3.70\ns + 53.35 ba s + 0.1442\ns + 0.01 b\ns =- 2 ; j213 .\nn\ns1 + 0.1442\ns1 + 0.01\n2\ns1 =- 2 +j213\n=- 1.697°\n2s1 + 0.1442\ns1 + 0.01\n2\ns1 =- 2 +j213\n= 0.9837\n1\nT2\n= 0.1442\nReal Axis\n−40−60 20 6040−20 0\n(a)\nImag Axis\n60\n−60\n−40\n40\n0\n20\n−20\nRoot-Locus Plot of Compensated System\nFigure 6–88\n(a) Root-locus plot of compensated system; (b) root-locus plot near the origin.\nReal Axis\n−10 5 10−5 0\n(b)\nImag Axis\n10\n−10\n8\n−6\n−8\n6\n0\n4\n−2\n2\n−4\nRoot-Locus Plot of Compensated System near the Origin\nDesired closed-loop polesTo verify the improved system performance of the compensated system, see the unit-step\nresponses and unit-ramp responses of the compensated and uncompensated systems shown in\nFigures 6–89 (a) and (b), respectively.\nA–6–17. Consider the system shown in Figure 6–90. Design a lag–lead compensator such that the \nstatic velocity error constant K\nv\nis 50 sec\n–1\nand the damping ratio z of the dominant closed-\nloop poles is 0.5. (Choose the zero of the lead portion of the lag–lead compensator to cancel \nthe pole at s=–1 of the plant.) Determine all closed-loop poles of the compensated \nsystem.\n380\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nt Sec\n2\n1\n07\n9\n6\n8\n104\n3\n5\n(a)\nOutputs\n0.4\n0.8\n1.4\n0\n1.2\n0.6\n1\n0.2\nUnit-Step Responses of Compensated and Uncompensated Systems\nUncompensated system\nCompensated system\nt Sec\n2\n1\n07\n9\n6\n8\n104\n3\n5\n(b)\nOutputs\n3\n5\n0\n9\n4\n7\n1\n8\n6\n2\n10\nUnit-Ramp Responses of Compensated and Uncompensated Systems\nUncompensated system\nCompensated system\nFigure 6–89\n(a) Unit-step\nresponses of\ncompensated and\nuncompensated\nsystems; (b) unit-\nramp responses of\nboth systems.\nOpenmirrors.comExample Problems and Solutions 381\n1\ns(s + 1) (s + 5)Gc(s)+ –\nFigure 6–90\nControl system.\nSolution. Let us employ the lag–lead compensator given by\nwhere b>1. Then\nThe specification that determines the value of Kc ,o r\nWe now choose so that will cancel the (s+1) term of the plant. The lead\nportion then becomes\nFor the lag portion of the lag–lead compensator we require\nwhere s=s1 is one of the dominant closed-loop poles. Noting these requirements for the lag por-\ntion of the compensator, at s=s1, the open-loop transfer function becomes\nGcAs1BGAs1B/H11216Kc as1 + 1\ns1 + bb 1\ns1As1 + 1BAs1 + 5B\n= Kc\n1\ns1As1 + bBAs1 + 5B\n4\ns1 + 1\nT2\ns1 + 1\nbT2\n4/H112161,  -5° 6 n\ns1 + 1\nT2\ns1 + 1\nbT2\n6 0°\ns + 1\ns + b\ns + A1/H20862T1BT1 = 1\nKc = 250\nKv = 50 sec-1\n = Kc\n5\n = lim\ns S 0\ns \nKcAT1 s + 1BAT2 s + 1B\naT1\nb s + 1 bAbT2 s + 1B\n 1\ns(s + 1)(s + 5)\n Kv = lim\ns S 0\nsGc(s)G(s)\nGc(s) = Kc ±\ns + 1\nT1\ns + b\nT1\n≤±\ns + 1\nT2\ns + 1\nbT2\n≤ = Kc\nAT1 s + 1BAT2 s + 1B\naT1\nb s + 1 bAbT2 s + 1B382\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nThen at , the following magnitude and angle conditions must be satisfied:\n(6–32)\n(6–33)\nwhere k=0, 1, 2,p . In Equations (6–32) and (6–33),b and s\n1\nare unknowns. Since the damping\nratio zof the dominant closed-loop poles is specified as 0.5, the closed-loop pole s=s\n1\ncan be writ-\nten as\nwhere x is as yet undetermined.\nNotice that the magnitude condition, Equation (6–32), can be rewritten as\nNoting that we have\n(6–34)\nThe angle condition, Equation (6–33), can be rewritten as\nor\n(6–35)\nWe need to solve Equations (6–34) and (6–35) for b and x. By several trial-and-error calculations,\nit can be found that\nThus\nThe lag portion of the lag–lead compensator can be determined as follows: Noting that the pole\nand zero of the lag portion of the compensator must be located near the origin, we may choose\nThat is,\n1\nT\n2\n= 0.16025\n  \nor\n  \nT\n2\n= 6.25\n1\nbT\n2\n= 0.01\ns\n1\n=- 1.9054 + j13\n(1.9054) =- 1.9054 + j3.3002\nb = 16.025,\n  \nx = 1.9054\ntan\n-1\na\n13\nx\n-x + b\nb\n+ tan\n-1\na\n13\nx\n-x + 5\nb\n= 60°\n=- 120° - tan\n-1\na\n13\nx\n-x + b\nb\n- tan\n-1\na\n13\nx\n- x + 5\nb\n=- 180°\nn\nK\nc\n1\nA-x + j13\nxBA-x + b + j13\nxBA-x + 5 + j13\nxB\nx2(b - x)\n2\n+ 3x\n2\n2(5 - x)\n2\n+ 3x\n2\n= 125\nK\nc\n= 250,\n2\nK\nc\nA-x + j13\nxBA-x + b + j13\nxBA-x + 5 + j13\nxB\n2\n= 1\ns\n1\n=- x + j13\nx\n \nn\nK\nc\n1\ns\n1\nAs\n1\n+ bBAs\n1\n+ 5B \n=; 180°(2k + 1)\n \n2\nK\nc\n1\ns\n1\nAs\n1\n+ bBAs\n1\n+ 5B\n2\n= 1\ns = s\n1\nOpenmirrors.comExample Problems and Solutions 383\nWith the choice of we find\n(6–36)\nand\n(6–37)\nSince\nour choice of is acceptable. Then the lag–lead compensator just designed can be writ-\nten as\nTherefore, the compensated system has the following open-loop transfer function:\nA root-locus plot of the compensated system is shown in Figure 6–91(a). An enlarged root-locus\nplot near the origin is shown in Figure 6–91(b).\nThe closed loop transfer function becomes\nThe closed-loop poles are located at\nNotice that the dominant closed-loop poles differ from the dominant\nclosed-loop poles assumed in the computation of b and Small deviations of the dom-\ninant closed-loop poles from are due to the\napproximations involved in determining the lag portion of the compensator. [See Equations (6–36)\nand (6–37).]\ns =; s1 =- 1.9054 ; j3.3002s =- 1.8308 ; j3.2359\nT2 .s =; s1\ns =- 1.8308 ; j3.2359\n s =- 17.205\n s =- 0.1684\n s =- 1.8308 ; j3.2359\nC(s)\nR(s) =\n250(s + 0.16025)\ns(s + 0.01)(s + 5)(s + 16.025) + 250(s + 0.16025)\nGc(s)G(s) =\n250(s + 0.16025)\ns(s + 0.01)(s + 5)(s + 16.025)\nGc(s) = 250 a s + 1\ns + 16.025 ba s + 0.16025\ns + 0.01 b\nT2 = 6.25\n-5° 6- 1.937° 6 0°\n= tan-1 a 3.3002\n-1.74515 b - tan-1 a 3.3002\n-1.89054 b =- 1.937°\nn\ns1 + 1\nT2\ns1 + 1\nbT2\n= n\n-1.9054 + j3.3002 + 0.16025\n-1.9054 + j3.3002 + 0.01\n = 2-1.74515 + j3.3002\n-1.89054 + j3.3002\n2= 0.98 /H112161\n 4\ns1 + 1\nT2\ns1 + 1\nbT2\n4= 2-1.9054 + j3.3002 + 0.16025\n-1.9054 + j3.3002 + 0.01\n2\nT2 = 6.25,384\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nReal Axis\n–20 5\n0\n10–10\n–15\n–5\n(a)\nImag Axis\n–5\n5\n15\n0\n10\n–10\n–15\nRoot-Locus Plot of Compensated System\nReal Axis\n10.5\n–0.5\n–10\n(b)\nImag Axis\n–0.6\n0\n0.6\n–0.2\n0.2\n–1\n1\n0.8\n0.4\n–0.8\n–0.4\nRoot-Locus Plot of Compensated System near the Origin\nFigure 6–91\n(a) Root-locus plot\nof compensated\nsystem; (b) root-\nlocus plot near the\norigin.\nFigures 6–92(a) and (b) show the unit-step response and unit-ramp response of the designed\nsystem, respectively. Note that the closed-loop pole at s=–0.1684 almost cancels the zero at\ns=–0.16025. However, this pair of closed-loop pole and zero located near the origin pro-\nduces a long tail of small amplitude. Since the closed-loop pole at s=–17.205 is located very\nmuch farther to the left compared to the closed-loop poles at the effect\nof this real pole on the system response is very small. Therefore, the closed-loop poles at\nare indeed dominant closed-loop poles that determine the response\ncharacteristics of the closed-loop system. In the unit-ramp response, the steady-state error in\nfollowing the unit-ramp input eventually becomes 1/H20862K\nv\n=\n1\n50\n= 0.02.\ns =- 1.8308 ; j3.2359\ns =- 1.8308 ; j3.2359,\nOpenmirrors.com\nOpenmirrors.comExample Problems and Solutions 385\nA–6–18. Figure 6–93(a) is a block diagram of a model for an attitude-rate control system.The closed-loop\ntransfer function for this system is\nThe unit-step response of this system is shown in Figure 6–93(b). The response shows high-\nfrequency oscillations at the beginning of the response due to the poles at \nThe response is dominated by the pole at The settling time is approximately 240 sec.s =- 0.0167.\ns =- 0.0417 ; j2.4489.\n =\n2(s + 0.05)\n(s + 0.0417 + j2.4489)(s + 0.0417 - j2.4489)(s + 0.0167)\n \nC(s)\nR(s) = 2s + 0.1\ns3 + 0.1s2 + 6s + 0.1\nt Sec\n420 141286 10\n(a)\nOutput\n0.4\n0.8\n1.4\n0\n1.2\n0.6\n1\n0.2\nUnit-Step Response of Compensated System\nt Sec\n2107 96 8 1043 5\n(b)\nOutput\n3\n7\n0\n9\n4\n8\n2\n6\n5\n1\n10\nUnit-Ramp Response of Compensated System\nFigure 6–92\n(a) Unit-step\nresponse of the\ncompensated system;\n(b) unit-ramp\nresponse of the\ncompensated system.386\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nTime (sec)\n50\n0 200\n300250\n100\n150\n(b)\nAmplitude\n0.3\n0.6\n0\n1\n0.4\n0.7\n0.1\n0.9\n0.8\n0.5\n0.2\nUnit-Step Response of Uncompensated System\nR(s) C(s)\n1\nRate gyro\nHydraulic servo Aircraft\n1\ns\n2s + 0.1\ns\n2\n+ 0.1s + 4\n(a)\n+ –\nFigure 6–93\n(a) Attitude-rate\ncontrol system;\n(b) unit-step\nresponse.\nIt is desired to speed up the response and also eliminate the oscillatory mode at the beginning\nof the response. Design a suitable compensator such that the dominant closed-loop poles are at\nSolution. Figure 6–94 shows a block diagram for the compensated system. Note that the open-loop\nzero at and the open-loop pole at s=0 generate a closed-loop pole between s=0\nand s=–0.05. Such a closed-loop pole becomes a dominant closed-loop pole and makes the re-\nsponse quite slow. Hence, it is necessary to replace this zero by a zero that is located far away\nfrom the jv axis—for example, a zero at s =- 4.\ns =- 0.05\ns =- 2 ; j213\n.\nG\nc\n(s)\nR(s) C(s)\n1\nRate gyro\nHydraulic servo Aircraft\n1\ns\n2s + 0.1\ns\n2\n+ 0.1s + 4\n+ –\nFigure 6–94\nCompensated\nattitude-rate control\nsystem.\nOpenmirrors.com\nOpenmirrors.comExample Problems and Solutions 387\nWe now choose the compensator in the following form:\nThen the open-loop transfer function of the compensated system becomes\nTo determine by the root-locus method, we need to find the angle deficiency at the desired\nclosed-loop pole The angle deficiency can be found as follows:\nHence, the lead compensator must provide 132.73°. Since the angle deficiency is –132.73°,\nwe need two lead compensators, each providing 66.365°.Thus will have the following form:\nSuppose that we choose two zeros at s=–2. Then the two poles of the lead compensators can be\nobtained from\nor\n(See Figure 6–95.) Hence,\nGˆ c(s) = Kc a s + 2\ns + 9.9158 b\n2\n = 9.9158\n sp = 2 + 3.4641\n0.4376169\n3.4641\nsp - 2 = tan(90° - 66.365°) = 0.4376169\n= Kc a\ns + sz\ns + sp\nb\n2\nGˆ c(s)\nGˆ c(s)\nGˆ c(s)\n =- 132.73°\n Angle deficiency =- 143.088° - 120° - 109.642° + 60° + 180°\ns =- 2 + j213 .\nGˆ c(s)\n = Gˆ c(s) s + 4\nsAs2 + 0.1s + 4B\n Gc(s)G(s) = Gˆ c(s) s + 4\n2s + 0.1 1\ns 2s + 0.1\ns2 + 0.1s + 4\nGc(s) = Gˆ c(s) s + 4\n2s + 0.1\n2 4−6 −2 0−4−8−10−12\nj4\nj2\n–j4\n–j2\n66.365°\nsp\ns = −2 + j2 3\njv\ns\nFigure 6–95\nPole and zero of\n.Gˆ c(s)388\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nThe entire compensator for the system becomes\nThe value of can be determined from the magnitude condition. Since the open-loop transfer\nfunction is\nthe magnitude condition becomes\nHence,\nThus the compensator becomes\nThe open-loop transfer function is given by\nA root-locus plot for the compensated system is shown in Figure 6–96. The closed-loop poles for\nthe compensated system are indicated in the plot. The closed-loop poles, the roots of the charac-\nteristic equation\n(s + 9.9158)\n2\nsAs\n2\n+ 0.1s + 4B + 88.0227(s + 2)\n2\n(s + 4) = 0\nG\nc\n(s)G(s) =\n88.0227(s + 2)\n2\n(s + 4)\n(s + 9.9158)\n2\nsAs\n2\n+ 0.1s + 4B\nG\nc\n(s) = 88.0227\n(s + 2)\n2\n(s + 4)\n(s + 9.9158)\n2\n(2s + 0.1)\nG\nc\n(s)\n = 88.0227\n K\nc\n=\n2\n(s + 9.9158)\n2\nsAs\n2\n+ 0.1s + 4B\n(s + 2)\n2\n(s + 4)\n2\ns =- 2 + j213\n2\nK\nc\n(s + 2)\n2\n(s + 4)\n(s + 9.9158)\n2\nsAs\n2\n+ 0.1s + 4B\n2\ns =- 2 + j213\n= 1\nG\nc\n(s)G(s) = K\nc\n(s + 2)\n2\n(s + 4)\n(s + 9.9158)\n2\nsAs\n2\n+ 0.1s + 4B\nK\nc\nG\nc\n(s) = G\nˆ\nc\n(s) s + 4\n2s + 0.1 = K\nc\n(s + 2)\n2\n(s + 9.9158)\n2\ns + 4\n2s + 0.1\nG\nc\n(s)\nReal Axis\n–15 10\n5\n15–5\n–10\n0\nImag Axis\n–10\n0\n10\n–5\n5\n15\n–15\nRoot-Locus Plot of Compensated System\nClosed-loop poles\nFigure 6–96\nRoot-locus plot of\nthe compensated\nsystem.\nOpenmirrors.comExample Problems and Solutions 389\nare as follows:\nNow that the compensator has been designed, we shall examine the transient-response charac-\nteristics with MATLAB. The closed-loop transfer function is given by\nFigures 6–97(a) and (b) show the plots of the unit-step response and unit-ramp response of the\ncompensated system. These response curves show that the designed system is acceptable.\nC(s)\nR(s) =\n88.0227(s + 2)2(s + 4)\n(s + 9.9158)2sAs2 + 0.1s + 4B+ 88.0227(s + 2)2(s + 4)\n s =- 0.8868\n s =- 7.5224 ; j6.5326\n s =- 2.0000 ; j3.4641\nt Sec\n10.50 3.5 4.53 4 521.5 2.5\n(a)\nOutput\n0.4\n0.8\n1.4\n0\n1.2\n0.6\n1\n0.2\nUnit-Step Response of Compensated System\nt Sec\n05 4 621 3\n(b)\nInput and Output2\n4\n6\n0\n3\n5\n1\nUnit-Ramp Response of Compensated System\nFigure 6–97\n(a) Unit-step\nresponse of the\ncompensated system;\n(b) unit-ramp\nresponse of the\ncompensated system.390\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nA–6–19. Consider the system shown in Figure 6–98(a). Determine the value of a such that the damping ratio\nz of the dominant closed poles is 0.5.\nSolution. The characteristic equation is\nThe variable a is not a multiplying factor. Hence, we need to modify the characteristic equation.\nSince the characteristic equation can be written as\nwe rewrite this equation such that a appears as a multiplying factor as follows:\nDefine\nThen the characteristic equation becomes\nNotice that the characteristic equation is in a suitable form for the construction of the root loci.\n1 + K\nsAs\n2\n+ 9s + 18B\n= 0\n10a = K\n1 + 10a\nsAs\n2\n+ 9s + 18B\n= 0\ns\n3\n+ 9s\n2\n+ 18s + 10a = 0\n1 +\n10(s + a)\ns(s + 1)(s + 8) = 0\n(a) (b)\ns + a\ns + 8\n10\ns(s + 1)\nj4\nj3\nj2\n–j4\n–j3\n–j2\n–j1\n01–1–3–5–7 –22–4–6\njv\ns\n60°K = 28\nK = 28\nj1\nj6\n–j6\nj5\n–j5\n+ –\nFigure 6–98\n(a) Control system; (b) root-locus plot, where K=10a.\nOpenmirrors.comExample Problems and Solutions 391\nThis system involves three poles and no zero.The three poles are at s=0, s=–3,and s=–6.\nA root-locus branch exists on the real axis between points  s=0 and s=–3.Also, another branch\nexists between points s=–6 and s=–q.\nThe asymptotes for the root loci are found as follows:\nThe intersection of the asymptotes and the real axis is obtained from\nThe breakaway and break-in points can be determined from where\nNow we set\nwhich yields\nor\nPoint s=–1.268is on a root-locus branch. Hence, point s=–1.268is an actual breakaway point. But\npoint s=–4.732is not on the root locus and therefore is neither a breakaway nor break-in point.\nNext we shall find points where root-locus branches cross the imaginary axis. We substitute\ns=jv in the characteristic equation, which is\nas follows:\nor\nfrom which we get\nThe crossing points are at and the corresponding value of gain K is 162. Also, a root-\nlocus branch touches the imaginary axis at v=0. Figure 6–98(b) shows a sketch of the root loci\nfor the system.\nSince the damping ratio of the dominant closed-loop poles is specified as 0.5, the desired\nclosed-loop pole in the upper-half s plane is located at the intersection of the root-locus branch\nin the upper-half s plane and a straight line having an angle of 60° with the negative real axis.The\ndesired dominant closed-loop poles are located at\nAt these points, the value of gain K is 28. Hence,\na = K\n10 = 2.8\ns =- 1 + j1.732,  s =- 1 - j1.732\nv =; 312\nv =; 312 ,  K = 9v2 = 162  or  v = 0,  K = 0\nAK - 9v2B+ jvA18 - v2B= 0\n(jv)3 + 9(jv)2 + 18(jv) + K = 0\ns3 + 9s2 + 18s + K = 0\ns =- 1.268,  s =- 4.732\ns2 + 6s + 6 = 0\ndK\nds =- A3s2 + 18s + 18B= 0\nK =- As3 + 9s2 + 18sB\ndK/H20862ds = 0,\ns =- 0 + 3 + 6\n3 =- 3\nAngles of asymptotes =\n;180°(2k + 1)\n3 = 60°, -60°, 180°392\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nSince the system involves two or more poles than zeros (in fact, three poles and no zero), the\nthird pole can be located on the negative real axis from the fact that the sum of the three closed-\nloop poles is –9. Hence, the third pole is found to be at\nor\nA–6–20. Consider the system shown in Figure 6–99(a). Sketch the root loci of the system as the velocity\nfeedback gain k varies from zero to infinity. Determine the value of k such that the closed-loop\npoles have the damping ratio z of 0.7.\nSolution. The open-loop transfer function is\nSince k is not a multilying factor, we modify the equation such that k appears as a multiplying\nfactor. Since the characteristic equation is\nwe rewrite this equation as follows:\n(6–38)\nDefine\nThen Equation (6–38) becomes\n1 + Ks\ns\n2\n+ s + 10 = 0\n10k = K\n1 + 10ks\ns\n2\n+ s + 10 = 0\ns\n2\n+ s + 10ks + 10 = 0\nOpen-loop transfer function = 10\n(s + 1 + 10k)s\ns =- 7\ns =- 9 - (-1 + j1.732) - (-1 - j1.732)\nR(s) C(s)1\ns\nk\njv\ns\n(a) (b)\n10\ns + 1\nj4\nj3\nj2\n−j1\nj1\n−j3\n−j2\n−j4\n01−1−4−6 −2−3−5−72\nK = 3.427\n45.578\n+ –\n+ –\nFigure 6–99\n(a) Control system; (b) root-locus plot, where K=10k.\nOpenmirrors.comExample Problems and Solutions 393\nNotice that the system has a zero at s=0 and two poles at Since this system\ninvolves two poles and one zero, there is a possibility that a circular root locus exists. In fact, this\nsystem has a circular root locus, as will be shown. Since the angle condition is\nwe have\nBy substituting into this last equation and rearranging, we obtain\nwhich can be rewritten as\nTaking tangents of both sides of this last equation, we obtain\nwhich can be simplified to\nor\nwhich yields\nNotice that v=0 corresponds to the real axis.The negative real axis (between s=0 and s=–q)\ncorresponds to K /H113500, and the positive real axis corresponds to K<0. The equation\nis an equation of a circle with center at s=0, v=0 with the radius equal to A portion of\nthis circle that lies to the left of the complex poles corresponds to the root locus for K>0. (The\nportion of the circle which lies to the right of the complex poles corresponds to the root locus for\nK<0.) Figure 6–99(b) shows a sketch of the root loci for K>0.\nSince we require z=0.7 for the closed-loop poles, we find the intersection of the circular\nroot locus and a line having an angle of 45.57° (note that cos 45.57°=0.7) with the negative real\naxis. The intersection is at s=–2.214+j2.258. The gain K corresponding to this point is 3.427.\nHence, the desired value of the velocity feedback gain k is\nk = K\n10 = 0.3427\n110 .\ns2 + v2 = 10\nv = 0  or  s2 + v2 = 10\nvAs2 - 10 + v2B= 0\n2v(s + 0.5)\n(s + 0.5)2 - Av2 - 3.12252B\n= v\ns\nv + 3.1225\ns + 0.5 + v - 3.1225\ns + 0.5\n1 - av + 3.1225\ns + 0.5 ba v - 3.1225\ns + 0.5 b\n= v\ns\ntan-1 av + 3.1225\ns + 0.5 b + tan-1 av - 3.1225\ns + 0.5 b = tan-1 av\nsb ; 180°(2k + 1)\n/s + 0.5 + j(v + 3.1225) + /s + 0.5 + j(v - 3.1225) = /s + jv ; 180°(2k + 1)\ns = s + jv\n/s - /s + 0.5 + j3.1225 - /s + 0.5 - j3.1225 =; 180°(2k + 1)\nn Ks\ns2 + s + 10 =; 180°(2k + 1)\ns =- 0.5 ; j3.1225.PROBLEMS\n394\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nB–6–1. Plot the root loci for the closed-loop control sys-\ntem with\nB–6–2. Plot the root loci for the closed-loop control system\nwith\nB–6–3. Plot the root loci for the system with\nB–6–4. Show that the root loci for a control system with\nare arcs of the circle centered at the origin with radius equal\nto\nB–6–5. Plot the root loci for a closed-loop control system\nwith\nB–6–6. Plot the root loci for a closed-loop control system\nwith\nLocate the closed-loop poles on the root loci such that the\ndominant closed-loop poles have a damping ratio equal to\n0.5. Determine the corresponding value of gain K.\nB–6–7. Plot the root loci for the system shown in Figure\n6–100. Determine the range of gain K for stability.\nG(s) =\nK(s + 9)\nsAs\n2\n+ 4s + 11B\n,\n  \nH(s) = 1\nG(s) =\nK(s + 0.2)\ns\n2\n(s + 3.6) ,\n  \nH(s) = 1\n110\n.\nG(s) =\nKAs\n2\n+ 6s + 10B\ns\n2\n+ 2s + 10 ,\n  \nH(s) = 1\nG(s) = K\ns(s + 0.5)As\n2\n+ 0.6s + 10B\n,\n  \nH(s) = 1\nG(s) = K\ns(s + 1)(s\n2\n+ 4s + 5) ,\n  \nH(s) = 1\nG(s) =\nK(s + 1)\ns\n2\n,\n  \nH(s) = 1\nB–6–8. Consider a unity-feedback control system with the\nfollowing feedforward transfer function:\nPlot the root loci for the system. If the value of gain K is set\nequal to 2, where are the closed-loop poles located?\nB–6–9. Consider the system whose open-loop transfer func-\ntion is given by\nShow that the equation for the asymptotes is given by\nUsing MATLAB, plot the root loci and asymptotes for\nthe system.\nB–6–10. Consider the unity-feedback system whose feed-\nforward transfer function is\nThe constant-gain locus for the system for a given value of\nK is defined by the following equation:\nShow that the constant-gain loci for 0 /H11349K /H11349q may be\ngiven by\nSketch the constant-gain loci for K=1, 2, 5, 10, and 20 on\nthe s plane.\nB–6–11. Consider the system shown in Figure 6–101. Plot\nthe root loci with MATLAB. Locate the closed-loop poles\nwhen the gain K is set equal to 2.\nCs(s + 1) + v\n2\nD\n2\n+ v\n2\n= K\n2\n2\nK\ns(s + 1)\n2\n= 1\nG(s) = K\ns(s + 1)\nG\na\n(s)H\na\n(s) = K\ns\n3\n+ 4.0068s\n2\n+ 5.3515s + 2.3825\nG(s)H(s) =\nK(s - 0.6667)\ns\n4\n+ 3.3401s\n3\n+ 7.0325s\n2\nG(s) = K\nsAs\n2\n+ 4s + 8B\n2\ns\n2\n (s + 2)\ns + 1\ns + 5\nK\nR(s) C(s)\n+ –\nFigure 6–100\nControl system.\n1\ns + 1\nK(s + 1)\ns(s\n2\n+ 2s + 6)\n+ –\nFigure 6–101\nControl system.\nOpenmirrors.comProblems 395\nK(s – 1)\n(s + 2) (s + 4)+ –\nG1(s)\n(a)\n(b)\nK(1 – s)\n(s + 2) (s + 4)+ –\nG2(s)\nB–6–12. Plot root-locus diagrams for the nonminimum-phase\nsystems shown in Figures 6–102(a) and (b), respectively.\nB–6–14. Consider the system shown in Figure 6–104. Plot\nthe root loci for the system. Determine the value of K such\nthat the damping ratio z of the dominant closed-loop poles\nis 0.5. Then determine all closed-loop poles. Plot the unit-\nstep response curve with MATLAB.\nFigure 6–102 (a) and (b) Nonminimum-phase systems.\nB–6–13. Consider the mechanical system shown in Figure\n6–103. It consists of a spring and two dashpots. Obtain the\ntransfer function of the system. The displacement xi is the\ninput and displacement xo is the output. Is this system a\nmechanical lead network or lag network?\nb2\nb1\nk\nxi\nxo\nFigure 6–103\nMechanical system.\nK\ns(s2 + 4s + 5)+ –\nFigure 6–104 Control system.\nB–6–15. Determine the values of K, and of the system\nshown in Figure 6–105 so that the dominant closed-loop\npoles have the damping ratio z=0.5 and the undamped\nnatural frequency vn=3 rad/H20862sec.\nT2T1 ,\nCR T1s + 1\nT2s + 1K 10\ns(s + 1)+ –\nFigure 6–105 Control system.\nB–6–16. Consider the control system shown in Figure 6–106.\nDetermine the gain K and time constant T of the controller\nGc(s) such that the closed-loop poles are located at\ns =- 2 ; j2.\n1\ns(s + 2)K(Ts + 1)+ –\nGc(s) G(s)\nFigure 6–106 Control system.\nGc(s) 5\ns(0.5s + 1)+ –\nFigure 6–107 Control system.\nB–6–17. Consider the system shown in Figure 6–107. De-\nsign a lead compensator such that the dominant closed-loop\npoles are located at Plot the unit-step re-\nsponse curve of the designed system with MATLAB.\ns =- 2 ; j213 .\nB–6–18. Consider the system shown in Figure 6–108. De-\nsign a compensator such that the dominant closed-loop poles\nare located at s =- 1 ; j1.\nGc(s) 1\ns2\nLead\ncompensator\nSpace\nvehicle\n+ –\nFigure 6–108 Control system.396\nChapter 6 / Control Systems Analysis and Design by the Root-Locus Method\nB–6–19. Referring to the system shown in Figure 6–109, de-\nsign a compensator such that the static velocity error con-\nstant is 20 sec\n–1\nwithout appreciably changing the original\nlocation of a pair of the complex-conjugate\nclosed-loop poles.\nAs =- 2 ; j213\nB\nK\nv\nB–6–20. Consider the angular-positional system shown in\nFigure 6–110. The dominant closed-loop poles are located\nat The damping ratio z of the dominant\nclosed-loop poles is 0.6.The static velocity error constant \nis 4.1 sec\n–1\n, which means that for a ramp input of 360° /H20862sec\nthe steady-state error in following the ramp input is\nIt is desired to decrease e\nv\nto one-tenth of the present\nvalue, or to increase the value of the static velocity error con-\nstant to 41 sec\n–1\n. It is also desired to keep the damping ratio\nz of the dominant closed-loop poles at 0.6. A small change in\nthe undamped natural frequency v\nn\nof the dominant closed-\nloop poles is permissible. Design a suitable lag compensator to\nincrease the static velocity error constant as desired.\nK\nv\ne\nv\n= u\ni\nK\nv\n= 360°/H20862sec\n4.1 sec\n-1\n= 87.8°\nK\nv\ns =- 3.60 ; j4.80.\nB–6–21. Consider the control system shown in Figure 6–111.\nDesign a compensator such that the dominant closed-loop\npoles are located at and the static velocity\nerror constant is 50 sec\n–1\n.K\nv\ns =- 2 ; j213\nG\nc\n(s) 16\ns(s + 4)\n+ –\nFigure 6–109\nControl system.\nG\nc\n(s) 820\ns(s + 10) (s + 20)\n+ –\nFigure 6–110\nAngular-positional system.\nG\nc\n(s) 10\ns(s + 2) (s + 5)\n+ –\nFigure 6–111\nControl system.\nB–6–24. Consider the system shown in Figure 6–114, which\ninvolves velocity feedback. Determine the values of the am-\nplifier gain K and the velocity feedback gain so that the\nfollowing specifications are satisfied:\n1. Damping ratio of the closed-loop poles is 0.5\n2. Settling time /H113492 sec\n3. Static velocity error constant \n4. 0<K\nh\n<1\nK\nv\n/H1135050 sec\n-1\nK\nh\nR(s) C(s)1\ns\nK\nh\nK\n2s + 1\n+ –\n+ –\nFigure 6–114\nControl system.\nB–6–23. Consider the control system shown in Figure 6–113.\nDesign a compensator such that the unit-step response curve\nwill exhibit maximum overshoot of 25% or less and settling\ntime of 5 sec or less.\nG\nc\n(s) 2s + 1\ns(s + 1) (s + 2)\n+ –\nFigure 6–112\nControl system.\nG\nc\n(s) 1\ns\n2\n (s + 4)\n+ –\nFigure 6–113\nControl system.\nB–6–22. Consider the control system shown in Figure 6–112.\nDesign a compensator such that the unit-step response curve\nwill exhibit maximum overshoot of 30% or less and settling\ntime of 3 sec or less.\nOpenmirrors.comProblems 397\nB–6–25. Consider the system shown in Figure 6–115. The\nsystem involves velocity feedback. Determine the value of\ngainK such that the dominant closed-loop poles have a\ndamping ratio of 0.5. Using the gain K thus determined, ob-\ntain the unit-step response of the system.\nR(s) C(s)1\ns\n0.2\nK\n(s + 1) (s + 2)+ – + –\nFigure 6–115\nControl system.\nB–6–26. Consider the system shown in Figure 6–116. Plot\nthe root loci as a varies from 0 to q. Determine the value of\na such that the damping ratio of the dominant closed-loop\npoles is 0.5.\ns + a 2\ns2 (s + 2)+ –\nFigure 6–116\nControl system.\nB–6–28. Consider the system shown in Figure 6–118. As-\nsuming that the value of gain K varies from 0 to q, plot the\nroot loci when and 0.5.\nCompare unit-step responses of the system for the\nfollowing three cases:\n(1) K=10, Kh=0.1\n(2) K=10, Kh=0.3\n(3) K=10, Kh=0.5\nKh = 0.1, 0.3,\nB–6–27. Consider the system shown in Figure 6–117. Plot\nthe root loci as the value of k varies from 0 to q.What value\nof k will give a damping ratio of the dominant closed-loop\npoles equal to 0.5? Find the static velocity error constant of\nthe system with this value of k.\ns + 1.4\ns + 5\n10\ns(s + 1)\nks\ns + 10\n+ – + –\nFigure 6–117\nControl system.\nR(s) C(s)1\ns\nKh\nK\ns + 1+ – + –\nFigure 6–118\nControl system.7\n398\nControl Systems Analysis\nand Design by the\nFrequency-Response Method\n7–1 INTRODUCTION\nBy the term frequency response, we mean the steady-state response of a system to a\nsinusoidal input. In frequency-response methods, we vary the frequency of the input\nsignal over a certain range and study the resulting response.\nIn this chapter we present frequency-response approaches to the analysis and design\nof control systems.The information we get from such analysis is different from what we\nget from root-locus analysis. In fact, the frequency response and root-locus approaches\ncomplement each other. One advantage of the frequency-response approach is that we\ncan use the data obtained from measurements on the physical system without deriving\nits mathematical model. In many practical designs of control systems both approaches\nare employed. Control engineers must be familiar with both.\nFrequency-response methods were developed in 1930s and 1940s by Nyquist, Bode,\nNichols, and many others. The frequency-response methods are most powerful in con-\nventional control theory. They are also indispensable to robust control theory.\nThe Nyquist stability criterion enables us to investigate both the absolute and relative\nstabilities of linear closed-loop systems from a knowledge of their open-loop frequency-\nresponse characteristics. An advantage of the frequency-response approach is that\nfrequency-response tests are, in general, simple and can be made accurately by use of\nreadily available sinusoidal signal generators and precise measurement equipment. Often\nthe transfer functions of complicated components can be determined experimentally by\nfrequency-response tests. In addition, the frequency-response approach has the advan-\ntages that a system may be designed so that the effects of undesirable noise are negligible\nand that such analysis and design can be extended to certain nonlinear control systems.\nOpenmirrors.comSection 7–1 / Introduction 399\nAlthough the frequency response of a control system presents a qualitative picture of the\ntransient response, the correlation between frequency and transient responses is indirect, ex-\ncept for the case of second-order systems. In designing a closed-loop system, we adjust the\nfrequency-response characteristic of the open-loop transfer function by using several de-\nsign criteria in order to obtain acceptable transient-response characteristics for the system.\nObtaining Steady-State Outputs to Sinusoidal Inputs. We shall show that the\nsteady-state output of a transfer function system can be obtained directly from the si-\nnusoidal transfer function—that is, the transfer function in which s is replaced by jv,\nwhere v is frequency.\nConsider the stable, linear, time-invariant system shown in Figure 7–1.The input and out-\nput of the system, whose transfer function is G(s), are denoted by x(t)andy(t), respectively.\nIf the input x(t) is a sinusoidal signal, the steady-state output will also be a sinusoidal sig-\nnal of the same frequency, but with possibly different magnitude and phase angle.\nLet us assume that the input signal to the system is given by\n[In this book “ ” is always measured in rad/sec. When the frequency is measured in\ncycle/sec, we use notation “f ”. That is, .] \nSuppose that the transfer function G(s) of the system can be written as a ratio of two\npolynomials in s; that is,\nThe Laplace-transformed output Y(s) of the system is then\n(7–1)\nwhere X(s) is the Laplace transform of the input x(t).\nIt will be shown that, after waiting until steady-state conditions are reached, the fre-\nquency response can be calculated by replacing s in the transfer function by jv. It will\nalso be shown that the steady-state response can be given by\nwhere M is the amplitude ratio of the output and input sinusoids and f is the phase\nshift between the input sinusoid and the output sinusoid. In the frequency-response test,\nthe input frequency v is varied until the entire frequency range of interest is covered.\nThe steady-state response of a stable, linear, time-invariant system to a sinusoidal\ninput does not depend on the initial conditions. (Thus, we can assume the zero initial\ncondition.) If Y(s) has only distinct poles, then the partial fraction expansion of Equa-\ntion (7–1) when x(t) = X yields\n(7–2) = a\ns + jv + a–\ns - jv + b1\ns + s1\n+ b2\ns + s2\n+ p + bn\ns + sn\n Y(s) = G(s)X(s) = G(s) vX\ns2 + v2\nsin vt\nG(jv) = Mejf = M/f\nY(s) = G(s)X(s) = p(s)\nq(s) X(s)\nG(s) = p(s)\nq(s) = p(s)\nAs + s1BAs + s2Bp As + snB\nv = 2pf\nv\nx(t) = X sin vt\nG(s)\nX(s)\nx(t)\nY(s)\ny(t)Figure 7–1\nStable, linear, time-\ninvariant system.400\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nwhere a and the b\ni\n(where i=1, 2, p , n) are constants and is the complex conjugate\nof a. The inverse Laplace transform of Equation (7–2) gives\n(7–3)\nFor a stable system,–s\n1\n,– s\n2\n, p , –s\nn\nhave negative real parts.Therefore, as t approaches\ninfinity, the terms and approach zero.Thus, all the terms on the right-\nhand side of Equation (7–3), except the first two, drop out at steady state.\nIf Y(s) involves multiple poles s\nj\nof multiplicity m\nj\n, then y(t) will involve terms such\nas For a stable system, the terms approach zero\nas t approaches infinity.\nThus, regardless of whether the system is of the distinct-pole type or multiple-pole\ntype, the steady-state response becomes\n(7–4)\nwhere the constant a can be evaluated from Equation (7–2) as follows:\nNote that\nSince G(jv) is a complex quantity, it can be written in the following form:\nwhere @G(jv)@represents the magnitude and f represents the angle of G(jv); that is,\nThe angle f may be negative, positive, or zero. Similarly, we obtain the following\nexpression for G(–jv):\nThen, noting that\nEquation (7–4) can be written\n(7–5) = Y sin\n \n(vt + f)\n = X@G(jv)@sin\n \n(vt + f)\n y\nss\n(t) = X@G(jv)@ e\nj(vt + f)\n- e\n-j(vt + f)\n2j\na =-\nX@G(jv)@e\n-jf\n2j ,\n  \na\n–\n=\nX@G(jv)@e\njf\n2j\nG(-jv) = @G(-jv)@e\n-jf\n= @G(jv)@e\n-jf\nf =\n/\nG(jv)\n= tan\n-1\nc\nimaginary part of G(jv)\nreal part of G(jv)\nd\nG(jv) = @G(jv)@e\njf\na\n–\n= G(s) vX\ns\n2\n+ v\n2\n(s - jv)\n2\ns = jv\n= XG(jv)\n2j\na = G(s) vX\ns\n2\n+ v\n2\n(s + jv)\n2\ns =- jv\n=- XG(-jv)\n2j\ny\nss\n(t) = ae\n-jvt\n+ a\n–\ne\njvt\nt\nh\nj\ne\n-s\nj\n \nt\nt\nh\nj\ne\n-s\nj\n \nt\nAh\nj\n= 0, 1, 2, p , m\nj\n- 1B.\ne\n-s\nn\n \nt\ne\n-s\n1\n \nt\n,e\n-s\n2\n \nt\n, p ,\ny(t) = ae\n-jvt\n+ a\n–\ne\njvt\n+ b\n1\n \ne\n-s\n1\n \nt\n+ b\n2\n \ne\n-s\n2\n \nt\n+ p + b\nn\n \ne\n-s\nn\n \nt\n  \n(t /H113500)\na\n–\nOpenmirrors.comSection 7–1 / Introduction 401\nX Y\nt\nInput x(t) = X sin vt\nOutput y(t) = Y sin (vt + f)\nFigure 7–2\nInput and output\nsinusoidal signals.\nyx\nG(s)\nK\nTs + 1Figure 7–3\nFirst-order system.\nwhere Y=X@G(jv)@. We see that a stable, linear, time-invariant system subjected to a\nsinusoidal input will, at steady state, have a sinusoidal output of the same frequency as\nthe input. But the amplitude and phase of the output will, in general, be different from\nthose of the input. In fact, the amplitude of the output is given by the product of that of\nthe input and @G(jv)@, while the phase angle differs from that of the input by the amount\nAn example of input and output sinusoidal signals is shown in Figure 7–2.\nOn the basis of this, we obtain this important result: For sinusoidal inputs,\nHence, the steady-state response characteristics of a system to a sinusoidal input can be\nobtained directly from\nThe function G(jv) is called the sinusoidal transfer function. It is the ratio of Y(jv)\nto X(jv), is a complex quantity, and can be represented by the magnitude and phase\nangle with frequency as a parameter.The sinusoidal transfer function of any linear system\nis obtained by substituting jv for s in the transfer function of the system.\nAs already mentioned in Chapter 6, a positive phase angle is called phase lead, and a neg-\native phase angle is called phase lag.A network that has phase-lead characteristics is called\na lead network, while a network that has phase-lag characteristics is called a lag network.\nEXAMPLE 7–1 Consider the system shown in Figure 7–3. The transfer function G(s) is\nFor the sinusoidal input x(t)=X sin vt, the steady-state output yss(t) can be found as follows:\nSubstituting jv for s in G(s) yields\nG(jv) = K\njTv + 1\nG(s) = K\nTs + 1\nY(jv)\nX(jv) = G(jv)\n/G(jv) = n\nY(jv)\nX(jv) = phase shift of the output sinusoid with respect\nto the input sinusoid\n@G(jv)@ = 2Y(jv)\nX(jv)\n2= amplitude ratio of the output sinuisoid to the\ninput sinusoid\nf = /G(jv).402\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nThe amplitude ratio of the output to the input is\nwhile the phase angle f is\nThus, for the input x(t)=X sin vt, the steady-state output y\nss\n(t) can be obtained from Equation\n(7–5) as follows:\n(7–6)\nFrom Equation (7–6), it can be seen that for small v, the amplitude of the steady-state output\ny\nss\n(t) is almost equal to K times the amplitude of the input. The phase shift of the output is small\nfor small v. For large v, the amplitude of the output is small and almost inversely proportional to\nv. The phase shift approaches –90° as v approaches infinity. This is a phase-lag network.\nEXAMPLE 7–2\nConsider the network given by\nDetermine whether this network is a lead network or lag network.\nFor the sinusoidal input x(t)=X sinvt, the steady-state output y\nss\n(t) can be found as follows:\nSince\nwe have\nand\nThus the steady-state output is\nFrom this expression, we find that if then Thus, if \nthen the network is a lead network. If then the network is a lag network.\nPresenting Frequency-Response Characteristics in Graphical Forms. The\nsinusoidal transfer function, a complex function of the frequency v, is characterized by\nits magnitude and phase angle, with frequency as the parameter. There are three\ncommonly used representations of sinusoidal transfer functions:\nT\n1\n6 T\n2\n \n,\nT\n1\n7 T\n2\n \n,tan\n-1\nT\n1\n \nv - tan\n-1\nT\n2\n \nv 7 0.T\n1\n7 T\n2\n \n,\ny\nss\n(t) = XT\n2\n21 + T\n2\n1\n \nv\n2\nT\n1\n21 + T\n2\n2\n \nv\n2\n sin\n \nAvt + tan\n-1\nT\n1\n \nv - tan\n-1\nT\n2\n \nvB\nf =\n/\nG(jv)\n= tan\n-1\nT\n1\n \nv - tan\n-1\nT\n2\n \nv\n@G(jv)@ = T\n2\n21 + T\n2\n1\n \nv\n2\nT\n1\n21 + T\n2\n2\n \nv\n2\nG(jv) =\njv + 1\nT\n1\njv + 1\nT\n2\n=\nT\n2\nA1 + T\n1\n \njvB\nT\n1\nA1 + T\n2\n \njvB\nG(s) =\ns + 1\nT\n1\ns + 1\nT\n2\ny\nss\n(t) = XK\n21 + T\n2\nv\n2\n sin\n \nAvt - tan\n-1\nTvB\nf =\n/\nG(jv)\n=- tan\n-1\nTv\n@G(jv)@ = K\n21 + T\n2\nv\n2\nOpenmirrors.comSection 7–2 / Bode Diagrams 403\n1. Bode diagram or logarithmic plot\n2. Nyquist plot or polar plot\n3. Log-magnitude-versus-phase plot (Nichols plots)\nWe shall discuss these representations in detail in this chapter. We shall include the\nMATLAB approach to obtain Bode diagrams, Nyquist plots, and Nichols plots.\nOutline of the Chapter. Section 7–1 has presented introductory material on the\nfrequency response. Section 7–2 presents Bode diagrams of various transfer-function\nsystems. Section 7–3 treats polar plots of transfer functions. Section 7–4 discusses \nlog-magnitude-versus-phase plots. Section 7–5 gives a detailed account of the Nyquist\nstability criterion. Section 7–6 discusses the stability analysis based on the Nyquist sta-\nbility criterion. Section 7–7 introduces measures of relative stability analysis. Sec-\ntion 7–8 presents a method for obtaining the closed-loop frequency response from\nthe open-loop frequency response by use of the M and N circles. The Nichols chart\nis introduced here. Section 7–9 treats experimental determination of transfer func-\ntions. Section 7–10 presents introductory aspects of control systems design by the\nfrequency-response approach. Sections 7–11, 7–12, and 7–13 give detailed accounts\nof lead compensation, lag compensation, and lag–lead compensation techniques,\nrespectively.\n7–2 BODE DIAGRAMS\nBode Diagrams or Logarithmic Plots. A Bode diagram consists of two graphs:\nOne is a plot of the logarithm of the magnitude of a sinusoidal transfer function; the\nother is a plot of the phase angle; both are plotted against the frequency on a logarithmic\nscale.\nThe standard representation of the logarithmic magnitude of G(jv) is 20 log@G(jv)@,\nwhere the base of the logarithm is 10.The unit used in this representation of the magnitude\nis the decibel, usually abbreviated dB. In the logarithmic representation, the curves are\ndrawn on semilog paper, using the log scale for frequency and the linear scale for either\nmagnitude (but in decibels) or phase angle (in degrees). (The frequency range of inter-\nest determines the number of logarithmic cycles required on the abscissa.)\nThe main advantage of using the Bode diagram is that multiplication of magni-\ntudes can be converted into addition. Furthermore, a simple method for sketching an\napproximate log-magnitude curve is available. It is based on asymptotic approxima-\ntions. Such approximation by straight-line asymptotes is sufficient if only rough in-\nformation on the frequency-response characteristics is needed. Should the exact curve\nbe desired, corrections can be made easily to these basic asymptotic plots. Expanding\nthe low-frequency range by use of a logarithmic scale for the frequency is highly\nadvantageous, since characteristics at low frequencies are most important in practical\nsystems. Although it is not possible to plot the curves right down to zero frequency\nbecause of the logarithmic frequency (log 0=– q), this does not create a serious\nproblem.\nNote that the experimental determination of a transfer function can be made simple\nif frequency-response data are presented in the form of a Bode diagram.404\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nDecibels (dB)\nNumbers\n0.01 0.02 0.04 0.1 0.2 0.4 0.6 1 2 3 4 5 6 8 10\n20\n10\n0\n–10\n–20\n–30\n–40\nFigure 7–4\nNumber–decibel\nconversion line.\nBasic Factors of G( jV)H(jV). As stated earlier, the main advantage in using the\nlogarithmic plot is the relative ease of plotting frequency-response curves. The basic\nfactors that very frequently occur in an arbitrary transfer function G(jv)H(jv) are\n1. Gain K\n2. Integral and derivative factors (jv)\n<1\n3. First-order factors (1+jvT)\n<1\n4. Quadratic factors \nOnce we become familiar with the logarithmic plots of these basic factors, it is\npossible to utilize them in constructing a composite logarithmic plot for any general\nform of G(jv)H(jv) by sketching the curves for each factor and adding individual curves\ngraphically, because adding the logarithms of the gains corresponds to multiplying them\ntogether.\nThe Gain K. A number greater than unity has a positive value in decibels, while a\nnumber smaller than unity has a negative value.The log-magnitude curve for a constant\ngain K is a horizontal straight line at the magnitude of 20 logK decibels.The phase angle\nof the gain K is zero. The effect of varying the gain K in the transfer function is that it\nraises or lowers the log-magnitude curve of the transfer function by the corresponding\nconstant amount, but it has no effect on the phase curve.\nA number–decibel conversion line is given in Figure 7–4. The decibel value of any\nnumber can be obtained from this line. As a number increases by a factor of 10, the\ncorresponding decibel value increases by a factor of 20. This may be seen from the\nfollowing:\nSimilarly,\n20 log\n \nAK * 10\nn\nB = 20 log K + 20n\n20 log\n \n(K * 10) = 20 log K + 20\nC1 + 2zAjv/H20862v\nn\nB + Ajv/H20862v\nn\nB\n2\nD\n< 1\nOpenmirrors.comSection 7–2 / Bode Diagrams 405\nNote that, when expressed in decibels, the reciprocal of a number differs from its value\nonly in sign; that is, for the number K,\nIntegral and Derivative Factors ( jV)/H115511. The logarithmic magnitude of 1/jv in\ndecibels is\nThe phase angle of 1/jv is constant and equal to –90°.\nIn Bode diagrams, frequency ratios are expressed in terms of octaves or decades.An\noctave is a frequency band from v1 to 2v1 , where v1 is any frequency value.A decade is\na frequency band from v1 to 10v1 , where again v1 is any frequency. (On the logarithmic\nscale of semilog paper, any given frequency ratio can be represented by the same hori-\nzontal distance. For example, the horizontal distance from v=1 to v=10 is equal to\nthat from v=3 to v=30.)\nIf the log magnitude –20 logv dB is plotted against v on a logarithmic scale, it is a\nstraight line.To draw this straight line, we need to locate one point (0 dB,v=1) on it. Since\nthe slope of the line is –20 dB/H20862decade (or –6 dB/H20862octave).\nSimilarly, the log magnitude of jv in decibels is\nThe phase angle of jv is constant and equal to 90°.The log-magnitude curve is a straight\nline with a slope of 20 dB /H20862decade. Figures 7–5(a) and (b) show frequency-response\ncurves for 1/jv and jv, respectively. We can clearly see that the differences in the\nfrequency responses of the factors 1/jv and jv lie in the signs of the slopes of the log-\nmagnitude curves and in the signs of the phase angles. Both log magnitudes become\nequal to 0 dB at v=1.\nIf the transfer function contains the factor (1/jv)n or (jv)n, the log magnitude\nbecomes, respectively,\nor\nThe slopes of the log-magnitude curves for the factors (1/jv)n and (jv)n are thus\n–20n dB/H20862decade and 20n dB/H20862decade, respectively. The phase angle of (1/jv)n is equal\nto –90°*n over the entire frequency range, while that of (jv)n is equal to 90°*n over\nthe entire frequency range. The magnitude curves will pass through the point\n(0dB,v=1).\n20 log @(jv)n @ = n * 20 log ∑jv∑ = 20n log v dB\n20 log 2 1\n(jv)n 2=- n * 20 log ∑jv∑ =- 20n log v dB\n20 log ∑jv∑ = 20 log v dB\n(-20 log 10v) dB = (-20 log v - 20) dB\n20 log 21\njv\n2=- 20 log v dB\n20 log K =- 20 log 1\nK406\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nFirst-Order Factors (1 /H11545jVT )\n/H115511\n. The log magnitude of the first-order factor\n1/(1+jvT) is\nFor low frequencies, such that v /H112701/T, the log magnitude may be approximated by\nThus, the log-magnitude curve at low frequencies is the constant 0-dB line. For high\nfrequencies, such that v /H112711/T,\nThis is an approximate expression for the high-frequency range. At v=1/T, the log\nmagnitude equals 0 dB; at v=10/T, the log magnitude is –20 dB. Thus, the value of\n–20 log vT dB decreases by 20 dB for every decade of v. For v /H112711/T, the log-magnitude\ncurve is thus a straight line with a slope of –20 dB/decade (or –6 dB/octave).\nOur analysis shows that the logarithmic representation of the frequency-response\ncurve of the factor 1/(1+jvT) can be approximated by two straight-line asymptotes,\none a straight line at 0 dB for the frequency range 0<v<1/T and the other a straight\nline with slope –20 dB/decade (or –6 dB/H20862octave) for the frequency range 1/T<v<q.\nThe exact log-magnitude curve, the asymptotes, and the exact phase-angle curve are\nshown in Figure 7–6.\nThe frequency at which the two asymptotes meet is called the corner frequency or\nbreak frequency. For the factor 1/(1+jvT), the frequency v=1/T is the corner fre-\nquency, since at v=1/T the two asymptotes have the same value. (The low-frequency\nasymptotic expression at v=1/T is 20 log 1 dB =0 dB, and the high-frequency\n-20 log 21 + v\n2\n \nT\n2\n/H11216-20 log vT dB\n-20 log 21 + v\n2\n \nT\n2\n/H11216-20 log 1 = 0 dB\n20 log\n \n2\n1\n1 + jvT\n2\n=- 20 log 21 + v\n2\n \nT\n2\n dB\ndB\n40\n20\n0\n–40\n–20\n0.1 10 1 100 v\nSlope = –20 dB/decade\nBode diagram of\nG(jv) = 1/jv\n(a)\nf\n0°\n–180°\n–90°\n0.1 10 1 100 v\ndB\n40\n20\n0\n–40\n–20\n0.1 10 1 100 v\nSlope = 20 dB/decade\nBode diagram of\nG(jv) = jv\n(b)\nf\n180°\n0°\n90°\n0.1 10 1 100 v\nFigure 7–5\n(a) Bode diagram of\nG(jv)=1/jv;\n(b) Bode diagram of\nG(jv)=jv.\nOpenmirrors.comSection 7–2 / Bode Diagrams 407\n10\n0\n–10\n–20\n0°\n–45°\n–90°\nf\ndB\nv\n1\n20T\n1\n10T\n1\n5T\n1\nT\n1\n2T\n2\nT\n5\nT\n10\nT\n20\nT\nExact curve\nAsymptote\nAsymptote\nCorner frequency\nFigure 7–6\nLog-magnitude\ncurve, together with\nthe asymptotes, and\nphase-angle curve of\n1/(1+jvT).\nasymptotic expression at v=1/T is also 20 log 1 dB =0 dB.) The corner frequency\ndivides the frequency-response curve into two regions: a curve for the low-frequency re-\ngion and a curve for the high-frequency region.The corner frequency is very important\nin sketching logarithmic frequency-response curves.\nThe exact phase angle f of the factor 1/(1+jvT) is\nAt zero frequency, the phase angle is 0°. At the corner frequency, the phase angle is\nAt infinity, the phase angle becomes –90°. Since the phase angle is given by an inverse-\ntangent function, the phase angle is skew symmetric about the inflection point at\nf=–45°.\nThe error in the magnitude curve caused by the use of asymptotes can be calculated.\nThe maximum error occurs at the corner frequency and is approximately equal to –3 dB,\nsince\nThe error at the frequency one octave below the corner frequency—that is, at\nv=1/(2T)—is\nThe error at the frequency one octave above the corner frequency—that is, at v=2/T—\nis\n-20 log 222 + 1 + 20 log 2 =- 20 log 15\n2 =- 0.97 dB\n-20 log A\n1\n4 + 1 + 20 log 1 =- 20 log 15\n2 =- 0.97 dB\n-20 log 11 + 1 + 20 log 1 =- 10 log 2 =- 3.03 dB\nf =- tan-1 T\nT =- tan-1 1 =- 45°\nf =- tan-1 vT408\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\n0\n–1\n–2\n–3\n–4\ndB\nCorner frequency\n1\n10T\n1\n5T\n1\n2T\n1\nT\n2\nT\n3\nT\n5\nT\n10\nT\nv\nFigure 7–7\nLog-magnitude error\nin the asymptotic\nexpression of the\nfrequency-response\ncurve of\n1/(1+jvT).\nThus, the error at one octave below or above the corner frequency is approximately\nequal to –1 dB. Similarly, the error at one decade below or above the corner frequency\nis approximately –0.04 dB. The error in decibels involved in using the asymptotic ex-\npression for the frequency-response curve of 1/(1+jvT) is shown in Figure 7–7. The\nerror is symmetric with respect to the corner frequency.\nSince the asymptotes are quite easy to draw and are sufficiently close to the exact\ncurve, the use of such approximations in drawing Bode diagrams is convenient in es-\ntablishing the general nature of the frequency-response characteristics quickly with a\nminimum amount of calculation and may be used for most preliminary design work. If\naccurate frequency-response curves are desired, corrections may easily be made by re-\nferring to the curve given in Figure 7–7. In practice, an accurate frequency-response\ncurve can be drawn by introducing a correction of 3 dB at the corner frequency and a\ncorrection of 1 dB at points one octave below and above the corner frequency and then\nconnecting these points by a smooth curve.\nNote that varying the time constant T shifts the corner frequency to the left or to the\nright, but the shapes of the log-magnitude and the phase-angle curves remain the same.\nThe transfer function 1/(1+jvT) has the characteristics of a low-pass filter. For\nfrequencies above v=1/T, the log magnitude falls off rapidly toward –q.This is es-\nsentially due to the presence of the time constant. In the low-pass filter, the output\ncan follow a sinusoidal input faithfully at low frequencies. But as the input frequen-\ncy is increased, the output cannot follow the input because a certain amount of time\nis required for the system to build up in magnitude. Thus, at high frequencies, the\namplitude of the output approaches zero and the phase angle of the output\napproaches –90°. Therefore, if the input function contains many harmonics, then the\nlow-frequency components are reproduced faithfully at the output, while the high-\nfrequency components are attenuated in amplitude and shifted in phase.Thus, a first-\norder element yields exact, or almost exact, duplication only for constant or slowly\nvarying phenomena.\nAn advantage of the Bode diagram is that for reciprocal factors—for example, the\nfactor 1+jvT—the log-magnitude and the phase-angle curves need only be changed\nin sign, since\n 20 log\n \n∑1 + jvT∑ =- 20 log\n \n2\n1\n1 + jvT\n2\nOpenmirrors.comSection 7–2 / Bode Diagrams 409\ndB\n40\n20\n0\n–40\n–20\nv\nf\n90°\n0°\n45°\nv\nExact curve\nAsymptote\n0.01\nT\n0.1\nT\n1\nT\n10\nT\n0.01\nT\n0.1\nT\n1\nT\n10\nT\nAsymptote\nFigure 7–8\nLog-magnitude\ncurve, together with\nthe asymptotes, and\nphase-angle curve\nfor1+jvT.\nand\nThe corner frequency is the same for both cases. The slope of the high-frequency as-\nymptote of 1+jvT is 20 dB/H20862decade, and the phase angle varies from 0° to 90° as the fre-\nquency v is increased from zero to infinity. The log-magnitude curve, together with the\nasymptotes, and the phase-angle curve for the factor 1+jvT are shown in Figure 7–8.\nTo draw a phase curve accurately, we have to locate several points on the curve.The\nphase angles of (1+jvT)<1 are\nFor the case where a given transfer function involves terms like (1+jvT)<n, a similar\nasymptotic construction may be made.The corner frequency is still at v=1/T, and the\nasymptotes are straight lines. The low-frequency asymptote is a horizontal straight line\n <84.3°   at  v = 10\nT\n <63.4°   at  v = 2\nT\n <5.7°   at  v = 1\n10T\n <26.6°   at  v = 1\n2T\n <45°   at  v = 1\nT\n/1 + jvT = tan-1 vT =- n\n1\n1 + jvT410\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nat 0 dB, while the high-frequency asymptote has the slope of –20n dB/H20862decade or\n20n dB/H20862decade. The error involved in the asymptotic expressions is n times that for\n(1+jvT)\n<1\n. The phase angle is n times that of (1+jvT)\n<1\nat each frequency point.\nQuadratic Factors C1 /H115452ZAjV/V\nn\nB /H11545AjV/V\nn\nB\n2\nD\n/H115511\n. Control systems often\npossess quadratic factors of the form\nG(j◊)= (7–7)\nIf z>1, this quadratic factor can be expressed as a product of two first-order factors\nwith real poles. If 0<z<1, this quadratic factor is the product of two complex-\nconjugate factors.Asymptotic approximations to the frequency-response curves are not\naccurate for a factor with low values of z. This is because the magnitude and phase of\nthe quadratic factor depend on both the corner frequency and the damping ratio z.\nThe asymptotic frequency-response curve may be obtained as follows: Since\nfor low frequencies such that v /H11270v\nn\n, the log magnitude becomes\nThe low-frequency asymptote is thus a horizontal line at 0 dB. For high frequencies such\nthat v /H11271v\nn\n, the log magnitude becomes\nThe equation for the high-frequency asymptote is a straight line having the slope\n–40 dB/H20862decade, since\nThe high-frequency asymptote intersects the low-frequency one at v=v\nn\n, since at this\nfrequency\nThis frequency,v\nn\n, is the corner frequency for the quadratic factor considered.\nThe two asymptotes just derived are independent of the value of z. Near the\nfrequency v=v\nn\n, a resonant peak occurs, as may be expected from Equation (7–7).\nThe damping ratio z determines the magnitude of this resonant peak. Errors obvi-\nously exist in the approximation by straight-line asymptotes. The magnitude of the\nerror depends on the value of z. It is large for small values of z. Figure 7–9 shows the\nexact log-magnitude curves, together with the straight-line asymptotes and the exact\n-40 log v\nn\nv\nn\n=- 40 log 1 = 0 dB\n-40 log 10v\nv\nn\n=- 40 - 40 log v\nv\nn\n-20 log v\n2\nv\n2\nn\n=- 40 log v\nv\nn\n dB\n-20 log 1 = 0 dB\n20 log\n \n3\n1\n1 + 2z\na\nj v\nv\nn\nb\n+\na\nj v\nv\nn\nb\n2\n3\n=- 20 log B\na\n1 - v\n2\nv\n2\nn\nb\n2\n+\na\n2z v\nv\nn\nb\n2\n1\n1 + 2z\na\nj v\nv\nn\nb\n+\na\nj v\nv\nn\nb\n2\nOpenmirrors.comSection 7–2 / Bode Diagrams 411\n20\n10\n–10\n0\nf\ndB\n0°\n–90°\n–180°\n0.4 0.6 0.8 1 2 4 6 8 100.1 0.2\nv\nvn\nz = 0.1\nz = 0.2\nz = 0.3\nz = 0.5\nz = 0.7\nz = 1.0\nz = 0.1\nz = 0.2\nz = 0.3\nz = 0.5\nz = 0.7\nz = 1.0\nAsymptotes\nFigure 7–9\nLog-magnitude\ncurves, together with\nthe asymptotes, and\nphase-angle curves\nof the quadratic\ntransfer function\ngiven by\nEquation (7–7).\nphase-angle curves for the quadratic factor given by Equation (7–7) with several values\nof z. If corrections are desired in the asymptotic curves, the necessary amounts of cor-\nrection at a sufficient number of frequency points may be obtained from Figure 7–9.\nThe phase angle of the quadratic factor C1+2zAjv/vn B+Ajv/vn B\n2\nD\n–1\nis\n(7–8)\nThe phase angle is a function of both v and z. At v=0, the phase angle equals 0°. At\nthe corner frequency v=vn , the phase angle is –90° regardless of z, since\nAt v=q, the phase angle becomes –180°. The phase-angle curve is skew symmetric\nabout the inflection point—the point where f=–90°.There are no simple ways to sketch\nsuch phase curves. We need to refer to the phase-angle curves shown in Figure 7–9.\nf =- tan-1 a2z\n0 b =- tan-1 q=- 90°\nf = n\n1\n1 + 2zaj v\nvn\nb + aj v\nvn\nb\n2 =- tan-1 ≥\n2z v\nvn\n1 - av\nvn\nb\n2 ¥412\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nThe frequency-response curves for the factor\ncan be obtained by merely reversing the sign of the log magnitude and that of the phase\nangle of the factor\nTo obtain the frequency-response curves of a given quadratic transfer function, we must\nfirst determine the value of the corner frequency v\nn\nand that of the damping ratio z.\nThen, by using the family of curves given in Figure 7–9, the frequency-response curves\ncan be plotted.\nThe Resonant Frequency V\nr\nand the Resonant Peak Value M\nr\n. The magnitude of\nis\n(7–9)\nIf has a peak value at some frequency, this frequency is called the resonant\nfrequency. Since the numerator of is constant, a peak value of will occur\nwhen\n(7–10)\nis a minimum. Since Equation (7–10) can be written\n(7–11)\nthe minimum value of g(v) occurs at Thus the resonant frequency\nv\nr\nis\n(7–12)\nAs the damping ratio z approaches zero, the resonant frequency approaches v\nn\n.F o r\n0<z /H113490.707, the resonant frequency v\nr\nis less than the damped natural frequency\nwhich is exhibited in the transient response. From Equation (7–12),\nit can be seen that for z>0.707, there is no resonant peak. The magnitude de-\ncreases monotonically with increasing frequency v. (The magnitude is less than 0 dB\nfor all values of v>0. Recall that, for 0.7<z<1, the step response is oscillatory, but\nthe oscillations are well damped and are hardly perceptible.)\n@G(jv)@\nv\nd\n= v\nn\n21 - z\n2\n,\nv\nr\n= v\nn\n21 - 2z\n2\n,\n  \nfor 0 /H11349z /H113490.707\nv = v\nn\n21 - 2z\n2\n.\ng(v) =\nc\nv\n2\n- v\n2\nn\nA1 - 2z\n2\nB\nv\n2\nn\nd\n2\n+ 4z\n2\nA1 - z\n2\nB\ng(v) =\na\n1 - v\n2\nv\n2\nn\nb\n2\n+\na\n2z v\nv\nn\nb\n2\n@G(jv)@@G(jv)@\n@G(jv)@\n@G(jv)@ = 1\nB\na\n1 - v\n2\nv\n2\nn\nb\n2\n+\na\n2z v\nv\nn\nb\n2\nG(jv) = 1\n1 + 2z\na\nj v\nv\nn\nb\n+\na\nj v\nv\nn\nb\n2\n1\n1 + 2z\na\nj v\nv\nn\nb\n+\na\nj v\nv\nn\nb\n2\n1 + 2z\na\nj v\nv\nn\nb\n+\na\nj v\nv\nn\nb\n2\nOpenmirrors.comSection 7–2 / Bode Diagrams 413\n14\n12\n10\n8\n6\n4\n2\n0\nz\n0.2 1.0 0.80.60.4\nMr in dB\nFigure 7–10\nMr-versus-z curve for\nthe second-order\nsystem\n1/C1+2zAjv/H20862vn B+\nAjv/H20862vn B\n2\nD.\nFor 0 /H11349z /H113490.707, the magnitude of the resonant peak,Mr=|G(jvr)|, can be found\nfrom Equations (7–12) and (7–9). For 0 /H11349z /H113490.707,\n(7–13)\nFor z>0.707,\n(7–14)\nAs z approaches zero, Mr approaches infinity. This means that if the undamped system\nis excited at its natural frequency, the magnitude of G(jv) becomes infinity. The rela-\ntionship between Mr and z is shown in Figure 7–10.\nThe phase angle of G(jv) at the frequency where the resonant peak occurs can be\nobtained by substituting Equation (7–12) into Equation (7–8). Thus, at the resonant\nfrequency vr ,\nGeneral Procedure for Plotting Bode Diagrams.MATLAB provides an easy way\nto plot Bode diagrams. (The MATLAB approach is presented later in this section.)\nHere, however, we consider the case where we want to draw Bode diagrams manually\nwithout using MATLAB.\nFirst rewrite the sinusoidal transfer function G(jv)H(jv) as a product of basic factors\ndiscussed above.Then identify the corner frequencies associated with these basic factors.\nFinally, draw the asymptotic log-magnitude curves with proper slopes between the corner\nfrequencies. The exact curve, which lies close to the asymptotic curve, can be obtained\nby adding proper corrections.\nThe phase-angle curve of G(jv)H(jv) can be drawn by adding the phase-angle\ncurves of individual factors.\nThe use of Bode diagrams employing asymptotic approximations requires much less\ntime than other methods that may be used for computing the frequency response of a\ntransfer function. The ease of plotting the frequency-response curves for a given trans-\nfer function and the ease of modification of the frequency-response curve as compensation\nis added are the main reasons why Bode diagrams are very frequently used in practice.\n/GAjvrB=- tan-1 21 - 2z2\nz =- 90° + sin-1 z\n21 - z2\nMr = 1\nMr = @G(jv)@max = @GAjvrB@ = 1\n2z21 - z2414\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nEXAMPLE 7–3\nDraw the Bode diagram for the following transfer function:\nMake corrections so that the log-magnitude curve is accurate.\nTo avoid any possible mistakes in drawing the log-magnitude curve, it is desirable to put G(jv)\nin the following normalized form, where the low-frequency asymptotes for the first-order factors\nand the second-order factor are the 0-dB line:\nThis function is composed of the following factors:\nThe corner frequencies of the third, fourth, and fifth terms are v=3, v=2, and \nrespectively. Note that the last term has the damping ratio of 0.3536.\nTo plot the Bode diagram, the separate asymptotic curves for each of the factors are shown\nin Figure 7–11.The composite curve is then obtained by algebraically adding the individual curves,\nalso shown in Figure 7–11. Note that when the individual asymptotic curves are added at each fre-\nquency, the slope of the composite curve is cumulative. Below the plot has the slope of\n–20 dB/H20862decade.At the first corner frequency the slope changes to –60 dB/H20862decade and\ncontinues to the next corner frequency v=2, where the slope becomes –80 dB/H20862decade. At the\nlast corner frequency v=3, the slope changes to –60 dB/H20862decade.\nOnce such an approximate log-magnitude curve has been drawn, the actual curve can be\nobtained by adding corrections at each corner frequency and at frequencies one octave below\nand above the corner frequencies. For first-order factors (1+jvT)\n<1\n, the corrections are ;3d B\nat the corner frequency and ;1 dB at the frequencies one octave below and above the corner\nfrequency. Corrections necessary for the quadratic factor are obtained from Figure 7–9.The exact\nlog-magnitude curve for G(jv) is shown by a dashed curve in Figure 7–11.\nNote that any change in the slope of the magnitude curve is made only at the corner\nfrequencies of the transfer function G(jv). Therefore, instead of drawing individual magnitude\ncurves and adding them up, as shown, we may sketch the magnitude curve without sketching\nindividual curves. We may start drawing the lowest-frequency portion of the straight line (that\nis, the straight line with the slope –20 dB/H20862decade for ). As the frequency is increased,\nwe get the effect of the complex-conjugate poles (quadratic term) at the corner frequency\nThe complex-conjugate poles cause the slopes of the magnitude curve to change from\n–20 to –60 dB/H20862decade. At the next corner frequency, v=2, the effect of the pole is to change\nthe slope to –80 dB/H20862decade. Finally, at the corner frequency v=3, the effect of the zero is to\nchange the slope from –80 to –60 dB/H20862decade.\nFor plotting the complete phase-angle curve, the phase-angle curves for all factors have to be\nsketched. The algebraic sum of all phase-angle curves provides the complete phase-angle curve,\nas shown in Figure 7–11.\nv = 12\n.\nv 6 12\nv = 12\n,\nv = 12\n,\nv = 12\n,\n7.5,\n  \n(jv)\n-1\n,\n  \n1 + j v\n3 ,\n  \na\n1 + j v\n2\nb\n-1\n,\n  \nc\n1 + j v\n2 +\n(jv)\n2\n2\nd\n-1\nG(jv) =\n7.5\na\njv\n3 + 1\nb\n(jv)\na\njv\n2 + 1\nb\nc\n(jv)\n2\n2 + jv\n2 + 1\nd\nG(jv) =\n10(jv + 3)\n(jv)(jv + 2)C(jv)\n2\n+ jv + 2D\nOpenmirrors.comSection 7–2 / Bode Diagrams 415\n40\n20\n0\n–20\ndB\n–40\nExact curve\n0.2 0.4 0.6 0.8 1 2 4 6 8 10 v\n–270°\n–180°\n–90°\n0°\n90°\n0.2 0.4 0.6 0.8 1 2 4 6 8 10 v\nf\nG(jv)\n2\n2\n5\n5\n4\n4\n3\n1\nG(jv)\n3\n1\nFigure 7–11\nBode diagram of the\nsystem considered in\nExample 7–3.\nMinimum-Phase Systems and Nonminimum-Phase Systems. Transfer func-\ntions having neither poles nor zeros in the right-half s plane are minimum-phase trans-\nfer functions, whereas those having poles and/or zeros in the right-half s plane are\nnonminimum-phase transfer functions. Systems with minimum-phase transfer functions\nare called minimum-phase systems, whereas those with nonminimum-phase transfer\nfunctions are called nonminimum-phase systems.\nFor systems with the same magnitude characteristic, the range in phase angle of the\nminimum-phase transfer function is minimum among all such systems, while the range in\nphase angle of any nonminimum-phase transfer function is greater than this minimum.\nIt is noted that for a minimum-phase system, the transfer function can be uniquely\ndetermined from the magnitude curve alone. For a nonminimum-phase system, this is\nnot the case. Multiplying any transfer function by all-pass filters does not alter the\nmagnitude curve, but the phase curve is changed.\nConsider as an example the two systems whose sinusoidal transfer functions are,\nrespectively,\nG1(jv) = 1 + jvT\n1 + jvT1\n,  G2(jv) = 1 - jvT\n1 + jvT1\n,  0 6 T 6 T1416\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nf\n0°\n–90°\n–180°\nG\n1\n(jv)\nG\n2\n(jv)\nv\nFigure 7–13\nPhase-angle\ncharacteristics of the\nsystems G\n1\n(s) and\nG\n2\n(s) shown in\nFigure 7–12.\nThe pole–zero configurations of these systems are shown in Figure 7–12. The two sinu-\nsoidal transfer functions have the same magnitude characteristics, but they have differ-\nent phase-angle characteristics, as shown in Figure 7–13. These two systems differ from\neach other by the factor\nThe magnitude of the factor (1-jvT)/(1+jvT) is always unity. But the phase\nangle equals –2 tan\n–1\nvT and varies from 0° to –180° as vis increased from zero to infinity.\nAs stated earlier, for a minimum-phase system, the magnitude and phase-angle char-\nacteristics are uniquely related. This means that if the magnitude curve of a system is\nspecified over the entire frequency range from zero to infinity, then the phase-angle\ncurve is uniquely determined, and vice versa. This, however, does not hold for a non-\nminimum-phase system.\nNonminimum-phase situations may arise in two different ways. One is simply when\na system includes a nonminimum-phase element or elements. The other situation may\narise in the case where a minor loop is unstable.\nFor a minimum-phase system, the phase angle at v=q becomes –90°(q-p),\nwhere p and q are the degrees of the numerator and denominator polynomials of the\ntransfer function, respectively. For a nonminimum-phase system, the phase angle at\nv=q differs from –90°(q-p). In either system, the slope of the log-magnitude curve\nat v=q is equal to –20(q-p) dB/H20862decade. It is therefore possible to detect whether\nthe system is minimum phase by examining both the slope of the high-frequency\nasymptote of the log-magnitude curve and the phase angle at v=q. If the slope of the\nlog-magnitude curve as v approaches infinity is –20(q-p) dB/H20862decade and the phase\nangle at v=q is equal to –90°(q-p), then the system is minimum phase.\nG(jv) = 1 - jvT\n1 + jvT\njv\n1\nT\n– 1\nT\n1\n– 1\nT\n1\n–s\nG\n1\n(s) = 1 + Ts\n1 + T\n1\ns\njv\n1\nT\ns\nG\n2\n(s) = 1 – Ts\n1 + T\n1\ns\n00\nFigure 7–12\nPole–zero\nconfigurations of a\nminimum-phase\nsystem G\n1\n(s) and\nnonminimum-phase\nsystem G\n2\n(s).\nOpenmirrors.comSection 7–2 / Bode Diagrams 417\n0°\n–100°\n–200°\n–300°\n– 400°\n–500°\n– 600°\n0.1 0.2 0.4 0.6 0.8 1 10 24 6 8\nvT\ne–jvT\nG\nG(jv) = e–jvT\n|G(jv)| = 0 dB\nFigure 7–14\nPhase-angle\ncharacteristic of\ntransport lag.\nNonminimum-phase systems are slow in responding because of their faulty behavior\nat the start of a response. In most practical control systems, excessive phase lag should be\ncarefully avoided. In designing a system, if fast speed of response is of primary importance,\nwe should not use nonminimum-phase components. (A common example of nonmini-\nmum-phase elements that may be present in control systems is transport lag or dead time.)\nIt is noted that the techniques of frequency-response analysis and design to be\npresented in this and the next chapter are valid for both minimum-phase and\nnonminimum-phase systems.\nTransport Lag. Transport lag, which is also called dead time, is of nonminimum-\nphase behavior and has an excessive phase lag with no attenuation at high frequencies.\nSuch transport lags normally exist in thermal, hydraulic, and pneumatic systems.\nConsider the transport lag given by\nThe magnitude is always equal to unity, since\nTherefore, the log magnitude of the transport lag e–jvT is equal to 0 dB. The phase\nangle of the transport lag is\nThe phase angle varies linearly with the frequency v.The phase-angle characteristic\nof transport lag is shown in Figure 7–14.\n =- 57.3 vT  (degrees)\n /G(jv) =- vT  (radians)\n@G(jv)@ = ∑cos vT - j sin vT∑ = 1\nG(jv) = e-jvT418\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\n0°\n–20\n–10\n0\n10\n20\n–100°\n–200°\n–300°\n0°\n–90°\n–180°\n–270°\n0.1 0.2 0.4 0.6 0.8 1 10 24 6 8\nv\ndB\ne\n–0.5 jv\n1 + jv\ne\n–0.5 jv\n1\n1 + jv\ne\n–0.5 jv\n1 + jv\nFigure 7–15\nBode diagram for the\nsystem e\n–jvL\n/(1+jvT)\nwith L=0.5 and T=1.\nEXAMPLE 7–4\nDraw the Bode diagram of the following transfer function:\nThe log magnitude is\nThe phase angle of G(jv) is\nThe log-magnitude and phase-angle curves for this transfer function with L=0.5 and T=1 are\nshown in Figure 7–15.\n =- vL - tan\n-1\nvT\n \n/\nG(jv)\n=\n/\ne\n-jvL\n+\nn\n1\n1 + jvT\n = 0 + 20 log\n \n2\n1\n1 + jvT\n2\n 20log\n \n@G(jv)@ = 20 log\n \n@e\n-jvL\n@ + 20 log\n \n2\n1\n1 + jvT\n2\nG(jv) = e\n-jvL\n1 + jvT\nOpenmirrors.comSection 7–2 / Bode Diagrams 419\nR(s) C(s)E(s)\nG(s)+ –\nFigure 7–16\nUnity-feedback\ncontrol system.\ndB\n20 log Kp\n0\n–20 dB/decade\n–40 dB/decade\nv in log scale\nFigure 7–17\nLog-magnitude curve\nof a type 0 system.\nRelationship between System Type and Log-Magnitude Curve. Consider the\nunity-feedback control system. The static position, velocity, and acceleration error con-\nstants describe the low-frequency behavior of type 0, type 1, and type 2 systems,\nrespectively. For a given system, only one of the static error constants is finite and\nsignificant. (The larger the value of the finite static error constant, the higher the loop\ngain is as v approaches zero.)\nThe type of the system determines the slope of the log-magnitude curve at low\nfrequencies. Thus, information concerning the existence and magnitude of the steady-\nstate error of a control system to a given input can be determined from the observation\nof the low-frequency region of the log-magnitude curve.\nDetermination of Static Position Error Constants. Consider the unity-feedback\ncontrol system shown in Figure 7–16. Assume that the open-loop transfer function is\ngiven by\nor\nFigure 7–17 shows an example of the log-magnitude plot of a type 0 system. In such a\nsystem, the magnitude of G(jv) equals Kp at low frequencies, or\nIt follows that the low-frequency asymptote is a horizontal line at 20 log Kp dB.\nlim\nvS 0\nG(jv) = K = Kp\nG(jv) =\nKATa jv + 1BATb jv + 1B p ATm jv + 1B\n(jv)NAT1 jv + 1BAT2 jv + 1B p ATp jv + 1B\nG(s) =\nKATa s + 1BATb s + 1Bp ATm s + 1B\nsNAT1 s + 1BAT2 s + 1Bp ATp s + 1B420\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nDetermination of Static Velocity Error Constants. Consider the unity-feedback\ncontrol system shown in Figure 7–16. Figure 7–18 shows an example of the log-magnitude\nplot of a type 1 system. The intersection of the initial –20-dB/H20862decade segment (or its\nextension) with the line v=1 has the magnitude 20 log K\nv\n.This may be seen as follows:\nIn a type 1 system\nThus,\nThe intersection of the initial –20-dB/H20862decade segment (or its extension) with the 0-dB\nline has a frequency numerically equal to K\nv\n. To see this, define the frequency at this\nintersection to be v\n1\n; then\nor\nAs an example, consider the type 1 system with unity feedback whose open-loop\ntransfer function is\nIf we define the corner frequency to be v\n2\nand the frequency at the intersection of the\n–40-dB/H20862decade segment (or its extension) with 0-dB line to be v\n3\n, then\nv\n2\n= F\nJ ,\n  \nv\n2\n3\n= K\nJ\nG(s) = K\ns(Js + F)\nK\nv\n= v\n1\n2\nK\nv\njv\n1\n2\n= 1\n20 log\n \n2\nK\nv\njv\n2\nv= 1\n= 20 log K\nv\nG(jv) = K\nv\njv ,\n  \nfor v /H112701\ndB\n0\n–20 dB/decade\n–40 dB/decade\nv in log scale\n20 log K\nv\nv\n1\nv\n2\nv\n3\nv = 1\nFigure 7–18\nLog-magnitude curve\nof a type 1 system.\nOpenmirrors.comSection 7–2 / Bode Diagrams 421\ndB\n0\n–20 dB/decade\n–40 dB/decade\n–60 dB/decade\nv in log scale\n20 log Ka\nv = 1\nva = Ka\nFigure 7–19\nLog-magnitude curve\nof a type 2 system.\nSince\nit follows that\nor\nOn the Bode diagram,\nThus, the v3 point is just midway between the v2 and v1 points. The damping ratio z of\nthe system is then\nDetermination of Static Acceleration Error Constants. Consider the unity-\nfeedback control system shown in Figure 7–16. Figure 7–19 shows an example of the\nlog-magnitude plot of a type 2 system. The intersection of the initial –40-dB/H20862decade\nsegment (or its extension) with the v=1 line has the magnitude of 20 log Ka . Since at\nlow frequencies\nit follows that\n20 log 2 Ka\n(jv)2 2\nv= 1\n= 20 log Ka\nG(jv) = Ka\n(jv)2 ,  for v /H112701\nz = F\n21KJ = v2\n2v3\nlog v1 - log v3 = log v3 - log v2\nv1\nv3\n= v3\nv2\nv1 v2 = v2\n3\nv1 = Kv = K\nF422\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nThe frequency v\na\nat the intersection of the initial –40-dB/H20862decade segment (or its\nextension) with the 0-dB line gives the square root of K\na\nnumerically. This can be seen\nfrom the following:\nwhich yields\nPlotting Bode Diagrams with MATLAB. The command bode computes magni-\ntudes and phase angles of the frequency response of continuous-time, linear, time-\ninvariant systems.\nWhen the command bode (without left-hand arguments) is entered in the\ncomputer, MATLAB produces a Bode plot on the screen. Most commonly used bode\ncommands are\nbode(num,den)\nbode(num,den,w)\nbode(A,B,C,D)\nbode(A,B,C,D,w)\nbode(A,B,C,D,iu,w)\nbode(sys)\nWhen invoked with left-hand arguments, such as\n[mag,phase,w] = bode(num,den,w)\nbode returns the frequency response of the system in matrices mag, phase, and w.N o\nplot is drawn on the screen.The matrices mag and phase contain magnitudes and phase\nangles of the frequency response of the system, evaluated at user-specified frequency\npoints.The phase angle is returned in degrees.The magnitude can be converted to deci-\nbels with the statement\nmagdB = 20*log10(mag)\nOther Bode commands with left-hand arguments are\n[mag,phase,w] = bode(num,den)\n[mag,phase,w] = bode(num,den,w)\n[mag,phase,w] = bode(A,B,C,D)\n[mag,phase,w] = bode(A,B.C,D,w)\n[mag,phase,w] = bode(A,B,C,D,iu,w)\n[mag,phase,w] = bode(sys)\nTo specify the frequency range, use the command logspace(d1,d2) or logspace\n(d1,d2,n). logspace(d1,d2)generates a vector of 50 points logarithmically equally spaced\nbetween decades 10\nd1\nand 10\nd2\n. (50 points include both endpoints. There are 48 points\nbetween the endpoints.) To generate 50 points between 0.1 rad /H20862sec and 100 rad /H20862sec,\nenter the command\nw = logspace(-1,2)\nv\na\n= 1K\na\n20 log\n \n2\nK\na\nAjv\na\nB\n2\n2\n= 20 log 1 = 0\nOpenmirrors.comSection 7–2 / Bode Diagrams 423\nMATLAB Program 7–1\nnum = [25];\nden = [1  4  25];\nbode(num,den)\ntitle('Bode Diagram of G(s) = 25/(s^2 + 4s + 25)')\nFrequency (rad/sec)\nBode Diagram of G(s) = 25/(s2 + 4s + 25)\n−200\n−50\n−100\n−150\n0\n−60\n−40\n−20\nPhase (deg); Magnitude (dB)\n20\n0\n100 101 102\nFigure 7–20\nBode diagram of\nG(s) = 25\ns2 + 4s + 25 .\nlogspace(dl,d2,n)generates n points logarithmically equally spaced between decades\n10d1 and 10d2.( n points include both endpoints.) For example, to generate 100 points in-\ncluding both endpoints between 1 rad/H20862sec and 1000 rad/H20862sec, enter the following command:\nw = logspace(0,3,100)\nTo incorporate the user-specified frequency points when plotting Bode diagrams,\nthe bode command must include the frequency vector w, such as bode(num,den,w) and\n[mag,phase,w] = bode(A,B,C,D,w).\nEXAMPLE 7–5 Consider the following transfer function:\nPlot a Bode diagram for this transfer function.\nWhen the system is defined in the form\nuse the command bode(num,den) to draw the Bode diagram. [When the numerator and denom-\ninator contain the polynomial coefficients in descending powers of s, bode(num,den) draws the\nBode diagram.] MATLAB Program 7–1 shows a program to plot the Bode diagram for this sys-\ntem. The resulting Bode diagram is shown in Figure 7–20.\nG(s) =\nnum(s)\nden(s)\nG(s) = 25\ns2 + 4s + 25424\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nFrequency (rad/sec)\nBode Diagram of G(s) = 9(s\n2\n + 0.2s + 1)/[s(s\n2\n + 1.2s + 9)]\n−100\n0\n−50\n100\n50\n−20\nPhase (deg); Magnitude (dB)\n−10\n40\n0\n10\n20\n30\n10\n−2\n10\n−1\n10\n0\n10\n1\nFigure 7–22\nBode diagram of \nG(s) =\n9As\n2\n+ 0.2s + 1B\nsAs\n2\n+ 1.2s + 9B\n.\nEXAMPLE 7–6\nConsider the system shown in Figure 7–21. The open-loop transfer function is\nPlot a bode diagram.\nMATLAB Program 7–2 plots a Bode diagram for the system.The resulting plot is shown in\nFigure 7–22. The frequency range in this case is automatically determined to be from 0.01 to\n10 rad/H20862sec.\nG(s) =\n9As\n2\n+ 0.2s + 1B\nsAs\n2\n+ 1.2s + 9B\n9(s\n2\n+ 0.2s + 1)\ns(s\n2\n+ 1.2s + 9)\n+ –\nFigure 7–21\nControl system.\nMATLAB Program 7–2\nnum = [9  1.8  9];\nden = [1  1.2  9  0];\nbode(num,den)\ntitle('Bode Diagram of G(s) = 9(s^2 + 0.2s + 1)/[s(s^2 + 1.2s + 9)]')\nOpenmirrors.comSection 7–2 / Bode Diagrams 425\nFrequency (rad/sec)\nBode Diagram of G(s) = 9(s2 + 0.2s + 1)/[s(s2 + 1.2s + 9)]\n−100\n−50\n0\n50\n100\n−50\nPhase (deg); Magnitude (dB)\n0\n50\n10−2 10−1 100 101 102 103\nFigure 7–23\nBode diagram of\nG(s) =\n9As2 + 0.2s + 1B\nsAs2 + 1.2s + 9B\n.\nMATLAB Program 7–3\nnum = [9  1.8  9];\nden = [1  1.2  9  0];\nw = logspace(-2,3,100);\nbode(num,den,w)\ntitle('Bode Diagram of G(s) = 9(s^2 + 0.2s + 1)/[s(s^2 + 1.2s + 9)]')\nIf it is desired to plot the Bode diagram from 0.01 to 1000 rad /H20862sec, enter the following \ncommand:\nw = logspace(-2,3,100)\nThis command generates 100 points logarithmically equally spaced between 0.01 and 100 rad/H20862sec.\n(Note that such a vector w specifies the frequencies in radians per second at which the frequency\nresponse will be calculated.)\nIf we use the command\nbode(num,den,w)\nthen the frequency range is as the user specified, but the magnitude range and phase-angle\nrange will be automatically determined. See MATLAB Program 7–3 and the resulting plot in\nFigure 7–23.426\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nObtaining Bode Diagrams of Systems Defined in State Space. Consider the\nsystem defined by\nwhere state vector ( n-vector)\noutput vector (m-vector)\ncontrol vector (r-vector)\nstate matrix (n*n matrix)\ncontrol matrix (n*r matrix)\noutput matrix (m*n matrix)\ndirect transmission matrix (m*r matrix)\nA Bode diagram for this system may be obtained by entering the command\nbode(A,B,C,D)\nor others listed earlier in this section.\nThe command bode(A,B,C,D) produces a series of Bode plots, one for each input of\nthe system, with the frequency range automatically determined. (More points are used\nwhen the response is changing rapidly.)\nThe command bode(A,B,C,D,iu), where iu is the ith input of the system, produces\nthe Bode diagrams from the input iu to all the outputs Ay\n1\n,y\n2\n, p , y\nm\nBof the system,\nwith a frequency range automatically determined. (The scalar iu is an index into the in-\nputs of the system and specifies which input is to be used for plotting Bode diagrams).\nIf the control vector u has three inputs such that\nthen iu must be set to either 1, 2, or 3.\nIf the system has only one input u, then either of the following commands may be\nused:\nbode(A,B,C,D)\nor\nbode(A,B,C,D,1)\nEXAMPLE 7–7\nConsider the following system:\nThis system has one input u and one output y. By using the command\nbode(A,B,C,D)\n y = [1\n \n0]\nB\nx\n1\nx\n2\nR\n \nB\nx#\n1\nx#\n2\nR\n=\nB\n0\n-25\n1\n-4\nRB\nx\n1\nx\n2\nR\n+\nB\n0\n25\nR\n u\nu =\nC\nu\n1\nu\n2\nu\n3\nS\n D =\n C =\n B =\n A =\n u =\n y =\n x =\ny = Cx + Du\nx# = Ax + Bu\nOpenmirrors.comSection 7–3 / Polar Plots 427\nFrequency (rad/sec)\nBode Diagram\n−200\n−50\n−100\n−150\n0\n−60\n−40\n−20\nPhase (deg); Magnitude (dB)\n20\n0\n100 101 102\nFigure 7–24\nBode diagram of the\nsystem considered in\nExample 7–7.\nMATLAB Program 7–4\nA = [0  1;-25  -4];\nB = [0;25];\nC = [1  0];\nD = [0];\nbode(A,B,C,D)\ntitle('Bode Diagram')\nand entering MATLAB Program 7–4 into the computer, we obtain the Bode diagram shown\nin Figure 7–24.\n7–3 POLAR PLOTS\nThe polar plot of a sinusoidal transfer function G(jv) is a plot of the magnitude of G(jv)\nversus the phase angle of G(jv) on polar coordinates as v is varied from zero to infin-\nity.Thus, the polar plot is the locus of vectors as v is varied from zero to\ninfinity. Note that in polar plots a positive (negative) phase angle is measured counter-\nclockwise (clockwise) from the positive real axis.The polar plot is often called the Nyquist\nplot.An example of such a plot is shown in Figure 7–25. Each point on the polar plot of\nG(jv) represents the terminal point of a vector at a particular value of v. In the polar\nplot, it is important to show the frequency graduation of the locus. The projections of\nG(jv) on the real and imaginary axes are its real and imaginary components.\n@G(jv)@ /G(jv)\nIf we replace the command bode(A,B,C,D) in MATLAB Program 7–4 with\nbode(A,B,C,D,1)\nthen MATLAB will produce the Bode diagram identical to that shown in Figure 7–24.428\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nMATLAB may be used to obtain a polar plot G(jv) or to obtain and \naccurately for various values of v in the frequency range of interest.\nAn advantage in using a polar plot is that it depicts the frequency-response charac-\nteristics of a system over the entire frequency range in a single plot. One disadvantage\nis that the plot does not clearly indicate the contributions of each individual factor of the\nopen-loop transfer function.\nIntegral and Derivative Factors ( jV)\n/H115511\n. The polar plot of G(jv)=1/jv is the\nnegative imaginary axis, since\nThe polar plot of G(jv)=jv is the positive imaginary axis.\nFirst-Order Factors (1 /H11545jVT)\n/H115511\n. For the sinusoidal transfer function\nthe values of G(jv) at v=0 and v=1/T are, respectively,\nand\nIf v approaches infinity, the magnitude of G(jv) approaches zero and the phase angle\napproaches –90°. The polar plot of this transfer function is a semicircle as the frequen-\ncy v is varied from zero to infinity, as shown in Figure 7–26(a). The center is located at\n0.5 on the real axis, and the radius is equal to 0.5.\nTo prove that the polar plot of the first-order factor is a semi-\ncircle, define\nG(jv) = X + jY\nG(jv) = 1/H20862(1 + jvT)\nG\na\nj 1\nT\nb\n= 1\n12\n/\n-45°\nG(j0) = 1\n/\n0°\nG(jv) = 1\n1 + jvT = 1\n21 + v\n2\n \nT\n2\n \n/\n-tan\n-1\nvT\nG(jv) = 1\njv =- j 1\nv = 1\nv \n/\n-90°\n/\nG(jv)\n@G(jv)@\nIm\nRe\nG( jv)\nv = 0\nv = `\nv\n1\nv\n2\nv\n3\nG( jv)\nIm [G( jv)]\nRe [G( jv)]\nFigure 7–25\nPolar plot.\nOpenmirrors.comSection 7–3 / Polar Plots 429\nwhere\nThen we obtain\nThus, in the X-Y plane G(jv) is a circle with center at and with radius \nas shown in Figure 7–26(b). The lower semicircle corresponds to 0 /H11349v /H11349q, and the\nupper semicircle corresponds to –q /H11349v /H113490.\nThe polar plot of the transfer function 1+jvT is simply the upper half of the straight\nline passing through point (1,0) in the complex plane and parallel to the imaginary axis,\nas shown in Figure 7–27. The polar plot of 1+jvT has an appearance completely\ndifferent from that of 1/(1+jvT).\nQuadratic Factors C1 /H115452ZAjV/Vn B /H11545AjV/Vn B\n2\nD/H115511\n. The low- and high-fre-\nquency portions of the polar plot of the following sinusoidal transfer function\nare given, respectively, by\nand\nThe polar plot of this sinusoidal transfer function starts at and ends at as\nv increases from zero to infinity. Thus, the high-frequency portion of G(jv) is tangent\nto the negative real axis.\n0/-180°1/0°\nlim\nvSq\nG(jv) = 0/-180°lim\nvS 0\nG(jv) = 1/0°\nG(jv) = 1\n1 + 2zaj v\nvn\nb + aj v\nvn\nb\n2 ,  for z 7 0\n1\n2 ,X = 1\n2 ,Y = 0\naX - 1\n2 b\n2\n+ Y2 = a1\n2\n1 - v2 T2\n1 + v2 T2 b\n2\n+ a -vT\n1 + v2 T2 b\n2\n= a1\n2 b\n2\n Y = -vT\n1 + v2 T2 = imaginary part of G(jv)\n X = 1\n1 + v2 T2 = real part of G(jv)\nIm\nRe\nv = 0\n0 0.5\n0.5\nv = /H11009\n(a) (b)\nv\nv\nv\n1\n1 + v2T 2\n1\n1\nvT = 1\nG   j 1\nT/H20849/H20849\nG   j 1\nT/H20849/H20849\n0\nY\nX\nv =– /H11009\nv = /H11009v =  0\nvT\n1 + v2T 2\nFigure 7–26\n(a) Polar plot of\n1/(1+jvT); (b) plot\nof G(jv) in X-Y\nplane.\nIm\nRe\nv = 0\nv\n`\n10\nFigure 7–27\nPolar plot of\n1+jvT.430\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nIm\nRe\nv = `\nv = 0\nResonant\npeak\nv\nn\nv\nr\n0\nFigure 7–29\nPolar plot showing\nthe resonant peak\nand resonant\nfrequency v\nr\n.\nExamples of polar plots of the transfer function just considered are shown in Figure\n7–28. The exact shape of a polar plot depends on the value of the damping ratio z, but\nthe general shape of the plot is the same for both the underdamped case (1>z>0)\nand overdamped case (z>1).\nFor the underdamped case at v=v\nn\n, we have G(jv\nn\n)=1/(j2z), and the phase\nangle at v=v\nn\nis –90°. Therefore, it can be seen that the frequency at which the\nG(jv) locus intersects the imaginary axis is the undamped natural frequency v\nn\n.I n\nthe polar plot, the frequency point whose distance from the origin is maximum cor-\nresponds to the resonant frequency v\nr\n. The peak value of G(jv) is obtained as the\nratio of the magnitude of the vector at the resonant frequency v\nr\nto the magnitude\nof the vector at v=0.The resonant frequency v\nr\nis indicated in the polar plot shown\nin Figure 7–29.\nFor the overdamped case, as z increases well beyond unity, the G(jv) locus\napproaches a semicircle. This may be seen from the fact that, for a heavily damped\nsystem, the characteristic roots are real, and one is much smaller than the other. Since,\nfor sufficiently large z, the effect of the larger root (larger in the absolute value) on the\nresponse becomes very small, the system behaves like a first-order one.\nv = 0\nIm\nRe0\n1\nv = /H11009\n(z: Large)\n(z: Small)\nv\nn\nv\nn\nv\nn\nv\nn\nFigure 7–28\nPolar plots of\nfor z>0.1\n1 + 2z\na\nj v\nv\nn\nb\n+\na\nj v\nv\nn\nb\n2\nOpenmirrors.comSection 7–3 / Polar Plots 431\nIm\nRe\nv = 0\n01\nv`\nFigure 7–30\nPolar plot of\nfor z>0.1 + 2zaj v\nvn\nb + aj v\nvn\nb\n2\nNext, consider the following sinusoidal transfer function:\nThe low-frequency portion of the curve is\nand the high-frequency portion is\nSince the imaginary part of G(jv) is positive for v>0 and is monotonically increasing,\nand the real part of G(jv) is monotonically decreasing from unity, the general shape of\nthe polar plot of G(jv) is as shown in Figure 7–30. The phase angle is between 0° and\n180°.\nEXAMPLE 7–8 Consider the following second-order transfer function:\nSketch a polar plot of this transfer function.\nSince the sinusoidal transfer function can be written\nthe low-frequency portion of the polar plot becomes\nand the high-frequency portion becomes\nlim\nvSq\nG(jv) = 0 - j0\nlim\nvS 0\nG(jv) =- T - jq\nG(jv) = 1\njv(1 + jvT) =-  T\n1 + v2 T2 - j 1\nvA1 + v2 T2B\nG(s) = 1\ns(Ts + 1)\nlim\nvSq\nG(jv) =q  /180°\nlim\nvS 0\nG(jv) = 1/0°\n = a1 - v2\nv2\nn\nb + j a2zv\nvn\nb\n G(jv) = 1 + 2zaj v\nvn\nb + aj v\nvn\nb\n2432\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nThe general shape of the polar plot of G(jv) is shown in Figure 7–31. The G(jv) plot is asymp-\ntotic to the vertical line passing through the point (–T, 0). Since this transfer function involves an\nintegrator(1/s), the general shape of the polar plot differs substantially from those of second-order\ntransfer functions that do not have an integrator.\nEXAMPLE 7–9\nObtain the polar plot of the following transfer function:\nSince G(jv) can be written\nthe magnitude and phase angle are, respectively,\nand\nSince the magnitude decreases from unity monotonically and the phase angle also decreases\nmonotonically and indefinitely, the polar plot of the given transfer function is a spiral, as shown\nin Figure 7–32.\n/\nG(jv)\n=\n/\ne\n-jvL\n+\nn\n1\n1 + jvT\n=- vL - tan\n-1\nvT\n@G(jv)@ = @e\n-jvL\n@/H11554\n2\n1\n1 + jvT\n2\n= 1\n21 + v\n2\n \nT\n2\nG(jv) = Ae\n-jvL\nB\na\n1\n1 + jvT\nb\nG(jv) = e\n-jvL\n1 + jvT\nIm\nRe\n0\n0\nv\nv\n`\n–T\nFigure 7–31\nPolar plot of\n1/Cjv(1+jvT)D.\nIm\nRe\n1\nFigure 7–32\nPolar plot of\ne\n-jvL\n/H20862(1 + jvT).\nOpenmirrors.comSection 7–3 / Polar Plots 433\nIm\nRe0\n0\n0\nv = 0\nv\nv\nv\nv\nv\n`\n`\n`\nType 2 system\nType 1 system Type 0 system\nFigure 7–33\nPolar plots of type 0,\ntype 1, and type 2\nsystems.\nGeneral Shapes of Polar Plots. The polar plots of a transfer function of the form\nwhere n>m or the degree of the denominator polynomial is greater than that of the\nnumerator, will have the following general shapes:\n1. For l=0 or type 0 systems: The starting point of the polar plot (which corre-\nsponds to v=0) is finite and is on the positive real axis. The tangent to the \npolar plot at v=0 is perpendicular to the real axis. The terminal point, which\ncorresponds to v=q, is at the origin, and the curve is tangent to one of the\naxes.\n2. For l=1 or type 1 systems: the jv term in the denominator contributes –90°t o\nthe total phase angle of G(jv) for 0 /H11349v /H11349q.At v=0, the magnitude of G(jv)\nis infinity, and the phase angle becomes –90°.At low frequencies, the polar plot is\nasymptotic to a line parallel to the negative imaginary axis. At v=q, the magni-\ntude becomes zero, and the curve converges to the origin and is tangent to one of\nthe axes.\n3. For l=2 or type 2 systems: The (jv)2 term in the denominator contributes\n–180° to the total phase angle of G(jv) for 0 /H11349v /H11349q. At v=0, the magni-\ntude of G(jv) is infinity, and the phase angle is equal to –180°. At low\nfrequencies, the polar plot may be asymptotic to the negative real axis. At\nv=q, the magnitude becomes zero, and the curve is tangent to one of the axes.\nThe general shapes of the low-frequency portions of the polar plots of type 0, type\n1, and type 2 systems are shown in Figure 7–33. It can be seen that, if the degree of the\n = b0(jv)m + b1(jv)m - 1 + p\na0(jv)n + a1(jv)n - 1 + p\n G(jv) =\nKA1 + jvTaBA1 + jvTbB p\n(jv)lA1 + jvT1BA1 + jvT2B p434\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\ndenominator polynomial of G(jv) is greater than that of the numerator, then the G(jv)\nloci converge to the origin clockwise.At v=q, the loci are tangent to one or the other\naxes, as shown in Figure 7–34.\nNote that any complicated shapes in the polar plot curves are caused by the nu-\nmerator dynamics—that is, by the time constants in the numerator of the transfer func-\ntion. Figure 7–35 shows examples of polar plots of transfer functions with numerator\ndynamics. In analyzing control systems, the polar plot of G(jv) in the frequency range\nof interest must be accurately determined.\nTable 7–1 shows sketches of polar plots of several transfer functions.\nIm\nRe\n0\nv = /H11009\nn – m = 1\nn – m = 2\nn – m = 3\nG(jv) = b\no\n(jv)\nm\n+ …\na\no\n(jv)\nn\n+ …\nFigure 7–34\nPolar plots in the high-frequency range.\nIm\nRe\n0\n0\nv = `\nv\nIm\nRe\n0\n0\nv = `\nv\nFigure 7–35\nPolar plots of transfer functions with numerator dynamics.\nOpenmirrors.comSection 7–3 / Polar Plots 435\nv\nIm\nRe\nIm\nRe0\n0\n0\nIm\nRe\nIm\nRe0 0\nIm\nRe\nIm\nRe0\nIm\nIm\nIm\nIm\nRe\nRe\nRe\nRe\n0\n0\n0\n0\n1\n0\nv\nvv\nv\n0 0\nv v\n00\nv = /H11009\nv = /H11009\nv = /H11009\nv = /H11009\nv = /H11009\nv = /H11009\nv = /H11009\n1\njv\n1\n1\n1\n1 + jvT\njvT\n1 + jvTjv\njvT\n1 + jvT\n1\na\nv = /H11009\nv = 0v = 0\nv = 0\nv = 0\nv = 0\n/H11009/H11009\n1\n(jv)2\n1 + jvT\n1 + jvaT\n(a /H11022 1)\n1\n(1 + jvT1) (1 + jvT2) (1 + jvT3)\nvn2\njv[(jv)2 + 2zvn( jv) + vn2]\n1 + jvT1\njv (1 + jvT2) (1 + jvT3)\n1\nTable 7–1 Polar Plots of Simple Transfer Functions\nDrawing Nyquist Plots with MATLAB. Nyquist plots, just like Bode diagrams,\nare commonly used in the frequency-response representation of linear, time-invariant,\nfeedback control systems. Nyquist plots are polar plots, while Bode diagrams are\nrectangular plots. One plot or the other may be more convenient for a particular opera-\ntion, but a given operation can always be carried out in either plot.\nThe MATLAB command nyquist computes the frequency response for continuous-\ntime, linear, time-invariant systems.When invoked without left-hand arguments,nyquist\nproduces a Nyquist plot on the screen.436\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nThe command\nnyquist(num,den)\ndraws the Nyquist plot of the transfer function\nwhere num and den contain the polynomial coefficients in descending powers of s. Other\ncommonly used nyquist commands are\nnyquist(num,den,w)\nnyquist(A,B,C,D)\nnyquist(A,B,C,D,w)\nnyquist(A,B,C,D,iu,w)\nnyquist(sys)\nThe command involving the user-specified frequency vector w, such as\nnyquist(num,den,w)\ncalculates the frequency response at the specified frequency points in radians per\nsecond.\nWhen invoked with left-hand arguments such as\n[re,im,w] = nyquist(num,den)\n[re,im,w] = nyquist(num,den,w)\n[re,im,w] = nyquist(A,B,C,D)\n[re,im,w] = nyquist(A,B,C,D,w)\n[re,im,w] = nyquist(A,B,C,D,iu,w)\n[re,im,w] = nyquist(sys)\nMATLAB returns the frequency response of the system in the matrices re, im, and w.\nNo plot is drawn on the screen. The matrices re and im contain the real and imaginary\nparts of the frequency response of the system, evaluated at the frequency points speci-\nfied in the vector w. Note that re and im have as many columns as outputs and one row\nfor each element in w.\nEXAMPLE 7–10\nConsider the following open-loop transfer function:\nDraw a Nyquist plot with MATLAB.\nSince the system is given in the form of the transfer function, the command\nnyquist(num,den)\nmay be used to draw a Nyquist plot. MATLAB Program 7–5 produces the Nyquist plot shown\nin Figure 7–36. In this plot, the ranges for the real axis and imaginary axis are automatically\ndetermined.\nG(s) = 1\ns\n2\n+ 0.8s + 1\nG(s) = num(s)\nden(s)\nOpenmirrors.comSection 7–3 / Polar Plots 437\nMATLAB Program 7–5\nnum = [1];\nden = [1  0.8  1];\nnyquist(num,den)\ngrid\ntitle('Nyquist Plot of G(s) = 1/(s^2 + 0.8s + 1)')\nMATLAB Program 7–6\n% ---------- Nyquist plot ----------\nnum = [1];\nden = [1  0.8  1];\nnyquist(num,den)\nv = [-2  2  -2  2]; axis(v)\ngrid\ntitle('Nyquist Plot of G(s) = 1/(s^2 + 0.8s + 1)')\nReal Axis\n−0.5−1 1.5 0.5 10\nImaginary Axis\n−1.5\n1.5\n−0.5\n−1\n0\n0.5\n1\nNyquist Plot of G(s) = 1/(s2 + 0.8s + 1)\nFigure 7–36\nNyquist plot of\nG(s) = 1\ns2 + 0.8s + 1 .\nIf we wish to draw the Nyquist plot using manually determined ranges—for example, from –2\nto 2 on the real axis and from –2 to 2 on the imaginary axis—enter the following command into\nthe computer:\nv = [-2  2  -2  2];\naxis(v);\nor, combining these two lines into one,\naxis([-2  2  -2  2]);\nSee MATLAB Program 7–6 and the resulting Nyquist plot shown in Figure 7–37.438\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nCaution. In drawing a Nyquist plot, where a MATLAB operation involves “Divide\nby zero,” the resulting Nyquist plot may have an erroneous or undesirable appearance.\nFor example, if the transfer function G(s) is given by\nthen the MATLAB command\nnum = [1];\nden = [1  1  0];\nnyquist(num,den)\nproduces an undesirable Nyquist plot. An example of an undesirable Nyquist plot is\nshown in Figure 7–38. If such an undesirable Nyquist plot appears on the computer,\nG(s) = 1\ns(s + 1)\nReal Axis\n−2 2−1.5\n1.5\n1\n0.5\n0\n−0.5\n−1\nImaginary Axis\n−1\n0.5\n−2\n2\n−0.5\n−1.5\n0\n1\n1.5\nNyquist Plot of G(s) = 1/(s\n2\n+ 0.8s + 1)\nFigure 7–37\nNyquist plot of\nG(s) = 1\ns\n2\n+ 0.8s + 1 .\nReal Axis\n−1.2−1.4 0 −0.4 −0.2−0.8−1 −0.6\nImaginary Axis\n−150\n150\n−50\n−100\n0\n50\n100\nNyquist Diagram\nFigure 7–38\nUndesirable Nyquist\nplot.\nOpenmirrors.comSection 7–3 / Polar Plots 439\nReal Axis\n−1.5−21 2 0.5 1.5−0.5−10\nImaginary Axis\n−2\n1\n−5\n5\n−1\n2\n−3\n−4\n0\n3\n4\nNyquist Plot of G(s) = 1/[s(s+1)]\nFigure 7–39\nNyquist plot of\nG(s) = 1\ns(s + 1) .\nthen it can be corrected if we specify the axis(v). For example, if we enter the axis\ncommand\nv = [-2  2  -5  5]; axis(v)\nin the computer, then a desirable form of Nyquist plot can be obtained. See Example 7–11.\nEXAMPLE 7–11 Draw a Nyquist plot for the following G(s):\nMATLAB Program 7–7 will produce a desirable form of Nyquist plot on the computer, even\nthough a warning message “Divide by zero” may appear on the screen.The resulting Nyquist plot\nis shown in Figure 7–39.\nG(s) = 1\ns(s + 1)\nMATLAB Program 7–7\n% ---------- Nyquist plot----------\nnum = [1];\nden = [1  1  0];\nnyquist(num,den)\nv = [-2  2  -5  5]; axis(v)\ngrid\ntitle('Nyquist Plot of G(s) = 1/[s(s + 1)]')\nNotice that the Nyquist plot shown in Figure 7–39 includes the loci for both v>0 and v<0.\nIf we wish to draw the Nyquist plot for only the positive frequency region (v>0), then we need\nto use the command\n[re,im,w]=nyquist(num,den,w)440\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nDrawing Nyquist Plots of a System Defined in State Space. Consider the\nsystem defined by\nwhere state vector ( n-vector)\noutput vector (m-vector)\ncontrol vector (r-vector)\nstate matrix (n*n matrix)\ncontrol matrix (n*r matrix)\noutput matrix (m*n matrix)\ndirect transmission matrix (m*r matrix) D =\n C =\n B =\n A =\n u =\n y =\n x =\ny = Cx + Du\nx# = Ax + Bu\nMATLAB Program 7–8\n% ---------- Nyquist plot----------\nnum = [1];\nden = [1  1  0];\nw = 0.1:0.1:100;\n[re,im,w] = nyquist(num,den,w);\nplot(re,im)\nv = [-2  2  -5  5]; axis(v)\ngrid\ntitle('Nyquist Plot of G(s) = 1/[s(s + 1)]')\nxlabel('Real Axis')\nylabel('Imag Axis')\nReal Axis\n–1.5\n–21\n20.5\n1.5\n–0.5\n–1\n0\nImag Axis\n–2\n1\n–5\n5\n–1\n2\n–3\n–4\n0\n3\n4\nNyquist Plot of G(s) = 1/[s(s+1)]\nFigure 7–40\nNyquist plot of\nfor v 7 0.\nG(s) = 1\ns(s + 1)\nA MATLAB program using this nyquist command is shown in MATLAB Program 7–8. The\nresulting Nyquist plot is presented in Figure 7–40.\nOpenmirrors.comSection 7–3 / Polar Plots 441\nMATLAB Program 7–9\nA = [0  1;-25  -4];\nB = [0;25];\nC = [1  0];\nD = [0];\nnyquist(A,B,C,D)\ngrid\ntitle('Nyquist Plot')\nNyquist plots for this system may be obtained by the use of the command\nnyquist(A,B,C,D)\nThis command produces a series of Nyquist plots, one for each input and output com-\nbination of the system. The frequency range is automatically determined.\nThe command\nnyquist(A,B,C,D,iu)\nproduces Nyquist plots from the single input iu to all the outputs of the system, with\nthe frequency range determined automatically. The scalar iu is an index into the inputs\nof the system and specifies which input to use for the frequency response.\nThe command\nnyquist(A,B,C,D,iu,w)\nuses the user-supplied frequency vector w. The vector w specifies the frequencies in\nradians per second at which the frequency response should be calculated.\nEXAMPLE 7–12 Consider the system defined by\nDraw a Nyquist plot.\nThis system has a single input u and a single output y. A Nyquist plot may be obtained by\nentering the command\nnyquist(A,B,C,D)\nor\nnyquist(A,B,C,D,1)\nMATLAB Program 7–9 will provide the Nyquist plot. (Note that we obtain the identical result by\nusing either of these two commands.) Figure 7–41 shows the Nyquist plot produced by MATLAB\nProgram 7–9.\n y = [1 0] Bx1\nx2\nR + [0] u\n Bx#\n1\nx#\n2\nR= B 0\n-25\n1\n-4 RBx1\nx2\nR + B 0\n25 Ru442\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nEXAMPLE 7–13\nConsider the system defined by\nThis system involves two inputs and two outputs. There are four sinusoidal output–input re-\nlationships: and Draw Nyquist\nplots for the system. (When considering input u\n1\n, we assume that input u\n2\nis zero, and vice\nversa.)\nThe four individual Nyquist plots can be obtained by the use of the command\nnyquist(A,B,C,D)\nMATLAB Program 7–10 produces the four Nyquist plots. They are shown in Figure 7–42.\nY\n2\n(jv)/H20862U\n2\n(jv).Y\n1\n(jv)/H20862U\n2\n(jv),Y\n2\n(jv)/H20862U\n1\n(jv),Y\n1\n(jv)/H20862U\n1\n(jv),\n \nB\ny\n1\ny\n2\nR\n=\nB\n1\n0\n0\n1\nRB\nx\n1\nx\n2\nR\n+\nB\n0\n0\n0\n0\nRB\nu\n1\nu\n2\nR\n \nB\nx#\n1\nx#\n2\nR\n=\nB\n-1\n6.5\n-1\n0\nRB\nx\n1\nx\n2\nR\n+\nB\n1\n1\n1\n0\nRB\nu\n1\nu\n2\nR\nReal Axis\n–0.4\n–0.6 0.6\n1\n0.4\n0.8\n0\n–0.2\n0.2\n1.2\nImag Axis\n–1\n0\n1.5\n–0.5\n0.5\n–1.5\n1\nNyquist Plot\nFigure 7–41\nNyquist plot of\nsystem considered in\nExample 7–12.\nMATLAB Program 7–10\nA = [-1  -1;6.5  0];\nB = [1  1;1  0];\nC = [1  0;0  1];\nD = [0  0;0  0];\nnyquist(A,B,C,D)\nOpenmirrors.comSection 7–4 / Log-Magnitude-versus-Phase Plots 443\n7–4 LOG-MAGNITUDE-VERSUS-PHASE PLOTS\nAnother approach to graphically portraying the frequency-response characteristics is\nto use the log-magnitude-versus-phase plot, which is a plot of the logarithmic\nmagnitude in decibels versus the phase angle or phase margin for a frequency range\nof interest. [The phase margin is the difference between the actual phase angle f\nand –180°; that is, f-(–180°)=180°+f.] The curve is graduated in terms of the\nfrequency v. Such log-magnitude-versus-phase plots are commonly called Nichols\nplots.\nIn the Bode diagram, the frequency-response characteristics of G(jv) are shown on\nsemilog paper by two separate curves, the log-magnitude curve and the phase-angle\ncurve, while in the log-magnitude-versus-phase plot, the two curves in the Bode dia-\ngram are combined into one. In the manual approach the log-magnitude-versus-phase\nplot can easily be constructed by reading values of the log magnitude and phase angle\nfrom the Bode diagram. Notice that in the log-magnitude-versus-phase plot a change in\nthe gain constant of G(jv) merely shifts the curve up (for increasing gain) or down (for\ndecreasing gain), but the shape of the curve remains the same.\nAdvantages of the log-magnitude-versus-phase plot are that the relative stability of\nthe closed-loop system can be determined quickly and that compensation can be worked\nout easily.\nThe log-magnitude-versus-phase plot for the sinusoidal transfer function G(jv) and\nthat for 1/G(jv) are skew symmetrical about the origin, since\n2 1\nG(jv)\n2 in dB =- @G(jv)@ in dB\n4\n2\n0\n−2\n−4\n1\n0.5\n0\n−0.5\n−1\n4\n2\n0\n−2\n−4\n4\n2\n0\n−2\n−4120−1\nReal Axis\n3\n120−13 01−1−22\n01−1−22\nFrom: U1 From: U2\nFrom: U1 From: U2\nReal Axis\nReal Axis Real Axis\nTo: Y2\nImaginary Axis\nTo: Y1\nTo: Y2 To: Y1\nNyquist Diagrams\nFigure 7–42\nNyquist plot of\nsystem considered in\nExample 7–13.444\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nand\nFigure 7–43 compares frequency-response curves of\nin three different representations. In the log-magnitude-versus-phase plot, the vertical\ndistance between the points v=0 and v=v\nr\n, where v\nr\nis the resonant frequency, is the\npeak value of G(jv) in decibels.\nSince log-magnitude and phase-angle characteristics of basic transfer functions have\nbeen discussed in detail in Sections 7–2 and 7–3, it will be sufficient here to give exam-\nples of some log-magnitude-versus-phase plots. Table 7–2 shows such examples. (How-\never, more on Nichols charts will be discussed in Section 7–6.)\nG(jv) = 1\n1 + 2z\na\nj v\nv\nn\nb\n+\na\nj v\nv\nn\nb\n2\nn\n1\nG(jv)\n=-\n/\nG(jv)\n0\n5\n–5\n–10\n0°\n–90°\n–180°\n|G| in dBG\nM\nr\nM\nr\n0.2v\nn\n0.5v\nn\nv\nn\n2v\nn\nv\nr\n(a)\nv = 0\nv = 0\nv = `\n∞\nv\nv\nIm\nRe\nv\nr\nv\nn\nv\nr\nv\nn\nM\nr\n(b) (c)\n–12\n–15\n6\n3\n0\n1\n–6\n–3\n–9\n–90°–180° 0°\n|G| in dB\nG\nFigure 7–43\nThree representations of the frequency response of for z>0.\n(a) Bode diagram; (b) polar plot; (c) log-magnitude-versus-phase plot.\n1\n1 + 2z\na\nj v\nv\nn\nb\n+\na\nj v\nv\nn\nb\n2\n,\nOpenmirrors.comSection 7–5 / Nyquist Stability Criterion 445\n|G| in dB\n20\n10\n0\n–10\n–20\n–180° 0° 180°\nG\n|G| in dB\n20\n10\n0\n–10\n–20\n–180° 0° 180°\nG\n|G| in dB\n20\n10\n0\n–10\n–20\n–180° 0° 180°\nG\n|G| in dB\n20\n10\n0\n–10\n–20\n–180° 0° 180°\nG\n|G| in dB\n20\n10\n0\n–10\n–20\n–180° 0° 180°\nG\n|G| in dB\n20\n10\n0\n–10\n–20\n–180° 0° 180°\nG\nv\nv\n0\nv = 1\n/H11009\n/H11009\nG = 1\njv\nG = 1\n1 + jvT\nv v = 0\nG = (jv)2 + 2zvn(jv) + vn2\nvn2\nG = 1 + jvT\nG = e–jvL\nG = 1\njv(1 + jvT)\n/H11009v\nv = 0\n/H11009\nvv = 0\n/H11009\nv\nv = 0\n/H11009\nv\nv\n0\nTable 7–2 Log-Magnitude-versus-Phase Plots of Simple Transfer Functions\n7–5 NYQUIST STABILITY CRITERION\nThe Nyquist stability criterion determines the stability of a closed-loop system from its\nopen-loop frequency response and open-loop poles.\nThis section presents mathematical background for understanding the Nyquist sta-\nbility criterion. Consider the closed-loop system shown in Figure 7–44. The closed-loop\ntransfer function is\nC(s)\nR(s) = G(s)\n1 + G(s)H(s)446\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nFor stability, all roots of the characteristic equation\nmust lie in the left-half s plane. [It is noted that, although poles and zeros of the open-loop\ntransfer function G(s)H(s) may be in the right-half s plane, the system is stable if all the\npoles of the closed-loop transfer function (that is, the roots of the characteristic equation)\nare in the left-half s plane.] The Nyquist stability criterion relates the open-loop frequency\nresponse G(jv)H(jv) to the number of zeros and poles of 1+G(s)H(s) that lie in the\nright-halfs plane.This criterion, derived by H. Nyquist, is useful in control engineering be-\ncause the absolute stability of the closed-loop system can be determined graphically from\nopen-loop frequency-response curves, and there is no need for actually determining the\nclosed-loop poles. Analytically obtained open-loop frequency-response curves, as well as\nthose experimentally obtained, can be used for the stability analysis.This is convenient be-\ncause, in designing a control system, it often happens that mathematical expressions for\nsome of the components are not known; only their frequency-response data are available.\nThe Nyquist stability criterion is based on a theorem from the theory of complex\nvariables.To understand the criterion, we shall first discuss mappings of contours in the\ncomplex plane.\nWe shall assume that the open-loop transfer function G(s)H(s) is representable as\na ratio of polynomials in s. For a physically realizable system, the degree of the denom-\ninator polynomial of the closed-loop transfer function must be greater than or equal to\nthat of the numerator polynomial.This means that the limit of G(s)H(s) as s approaches\ninfinity is zero or a constant for any physically realizable system.\nPreliminary Study. The characteristic equation of the system shown in Figure 7–44 is\nWe shall show that, for a given continuous closed path in the s plane that does not go\nthrough any singular points, there corresponds a closed curve in the F(s) plane. The\nnumber and direction of encirclements of the origin of the F(s) plane by the closed\ncurve play a particularly important role in what follows, for later we shall correlate the\nnumber and direction of encirclements with the stability of the system.\nConsider, for example, the following open-loop transfer function:\nThe characteristic equation is\n(7–15)= 1 + 2\ns - 1 = s + 1\ns - 1 = 0\nF(s) = 1 + G(s)H(s)\nG(s)H(s) = 2\ns - 1\nF(s) = 1 + G(s)H(s) = 0\n1 + G(s)H(s) = 0\nR(s) C(s)\nG(s)\nH(s)\n+ –\nFigure 7–44\nClosed-loop system.\nOpenmirrors.comSection 7–5 / Nyquist Stability Criterion 447\ns Plane\nF(s) Plane3\n2\n0–22 34\n–2\n–3\nRe\nIm\njv\nv =– 2\ns =– 1\ns =– 2\ns = 1\ns\nv = 0\nv = 2\nv=–1\nv = 1\ns= 2\ns= 0\n–2 –10 1 2\nj2\nj1\n–j1\n–j2\n1\n–13\n–1\n(a) (b)\nFigure 7–45\nConformal mapping of the\ns-plane grids into the F(s)\nplane, where\nF(s)=(s+1)/(s-1).\nThe function F(s) is analytic# everywhere in the s plane except at its singular points.\nFor each point of analyticity in the s plane, there corresponds a point in the F(s) plane.\nFor example, if s=2+j1, then F(s) becomes\nThus, point s=2+j1 in the s plane maps into point 2-j1 in the F(s) plane.\nThus, as stated previously, for a given continuous closed path in the s plane, which does\nnot go through any singular points, there corresponds a closed curve in the F(s) plane.\nFor the characteristic equation F(s) given by Equation (7–15), the conformal map-\nping of the lines and the lines [see Figure 7–45(a)] yield cir-\ncles in the F(s) plane, as shown in Figure 7–45(b). Suppose that representative point s\ntraces out a contour in the s plane in the clockwise direction. If the contour in the s\nplane encloses the pole of F(s), there is one encirclement of the origin of the F(s) plane\nby the locus of F(s) in the counterclockwise direction. [See Figure 7–46(a).] If the con-\ntour in the s plane encloses the zero of F(s), there is one encirclement of the origin of\nthe F(s) plane by the locus of F(s) in the clockwise direction. [See Figure 7–46(b).] If\nthe contour in the s plane encloses both the zero and the pole or if the contour enclos-\nes neither the zero nor the pole, then there is no encirclement of the origin of the F(s)\nplane by the locus of F(s). [See Figures 7–46(c) and (d).]\nFrom the foregoing analysis, we can say that the direction of encirclement of the ori-\ngin of the F(s) plane by the locus of F(s) depends on whether the contour in the s plane\nencloses a pole or a zero. Note that the location of a pole or zero in the s plane, whether\nin the right-half or left-half s plane, does not make any difference, but the enclosure of\na pole or zero does. If the contour in the s plane encloses equal numbers of poles and\nzeros, then the corresponding closed curve in the F(s) plane does not encircle the ori-\ngin of the F(s) plane.The foregoing discussion is a graphical explanation of the mapping\ntheorem, which is the basis for the Nyquist stability criterion.\ns = 0, ;1, ;2v = 0, ;1, ;2\nF(2 + j1) = 2 + j1 + 1\n2 + j1 - 1 = 2 - j1\n#A complex function F(s) is said to be analytic in a region if F(s) and all its derivatives exist in that region.448\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\njv\ns Planej2\nj1\n0\n–j1\n–j2\n31–12–2\nA B\nCD\ns\njv\nj2\nj1\n0\n–j1\n–j2\n31–12\nA B\nCD\ns\njv\nj2\n0\n–j2\n31–1\nAB\nCD\ns\njv\n03 1–12–2\nGH\nFE\nCD\nBA\ns\nIm\nF(s) Plane2\n1\n0\n–1\n–2\n12\nA/H11032\nA/H11032\nD/H11032\nD/H11032\nA/H11032\nC/H11032\nB/H11032\nB/H11032C/H11032D/H11032\nE/H11032F/H11032G/H11032\nB/H11032\nC/H11032D/H11032\nC/H11032\nB/H11032\nRe\nIm\n2\n1\n0\n–1\n–2\n12 Re\nIm\n2\n1\n0\n–1\n–2\n1–12 Re\nIm\n2\n1\n0\n–1\n–2\n31–12 Re\n3–1\n3–1–2\n2–2\nj1\n–j1\nj2\nj1\n–j1\n–j2\n3\nH/H11032\nA/H11032\n(a)\n(b)\n(c)\n(d)\nFigure 7–46\nClosed contours in the s\nplane and their\ncorresponding closed curves\nin the F(s) plane, where\nF(s)=(s+1)/(s-1).\nMapping Theorem. Let F(s) be a ratio of two polynomials in s. Let P be the num-\nber of poles and Z be the number of zeros of F(s) that lie inside some closed contour in\nthe s plane, with multiplicity of poles and zeros accounted for. Let the contour be such\nthat it does not pass through any poles or zeros of F(s).This closed contour in the s plane\nis then mapped into the F(s) plane as a closed curve. The total number N of clockwise\nencirclements of the origin of the F(s) plane, as a representative point s traces out the\nentire contour in the clockwise direction, is equal to Z-P. (Note that by this mapping\ntheorem, the numbers of zeros and of poles cannot be found—only their difference.)\nOpenmirrors.comSection 7–5 / Nyquist Stability Criterion 449\nWe shall not present a formal proof of this theorem here, but leave the proof to\nProblem A–7–6. Note that a positive number N indicates an excess of zeros over poles\nof the function F(s) and a negative N indicates an excess of poles over zeros. In control\nsystem applications, the number P can be readily determined for F(s)=1+G(s)H(s)\nfrom the function G(s)H(s). Therefore, if N is determined from the plot of F(s), the\nnumber of zeros in the closed contour in the s plane can be determined readily. Note that\nthe exact shapes of the s-plane contour and F(s) locus are immaterial so far as encir-\nclements of the origin are concerned, since encirclements depend only on the enclosure\nof poles and/or zeros of F(s) by the s-plane contour.\nApplication of the Mapping Theorem to the Stability Analysis of Closed-Loop\nSystems. For analyzing the stability of linear control systems, we let the closed con-\ntour in the s plane enclose the entire right-half s plane. The contour consists of the en-\ntire jv axis from v=– q to ±q and a semicircular path of infinite radius in the\nright-half s plane. Such a contour is called the Nyquist path. (The direction of the path\nis clockwise.) The Nyquist path encloses the entire right-half s plane and encloses all\nthe zeros and poles of 1+G(s)H(s) that have positive real parts. [If there are no zeros\nof 1+G(s)H(s) in the right-half s plane, then there are no closed-loop poles there,\nand the system is stable.] It is necessary that the closed contour, or the Nyquist path, not\npass through any zeros and poles of 1+G(s)H(s). If G(s)H(s) has a pole or poles at\nthe origin of the s plane, mapping of the point s=0 becomes indeterminate. In such\ncases, the origin is avoided by taking a detour around it. (A detailed discussion of this\nspecial case is given later.)\nIf the mapping theorem is applied to the special case in which F(s) is equal to\n1+G(s)H(s), then we can make the following statement: If the closed contour in the\ns plane encloses the entire right-half s plane, as shown in Figure 7–47, then the num-\nber of right-half plane zeros of the function F(s)=1+G(s)H(s) is equal to the num-\nber of poles of the function F(s)=1+G(s)H(s) in the right-half s plane plus the\nnumber of clockwise encirclements of the origin of the 1+G(s)H(s) plane by the\ncorresponding closed curve in this latter plane.\nBecause of the assumed condition that\nthe function of 1+G(s)H(s) remains constant as s traverses the semicircle of infinite\nradius. Because of this, whether the locus of 1+G(s)H(s) encircles the origin of the\n1+G(s)H(s) plane can be determined by considering only a part of the closed contour\nin the s plane—that is, the jvaxis. Encirclements of the origin, if there are any, occur only\nlim\ns Sq\n C1 + G(s)H(s)D = constant\njv\ns0\ns Plane\n`\nFigure 7–47\nClosed contour in\nthes plane.450\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nIm\nRe01\n1 + G(jv) H(jv)\nIm\nRe0\n–1\n1 + G(jv) H(jv)\nG(jv) H(jv)\nGH Plane1 + GH Plane\nFigure 7–48\nPlots of\nin\nthe 1+GH plane\nand GH plane.\n1 + G(jv)H(jv)\nwhile a representative point moves from –jq to ±jq along the jv axis, provided that no\nzeros or poles lie on the jv axis.\nNote that the portion of the  1+G(s)H(s) contour from v=–q to v=q is sim-\nply 1+G(jv)H(jv). Since 1+G(jv)H(jv) is the vector sum of the unit vector and\nthe vector G(jv)H(jv), 1+G(jv)H(jv) is identical to the vector drawn from the\n–1+j0 point to the terminal point of the vector G(jv)H(jv), as shown in Figure 7–48.\nEncirclement of the origin by the graph of 1+G(jv)H(jv) is equivalent to encir-\nclement of the –1+j0 point by just the G(jv)H(jv) locus.Thus, the stability of a closed-\nloop system can be investigated by examining encirclements of the –1+j0 point by\nthe locus of G(jv)H(jv). The number of clockwise encirclements of the –1+j0 point\ncan be found by drawing a vector from the –1+j0 point to the G(jv)H(jv) locus,\nstarting from v=–q, going through v=0, and ending at v=±q, and by counting\nthe number of clockwise rotations of the vector.\nPlotting G(jv)H(jv) for the Nyquist path is straightforward. The map of the nega-\ntive jvaxis is the mirror image about the real axis of the map of the positive jvaxis.That\nis, the plot of G(jv)H(jv) and the plot of G(–jv)H(–jv) are symmetrical with each\nother about the real axis. The semicircle with infinite radius maps into either the origin\nof the GH plane or a point on the real axis of the GH plane.\nIn the preceding discussion,G(s)H(s) has been assumed to be the ratio of two poly-\nnomials in s. Thus, the transport lag e\n–Ts\nhas been excluded from the discussion. Note,\nhowever, that a similar discussion applies to systems with transport lag, although a proof\nof this is not given here. The stability of a system with transport lag can be determined\nfrom the open-loop frequency-response curves by examining the number of encir-\nclements of the –1+j0 point, just as in the case of a system whose open-loop transfer\nfunction is a ratio of two polynomials in s.\nNyquist Stability Criterion. The foregoing analysis, utilizing the encirclement of\nthe –1+j0 point by the G(jv)H(jv) locus, is summarized in the following Nyquist\nstability criterion:\nNyquist stability criterion [ for a special case when G(s)H(s) has neither poles nor\nzeros on thejvaxis]: In the system shown in Figure 7–44, if the open-loop transfer func-\ntion G(s)H(s)has k poles in the right-half s plane and \nthen for stability, the G(jv)H(jv) locus, as vvaries from –q to q, must encircle the\n–1+j0 point k times in the counterclockwise direction.\nlim\ns Sq\nG(s)H(s) = constant,\nOpenmirrors.comSection 7–5 / Nyquist Stability Criterion 451\nIm\nRe0–1\nGH Plane\nFigure 7–49\nRegion enclosed by a\nNyquist plot.\nRemarks on the Nyquist Stability Criterion\n1. This criterion can be expressed as\nwhere number of zeros of 1+G(s)H(s) in the right-half s plane\nnumber of clockwise encirclements of the –1+j0 point\nnumber of poles of G(s)H(s) in the right-half s plane\nIf P is not zero, for a stable control system, we must have Z=0,o r  N=–P, which\nmeans that we must have P counterclockwise encirclements of the –1+j0 point.\nIf G(s)H(s) does not have any poles in the right-half s plane, then Z=N.\nThus, for stability there must be no encirclement of the –1+j0 point by the\nG(jv)H(jv) locus. In this case it is not necessary to consider the locus for the en-\ntire jv axis, only for the positive-frequency portion. The stability of such a system\ncan be determined by seeing if the –1+j0 point is enclosed by the Nyquist plot\nof G(jv)H(jv). The region enclosed by the Nyquist plot is shown in Figure 7–49.\nFor stability, the –1+j0 point must lie outside the shaded region.\n2. We must be careful when testing the stability of multiple-loop systems since they\nmay include poles in the right-half s plane. (Note that although an inner loop may\nbe unstable, the entire closed-loop system can be made stable by proper design.)\nSimple inspection of encirclements of the –1+j0 point by the G(jv)H(jv) locus\nis not sufficient to detect instability in multiple-loop systems. In such cases, how-\never, whether any pole of 1+G(s)H(s) is in the right-half s plane can be deter-\nmined easily by applying the Routh stability criterion to the denominator of\nG(s)H(s).\nIf transcendental functions, such as transport lag e–Ts, are included in G(s)H(s),\nthey must be approximated by a series expansion before the Routh stability\ncriterion can be applied.\n3. If the locus of G(jv)H(jv) passes through the –1+j0 point, then zeros of the\ncharacteristic equation, or closed-loop poles, are located on the jv axis.This is not\ndesirable for practical control systems. For a well-designed closed-loop system,\nnone of the roots of the characteristic equation should lie on the jv axis.\n P =\n N =\n Z =\nZ = N + P452\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\njv\njv\nss0\ns Plane\ns Plane\nj 0+\nj 0–\n`\ns = e e\nju\ne\nFigure 7–50\nContour near the\norigin of the s plane\nand closed contour in\nthe s plane avoiding\npoles and zeros at\nthe origin.\nSpecial Case when G(s)H(s) Involves Poles and/or Zeros on the jV Axis. In\nthe previous discussion, we assumed that the open-loop transfer function G(s)H(s) has\nneither poles nor zeros at the origin.We now consider the case where G(s)H(s) involves\npoles and/or zeros on the jv axis.\nSince the Nyquist path must not pass through poles or zeros of G(s)H(s), if the func-\ntion G(s)H(s) has poles or zeros at the origin (or on the jv axis at points other than the\norigin), the contour in the s plane must be modified. The usual way of modifying the\ncontour near the origin is to use a semicircle with the infinitesimal radius e, as shown in\nFigure 7–50. [Note that this semicircle may lie in the right-half s plane or in the left-half\ns plane. Here we take the semicircle in the right-half s plane.] A representative point s\nmoves along the negative jv axis from –jq to j0–. From s=j0– to s=j0±, the point\nmoves along the semicircle of radius e (where e /H112701) and then moves along the posi-\ntive jv axis from j0± to jq. From s=jq, the contour follows a semicircle with infinite\nradius, and the representative point moves back to the starting point,s=–jq.The area\nthat the modified closed contour avoids is very small and approaches zero as the radius\ne approaches zero. Therefore, all the poles and zeros, if any, in the right-half s plane are\nenclosed by this contour.\nConsider, for example, a closed-loop system whose open-loop transfer function is\ngiven by\nThe points corresponding to s=j0± and s=j0– on the locus of G(s)H(s) in the\nG(s)H(s) plane are –jq and jq, respectively. On the semicircular path with radius e\n(where e /H112701), the complex variable s can be written\nwhere u varies from –90° to ±90°. Then G(s)H(s) becomes\nGAee\nju\nBHAee\nju\nB = K\nee\nju\n= K\ne  e\n-ju\ns = ee\nju\nG(s)H(s) = K\ns(Ts + 1)\nOpenmirrors.comSection 7–5 / Nyquist Stability Criterion 453\njv\ns\ns PlaneD\nC\nA\nB E\nF\nj 0+\nj 0–\n+j `\n– j `\n` `\n(e /H11021/H11021 1)\nv = 0 +\n–1 D/H11032, E/H11032, F/H11032\nv =– `\nv = `\nGH Plane\nRe\nA/H11032\nB/H11032\nC/H11032\nIm\nv = 0–\nFigure 7–51\ns-Plane contour and the\nG(s)H(s) locus in the GH\nplane, where\nG(s)H(s) = K/H20862Cs(Ts + 1)D.\nThe value K/H20862e approaches infinity as e approaches zero, and –u varies from 90° to –90°\nas a representative point s moves along the semicircle in the s plane. Thus, the points\nG(j0–)H(j0–)=jq and G(j0±)H(j0±)=–jq are joined by a semicircle of infinite\nradius in the right-half GH plane.The infinitesimal semicircular detour around the ori-\ngin in the s plane maps into the GH plane as a semicircle of infinite radius. Figure 7–51\nshows the s-plane contour and the G(s)H(s) locus in the GH plane. Points A, B, and\nC on the s-plane contour map into the respective points A¿, B¿, and C¿ on the G(s)H(s)\nlocus. As seen from Figure 7–51, points D, E, and F on the semicircle of infinite radius\nin the s plane map into the origin of the GH plane. Since there is no pole in the right-\nhalf s plane and the G(s)H(s) locus does not encircle the –1+j0 point, there are no\nzeros of the function 1+G(s)H(s) in the right-half s plane. Therefore, the system is\nstable.\nFor an open-loop transfer function G(s)H(s) involving a 1/sn factor (where\nn=2,3 , p ), the plot of G(s)H(s) has n clockwise semicircles of infinite radius about\nthe origin as a representative point s moves along the semicircle of radius e (where\ne /H112701). For example, consider the following open-loop transfer function:\nThen\nAsu varies from –90° to 90° in the s plane, the angle of G(s)H(s) varies from 180° to\n–180°, as shown in Figure 7–52. Since there is no pole in the right-half s plane and the\nlocus encircles the –1+j0 point twice clockwise for any positive value of K, there are\ntwo zeros of 1+G(s)H(s) in the right-half s plane. Therefore, this system is always\nunstable.\nlim\ns S eeju G(s)H(s) = K\ne2e2ju = K\ne2 e-2ju\nG(s)H(s) = K\ns2(Ts + 1)454\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nNote that a similar analysis can be made if G(s)H(s) involves poles and/or zeros on\nthe jv axis. The Nyquist stability criterion can now be generalized as follows:\nNyquist stability criterion[for a general case whenG(s)H(s) has poles and/or zeros\non thejvaxis]: In the system shown in Figure 7–44, if the open-loop transfer function\nG(s)H(s)has k poles in the right-half s plane, then for stability the G(s)H(s)locus,\nas a representative point s traces on the modified Nyquist path in the clockwise di-\nrection, must encircle the –1+j0 point k times in the counterclockwise direction.\n7–6 STABILITY ANALYSIS\nIn this section, we shall present several illustrative examples of the stability analysis of\ncontrol systems using the Nyquist stability criterion.\nIf the Nyquist path in the s plane encircles Z zeros and P poles of 1+G(s)H(s) and\ndoes not pass through any poles or zeros of 1+G(s)H(s) as a representative point s\nmoves in the clockwise direction along the Nyquist path, then the corresponding con-\ntour in the G(s)H(s) plane encircles the –1+j0 point N=Z-P times in the clock-\nwise direction. (Negative values of N imply counterclockwise encirclements.)\nIn examining the stability of linear control systems using the Nyquist stability crite-\nrion, we see that three possibilities can occur:\n1. There is no encirclement of the –1+j0 point. This implies that the system is sta-\nble if there are no poles of G(s)H(s) in the right-half s plane; otherwise, the sys-\ntem is unstable.\n2. There are one or more counterclockwise encirclements of the –1+j0 point. In this\ncase the system is stable if the number of counterclockwise encirclements is the\nsame as the number of poles of G(s)H(s) in the right-half s plane; otherwise, the\nsystem is unstable.\n3. There are one or more clockwise encirclements of the –1+j0 point. In this case\nthe system is unstable.\nIn the following examples, we assume that the values of the gain K and the time con-\nstants (such as T, and ) are all positive.T\n2\nT\n1\n \n,\njv\ns Plane\ns\nGH Plane\nRe\nj 0+\nj 0–\n`\n+j `\n–j `\ne /H11021/H11021 1\nv = 0+\nv = 0– –1\n`\nIm\nv =– `\nv = `\nFigure 7–52\ns-Plane contour and the\nG(s)H(s) locus in the GH\nplane, where\nG(s)H(s) = K/H20862Cs\n2\n(Ts + 1)D.\nOpenmirrors.comSection 7–6 / Stability Analysis 455\nIm\nRe–1\nGH Plane\nG(jv) H(jv)\nv = 0v = –`\nv = `\nFigure 7–53\nPolar plot of\nG(jv)H(jv)\nconsidered in\nExample 7–14.\nIm\nRe Re–1\n–1\nGH Plane\nv = 0–\nv = 0+\nIm GH Plane\nv = 0–\nv = 0+\nSmall K Large K\n(Stable) (Unstable)\nP = 0 P = 0\nN = 0\nZ = 0\nv =– /H11009\nv = /H11009\nv =– /H11009\nv = /H11009\nN = 2\nZ = 2\nFigure 7–54\nPolar plots of the\nsystem considered in\nExample 7–15.\nEXAMPLE 7–14 Consider a closed-loop system whose open-loop transfer function is given by\nExamine the stability of the system.\nA plot of G(jv)H(jv) is shown in Figure 7–53. Since G(s)H(s) does not have any poles in\nthe right-half s plane and the –1+j0 point is not encircled by the G(jv)H(jv) locus, this system\nis stable for any positive values of K, and T2 .T1 ,\nG(s)H(s) = K\nAT1 s + 1BAT2 s + 1B\nEXAMPLE 7–15 Consider the system with the following open-loop transfer function:\nDetermine the stability of the system for two cases: (1) the gain K is small and (2) K is large.\nThe Nyquist plots of the open-loop transfer function with a small value of K and a large value\nof K are shown in Figure 7–54.The number of poles of G(s)H(s) in the right-half s plane is zero.\nG(s)H(s) = K\nsAT1 s + 1BAT2 s + 1B456\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nIm\nRe\nGH Plane\nv = 0–\nv = 0+\nv =– /H11009\nv = /H11009\nIm\nRe\nGH Plane\nv = 0–\nv = 0+\nv =– /H11009\nv = /H11009\nIm\nRe\nGH Plane\nv = 0+\nv = 0–\nv = /H11009\nv =– /H11009\nT\n1\n/H11021 T\n2\n(Stable)\nT\n1\n= T\n2\nG(jv) H(jv) locus\npasses through the\n–1 + j0 point\nT\n1\n/H11022 T\n2\n(Unstable)\nFigure 7–55\nPolar plots of the\nsystem considered in\nExample 7–16.\nTherefore, for this system to be stable, it is necessary that N=Z=0 or that the G(s)H(s) locus\nnot encircle the –1+j0 point.\nFor small values of K, there is no encirclement of the –1+j0 point. Hence, the system is sta-\nble for small values of K. For large values of K, the locus of G(s)H(s) encircles the –1+j0 point\ntwice in the clockwise direction, indicating two closed-loop poles in the right-half s plane, and the\nsystem is unstable. (For good accuracy,K should be large. From the stability viewpoint, however,\na large value of K causes poor stability or even instability. To compromise between accuracy and\nstability, it is necessary to insert a compensation network into the system. Compensating tech-\nniques in the frequency domain are discussed in Sections 7–11 through 7–13.)\nEXAMPLE 7–16\nThe stability of a closed-loop system with the following open-loop transfer function\ndepends on the relative magnitudes of and Draw Nyquist plots and determine the stability\nof the system.\nPlots of the locus G(s)H(s) for three cases, and are shown \nin Figure 7–55. For the locus of G(s)H(s) does not encircle the –1+j0 point,\nand the closed-loop system is stable. For , the G(s)H(s) locus passes through \nthe –1+j0 point, which indicates that the closed-loop poles are located on the jv axis. For\nthe locus of G(s)H(s) encircles the –1+j0 point twice in the clockwise direction.\nThus, the closed-loop system has two closed-loop poles in the right-half s plane, and the system\nis unstable.\nT\n1\n7 T\n2\n \n,\nT\n1\n= T\n2\nT\n1\n \n6 T\n2\n \n,\nT\n1\n7 T\n2\n \n,T\n1\n6 T\n2\n \n,T\n1\n= T\n2\n \n,\nT\n2\n \n.T\n1\nG(s)H(s) =\nKAT\n2\n \ns + 1B\ns\n2\nAT\n1\n \ns + 1B\nEXAMPLE 7–17\nConsider the closed-loop system having the following open-loop transfer function:\nDetermine the stability of the system.\nG(s)H(s) = K\ns(Ts - 1)\nOpenmirrors.comSection 7–6 / Stability Analysis 457\nIm\nRe\nGH Plane\nv = 0–\nv = 0+\n–1\nv = `\nv =– `\nFigure 7–56\nPolar plot of the\nsystem considered in\nExample 7–17.\nIm\nRe\nGH Plane\nv = 0–\nv = 0+\n–1\nv =– `\nv = `\nFigure 7–57\nPolar plot of the\nsystem considered in\nExample 7–18.\nThe function G(s)H(s) has one pole (s=1/T) in the right-half s plane.Therefore,P=1.T he\nNyquist plot shown in Figure 7–56 indicates that the G(s)H(s) plot encircles the –1+j0 point\nonce clockwise. Thus,N=1. Since Z=N+P, we find that Z=2. This means that the closed-\nloop system has two closed-loop poles in the right-half s plane and is unstable.\nEXAMPLE 7–18 Investigate the stability of a closed-loop system with the following open-loop transfer function:\nThe open-loop transfer function has one pole (s=1) in the right-half s plane, or P=1.T h e\nopen-loop system is unstable. The Nyquist plot shown in Figure 7–57 indicates that the –1+j0\npoint is encircled by the G(s)H(s) locus once in the counterclockwise direction. Therefore,\nN=–1. Thus,Z is found from Z=N+P to be zero, which indicates that there is no zero of\n1+G(s)H(s) in the right-half s plane, and the closed-loop system is stable. This is one of the\nexamples for which an unstable open-loop system becomes stable when the loop is closed.\nG(s)H(s) =\nK(s + 3)\ns(s - 1)   (K 7 1)458\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nR(s) C(s)\nG(s)\nG\n1\n(s) G\n2\n(s)\nH\n1\n(s)\nH\n2\n(s)\n+ –\n+ –\nFigure 7–59\nMultiple-loop\nsystem.\nConditionally Stable Systems. Figure 7–58 shows an example of a G(jv)H(jv)\nlocus for which the closed-loop system can be made unstable by varying the open-loop\ngain. If the open-loop gain is increased sufficiently, the G(jv)H(jv) locus encloses the\n–1+j0 point twice, and the system becomes unstable. If the open-loop gain is decreased\nsufficiently, again the G(jv)H(jv) locus encloses the –1+j0 point twice. For stable\noperation of the system considered here, the critical point –1+j0 must not be located\nin the regions between OA and BC shown in Figure 7–58. Such a system that is stable\nonly for limited ranges of values of the open-loop gain for which the –1+j0 point is\ncompletely outside the G(jv)H(jv) locus is a conditionally stable system.\nA conditionally stable system is stable for the value of the open-loop gain lying be-\ntween critical values, but it is unstable if the open-loop gain is either increased or de-\ncreased sufficiently. Such a system becomes unstable when large input signals are applied,\nsince a large signal may cause saturation, which in turn reduces the open-loop gain of\nthe system. It is advisable to avoid such a situation.\nMultiple-Loop System. Consider the system shown in Figure 7–59.This is a mul-\ntiple-loop system. The inner loop has the transfer function\nG(s) = G\n2\n(s)\n1 + G\n2\n(s)H\n2\n(s)\nIm\nRe\nGH Plane\n0\n0\nABC\nv = `\nv\nFigure 7–58\nPolar plot of a\nconditionally stable\nsystem.\nOpenmirrors.comSection 7–6 / Stability Analysis 459\nFigure 7–60\nControl system.\nIf G(s) is unstable, the effects of instability are to produce a pole or poles in the right-half\ns plane.Then the characteristic equation of the inner loop,1+G2(s)H2(s)=0, has a zero\nor zeros in the right-half s plane. If G2(s) and H2(s) have poles here, then the number\nZ1 of right-half plane zeros of 1+G2(s)H2(s) can be found from where\nN1 is the number of clockwise encirclements of the –1+j0 point by the G2(s)H2(s)\nlocus. Since the open-loop transfer function of the entire system is given by\nG1(s)G(s)H1(s), the stability of this closed-loop system can be found from the Nyquist\nplot of G1(s)G(s)H1(s) and knowledge of the right-half plane poles of G1(s)G(s)H1(s).\nNotice that if a feedback loop is eliminated by means of block diagram reductions,\nthere is a possibility that unstable poles are introduced; if the feedforward branch is\neliminated by means of block diagram reductions, there is a possibility that right-half\nplane zeros are introduced.Therefore, we must note all right-half plane poles and zeros\nas they appear from subsidiary loop reductions. This knowledge is necessary in deter-\nmining the stability of multiple-loop systems.\nEXAMPLE 7–19 Consider the control system shown in Figure 7–60.The system involves two loops. Determine the\nrange of gain K for stability of the system by the use of the Nyquist stability criterion. (The gain\nK is positive.)\nTo examine the stability of the control system, we need to sketch the Nyquist locus of G(s), where\nHowever, the poles of G(s) are not known at this point.Therefore, we need to examine the minor\nloop if there are right-half s-plane poles. This can be done easily by use of the Routh stability\ncriterion. Since\nthe Routh array becomes as follows:\nNotice that there are two sign changes in the first column. Hence, there are two poles of G2(s) in\nthe right-half s plane.\nOnce we find the number of right-half s plane poles of G2(s), we proceed to sketch the Nyquist\nlocus of G(s), where\nG(s) = G1(s)G2(s) =\nK(s + 0.5)\ns3 + s2 + 1\ns3\ns2\ns1\ns0\n1\n1\n-1\n1\n0\n1\n0\nG2(s) = 1\ns3 + s2 + 1\nG(s) = G1(s)G2(s)\nZ1 = N1 + P1 ,\nP1\nR(s) C(s)\nK(s + 0.5)\nG1(s)\nG2(s)\n1\ns2(s + 1)+ – + –460\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nIm\nv = 0. 8\nv = 0. 7\nj1.5\nG\nK\nPlane\nv = 0. 6\nv = 0. 9 j1\nG(jv)\nK\nv = 0. 4v = 1 j0.5\nv = 1.5v = 1.4\nv = 3\nv = 0\nv = /H11009\nv = 0.2\nv = 0.1\n–1 –0.5 0 0.5 1 Re\nv = 2\nv =– /H11009\n–j0.5\n–j1\n–j1.5\nFigure 7–61\nPolar plot of\nG(jv)/K.\nOur problem is to determine the range of the gain K for stability. Hence, instead of plotting\nNyquist loci of G(jv) for various values of K, we plot the Nyquist locus of G(jv)/K. Figure 7–61\nshows the Nyquist plot or polar plot of G(jv)/K.\nSince G(s) has two poles in the right-half s plane, we have Noting that\nZ=N+P\nfor stability, we require Z=0 or N=–2. That is, the Nyquist locus of G(jv) must encircle the\n–1+j0 point twice counterclockwise. From Figure 7–61, we see that, if the critical point lies\nbetween 0 and –0.5, then the G(jv)/K locus encircles the critical point twice counterclockwise.\nTherefore, we require\n–0.5K<–1\nThe range of the gain K for stability is\n2<K\nP = 2.\nOpenmirrors.comSection 7–6 / Stability Analysis 461\nNyquist Stability Criterion Applied to Inverse Polar Plots. In the previous\nanalyses, the Nyquist stability criterion was applied to polar plots of the open-loop trans-\nfer function G(s)H(s).\nIn analyzing multiple-loop systems, the inverse transfer function may sometimes be\nused in order to permit graphical analysis; this avoids much of the numerical calculation.\n(The Nyquist stability criterion can be applied equally well to inverse polar plots. The\nmathematical derivation of the Nyquist stability criterion for inverse polar plots is the\nsame as that for direct polar plots.)\nThe inverse polar plot of G(jv)H(jv) is a graph of 1/CG(jv)H(jv)Das a function of\nv. For example, if G(jv)H(jv) is\nthen\nThe inverse polar plot for v /H113500 is the lower half of the vertical line starting at the point\n(1, 0) on the real axis.\nThe Nyquist stability criterion applied to inverse plots may be stated as follows: For\na closed-loop system to be stable, the encirclement, if any, of the –1+j0 point by the\n1/CG(s)H(s)Dlocus (as s moves along the Nyquist path) must be counterclockwise, and\nthe number of such encirclements must be equal to the number of poles of 1/CG(s)H(s)D\n[that is, the zeros of G(s)H(s)] that lie in the right-half s plane. [The number of zeros\nof G(s)H(s) in the right-half s plane may be determined by the use of the Routh sta-\nbility criterion.] If the open-loop transfer function G(s)H(s) has no zeros in the right-\nhalf s plane, then for a closed-loop system to be stable, the number of encirclements of\nthe –1+j0 point by the 1/CG(s)H(s)Dlocus must be zero.\nNote that although the Nyquist stability criterion can be applied to inverse polar\nplots, if experimental frequency-response data are incorporated, counting the number\nof encirclements of the 1/CG(s)H(s)Dlocus may be difficult because the phase shift cor-\nresponding to the infinite semicircular path in the s plane is difficult to measure. For\nexample, if the open-loop transfer function G(s)H(s) involves transport lag such that\nthen the number of encirclements of the –1+j0 point by the 1/CG(s)H(s)Dlocus be-\ncomes infinite, and the Nyquist stability criterion cannot be applied to the inverse polar\nplot of such an open-loop transfer function.\nIn general, if experimental frequency-response data cannot be put into analytical\nform, both the G(jv)H(jv) and 1/CG(jv)H(jv)Dloci must be plotted. In addition,\nthe number of right-half plane zeros of G(s)H(s) must be determined. It is more dif-\nficult to determine the right-half plane zeros of G(s)H(s) (in other words, to deter-\nmine whether a given component is minimum phase) than it is to determine the\nright-half plane poles of G(s)H(s) (in other words, to determine whether the com-\nponent is stable).\nG(s)H(s) = Ke-jvL\ns(Ts + 1)\n1\nG(jv)H(jv) = 1\njvT + 1\nG(jv)H(jv) = jvT\n1 + jvT462\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nDepending on whether the data are graphical or analytical and whether nonmini-\nmum-phase components are included, an appropriate stability test must be used for\nmultiple-loop systems. If the data are given in analytical form or if mathematical ex-\npressions for all the components are known, the application of the Nyquist stability cri-\nterion to inverse polar plots causes no difficulty, and multiple-loop systems may be\nanalyzed and designed in the inverse GH plane. (See Problem A–7–15.)\n7–7 RELATIVE STABILITY ANALYSIS\nRelative Stability. In designing a control system, we require that the system be\nstable. Furthermore, it is necessary that the system have adequate relative stability.\nIn this section, we shall show that the Nyquist plot indicates not only whether a sys-\ntem is stable, but also the degree of stability of a stable system.The Nyquist plot also gives\ninformation as to how stability may be improved, if this is necessary.\nIn the following discussion, we shall assume that the systems considered have\nunity feedback. Note that it is always possible to reduce a system with feedback ele-\nments to a unity-feedback system, as shown in Figure 7–62. Hence, the extension of\nrelative stability analysis for the unity-feedback system to nonunity-feedback sys-\ntems is possible.\nWe shall also assume that, unless otherwise stated, the systems are minimum-phase\nsystems; that is, the open-loop transfer function has neither poles nor zeros in the right-\nhalf s plane.\nRelative Stability Analysis by Conformal Mapping. One of the important prob-\nlems in analyzing a control system is to find all closed-loop poles or at least those clos-\nest to the jv axis (or the dominant pair of closed-loop poles). If the open-loop\nfrequency-response characteristics of a system are known, it may be possible to esti-\nmate the closed-loop poles closest to the jv axis. It is noted that the Nyquist locus G(jv)\nneed not be an analytically known function of v. The entire Nyquist locus may be ex-\nperimentally obtained. The technique to be presented here is essentially graphical and\nis based on a conformal mapping of the s plane into the G(s) plane.\nR(s) C(s)\nG\nH\nR(s)\nGH\nC(s)1\nH\n+ –\n+ –\nFigure 7–62\nModification of a\nsystem with feedback\nelements to a unity-\nfeedback system.\nOpenmirrors.comSection 7–7 / Relative Stability Analysis 463\ns Plane\njv\nG(jv)\ns0\njv4\njv3\njv2\njv1\n–s4 –s3 –s2 –s1\nG Plane\nIm\nRe–10\nConstant s\ncurves\nConstant v\ncurves\nv4\nv3\nv2\nv1\n–s4\n–s3–s2 –s1Figure 7–63\nConformal mapping\nofs-plane grids into\nthe G(s) plane.\ns Plane\njv\ns0\n(a) (b)\ns Plane\njv\ns0\nFigure 7–64\nTwo systems with\ntwo closed-loop\npoles each.\nConsider the conformal mapping of constant-s lines (lines s=s+jv, where s is\nconstant and v varies) and constant-v lines (lines s=s+jv, where v is constant and\ns varies) in the s plane.The s=0 line (the jv axis) in the s plane maps into the Nyquist\nplot in the G(s) plane. The constant-s lines in the s plane map into curves that are sim-\nilar to the Nyquist plot and are in a sense parallel to the Nyquist plot, as shown in Fig-\nure 7–63.The constant-v lines in the s plane map into curves, also shown in Figure 7–63.\nAlthough the shapes of constant- s and constant-v loci in the G(s) plane and the\ncloseness of approach of the G(jv) locus to the –1+j0 point depend on a particular\nG(s), the closeness of approach of the G(jv) locus to the –1+j0 point is an indication\nof the relative stability of a stable system. In general, we may expect that the closer the\nG(jv) locus is to the –1+j0 point, the larger the maximum overshoot is in the step\ntransient response and the longer it takes to damp out.\nConsider the two systems shown in Figures 7–64(a) and (b). (In Figure 7–64, the :’s\nindicate closed-loop poles.) System (a) is obviously more stable than system (b) because\nthe closed-loop poles of system (a) are located farther left than those of system (b).\nFigures 7–65(a) and (b) show the conformal mapping of s-plane grids into the G(s)\nplane. The closer the closed-loop poles are located to the jv axis, the closer the G(jv)\nlocus is to the –1+j0 point.464\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nPhase and Gain Margins. Figure 7–66 shows the polar plots of G(jv) for three\ndifferent values of the open-loop gain K. For a large value of the gain K, the system is\nunstable.As the gain is decreased to a certain value, the G(jv) locus passes through the\n–1+j0 point. This means that with this gain value the system is on the verge of insta-\nbility, and the system will exhibit sustained oscillations. For a small value of the gain K,\nthe system is stable.\nIn general, the closer the G(jv) locus comes to encircling the –1+j0 point, the\nmore oscillatory is the system response.The closeness of the G(jv) locus to the –1+j0\npoint can be used as a measure of the margin of stability. (This does not apply, however,\nto conditionally stable systems.) It is common practice to represent the closeness in\nterms of phase margin and gain margin.\nPhase margin:The phase margin is that amount of additional phase lag at the gain\ncrossover frequency required to bring the system to the verge of instability.The gain\ncrossover frequency is the frequency at which @G(jv)@, the magnitude of the open-\nloop transfer function, is unity. The phase margin g is 180° plus the phase angle f\nof the open-loop transfer function at the gain crossover frequency, or\ng=180°+f\nIm\nRe\nG Plane\n0–1\nK : Large\nK : Small\nK = open-loop gain\nFigure 7–66\nPolar plots of\nKA1 + jvT\na\nBA1 + jvT\nb\nB p\n(jv)A1 + jvT\n1\nBA1 + jvT\n2\nB p .\nIm\nRe\nG Plane\n0\n–1\nG( jv)\n(a) (b)\nIm\nRe\nG Plane\n0–1\nG( jv)\nFigure 7–65\nConformal mappings\nof s-plane grids for\nthe systems shown in\nFigure 7–64 into the\nG(s) plane.\nOpenmirrors.comSection 7–7 / Relative Stability Analysis 465\n|G| in dB\n|G| in dB\n0\n+\n–\n0\n+\n–|G| in dB\n+\n–\n|G| in dB\n+\n–\n–90°\n–180°\n–270°\n–90°\n–180°\n–270°\nG\nG\nLog v\nLog v\nLog v\nLog v\nPositive\ngain margin\nPositive\nphase margin\nNegative\ngain margin\nNegative\nphase margin\nStable system\nIm Im\nRe Re\nUnstable system\nStable system Unstable system\nStable system Unstable system\n(a)\n(b)\n(c)\nNegative\nphase margin\nNegative\nphase\nmargin\nPositive\ngain\nmargin\nPositive\ngain\nmargin\nPositive\nphase\nmargin\nPositive\nphase\nmargin\nNegative\ngain\nmargin\nNegative\ngain\nmargin\n1\nKg\nf\ng\nG(jv)\nG plane G plane\n1\nKg\nf\ng\nG(jv)\n11\n–1–1\n0 0\n–270° –180° –90° –270° –180° –90°\nG G\nFigure 7–67\nPhase and gain\nmargins of stable and\nunstable systems.\n(a) Bode diagrams;\n(b) polar plots;\n(c) log-magnitude-\nversus-phase plots.\nFigures 7–67(a), (b), and (c) illustrate the phase margin of both a stable system and\nan unstable system in Bode diagrams, polar plots, and log-magnitude-versus-phase plots.\nIn the polar plot, a line may be drawn from the origin to the point at which the unit cir-\ncle crosses the G(jv) locus. If this line lies below (above) the negative real axis, then the466\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nangle gis positive (negative).The angle from the negative real axis to this line is the phase\nmargin.The phase margin is positive for g>0 and negative for g<0. For a minimum-\nphase system to be stable, the phase margin must be positive. In the logarithmic plots,\nthe critical point in the complex plane corresponds to the 0-dB and –180° lines.\nGain margin: The gain margin is the reciprocal of the magnitude @G(jv)@at the\nfrequency at which the phase angle is –180°. Defining the phase crossover fre-\nquency v\n1\nto be the frequency at which the phase angle of the open-loop transfer\nfunction equals –180° gives the gain margin K\ng\n:\nIn terms of decibels,\nThe gain margin expressed in decibels is positive if K\ng\nis greater than unity and nega-\ntive if K\ng\nis smaller than unity. Thus, a positive gain margin (in decibels) means that the\nsystem is stable, and a negative gain margin (in decibels) means that the system is\nunstable. The gain margin is shown in Figures 7–67(a), (b), and (c).\nFor a stable minimum-phase system, the gain margin indicates how much the gain can\nbe increased before the system becomes unstable. For an unstable system, the gain mar-\ngin is indicative of how much the gain must be decreased to make the system stable.\nThe gain margin of a first- or second-order system is infinite since the polar plots for\nsuch systems do not cross the negative real axis. Thus, theoretically, first- or second-\norder systems cannot be unstable. (Note, however, that so-called first- or second-order\nsystems are only approximations in the sense that small time lags are neglected in de-\nriving the system equations and are thus not truly first- or second-order systems. If these\nsmall lags are accounted for, the so-called first- or second-order systems may become\nunstable.)\nIt is noted that for a nonminimum-phase system with unstable open loop the stability\ncondition will not be satisfied unless the G(jv) plot encircles the –1+j0 point. Hence,\nsuch a stable nonminimum-phase system will have negative phase and gain margins.\nIt is also important to point out that conditionally stable systems will have two or\nmore phase crossover frequencies, and some higher-order systems with complicated\nnumerator dynamics may also have two or more gain crossover frequencies, as shown\nin Figure 7–68. For stable systems having two or more gain crossover frequencies, the\nphase margin is measured at the highest gain crossover frequency.\nA Few Comments on Phase and Gain Margins. The phase and gain margins of\na control system are a measure of the closeness of the polar plot to the –1+j0 point.\nTherefore, these margins may be used as design criteria.\nIt should be noted that either the gain margin alone or the phase margin alone does\nnot give a sufficient indication of the relative stability. Both should be given in the\ndetermination of relative stability.\nFor a minimum-phase system, both the phase and gain margins must be positive for\nthe system to be stable. Negative margins indicate instability.\nProper phase and gain margins ensure us against variations in the system components\nand are specified for definite positive values. The two values bound the behavior of the\nK\ng\n dB = 20 log K\ng\n=- 20 log\n \n@GAjv\n1\nB@\nK\ng\n= 1\n@GAjv\n1\nB@\nOpenmirrors.comSection 7–7 / Relative Stability Analysis 467\nv = ` v = `\nv\nIm Im\nReRe\n0\nv\n0\nv1\nv1\nv2\nv2\nv3\nv3\nPhase crossover\nfrequencies\n(v1, v2, v3)\nGain crossover\nfrequencies\n(v1, v2, v3)\nFigure 7–68\nPolar plots showing\nmore than two phase\nor gain crossover\nfrequencies.\nFigure 7–69\nControl system.\nclosed-loop system near the resonant frequency. For satisfactory performance, the phase\nmargin should be between 30° and 60°, and the gain margin should be greater than 6 dB.\nWith these values, a minimum-phase system has guaranteed stability, even if the open-\nloop gain and time constants of the components vary to a certain extent. Although the\nphase and gain margins give only rough estimates of the effective damping ratio of the\nclosed-loop system, they do offer a convenient means for designing control systems or\nadjusting the gain constants of systems.\nFor minimum-phase systems, the magnitude and phase characteristics of the open-\nloop transfer function are definitely related. The requirement that the phase margin be\nbetween 30° and 60° means that in a Bode diagram the slope of the log-magnitude curve\nat the gain crossover frequency should be more gradual than –40 dB/H20862decade. In most\npractical cases, a slope of –20 dB/H20862decade is desirable at the gain crossover frequency for\nstability. If it is –40 dB/H20862decade, the system could be either stable or unstable. (Even if\nthe system is stable, however, the phase margin is small.) If the slope at the gain crossover\nfrequency is –60 dB/H20862decade or steeper, the system is most likely unstable.\nFor nonminimum-phase systems, the correct interpretation of stability margins re-\nquires careful study.The best way to determine the stability of nonminimum-phase sys-\ntems is to use the Nyquist diagram approach rather than Bode diagram approach.\nEXAMPLE 7–20 Obtain the phase and gain margins of the system shown in Figure 7–69 for the two cases where\nK=10 and K=100.\nR(s) C(s)K\ns(s + 1) ( s + 5)+ –468\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nThe phase and gain margins can easily be obtained from the Bode diagram.A Bode diagram of\nthe given open-loop transfer function with K=10 is shown in Figure 7–70(a). The phase and gain\nmargins for K=10 are\nPhase margin=21°, Gain margin =8 dB\nTherefore, the system gain may be increased by 8 dB before the instability occurs.\nIncreasing the gain from K=10 to K=100 shifts the 0-dB axis down by 20 dB, as shown in\nFigure 7–70(b). The phase and gain margins are\nPhase margin=–30°, Gain margin =–12 dB\nThus, the system is stable for K=10, but unstable for K=100.\nNotice that one of the very convenient aspects of the Bode diagram approach is the ease with\nwhich the effects of gain changes can be evaluated. Note that to obtain satisfactory performance, we\nmust increase the phase margin to 30°~ 60°. This can be done by decreasing the gain K. Decreas-\ning K is not desirable, however, since a small value of K will yield a large error for the ramp input.\nThis suggests that reshaping of the open-loop frequency-response curve by adding compensation may\nbe necessary. Compensation techniques are discussed in detail in Sections 7–11 through 7–13.\nObtaining Gain Margin, Phase Margin, Phase-Crossover Frequency, and Gain-\nCrossover Frequency with MATLAB.The gain margin, phase margin, phase-crossover\nfrequency, and gain-crossover frequency can be obtained easily with MATLAB.The com-\nmand to be used is\n[Gm,pm,wcp,wcg] = margin(sys)\n30\n20\n10\n0\n–30\n–20\n–10\n0°\n–90°\n–180°\n–270°\n|G| in dB\n|G| in dB\nG\n0.2 0.4 0.6 0.8 1 2 4 6 8 10\n0°\n–90°\n–30°–180°\n–270°\nG\n0.2 0.4 0.6 0.8 1 2 4 6 8 10\nK = 10 K = 100\n+ 8 dB (Gain margin)\n(Phase margin) +21°\nvv\n30\n20\n10\n0\n–10\n50\n40\n(Gain margin) –12 dB\n(Phase margin)\n(a) (b)\nFigure 7–70\nBode diagrams of the system shown in Figure 7–69; (a) with K=10 and (b) with K=100.\nOpenmirrors.comSection 7–7 / Relative Stability Analysis 469\nG(s)\n20(s + 1)\ns(s + 5)(s2 + 2s + 10)\n+ –\nFigure 7–71\nClosed-loop system.\nFrequency (rad/sec)\nBode Diagram\n−300\n−100\n−150\n−200\n−250\n0\n−50\n−100\nPhase (deg); Magnitude (dB)\n50\n−50\n0\n10−1 100 1014.01310.4426 10 2\n9.9293 dB\n103.6573\nFigure 7–72\nBode diagram of\nG(s) shown in \nFigure 7–71.\nMATLAB Program 7–11\nnum = [20  20];\nden = conv([1  5  0],[1  2  10]);\nsys = tf(num,den);\nw = logspace(-1,2,100);\nbode(sys,w)\n[Gm,pm,wcp,wcg] = margin(sys);\nGmdB = 20*log10(Gm);\n[GmdB  pm  wcp  wcg]\nans =\n9.9293  103.6573  4.0131  0.4426\nwhere Gm is the gain margin, pm is the phase margin, wcp is the phase-crossover fre-\nquency, and wcg is the gain-crossover frequency. For details of how to use this com-\nmand, see Example 7–21.\nEXAMPLE 7–21 Draw a Bode diagram of the open-loop transfer function G(s) of the closed-loop system shown\nin Figure 7–71. Determine the gain margin, phase margin, phase-crossover frequency, and gain-\ncrossover frequency with MATLAB.\nA MATLAB program to plot a Bode diagram and to obtain the gain margin, phase margin,\nphase-crossover frequency, and gain-crossover frequency is shown in MATLAB Program 7–11.\nThe Bode diagram of G(s) is shown in Figure 7–72.470\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nResonant Peak Magnitude M\nr\nand Resonant Frequency V\nr\n. Consider the\nstandard second-order system shown in Figure 7–73.The closed-loop transfer function\nis\n(7–16)\nwhere zand v\nn\nare the damping ratio and the undamped natural frequency, respectively.\nThe closed-loop frequency response is\nwhere\nAs given by Equation (7–12), for 0 /H11349z /H113490.707, the maximum value of M occurs at\nthe frequency v\nr\n, where\n(7–17)\nThe frequency v\nr\nis the resonant frequency. At the resonant frequency, the value of M\nis maximum and is given by Equation (7–13), rewritten\n(7–18)\nwhere M\nr\nis defined as the resonant peak magnitude. The resonant peak magnitude is\nrelated to the damping of the system.\nThe magnitude of the resonant peak gives an indication of the relative stability of the\nsystem. A large resonant peak magnitude indicates the presence of a pair of dominant\nclosed-loop poles with small damping ratio, which will yield an undesirable transient\nresponse.A smaller resonant peak magnitude, on the other hand, indicates the absence\nof a pair of dominant closed-loop poles with small damping ratio, meaning that the\nsystem is well damped.\nRemember that v\nr\nis real only if z<0.707. Thus, there is no closed-loop resonance\nif z>0.707. [The value of M\nr\nis unity only if z>0.707. See Equation (7–14).] Since\nthe values of M\nr\nand v\nr\ncan be easily measured in a physical system, they are quite useful\nfor checking agreement between theoretical and experimental analyses.\nM\nr\n= 1\n2z21 - z\n2\nv\nr\n= v\nn\n21 - 2z\n2\nM = 1\nB\na\n1 - v\n2\nv\n2\nn\nb\n2\n+\na\n2z v\nv\nn\nb\n2\n,\n  \na =- tan\n-1\n2z v\nv\nn\n1 - v\n2\nv\n2\nn\nC(jv)\nR(jv) = 1\na\n1 - v\n2\nv\n2\nn\nb\n+ j2z v\nv\nn\n= Me\nja\nC(s)\nR(s) = v\n2\nn\ns\n2\n+ 2zv\nn\n \ns + v\n2\nn\nR(s) C(s)v\nn\ns(s + 2z v\nn\n)\n2\n+ –\nFigure 7–73\nStandard second-\norder system.\nOpenmirrors.comSection 7–7 / Relative Stability Analysis 471\nIt is noted, however, that in practical design problems the phase margin and gain\nmargin are more frequently specified than the resonant peak magnitude to indicate the\ndegree of damping in a system.\nCorrelation between Step Transient Response and Frequency Response in\nthe Standard Second-Order System. The maximum overshoot in the unit-step re-\nsponse of the standard second-order system, as shown in Figure 7–73, can be exactly\ncorrelated with the resonant peak magnitude in the frequency response. Hence, essen-\ntially the same information about the system dynamics is contained in the frequency re-\nsponse as is in the transient response.\nFor a unit-step input, the output of the system shown in Figure 7–73 is given by Equa-\ntion (5–12), or\nwhere\n(7–19)\nOn the other hand, the maximum overshoot Mp for the unit-step response is given by\nEquation (5–21), or\n(7–20)\nThis maximum overshoot occurs in the transient response that has the damped natural\nfrequency The maximum overshoot becomes excessive for values of\nz<0.4.\nSince the second-order system shown in Figure 7–73 has the open-loop transfer function\nfor sinusoidal operation, the magnitude of G(jv) becomes unity when\nwhich can be obtained by equating @G(jv)@to unity and solving for v.At this frequency,\nthe phase angle of G(jv) is\nThus, the phase margin g is\n(7–21)\nEquation (7–21) gives the relationship between the damping ratio zand the phase margin\ng. (Notice that the phase margin g is a function only of the damping ratio z.)\n = tan-1 2z\n321 + 4z4 - 2z2\n = 90° - tan-1 321 + 4z4 - 2z2\n2z\n g = 180° + /G(jv)\n/G(jv) =- /jv - /jv + 2zvn =- 90° - tan-1 321 + 4z4 - 2z2\n2z\nv = vn 321 + 4z4 - 2z2\nG(s) = v2\nn\nsAs + 2zvnB\nvd = vn 21 - z2 .\nMp = e-Az/H2086221 - z2Bp\nvd = vn 21 - z2\nc(t) = 1 - e-zvn t acos vd t + z\n21 - z2\n sin vd t b,  for t /H113500472\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nIn the following, we shall summarize the correlation between the step transient response\nand frequency response of the standard second-order system given by Equation (7–16):\n1. The phase margin and the damping ratio are directly related. Figure 7–74 shows a plot\nof the phase margin gas a function of the damping ratio z. It is noted that for the stan-\ndard second-order system shown in Figure 7–73, the phase margin gand the damping\nratio z are related approximately by a straight line for 0/H11349z /H113490.6, as follows:\nThus a phase margin of 60° corresponds to a damping ratio of 0.6. For higher-order\nsystems having a dominant pair of closed-loop poles, this relationship may be used\nas a rule of thumb in estimating the relative stability in the transient response (that\nis, the damping ratio) from the frequency response.\n2. Referring to Equations (7–17) and (7–19), we see that the values of v\nr\nand v\nd\nare\nalmost the same for small values of z. Thus, for small values of z, the value of v\nr\nis\nindicative of the speed of the transient response of the system.\n3. From Equations (7–18) and (7–20), we note that the smaller the value of z is, the\nlarger the values of M\nr\nand M\np\nare. The correlation between M\nr\nand M\np\nas a func-\ntion of z is shown in Figure 7–75. A close relationship between M\nr\nand M\np\ncan be\nseen for z>0.4. For very small values of z, M\nr\nbecomes very large AM\nr\n/H112711B, while\nthe value of M\np\ndoes not exceed 1.\nCorrelation between Step Transient Response and Frequency Response in\nGeneral Systems. The design of control systems is very often carried out on the basis\nof the frequency response. The main reason for this is the relative simplicity of this ap-\nproach compared with others. Since in many applications it is the transient response of\nthe system to aperiodic inputs rather than the steady-state response to sinusoidal in-\nputs that is of primary concern, the question of correlation between transient response\nand frequency response arises.\nz = g\n100°\n90°\n60°\n30°\n0°0 0.4 0.8 1.2 1.6 2.0\nz\ng\nStraight-line\napproximation\nFigure 7–74\nCurve g (phase\nmargin) versus z for\nthe system shown in\nFigure 7–73.\nOpenmirrors.comFor the standard second-order system shown in Figure 7–73, mathematical rela-\ntionships correlating the step transient response and frequency response can be obtained\neasily. The time response of the standard second-order system can be predicted exactly\nfrom a knowledge of the Mr and vr of its closed-loop frequency response.\nFor nonstandard second-order systems and higher-order systems, the correlation is\nmore complex, and the transient response may not be predicted easily from the fre-\nquency response because additional zeros and/or poles may change the correlation be-\ntween the step transient response and the frequency response existing for the standard\nsecond-order system. Mathematical techniques for obtaining the exact correlation are\navailable, but they are very laborious and of little practical value.\nThe applicability of the transient-response–frequency-response correlation existing for\nthe standard second-order system shown in Figure 7–73 to higher-order systems depends on\nthe presence of a dominant pair of complex-conjugate closed-loop poles in the latter systems.\nClearly, if the frequency response of a higher-order system is dominated by a pair of com-\nplex-conjugate closed-loop poles, the transient-response– frequency-response correlation\nexisting for the standard second-order system can be extended to the higher-order system.\nFor linear, time-invariant, higher-order systems having a dominant pair of complex-\nconjugate closed-loop poles, the following relationships generally exist between the step\ntransient response and frequency response:\n1. The value of Mr is indicative of the relative stability. Satisfactory transient per-\nformance is usually obtained if the value of Mr is in the range 1.0<Mr<1.4\nA0d B <Mr<3 dBB, which corresponds to an effective damping ratio of\n0.4<z<0.7. For values of Mr greater than 1.5, the step transient response may\nexhibit several overshoots. (Note that, in general, a large value of Mr corresponds\nto a large overshoot in the step transient response. If the system is subjected to\nnoise signals whose frequencies are near the resonant frequency vr , the noise will\nbe amplified in the output and will present serious problems.)\n2. The magnitude of the resonant frequency vr is indicative of the speed of the tran-\nsient response. The larger the value of vr , the faster the time response is. In other\nwords, the rise time varies inversely with vr . In terms of the open-loop frequency\nSection 7–7 / Relative Stability Analysis 473\n3\nMr\n2\n1\nMp\n0 0.2 0.4 0.6 0.8 1.0\nz\nMr = 1\n2z    1 – z 2\nMp = c(tp) –1\n[Equation (5-21)]\nFigure 7–75\nCurves Mr versus z\nand Mp versus z for\nthe system shown in\nFigure 7–73.474\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nresponse, the damped natural frequency in the transient response is somewhere\nbetween the gain crossover frequency and phase crossover frequency.\n3. The resonant peak frequency v\nr\nand the damped natural frequency v\nd\nfor the step\ntransient response are very close to each other for lightly damped systems.\nThe three relationships just listed are useful for correlating the step transient re-\nsponse with the frequency response of higher-order systems, provided that they can be\napproximated by the standard second-order system or a pair of complex-conjugate\nclosed-loop poles. If a higher-order system satisfies this condition, a set of time-domain\nspecifications may be translated into frequency-domain specifications. This simplifies\ngreatly the design work or compensation work of higher-order systems.\nIn addition to the phase margin, gain margin, resonant peak M\nr\n, and resonant fre-\nquency v\nr\n, there are other frequency-domain quantities commonly used in performance\nspecifications. They are the cutoff frequency, bandwidth, and the cutoff rate. These will\nbe defined in what follows.\nCutoff Frequency and Bandwidth. Referring to Figure 7–76, the frequency v\nb\nat\nwhich the magnitude of the closed-loop frequency response is 3 dB below its zero-fre-\nquency value is called the cutoff frequency. Thus\nFor systems in which \nThe closed-loop system filters out the signal components whose frequencies are greater\nthan the cutoff frequency and transmits those signal components with frequencies lower\nthan the cutoff frequency.\nThe frequency range 0/H11349v /H11349v\nb\nin which the magnitude of is greater\nthan –3 dB is called the bandwidthof the system. The bandwidth indicates the frequency\nwhere the gain starts to fall off from its low-frequency value. Thus, the bandwidth indicates\nhow well the system will track an input sinusoid. Note that for a given v\nn\n, the rise time in-\ncreases with increasing damping ratio z. On the other hand, the bandwidth decreases with\nthe increase in z. Therefore, the rise time and the bandwidth are inversely proportional to\neach other.\nC(jv)/H20862R(jv)\n2\nC(jv)\nR(jv)\n2\n6- 3 dB,\n  \nfor v 7 v\nb\n@C(j0)/H20862R(j0)@ = 0 dB,\n2\nC(jv)\nR(jv)\n2\n6\n2\nC(j0)\nR(j0)\n2\n- 3 dB,\n  \nfor v 7 v\nb\ndB\n0\n–3\nBandwidth\nv\nb\nv in log scale\nFigure 7–76\nPlot of a closed-loop\nfrequency response\ncurve showing cutoff\nfrequency v\nb\nand\nbandwidth.\nOpenmirrors.comSection 7–7 / Relative Stability Analysis 475\ndB\n0\n–20\n0.33\nI\nI\nI\nII\nII\nII\n1\n1\n1\n1\nv (in log scale)\n(a) (b)\n(c)\n0\n0\nc(t)r(t)\nc(t)r(t)\nr(t)\nt\nt\nFigure 7–77\nComparison of\ndynamic\ncharacteristics of the\ntwo systems\nconsidered in\nExample 7–22.\n(a) Closed-loop\nfrequency-response\ncurves; (b) unit-step\nresponse curves;\n(c) unit-ramp\nresponse curves.\nThe specification of the bandwidth may be determined by the following factors:\n1. The ability to reproduce the input signal.A large bandwidth corresponds to a small rise\ntime, or fast response. Roughly speaking, we can say that the bandwidth is proportional\nto the speed of response. (For example, to decrease the rise time in the step response\nby a factor of 2, the bandwidth must be increased by approximately a factor of 2.)\n2. The necessary filtering characteristics for high-frequency noise.\nFor the system to follow arbitrary inputs accurately, it must have a large bandwidth.\nFrom the viewpoint of noise, however, the bandwidth should not be too large.Thus, there\nare conflicting requirements on the bandwidth, and a compromise is usually necessary for\ngood design. Note that a system with large bandwidth requires high-performance\ncomponents, so the cost of components usually increases with the bandwidth.\nCutoff Rate. The cutoff rate is the slope of the log-magnitude curve near the cutoff fre-\nquency.The cutoff rate indicates the ability of a system to distinguish the signal from noise.\nIt is noted that a closed-loop frequency response curve with a steep cutoff charac-\nteristic may have a large resonant peak magnitude, which implies that the system has a\nrelatively small stability margin.\nEXAMPLE 7–22 Consider the following two systems:\nCompare the bandwidths of these two systems. Show that the system with the larger bandwidth has a\nfaster speed of response and can follow the input much better than the one with the smaller bandwidth.\nFigure 7–77(a) shows the closed-loop frequency-response curves for the two systems. (Asymptot-\nic curves are shown by dashed lines.) We find that the bandwidth of system I is 0/H11349v /H113491 rad/H20862sec and\nthat of system II is 0/H11349v /H113490.33 rad/H20862sec. Figures 7–77(b) and (c) show, respectively, the unit-step re-\nsponse and unit-ramp response curves for the two systems. Clearly, system I, whose bandwidth is three\ntimes wider than that of system II, has a faster speed of response and can follow the input much better.\nSystem I: \nC(s)\nR(s) = 1\ns + 1 ,  System II: \nC(s)\nR(s) = 1\n3s + 1476\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nMATLAB Approach to Get Resonant Peak, Resonant Frequency, and Band-\nwidth. The resonant peak is the value of the maximum magnitude (in decibels) of the\nclosed-loop frequency response.The resonant frequency is the frequency that yields the\nmaximum magnitude. MATLAB commands to be used for obtaining the resonant peak\nand resonant frequency are as follows:\n[mag,phase,w] = bode(num,den,w); or [mag,phase,w] = bode(sys,w);\n[Mp,k] = max(mag);\nresonant_peak = 20*log10(Mp);\nresonant_frequency = w(k)\nThe bandwidth can be obtained by entering the following lines in the program:\nn = 1;\nwhile 20*log10(mag(n)) > = -3; n = n + 1;\nend\nbandwidth = w(n)\nFor a detailed MATLAB program, see Example 7–23.\nEXAMPLE 7–23\nConsider the system shown in Figure 7–78. Using MATLAB, obtain a Bode diagram for the closed-\nloop transfer function. Obtain also the resonant peak, resonant frequency, and bandwidth.\nMATLAB Program 7–12 produces a Bode diagram for the closed-loop system as well as the\nresonant peak, resonant frequency, and bandwidth. The resulting Bode diagram is shown in\nMATLAB Program 7–12\nnump = [1];\ndenp = [0.5  1.5  1  0];\nsysp = tf(nump,denp);\nsys = feedback(sysp,1);\nw = logspace(-1,1);\nbode(sys,w)\n[mag,phase,w] = bode(sys,w);\n[Mp,k] = max(mag);\nresonant_peak = 20*log10(Mp)\nresonant_peak = \n5.2388\nresonant_frequency = w(k)\nresonant_frequency =\n0.7906\nn = 1;\nwhile 20*log(mag(n))> = -3; n = n + 1;\nend\nbandwidth = w(n)\nbandwidth =\n1.2649\nOpenmirrors.comSection 7–8 / Closed-Loop Frequency Response of Unity-Feedback Systems 477\nFigure 7–79.The resonant peak is obtained as 5.2388 dB.The resonant frequency is 0.7906 rad/H20862sec.\nThe bandwidth is 1.2649 rad/H20862sec. These values can be verified from Figure 7–78.\n7–8 CLOSED-LOOP FREQUENCY RESPONSE OF UNITY-\nFEEDBACK SYSTEMS\nClosed-Loop Frequency Response. For a stable, unity-feedback closed-loop sys-\ntem, the closed-loop frequency response can be obtained easily from that of the open-\nloop frequency response. Consider the unity-feedback system shown in Figure 7–80(a).\nThe closed-loop transfer function is\nIn the Nyquist or polar plot shown in Figure 7–80(b), the vector represents GAjv1 B,\nwhere v1 is the frequency at point A. The length of the vector is @GAjv1 B@ and the\nangle of the vector is The vector the vector from the –1+j0 point\nto the Nyquist locus, represents 1+GAjv1 B. Therefore, the ratio of to repre-\nsents the closed-loop frequency response, or\nOA\n!\nPA\n! =\nGAjv1B\n1 + GAjv1B =\nCAjv1B\nRAjv1B\nPA\n!\nOA\n!\n,\nPA\n!\n,/GAjv1B.OA\n! OA\n!OA\n!\nC(s)\nR(s) = G(s)\n1 + G(s)\n1\ns(0.5s + 1) (s + 1)+ –\nR(s) C(s)\nFigure 7–78\nClosed-loop system.\nFrequency (rad/sec)\nBode Diagram\n−300\n−50\n−100\n−150\n−200\n−250\n0\n−60\n−40\n−20\nPhase (deg); Magnitude (dB)\n20\n0\n10−1 100 101\nFigure 7–79\nBode diagram of the\nclosed-loop transfer\nfunction of the\nsystem shown in\nFigure 7–78.478\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nThe magnitude of the closed-loop transfer function at v=v\n1\nis the ratio of the magni-\ntudes of to . The phase angle of the closed-loop transfer function at v=v\n1\nis\nthe angle formed by the vectors to —that is f-u, shown in Figure 7–80(b). By\nmeasuring the magnitude and phase angle at different frequency points, the closed-loop\nfrequency-response curve can be obtained.\nLet us define the magnitude of the closed-loop frequency response as M and the\nphase angle as a,o r\nIn the following, we shall find the constant-magnitude loci and constant-phase-angle\nloci. Such loci are convenient in determining the closed-loop frequency response from\nthe polar plot or Nyquist plot.\nConstant-Magnitude Loci (M circles). To obtain the constant-magnitude loci, let\nus first note that G(jv) is a complex quantity and can be written as follows:\nwhere X and Y are real quantities. Then M is given by\nand M\n2\nis\nHence\n(7–22)\nIf M=1, then from Equation (7–22), we obtain This is the equation of a\nstraight line parallel to the Y axis and passing through the point A-\n1\n2\n,0 B.\nX =-\n1\n2\n.\nX\n2\nA1 - M\n2\nB- 2M\n2\nX - M\n2\n+ A1 - M\n2\nBY\n2\n= 0\nM\n2\n= X\n2\n+ Y\n2\n(1 + X)\n2\n+ Y\n2\nM = ∑X + jY∑\n∑1 + X + jY∑\nG(jv) = X + jY\nC(jv)\nR(jv) = Me\nja\nPA\n!\nOA\n!PA\n!\nOA\n!\n(a) (b)\nG(s)\nIm\nRe\nO\nP\n–1 + j0\nA\nG ( jv)\nu f\nv\n1\nf – u\n+ –\nFigure 7–80\n(a) Unity-feedback\nsystem;\n(b) determination of\nclosed-loop\nfrequency response\nfrom open-loop\nfrequency response.\nOpenmirrors.comSection 7–8 / Closed-Loop Frequency Response of Unity-Feedback Systems 479\n– 4 –3 –2 –1 01 2 X\nYM = 1.2\nM = 1.3 M = 1\nM = 1.4\nM = 1.6\nM = 2.0\nM = 3.0\nM = 5.0\n–1\n–2\n1\n2\nM = 0.8\nM = 0.4\nM = 0.6\nFigure 7–81\nA family of constant\nMcircles.\nIf Equation (7–22) can be written\nIf the term M2/AM2-1B\n2\nis added to both sides of this last equation, we obtain\n(7–23)\nEquation (7–23) is the equation of a circle with center at X=–M2/AM2-1B, Y=0\nand with radius @M/AM2-1B@.\nThe constant M loci on the G(s) plane are thus a family of circles.The center and ra-\ndius of the circle for a given value of M can be easily calculated. For example, for\nM=1.3, the center is at (–2.45, 0) and the radius is 1.88. A family of constant M cir-\ncles is shown in Figure 7–81. It is seen that as M becomes larger compared with 1, the\nM circles become smaller and converge to the –1+j0 point. For M>1, the centers of\nthe M circles lie to the left of the –1+j0 point. Similarly, as M becomes smaller com-\npared with 1, the M circle becomes smaller and converges to the origin. For 0<M<1,\nthe centers of the M circles lie to the right of the origin.M=1 corresponds to the locus\nof points equidistant from the origin and from the –1+j0 point. As stated earlier, it is\na straight line passing through the point and parallel to the imaginary axis. (The\nconstantM circles corresponding to M>1 lie to the left of the M=1 line, and those\ncorresponding to 0<M<1 lie to the right of the M=1 line.) The M circles are sym-\nmetrical with respect to the straight line corresponding to M=1 and with respect to the\nreal axis.\nA- 1\n2 ,0 B\naX + M2\nM2 - 1 b\n2\n+ Y2 = M2\nAM2 - 1B2\nX2 + 2M2\nM2 - 1 X + M2\nM2 - 1 + Y2 = 0\nM Z 1,480\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nConstant-Phase-Angle Loci (N Circles). We shall obtain the phase angle a in\nterms of X and Y. Since\nthe phase angle a is\nIf we define\nthen\nSince\nwe obtain\nor\nThe addition of to both sides of this last equation yields\n(7–24)\nThis is an equation of a circle with center at Y=1/H20862(2N) and with radius\nFor example, if a=30°, then N=tan a=0.577, and the center and\nthe radius of the circle corresponding to a=30° are found to be (–0.5, 0.866)and unity,\nrespectively. Since Equation (7–24) is satisfied when X=Y=0 and X=–1, Y=0\nregardless of the value of N, each circle passes through the origin and the –1+j0 point.\nThe constant aloci can be drawn easily, once the value of N is given.A family of constant\nN circles is shown in Figure 7–82 with a as a parameter.\nIt should be noted that the constant N locus for a given value of a is actually not the\nentire circle, but only an arc. In other words, the a=30° and a=–150° arcs are parts\nof the same circle. This is so because the tangent of an angle remains the same if ;180°\n(or multiples thereof) is added to the angle.\nThe use of the M and N circles enables us to find the entire closed-loop frequency\nresponse from the open-loop frequency response G(jv) without calculating the magni-\ntude and phase of the closed-loop transfer function at each frequency.The intersections\n3\n1\n4\n+ 1/H20862(2N)\n2\n.\nX =-\n1\n2\n,\na\nX + 1\n2\nb\n2\n+\na\nY - 1\n2N\nb\n2\n= 1\n4 +\na\n1\n2N\nb\n2\nA\n1\n4\nB + 1/H20862(2N)\n2\nX\n2\n+ X + Y\n2\n- 1\nN Y = 0\nN =\nY\nX - Y\n1 + X\n1 + Y\nX\na\nY\n1 + X\nb\n= Y\nX\n2\n+ X + Y\n2\ntan\n \n(A - B) = tan A - tan B\n1 + tan A tan B\nN = tan\n \nc\ntan\n-1\n \na\nY\nX\nb\n- tan\n-1\n \na\nY\n1 + X\nb\nd\ntan a = N\na = tan\n-1\n \na\nY\nX\nb\n- tan\n-1\n \na\nY\n1 + X\nb\n/\ne\nja\n=\nn\nX + jY\n1 + X + jY\nOpenmirrors.comSection 7–8 / Closed-Loop Frequency Response of Unity-Feedback Systems 481\n–3\n3\n–3\n–2\n–2\n–1\n1\n1\n2\n2\nX\nY\na = 20°\na = 30°\na = 40°\na = 100°\n60°\n120°\n80°\n–60°\n–120°\n–80°a =– 100°\na =– 40°\na =– 30°\na =– 20°Figure 7–82\nA family of constant\nNcircles.\nof the G(jv) locus and the M circles and N circles give the values of M and N at fre-\nquency points on the G(jv) locus.\nThe N circles are multivalued in the sense that the circle for a=a1 and that for\na=a1 ; 180°n (n=1, 2, p) are the same. In using the N circles for the determination\nof the phase angle of closed-loop systems, we must interpret the proper value of a.T o\navoid any error, start at zero frequency, which corresponds to a=0°, and proceed to\nhigher frequencies. The phase-angle curve must be continuous.\nGraphically, the intersections of the G(jv) locus and M circles give the values of M\nat the frequencies denoted on the G(jv) locus. Thus, the constant M circle with the\nsmallest radius that is tangent to the G(jv) locus gives the value of the resonant peak\nmagnitude Mr . If it is desired to keep the resonant peak value less than a certain value,\nthen the system should not enclose the critical point (–1+j0 point) and, at the same\ntime, there should be no intersections with the particular M circle and the G(jv) locus.\nFigure 7–83(a) shows the G(jv) locus superimposed on a family of M circles. Figure\n7–83(b) shows the G(jv) locus superimposed on a family of N circles. From these plots,\nit is possible to obtain the closed-loop frequency response by inspection. It is seen that\ntheM=1.1 circle intersects the G(jv) locus at frequency point v=v1 . This means\nthat at this frequency the magnitude of the closed-loop transfer function is 1.1. In Fig-\nure 7–83(a), the M=2 circle is just tangent to the G(jv) locus. Thus, there is only one\npoint on the G(jv) locus for which @C(jv)/R(jv)@is equal to 2. Figure 7–83(c) shows the\nclosed-loop frequency-response curve for the system.The upper curve is the M-versus-\nfrequency v curve, and the lower curve is the phase angle a-versus-frequency v curve.\nThe resonant peak value is the value of M corresponding to the M circle of small-\nest radius that is tangent to the G(jv) locus. Thus, in the Nyquist diagram, the resonant482\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\npeak value M\nr\nand the resonant frequency v\nr\ncan be found from the M-circle tangency\nto the G(jv) locus. (In the present example,M\nr\n=2 and v\nr\n=v\n4\n.)\nNichols Chart. In dealing with design problems, we find it convenient to construct\nthe M and N loci in the log-magnitude-versus-phase plane. The chart consisting of the\nM and N loci in the log-magnitude-versus-phase diagram is called the Nichols chart.\nThe G(jv) locus drawn on the Nichols chart gives both the gain characteristics and\na =\nG\n1 + G\nM = G\n1 + G\nIm\nRe\nIm\nRe\n2\n0\n0\n–2\n–2\n–4\n–4\n–2–4\n2\n–2\n–4\nM = 1.2\nM = 1.4\nM = 1.1\nM = 1.1\nM = 2 M = 0.6\nM = 1.2\nG(jv)\nG(jv)v\n1\n(a) (b)\n(c)\n20°\n60°\n–20°\n–40°\n–10°\nv\n1\nv\n2\nv\n2\nv\n3\nv\n3\nv\n4\nv\n4\nv\n5\nv\n5\n2\n1.5\n1\n0.5\n0\n0°\n–90°\n–180°\n–270° v\n1\nv\n2\nv\n3\nv\n4\nv\n5\nv\nv\nFigure 7–83\n(a) G(jv) locus\nsuperimposed on a\nfamily of M circles;\n(b) G(jv) locus\nsuperimposed on a\nfamily of N circles;\n(c) closed-loop\nfrequency-response\ncurves.\nOpenmirrors.comSection 7–8 / Closed-Loop Frequency Response of Unity-Feedback Systems 483\n+ –\nRC G\n0.25 dB\n0.5 dB\n1 dB\n2 dB\n3 dB\n4 dB\n5 dB\n6 dB\n9 dB\n–18 dB\n–12 dB\n–6 dB\n–5 dB\n–4 dB\n–3 dB\n–2 dB\n–1 dB\n–0.5 dB\n–0.25 dB\n–0.1 dB\n0.1 dB\n0 dB\n12 dB\n120°\n150°\n–180°\n–150°\n–120°\n–90°\n–60°\n–30°\n–20°\n–10°\n–5° –2°\n90°\n60°\n30°\n20°\n10°\n5°\n2°\n0°\n–2°\n–5°\n–10°\n–20°\n–30°\n–60°\n36\n32\n28\n24\n20\n16\n12\n8\n4\n0\n–16\n–12\n–8\n–4\n–240° –210° –180° –150° –120° –90° –60° –30° 0°\nGH\n|GH| in dB\nFigure 7–84\nNichols chart.\nphase characteristics of the closed-loop transfer function at the same time. The Nichols\nchart is shown in Figure 7–84, for phase angles between 0° and –240°.\nNote that the critical point (–1+j0 point) is mapped to the Nichols chart as the\npoint (0d B ,–180°). The Nichols chart contains curves of constant closed-loop magni-\ntude and phase angle. The designer can graphically determine the phase margin, gain\nmargin, resonant peak magnitude, resonant frequency, and bandwidth of the closed-\nloop system from the plot of the open-loop locus,G(jv).\nThe Nichols chart is symmetric about the –180° axis. The M and N loci repeat for\nevery 360°, and there is symmetry at every 180° interval.The M loci are centered about\nthe critical point (0 dB,–180°).The Nichols chart is useful for determining the frequency\nresponse of the closed loop from that of the open loop. If the open-loop frequency-re-\nsponse curve is superimposed on the Nichols chart, the intersections of the open-loop\nfrequency-response curve G(jv) and the M and N loci give the values of the magni-\ntude M and phase angle a of the closed-loop frequency response at each frequency\npoint. If the G(jv) locus does not intersect the M=Mr locus, but is tangent to it, then\nthe resonant peak value of M of the closed-loop frequency response is given by Mr .T he\nresonant frequency is given by the frequency at the point of tangency.\nAs an example, consider the unity-feedback system with the following open-loop\ntransfer function:\nTo find the closed-loop frequency response by use of the Nichols chart, the G(jv) locus\nis constructed in the log-magnitude-versus-phase plane by use of MATLAB or from\nG(jv) = K\ns(s + 1)(0.5s + 1) ,  K = 1484\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nthe Bode diagram. Figure 7–85(a) shows the G(jv) locus together with the M and N loci.\nThe closed-loop frequency-response curves may be constructed by reading the magni-\ntudes and phase angles at various frequency points on the G(jv) locus from the M and\nN loci, as shown in Figure 7–85(b). Since the largest magnitude contour touched by the\nG(jv) locus is 5 dB, the resonant peak magnitude M\nr\nis 5 dB. The corresponding reso-\nnant peak frequency is 0.8 rad/H20862sec.\nNotice that the phase crossover point is the point where the G(jv) locus intersects\nthe –180° axis (for the present system,v=1.4 rad/H20862sec), and the gain crossover point is\nthe point where the locus intersects the 0-dB axis (for the present system,\nv=0.76 rad/H20862sec). The phase margin is the horizontal distance (measured in degrees)\nbetween the gain crossover point and the critical point (0d B ,–180°). The gain margin\nis the distance (in decibels) between the phase crossover point and the critical point.\nThe bandwidth of the closed-loop system can easily be found from the G(jv) locus\nin the Nichols diagram. The frequency at the intersection of the G(jv) locus and the\nM=–3 dB locus gives the bandwidth.\nIf the open-loop gain K is varied, the shape of the G(jv) locus in the log-magnitude-\nversus-phase diagram remains the same, but it is shifted up (for increasing K) or down\n(for decreasing K) along the vertical axis. Therefore, the G(jv) locus intersects the M\n20\n16\n12\n8\n4\n0\n–16\n–12\n–8\n–4\n–240° –210° –180° –150° –120° –90°\n(a) (b)\nG\n1 dB\n3 dB\n0.25 dB\n5 dB\n12 dB\n|G| in dB\n–1 dB\n–5 dB\n–12 dB 1.8\n1.4\n1.2\n1\n0.8\n0.6\n0.4\n0.2\n–30°\n–20°\n–10°\n–60°\n–120°\n–150° –90°\nv in rad/sec\nG\n1 + G\nG\n1 + G\nin dB\n–270°\n–180°\n–90°\n–15\n–10\n–5\n0\n5\n10\n0°\n0.1 0.2 0.4 0.6 0.8 1 2\nFigure 7–85\n(a) Plot of G(jv) superimposed on Nichols chart; (b) closed-loop frequency-response curves.\nOpenmirrors.comSection 7–8 / Closed-Loop Frequency Response of Unity-Feedback Systems 485\n|G| in dB\nG\n15\n10\n5\n0\n–5\n–10\n–15\n–90°–120°–150°–180°\nMr = 1.4\n20 log K = 4\nG( jv)\nG( jv)\nK\nFigure 7–86\nDetermination of the\ngainK using the\nNichols chart.\nand N loci differently, resulting in a different closed-loop frequency-response curve. For\na small value of the gain K, the G(jv) locus will not be tangent to any of the M loci, which\nmeans that there is no resonance in the closed-loop frequency response.\nEXAMPLE 7–24 Consider the unity-feedback control system whose open-loop transfer function is\nDetermine the value of the gain K so that Mr=1.4.\nThe first step in the determination of the gain K is to sketch the polar plot of\nFigure 7–86 shows the Mr=1.4 locus and the G(jv)/K locus. Changing the gain has no effect on\nthe phase angle, but merely moves the curve vertically up for K>1 and down for K<1.\nIn Figure 7–86, the G(jv)/K locus must be raised by 4 dB in order that it be tangent to the\ndesired Mr locus and that the entire G(jv)/K locus be outside the Mr=1.4 locus.The amount of\nvertical shift of the G(jv)/K locus determines the gain necessary to yield the desired value of\nMr . Thus, by solving\nwe obtain\nK = 1.59\n20 log K = 4\nG(jv)\nK = 1\njv(1 + jv)\nG(jv) = K\njv(1 + jv)486\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\n7–9 EXPERIMENTAL DETERMINATION \nOF TRANSFER FUNCTIONS\nThe first step in the analysis and design of a control system is to derive a mathematical\nmodel of the plant under consideration. Obtaining a model analytically may be quite dif-\nficult.We may have to obtain it by means of experimental analysis.The importance of the\nfrequency-response methods is that the transfer function of the plant, or any other com-\nponent of a system, may be determined by simple frequency-response measurements.\nIf the amplitude ratio and phase shift have been measured at a sufficient number of\nfrequencies within the frequency range of interest, they may be plotted on the Bode di-\nagram.Then the transfer function can be determined by asymptotic approximations.We\nbuild up asymptotic log-magnitude curves consisting of several segments. With some\ntrial-and-error juggling of the corner frequencies, it is usually possible to find a very\nclose fit to the curve. (Note that if the frequency is plotted in cycles per second rather\nthan radians per second, the corner frequencies must be converted to radians per sec-\nond before computing the time constants.)\nSinusoidal-Signal Generators. In performing a frequency-response test, suitable\nsinusoidal-signal generators must be available. The signal may have to be in mechani-\ncal, electrical, or pneumatic form. The frequency ranges needed for the test are ap-\nproximately 0.001 to 10 Hz for large-time-constant systems and 0.1 to 1000 Hz for\nsmall-time-constant systems. The sinusoidal signal must be reasonably free from har-\nmonics or distortion.\nFor very low frequency ranges (below 0.01 Hz), a mechanical signal generator\n(together with a suitable pneumatic or electrical transducer if necessary) may be used.\nFor the frequency range from 0.01 to 1000 Hz, a suitable electrical-signal generator\n(together with a suitable transducer if necessary) may be used.\nDetermination of Minimum-Phase Transfer Functions from Bode Diagrams.\nAs stated previously, whether a system is minimum phase can be determined from the\nfrequency-response curves by examining the high-frequency characteristics.\nTo determine the transfer function, we first draw asymptotes to the experimental-\nly obtained log-magnitude curve. The asymptotes must have slopes of multiples of\n;20 dB /H20862decade. If the slope of the experimentally obtained log-magnitude curve\nchanges from –20 to –40 dB/H20862decade at v=v\n1\n, it is clear that a factor 1/C1+jAv/v\n1\nBD\nexists in the transfer function. If the slope changes by –40 dB/H20862decade at v=v\n2\n, there\nmust be a quadratic factor of the form\nin the transfer function. The undamped natural frequency of this quadratic factor is\nequal to the corner frequency v\n2\n. The damping ratio z can be determined from the\nexperimentally obtained log-magnitude curve by measuring the amount of resonant\npeak near the corner frequency v\n2\nand comparing this with the curves shown in\nFigure 7–9.\nOnce the factors of the transfer function G(jv) have been determined, the gain can\nbe determined from the low-frequency portion of the log-magnitude curve. Since such\n1\n1 + 2z\na\nj v\nv\n2\nb\n+\na\nj v\nv\n2\nb\n2\nOpenmirrors.comterms as 1+jAv/v1Band 1+2zAjv/v2B+Ajv/v2B\n2\nbecome unity as vapproaches zero,\nat very low frequencies the sinusoidal transfer function G(jv) can be written\nIn many practical systems, l equals 0, 1, or 2.\n1. For l=0, or type 0 systems,\nor\nThe low-frequency asymptote is a horizontal line at 20 log K dB. The value of K\ncan thus be found from this horizontal asymptote.\n2. For l=1, or type 1 systems,\nor\nwhich indicates that the low-frequency asymptote has the slope –20 dB/H20862decade.\nThe frequency at which the low-frequency asymptote (or its extension) intersects\nthe 0-dB line is numerically equal to K.\n3. For l=2, or type 2 systems,\nor\nThe slope of the low-frequency asymptote is –40 dB/H20862decade. The frequency at\nwhich this asymptote (or its extension) intersects the 0-dB line is numerically equal\nto\nExamples of log-magnitude curves for type 0, type 1, and type 2 systems are shown\nin Figure 7–87, together with the frequency to which the gain K is related.\nThe experimentally obtained phase-angle curve provides a means of checking the\ntransfer function obtained from the log-magnitude curve. For a minimum-phase system,\nthe experimental phase-angle curve should agree reasonably well with the theoretical\nphase-angle curve obtained from the transfer function just determined.These two phase-\nangle curves should agree exactly in both the very low and very high frequency ranges.\nIf the experimentally obtained phase angle at very high frequencies (compared with the\ncorner frequencies) is not equal to –90°(q-p), where p and q are the degrees of the nu-\nmerator and denominator polynomials of the transfer function, respectively, then the\ntransfer function must be a nonminimum-phase transfer function.\n1K .\n20 log @G(jv)@ = 20 log K - 40 log v,  for v /H112701\nG(jv) = K\n(jv)2 ,  for v /H112701\n20 log @G(jv)@ = 20 log K - 20 log v,  for v /H112701\nG(jv) = K\njv,  for v /H112701\n20 log @G(jv)@ = 20 log K,  for v /H112701\nG(jv) = K,  for v /H112701\nlim\nvS 0\nG(jv) = K\n(jv)l\nSection 7–9 / Experimental Determination of Transfer Functions 487488\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nNonminimum-Phase Transfer Functions. If, at the high-frequency end, the com-\nputed phase lag is 180° less than the experimentally obtained phase lag, then one of the\nzeros of the transfer function should have been in the right-half s plane instead of the\nleft-half s plane.\nIf the computed phase lag differed from the experimentally obtained phase lag by a\nconstant rate of change of phase, then transport lag, or dead time, is present. If we assume\nthe transfer function to be of the form\nwhere G(s) is a ratio of two polynomials in s, then\nwhere we used the fact that constant. Thus, from this last equation, we\ncan evaluate the magnitude of the transport lag T.\nlim\nvSq\n/\nG(jv)\n=\n = 0 - T =- T\n = lim\nvSq\n d\ndv C\n/\nG(jv)\n- vTD\n lim\nvSq\n d\ndv \n/\nG(jv)e\n-jvT\n= lim\nvSq\n d\ndv C\n/\nG(jv)\n+\n/\ne\n-jvT\nD\nG(s)e\n-Ts\n(a)\n0\n–20\n20 log K\n–40\n–40\ndB\nv = K v = K\nv in log scale\n(b)\n(c)\n0\n–20\n–20\n–20\n–20\n–40\n–40\n–40\n–40\ndB\nv in log scale\n0\ndB\nv in log scale\n0\ndB\nv in log scale\n0\ndB\nv in log scale\nv = K\nv = K\nFigure 7–87\n(a) Log-magnitude\ncurve of a type 0\nsystem; (b) log-\nmagnitude curves of\ntype 1 systems;\n(c) log-magnitude\ncurves of type 2\nsystems. (The slopes\nshown are in\ndB/H20862decade.)\nOpenmirrors.comA Few Remarks on the Experimental Determination of Transfer Functions\n1. It is usually easier to make accurate amplitude measurements than accurate phase-\nshift measurements. Phase-shift measurements may involve errors that may be\ncaused by instrumentation or by misinterpretation of the experimental records.\n2. The frequency response of measuring equipment used to measure the system out-\nput must have a nearly flat magnitude-versus-frequency curve. In addition, the\nphase angle must be nearly proportional to the frequency.\n3. Physical systems may have several kinds of nonlinearities. Therefore, it is nec-\nessary to consider carefully the amplitude of input sinusoidal signals. If the am-\nplitude of the input signal is too large, the system will saturate, and the\nfrequency-response test will yield inaccurate results. On the other hand, a small\nsignal will cause errors due to dead zone. Hence, a careful choice of the ampli-\ntude of the input sinusoidal signal must be made. It is necessary to sample the\nwaveform of the system output to make sure that the waveform is sinusoidal\nand that the system is operating in the linear region during the test period. (The\nwaveform of the system output is not sinusoidal when the system is operating in\nits nonlinear region.)\n4. If the system under consideration is operating continuously for days and weeks,\nthen normal operation need not be stopped for frequency-response tests. The si-\nnusoidal test signal may be superimposed on the normal inputs.Then, for linear sys-\ntems, the output due to the test signal is superimposed on the normal output. For\nthe determination of the transfer function while the system is in normal opera-\ntion, stochastic signals (white noise signals) also are often used. By use of corre-\nlation functions, the transfer function of the system can be determined without\ninterrupting normal operation.\nEXAMPLE 7–25 Determine the transfer function of the system whose experimental frequency-response curves\nare as shown in Figure 7–88.\nThe first step in determining the transfer function is to approximate the log-magnitude curve\nby asymptotes with slopes ;20 dB/H20862decade and multiples thereof, as shown in Figure 7–88. We\nthen estimate the corner frequencies. For the system shown in Figure 7–88, the following form of\nthe transfer function is estimated:\nThe value of the damping ratio zis estimated by examining the peak resonance near v=6 rad/H20862sec.\nReferring to Figure 7–9,z is determined to be 0.5. The gain K is numerically equal to the frequency\nat the intersection of the extension of the low-frequency asymptote that has 20 dB/decade slope and\nthe 0-dB line. The value of K is thus found to be 10. Therefore,G(jv) is tentatively determined as\nor\nG(s) =\n320(s + 2)\ns(s + 1)As2 + 8s + 64B\nG(jv) =\n10(1 + 0.5jv)\njv(1 + jv) c1 + aj v\n8 b + aj v\n8 b\n2\nd\nG(jv) =\nK(1 + 0.5jv)\njv(1 + jv) c1 + 2zaj v\n8 b + aj v\n8 b\n2\nd\nSection 7–9 / Experimental Determination of Transfer Functions 489490\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nThis transfer function is tentative because we have not examined the phase-angle curve yet.\nOnce the corner frequencies are noted on the log-magnitude curve, the corresponding phase-\nangle curve for each component factor of the transfer function can easily be drawn.The sum of\nthese component phase-angle curves is that of the assumed transfer function. The phase-angle\ncurve for G(jv) is denoted by in Figure 7–88. From Figure 7–88, we clearly notice a dis-\ncrepancy between the computed phase-angle curve and the experimentally obtained phase-\nangle curve. The difference between the two curves at very high frequencies appears to be a\nconstant rate of change. Thus, the discrepancy in the phase-angle curves must be caused by\ntransport lag.\nHence, we assume the complete transfer function to be G(s)e\n–Ts\n. Since the discrepancy be-\ntween the computed and experimental phase angles is –0.2v rad for very high frequencies, we can\ndetermine the value of T as follows:\nor\nThe presence of transport lag can thus be determined, and the complete transfer function deter-\nmined from the experimental curves is\nG(s)e\n-Ts\n=\n320(s + 2)e\n-0.2s\ns(s + 1)As\n2\n+ 8s + 64B\nT = 0.2 sec.\nlim\nvSq\nd\ndv\n/\nG(jv)e\n-jvT\n=- T =- 0.2\n/\nG\n40\n20\n0\n–20\n–40\n–60\ndB\n–80\n–100\n0.1 0.2 0.4 0.6 1 4 2 6 10 20 40\n–500°\n–400°\n–300°\n–200°\n–100°\n0°\nv in rad/sec\nG\nMagnitude\n(asymptotic)\n(K = 10)Magnitude\n(experimental)\nPhase angle\n(experimental)\nFigure 7–88\nBode diagram of a\nsystem. (Solid curves\nare experimentally\nobtained curves.)\nOpenmirrors.comSection 7–10 / Control Systems Design by Frequency-Response Approach 491\n7–10 CONTROL SYSTEMS DESIGN BY FREQUENCY-\nRESPONSE APPROACH\nIn Chapter 6 we presented root-locus analysis and design. The root-locus method\nwas shown to be very useful to reshape the transient-response characteristics of closed-\nloop control systems. The root-locus approach gives us direct information on the tran-\nsient response of the closed-loop system.The frequency-response approach, on the other\nhand, gives us this information only indirectly. However, as we shall see in the remain-\ning three sections of this chapter, the frequency-response approach is very useful in de-\nsigning control systems.\nFor any design problem, the designer will do well to use both approaches to the design\nand choose the compensator that most closely produces the desired closed-loop response.\nIn most control systems design, transient-response performance is usually very im-\nportant. In the frequency-response approach, we specify the transient-response per-\nformance in an indirect manner.That is, the transient-response performance is specified\nin terms of the phase margin, gain margin, resonant peak magnitude (they give a rough\nestimate of the system damping); the gain crossover frequency, resonant frequency, band-\nwidth (they give a rough estimate of the speed of transient response); and static error\nconstants (they give the steady-state accuracy). Although the correlation between the\ntransient response and frequency response is indirect, the frequency-domain specifica-\ntions can be easily met in the Bode diagram approach.\nAfter the open loop has been designed, the closed-loop poles and zeros can be de-\ntermined. Then, the transient-response characteristics must be checked to see whether\nthe designed system satisfies the requirements in the time domain. If it does not, then\nthe compensator must be modified and the analysis repeated until a satisfactory result\nis obtained.\nDesign in the frequency domain is simple and straightforward. The frequency-\nresponse plot indicates clearly the manner in which the system should be modified, al-\nthough the exact quantitative prediction of the transient-response characteristics cannot\nbe made. The frequency-response approach can be applied to systems or components\nwhose dynamic characteristics are given in the form of frequency-response data. Note\nthat because of difficulty in deriving the equations governing certain components, such\nas pneumatic and hydraulic components, the dynamic characteristics of such compo-\nnents are usually determined experimentally through frequency-response tests.The ex-\nperimentally obtained frequency-response plots can be combined easily with other such\nplots when the Bode diagram approach is used. Note also that in dealing with high-\nfrequency noises we find that the frequency-response approach is more convenient than\nother approaches.\nThere are basically two approaches in the frequency-domain design. One is the polar\nplot approach and the other is the Bode diagram approach. When a compensator is\nadded, the polar plot does not retain the original shape, and, therefore, we need to draw\na new polar plot, which will take time and is thus inconvenient. On the other hand, a Bode\ndiagram of the compensator can be simply added to the original Bode diagram, and\nthus plotting the complete Bode diagram is a simple matter.Also, if the open-loop gain\nis varied, the magnitude curve is shifted up or down without changing the slope of the\ncurve, and the phase curve remains the same. For design purposes, therefore, it is best\nto work with the Bode diagram.A common approach to the design based on the Bode diagram is that we first adjust\nthe open-loop gain so that the requirement on the steady-state accuracy is met.Then the\nmagnitude and phase curves of the uncompensated open loop (with the open-loop gain\njust adjusted) are plotted. If the specifications on the phase margin and gain margin are\nnot satisfied, then a suitable compensator that will reshape the open-loop transfer func-\ntion is determined. Finally, if there are any other requirements to be met, we try to sat-\nisfy them, unless some of them are mutually contradictory.\nInformation Obtainable from Open-Loop Frequency Response. The low-\nfrequency region (the region far below the gain crossover frequency) of the locus indi-\ncates the steady-state behavior of the closed-loop system.The medium-frequency region\n(the region near the gain crossover frequency) of the locus indicates relative stability.\nThe high-frequency region (the region far above the gain crossover frequency) indi-\ncates the complexity of the system.\nRequirements on Open-Loop Frequency Response. We might say that, in many\npractical cases, compensation is essentially a compromise between steady-state accura-\ncy and relative stability.\nTo have a high value of the velocity error constant and yet satisfactory relative sta-\nbility, we find it necessary to reshape the open-loop frequency-response curve.\nThe gain in the low-frequency region should be large enough, and near the gain\ncrossover frequency, the slope of the log-magnitude curve in the Bode diagram should\nbe –20 dB/H20862decade.This slope should extend over a sufficiently wide frequency band to\nassure a proper phase margin. For the high-frequency region, the gain should be atten-\nuated as rapidly as possible to minimize the effects of noise.\nExamples of generally desirable and undesirable open-loop and closed-loop\nfrequency-response curves are shown in Figure 7–89.\nReferring to Figure 7–90, we see that the reshaping of the open-loop frequency-\nresponse curve may be done if the high-frequency portion of the locus follows the G\n1\n(jv)\nlocus, while the low-frequency portion of the locus follows the G\n2\n(jv) locus.The reshaped\nlocus G\nc\n(jv)G(jv) should have reasonable phase and gain margins or should be tangent\nto a proper M circle, as shown.\n492\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nIm\nRe–10\nDesirable\nUndesirable\nIm\ndB\nRe\nLog v–1\n0\nDesirable\nUndesirable\n(a) (b)\nDesirable\nUndesirable\nFigure 7–89\n(a) Examples of desirable and undesirable open-loop frequency-response curves;\n(b) examples of desirable and undesirable closed-loop frequency-response curves.\nOpenmirrors.comBasic Characteristics of Lead, Lag, and Lag–Lead Compensation. Lead com-\npensation essentially yields an appreciable improvement in transient response and a\nsmall change in steady-state accuracy. It may accentuate high-frequency noise effects. Lag\ncompensation, on the other hand, yields an appreciable improvement in steady-state\naccuracy at the expense of increasing the transient-response time. Lag compensation\nwill suppress the effects of high-frequency noise signals. Lag–lead compensation com-\nbines the characteristics of both lead compensation and lag compensation. The use of a\nlead or lag compensator raises the order of the system by 1 (unless cancellation occurs\nbetween the zero of the compensator and a pole of the uncompensated open-loop trans-\nfer function).The use of a lag–lead compensator raises the order of the system by 2 [un-\nless cancellation occurs between zero(s) of the lag–lead compensator and pole(s) of the\nuncompensated open-loop transfer function], which means that the system becomes\nmore complex and it is more difficult to control the transient-response behavior.The par-\nticular situation determines the type of compensation to be used.\n7–11 LEAD COMPENSATION\nWe shall first examine the frequency characteristics of the lead compensator. Then we\npresent a design technique for the lead compensator by use of the Bode diagram.\nCharacteristics of Lead Compensators. Consider a lead compensator having the\nfollowing transfer function:\nwhere a is the attenuation factor of the lead compensator. It has a zero at s=–1/T\nand a pole at s=–1/(aT). Since 0<a<1, we see that the zero is always located to\nthe right of the pole in the complex plane. Note that for a small value of a the pole is lo-\ncated far to the left. The minimum value of a is limited by the physical construction of\nKc a Ts + 1\naTs + 1 = Kc\ns + 1\nT\ns + 1\naT\n  (0 6 a 6 1)\nSection 7–11 / Lead Compensation 493\nIm\nRe–10\nM Circle\nG2( jv)\nG1( jv)\nGc( jv)G( jv)\nFigure 7–90\nReshaping of the\nopen-loop\nfrequency-response\ncurve.the lead compensator. The minimum value of a is usually taken to be about 0.05. (This\nmeans that the maximum phase lead that may be produced by a lead compensator is\nabout 65°.) [See Equation (7–25).]\nFigure 7–91 shows the polar plot of\nwith K\nc\n=1. For a given value of a, the angle between the positive real axis and the tan-\ngent line drawn from the origin to the semicircle gives the maximum phase-lead angle,\nf\nm\n. We shall call the frequency at the tangent point v\nm\n. From Figure 7–91 the phase\nangle at v=v\nm\nis f\nm\n, where\n(7–25)\nEquation (7–25) relates the maximum phase-lead angle and the value of a.\nFigure 7–92 shows the Bode diagram of a lead compensator when K\nc\n=1 and a=0.1.\nThe corner frequencies for the lead compensator are v=1/T and v=1/(aT)=10/T.\nBy examining Figure 7–92, we see that v\nm\nis the geometric mean of the two corner fre-\nquencies, or\nlog v\nm\n= 1\n2 \na\nlog 1\nT + log 1\naT\nb\nsin f\nm\n=\n1 - a\n2\n1 + a\n2\n= 1 - a\n1 + a\nK\nc\n \na jvT + 1\njvaT + 1\n  \n(0 6 a 6 1)\n494\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nIm\nRe\nv\nm\n01\nv = `v = 0\nf\nm\n1\n2\n(1 + a)\na\n1\n2\n(1 – a)\nFigure 7–91\nPolar plot of a lead\ncompensator\na(jvT+1)/(jvaT+1),\nwhere 0<a<1.\n10\n0\nv in rad/sec\n–10\n–20\n90°\n0°\ndB\n0.1\nT\n1\nT\n10\nT\n100\nT\n/H2088110\nT\nf\nm\nFigure 7–92\nBode diagram of a \nlead compensator \na(jvT+1)/(jvaT+1),\nwhere a=0.1.\nOpenmirrors.comHence,\n(7–26)\nAs seen from Figure 7–92, the lead compensator is basically a high-pass filter. (The\nhigh frequencies are passed, but low frequencies are attenuated.)\nLead Compensation Techniques Based on the Frequency-Response Approach.\nThe primary function of the lead compensator is to reshape the frequency-response\ncurve to provide sufficient phase-lead angle to offset the excessive phase lag associated\nwith the components of the fixed system.\nConsider the system shown in Figure 7–93. Assume that the performance specifica-\ntions are given in terms of phase margin, gain margin, static velocity error constants,\nand so on. The procedure for designing a lead compensator by the frequency-response\napproach may be stated as follows:\n1. Assume the following lead compensator:\nDefine\nThen\nThe open-loop transfer function of the compensated system is\nwhere\nDetermine gain K to satisfy the requirement on the given static error constant.\n2. Using the gain K thus determined, draw a Bode diagram of G1(jv), the gain-\nadjusted but uncompensated system. Evaluate the phase margin.\n3. Determine the necessary phase-lead angle to be added to the system. Add an\nadditional 5° to 12° to the phase-lead angle required, because the addition of the\nG1(s) = KG(s)\nGc(s)G(s) = K Ts + 1\naTs + 1 G(s) = Ts + 1\naTs + 1 KG(s) = Ts + 1\naTs + 1 G1(s)\nGc(s) = K Ts + 1\naTs + 1\nKc a = K\nGc(s) = Kc a Ts + 1\naTs + 1 = Kc\ns + 1\nT\ns + 1\naT\n  (0 6 a 6 1)\nvm = 1\n1aT\nSection 7–11 / Lead Compensation 495\nGc(s) G(s)+ –\nFigure 7–93\nControl system.lead compensator shifts the gain crossover frequency to the right and decreases the\nphase margin.\n4. Determine the attenuation factor a by use of Equation (7–25). Determine the\nfrequency where the magnitude of the uncompensated system G\n1\n(jv) is equal to\nSelect this frequency as the new gain crossover frequency. This\nfrequency corresponds to and the maximum phase shift f\nm\noccurs\nat this frequency.\n5. Determine the corner frequencies of the lead compensator as follows:\nZero of lead compensator:\nPole of lead compensator:\n6. Using the value of K determined in step 1 and that of a determined in step 4,\ncalculate constant K\nc\nfrom\n7. Check the gain margin to be sure it is satisfactory. If not, repeat the design process\nby modifying the pole–zero location of the compensator until a satisfactory result\nis obtained.\nEXAMPLE 7–26\nConsider the system shown in Figure 7–94. The open-loop transfer function is\nIt is desired to design a compensator for the system so that the static velocity error constant K\nv\nis 20 sec\n–1\n, the phase margin is at least 50°, and the gain margin is at least 10 dB.\nWe shall use a lead compensator of the form\nThe compensated system will have the open-loop transfer function G\nc\n(s)G(s).\nDefine\nwhere K=K\nc\na.\nG\n1\n(s) = KG(s) = 4K\ns(s + 2)\nG\nc\n(s) = K\nc\n \na Ts + 1\naTs + 1 = K\nc\ns + 1\nT\ns + 1\naT\nG(s) = 4\ns(s + 2)\nK\nc\n= K\na\n v = 1\naT\n v = 1\nT\nv\nm\n= 1/H20862A1a\nTB,\n-20 log A1/H208621a\nB.\n496\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\n4\ns(s + 2)\n+ –\nFigure 7–94\nControl system.\nOpenmirrors.comThe first step in the design is to adjust the gain K to meet the steady-state performance spec-\nification or to provide the required static velocity error constant. Since this constant is given as\n20 sec–1, we obtain\nor\nWith K=10, the compensated system will satisfy the steady-state requirement.\nWe shall next plot the Bode diagram of\nFigure 7–95 shows the magnitude and phase-angle curves of G1 (jv). From this plot, the phase\nand gain margins of the system are found to be 17° and ±q dB, respectively. (A phase margin of\n17° implies that the system is quite oscillatory.Thus, satisfying the specification on the steady state\nyields a poor transient-response performance.) The specification calls for a phase margin of at\nleast 50°. We thus find the additional phase lead necessary to satisfy the relative stability re-\nquirement is 33°.To achieve a phase margin of 50° without decreasing the value of K, the lead com-\npensator must contribute the required phase angle.\nNoting that the addition of a lead compensator modifies the magnitude curve in the Bode di-\nagram, we realize that the gain crossover frequency will be shifted to the right.We must offset the\nincreased phase lag of G1(jv) due to this increase in the gain crossover frequency. Considering\nthe shift of the gain crossover frequency, we may assume that fm , the maximum phase lead re-\nquired, is approximately 38°. (This means that 5° has been added to compensate for the shift in\nthe gain crossover frequency.)\nSince\nsin fm = 1 - a\n1 + a\nG1(jv) = 40\njv(jv + 2) = 20\njv(0.5jv + 1)\nK = 10\nKv = lim\ns S 0\nsGc(s)G(s) = lim\ns S 0\ns Ts + 1\naTs + 1 G1(s) = lim\ns S 0\ns4K\ns(s + 2) = 2K = 20\nSection 7–11 / Lead Compensation 497\n12 4 8\nv in rad/sec\n40\n20\n0\n–20\n–40\n0°\n–90°\n–180°\n10 20 40 60 100\n17°\ndB\nFigure 7–95\nBode diagram for\nG1(jv)=10G(jv)\n= 40/Cjv(jv+2)Df\nm\n=38° corresponds to a=0.24. Once the attenuation factor a has been determined on the\nbasis of the required phase-lead angle, the next step is to determine the corner frequencies v=1/T\nand v=1/(aT) of the lead compensator. To do so, we first note that the maximum phase-lead\nangle f\nm\noccurs at the geometric mean of the two corner frequencies, or [See Equa-\ntion (7–26).] The amount of the modification in the magnitude curve at due to the\ninclusion of the term (Ts+1)/(aTs+1) is\nNote that\nand @G\n1\n(jv)@=–6.2 dB corresponds to v=9 rad/H20862sec.We shall select this frequency to be the new\ngain crossover frequency v\nc\n. Noting that this frequency corresponds to or\nwe obtain\nand\nThe lead compensator thus determined is\nwhere the value of K\nc\nis determined as\nThus, the transfer function of the compensator becomes\nNote that\nThe magnitude curve and phase-angle curve for G\nc\n(jv)/10 are shown in Figure 7–96. The\ncompensated system has the following open-loop transfer function:\nG\nc\n(s)G(s) = 41.7 s + 4.41\ns + 18.4\n4\ns(s + 2)\nG\nc\n(s)\nK G\n1\n(s) =\nG\nc\n(s)\n10 10G(s) = G\nc\n(s)G(s)\nG\nc\n(s) = 41.7 s + 4.41\ns + 18.4 = 10 0.227s + 1\n0.054s + 1\nK\nc\n= K\na = 10\n0.24 = 41.7\nG\nc\n(s) = K\nc\ns + 4.41\ns + 18.4 = K\nc\n \na 0.227s + 1\n0.054s + 1\n1\naT = v\nc\n1a\n= 18.4\n1\nT = 1a\nv\nc\n= 4.41\nv\nc\n= 1/H20862A1a\nTB,\n1/H20862A1a\nTB,\n1\n1a\n= 1\n10.24\n= 1\n0.49 = 6.2 dB\n2\n1 + jvT\n1 + jvaT\n2\nv= 1/H20862A1a\nTB\n=\n4\n1 + j 1\n1a\n1 + ja 1\n1a\n4\n= 1\n1a\nv = 1/H20862A1a\nTB\nv = 1/H20862A1a\nTB.\n498\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nOpenmirrors.comThe solid curves in Figure 7–96 show the magnitude curve and phase-angle curve for the compen-\nsated system. Note that the bandwidth is approximately equal to the gain crossover frequency. The\nlead compensator causes the gain crossover frequency to increase from 6.3 to 9 rad /H20862sec. The in-\ncrease in this frequency means an increase in bandwidth. This implies an increase in the speed of\nresponse. The phase and gain margins are seen to be approximately 50° and ±q dB, respectively.\nThe compensated system shown in Figure 7–97 therefore meets both the steady-state and the\nrelative-stability requirements.\nNote that for type 1 systems, such as the system just considered, the value of the static veloc-\nity error constant Kv is merely the value of the frequency corresponding to the intersection of\nthe extension of the initial –20-dB/H20862decade slope line and the 0-dB line, as shown in Figure 7–96.\nNote also that we have changed the slope of the magnitude curve near the gain crossover frequency\nfrom–40 dB/H20862decade to –20 dB/H20862decade.\nSection 7–11 / Lead Compensation 499\n40\n20\n0\n–20\n–40\n0°\n–90°\n–180°\nGc\n10\nKv\n50°\n124 6\nv in rad/sec\n10 20 40 60 100\nGc\n10\nGcG\nGcG\n–6 dB\nG1 = 10G\nG1 = 10G\ndB\nFigure 7–96\nBode diagram for the\ncompensated system.\n4\ns(s + 2)\n41.7(s + 4.41)\ns + 18.4+ –\nFigure 7–97\nCompensated\nsystem.Figure 7–98 shows the polar plots of the gain-adjusted but uncompensated open-loop trans-\nfer function G\n1\n(jv)=10 G(jv) and the compensated open-loop transfer function G\nc\n(jv)G(jv).\nFrom Figure 7–98, we see that the resonant frequency of the uncompensated system is about\n6 rad/H20862sec and that of the compensated system is about 7 rad /H20862sec. (This also indicates that the\nbandwidth has been increased.)\nFrom Figure 7–98, we find that the value of the resonant peak M\nr\nfor the uncompensated sys-\ntem with K=10 is 3.The value of M\nr\nfor the compensated system is found to be 1.29.This clear-\nly shows that the compensated system has improved relative stability.\nNote that, if the phase angle of G\n1\n(jv) decreases rapidly near the gain crossover frequency,\nlead compensation becomes ineffective because the shift in the gain crossover frequency to the\nright makes it difficult to provide enough phase lead at the new gain crossover frequency. This\nmeans that, to provide the desired phase margin, we must use a very small value for a. The value\nof a, however, should not be too small (smaller than 0.05) nor should the maximum phase lead\nf\nm\nbe too large (larger than 65°), because such values will require an additional gain of excessive\nvalue. [If more than 65° is needed, two (or more) lead networks may be used in series with an iso-\nlating amplifier.]\nFinally, we shall examine the transient-response characteristics of the designed system. We\nshall obtain the unit-step response and unit-ramp response curves of the compensated and\nuncompensated systems with MATLAB. Note that the closed-loop transfer functions of the\nuncompensated and compensated systems are given, respectively, by\nand\nC(s)\nR(s) = 166.8s + 735.588\ns\n3\n+ 20.4s\n2\n+ 203.6s + 735.588\nC(s)\nR(s) = 4\ns\n2\n+ 2s + 4\n500\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nM\nr\n= 1.29\n–4\n–3\n–2\n–1\n–1–2–3– 40\n1\nM\nr\n= 3\nIm\nRe1\n4\n4\n6\n6\n10\n10\nv =3\nv =3\nG\n1\n( jv)\nG\nc\n( jv)G( jv)\nFigure 7–98\nPolar plots of the\ngain-adjusted but\nuncompensated\nopen-loop transfer\nfunction G\n1\nand\ncompensated open-\nloop transfer\nfunction G\nc\nG.\nOpenmirrors.comMATLAB programs for obtaining the unit-step response and unit-ramp response curves are given\nin MATLAB Program 7–13. Figure 7–99 shows the unit-step response curves of the system before\nand after compensation. Also, Figure 7–100 depicts the unit-ramp response curves before and\nafter compensation. These response curves indicate that the designed system is satisfactory.\nSection 7–11 / Lead Compensation 501\nMATLAB Program 7–13\n%*****Unit-step responses*****\nnum = [4];\nden = [1  2  4];\nnumc = [166.8  735.588];\ndenc = [1  20.4  203.6  735.588];\nt = 0:0.02:6;\n[c1,x1,t] = step(num,den,t);\n[c2,x2,t] = step(numc,denc,t);\nplot (t,c1,'.',t,c2,'-')\ngrid\ntitle('Unit-Step Responses of Compensated and Uncompensated Systems')\nxlabel('t Sec')\nylabel('Outputs')\ntext(0.4,1.31,'Compensated system')\ntext(1.55,0.88,'Uncompensated system')\n%*****Unit-ramp responses*****\nnum1 = [4];\nden1 = [1  2  4  0];\nnum1c = [166.8  735.588];\nden1c = [1  20.4  203.6  735.588  0];\nt = 0:0.02:5;\n[y1,z1,t] = step(num1,den1,t);\n[y2,z2,t] = step(num1c,den1c,t);\nplot(t,y1,'.',t,y2,'-',t,t,'--')\ngrid\ntitle('Unit-Ramp Responses of Compensated and Uncompensated Systems')\nxlabel('t Sec')\nylabel('Outputs')\ntext(0.89,3.7,'Compensated system')\ntext(2.25,1.1,'Uncompensated system')\nIt is noted that the closed-loop poles for the compensated system are located as follows:\nBecause the dominant closed-loop poles are located far from the jv axis, the response damps out\nquickly.\ns =- 6.4918\ns =- 6.9541 ; j8.0592502\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\n7–12 LAG COMPENSATION\nIn this section we first discuss the Nyquist plot and Bode diagram of the lag compensator.\nThen we present lag compensation techniques based on the frequency-response approach.\nCharacteristics of Lag Compensators. Consider a lag compensator having the\nfollowing transfer function:\nG\nc\n(s) = K\nc\n \nb Ts + 1\nbTs + 1 = K\nc\ns + 1\nT\ns + 1\nbT\n  \n(b 7 1)\nOutputs\n5\n2\n0\n3.5\n4.5\n1.5\n0.5\n3\n4\n2.5\n1\nt Sec\n01\n0.5\n53.5\n4.5\n3\n4\n2\n1.5\n2.5\nUnit-Ramp Responses of Compensated and Uncompensated Systems\nCompensated system\nUncompensated system\nFigure 7–100\nUnit-ramp response\ncurves of the\ncompensated and\nuncompensated\nsystems.\nOutputs\n1.4\n0.6\n0\n1\n1.2\n0.4\n0.2\n0.8\nt Sec\n01\n64\n5\n2\n3\nUnit-Step Responses of Compensated and Uncompensated Systems\nCompensated system\nUncompensated system\nFigure 7–99\nUnit-step response\ncurves of the\ncompensated and\nuncompensated\nsystems.\nOpenmirrors.comSection 7–12 / Lag Compensation 503\nIn the complex plane, a lag compensator has a zero at s=–1/T and a pole at\ns=–1/(bT). The pole is located to the right of the zero.\nFigure 7–101 shows a polar plot of the lag compensator. Figure 7–102 shows a Bode\ndiagram of the compensator, where Kc=1 and b=10. The corner frequencies of the\nlag compensator are at v=1/T and v=1/(bT). As seen from Figure 7–102, where\nthe values of Kc and b are set equal to 1 and 10, respectively, the magnitude of the lag\ncompensator becomes 10 (or 20 dB) at low frequencies and unity (or 0 dB) at high fre-\nquencies. Thus, the lag compensator is essentially a low-pass filter.\nLag Compensation Techniques Based on the Frequency-Response Approach.\nThe primary function of a lag compensator is to provide attenuation in the high-\nfrequency range to give a system sufficient phase margin. The phase-lag characteristic\nis of no consequence in lag compensation.\nThe procedure for designing lag compensators for the system shown in Figure 7–93\nby the frequency-response approach may be stated as follows:\n1. Assume the following lag compensator:\nGc(s) = Kc b Ts + 1\nbTs + 1 = Kc\ns + 1\nT\ns + 1\nbT\n  (b 7 1)\nIm\n0R e v = 0v = `\nKc Kcb\nFigure 7–101\nPolar plot of a lag\ncompensator\nKcb(jvT + 1)/H20862(jvbT + 1).\n30\n20\nv in rad/sec\n10\n0\n0°\n–90°\ndB\n0.01\nT\n0.1\nT\n1\nT\n10\nT\nFigure 7–102\nBode diagram of a \nlag compensator \nb(jvT+1)/(jvbT+1),\nwith b=10.Define\nThen\nThe open-loop transfer function of the compensated system is\nwhere\nDetermine gain K to satisfy the requirement on the given static velocity error\nconstant.\n2. If the gain-adjusted but uncompensated system G\n1\n(jv)=KG(jv) does not sat-\nisfy the specifications on the phase and gain margins, then find the frequency point\nwhere the phase angle of the open-loop transfer function is equal to –180° plus the\nrequired phase margin. The required phase margin is the specified phase margin\nplus 5° to 12°. (The addition of 5° to 12° compensates for the phase lag of the lag\ncompensator.) Choose this frequency as the new gain crossover frequency.\n3. To prevent detrimental effects of phase lag due to the lag compensator, the pole\nand zero of the lag compensator must be located substantially lower than the new\ngain crossover frequency. Therefore, choose the corner frequency v=1/T (cor-\nresponding to the zero of the lag compensator) 1 octave to 1 decade below the\nnew gain crossover frequency. (If the time constants of the lag compensator do\nnot become too large, the corner frequency v=1/T may be chosen 1 decade\nbelow the new gain crossover frequency.)\nNotice that we choose the compensator pole and zero sufficiently small. Thus\nthe phase lag occurs at the low-frequency region so that it will not affect the phase\nmargin.\n4. Determine the attenuation necessary to bring the magnitude curve down to 0 dB\nat the new gain crossover frequency. Noting that this attenuation is de-\ntermine the value of b. Then the other corner frequency (corresponding to the\npole of the lag compensator) is determined from v=1/(bT).\n5. Using the value of K determined in step 1 and that of b determined in step 4, cal-\nculate constant K\nc\nfrom\nK\nc\n= K\nb\n-20 log b,\nG\n1\n(s) = KG(s)\nG\nc\n(s)G(s) = K Ts + 1\nbTs + 1 G(s) = Ts + 1\nbTs + 1 KG(s) = Ts + 1\nbTs + 1 G\n1\n(s)\nG\nc\n(s) = K Ts + 1\nbTs + 1\nK\nc\nb = K\n504\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nOpenmirrors.comSection 7–12 / Lag Compensation 505\nEXAMPLE 7–27 Consider the system shown in Figure 7–103. The open-loop transfer function is given by\nIt is desired to compensate the system so that the static velocity error constant Kv is 5 sec–1, the\nphase margin is at least 40°, and the gain margin is at least 10 dB.\nWe shall use a lag compensator of the form\nDefine\nDefine also\nThe first step in the design is to adjust the gain K to meet the required static velocity error con-\nstant. Thus,\nor\nWith K=5, the compensated system satisfies the steady-state performance requirement.\nWe shall next plot the Bode diagram of\nG1(jv) = 5\njv(jv + 1)(0.5jv + 1)\nK = 5\n = lim\ns S 0\n sK\ns(s + 1)(0.5s + 1) = K = 5\n Kv = lim\ns S 0\nsGc(s)G(s) = lim\ns S 0\ns Ts + 1\nbTs + 1 G1(s) = lim\ns S 0\nsG1(s)\nG1(s) = KG(s) = K\ns(s + 1)(0.5s + 1)\nKc b = K\nGc(s) = Kc b Ts + 1\nbTs + 1 = Kc\ns + 1\nT\ns + 1\nbT\n  (b 7 1)\nG(s) = 1\ns(s + 1)(0.5s + 1)\n1\ns(s +1) (0.5s + 1)+ –\nFigure 7–103\nControl system.The magnitude curve and phase-angle curve of G\n1\n(jv) are shown in Figure 7–104. From this plot,\nthe phase margin is found to be –20°, which means that the gain-adjusted but uncompensated\nsystem is unstable.\nNoting that the addition of a lag compensator modifies the phase curve of the Bode diagram, we\nmust allow 5° to 12° to the specified phase margin to compensate for the modification of the phase\ncurve. Since the frequency corresponding to a phase margin of 40° is 0.7 rad/H20862sec, the new gain crossover\nfrequency (of the compensated system) must be chosen near this value. To avoid overly large time\nconstants for the lag compensator, we shall choose the corner frequency v=1/T(which corresponds\nto the zero of the lag compensator) to be 0.1 rad/H20862sec. Since this corner frequency is not too far below\nthe new gain crossover frequency, the modification in the phase curve may not be small. Hence, we add\nabout 12° to the given phase margin as an allowance to account for the lag angle introduced by the lag\ncompensator.The required phase margin is now 52°.The phase angle of the uncompensated open-loop\ntransfer function is –128° at about v=0.5 rad/H20862sec. So we choose the new gain crossover frequency\nto be 0.5 rad/H20862sec.To bring the magnitude curve down to 0 dB at this new gain crossover frequency, the\nlag compensator must give the necessary attenuation, which in this case is –20 dB. Hence,\nor\nThe other corner frequency v=1(bT), which corresponds to the pole of the lag compen-\nsator, is then determined as\n1\nbT = 0.01 rad/H20862sec\nb = 10\n20 log 1\nb =- 20\n11 dB0dB\n0°\n–90°\n–180°\n–270°\nv in rad/sec\n0.020.004\nG\n1\nG\n1\nG\nc\nG\nG\nc\nK\nG\nc\n40\n20\n–20\n–40\n40°\n0.01 0.04 0.1 0.6 0.2 0.4 1 2 4\nG\nc\nG\nFigure 7–104\nBode diagrams for\nG\n1\n(gain-adjusted but\nuncompensated\nopen-loop transfer\nfunction), G\nc\n(compensator), and\nG\nc\nG (compensated\nopen-loop transfer\nfunction).\n506\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nOpenmirrors.comSection 7–12 / Lag Compensation 507\nThus, the transfer function of the lag compensator is\nSince the gain K was determined to be 5 and b was determined to be 10, we have\nThe open-loop transfer function of the compensated system is\nThe magnitude and phase-angle curves of Gc(jv)G(jv) are also shown in Figure 7–104.\nThe phase margin of the compensated system is about 40°, which is the required value. The\ngain margin is about 11 dB, which is quite acceptable. The static velocity error constant is 5 sec–1,\nas required. The compensated system, therefore, satisfies the requirements on both the steady\nstate and the relative stability.\nNote that the new gain crossover frequency is decreased from approximately 1 to 0.5 rad/H20862sec.\nThis means that the bandwidth of the system is reduced.\nTo further show the effects of lag compensation, the log-magnitude-versus-phase plots of the gain-\nadjusted but uncompensated system G1(jv) and of the compensated system Gc(jv)G(jv) are shown\nin Figure 7–105.The plot of G1(jv) clearly shows that the gain-adjusted but uncompensated system is\nunstable. The addition of the lag compensator stabilizes the system. The plot of Gc(jv)G(jv) is tan-\ngent to the M=3 dB locus. Thus, the resonant peak value is 3 dB, or 1.4, and this peak occurs at\nv=0.5 rad/H20862sec.\nCompensators designed by different methods or by different designers (even using the same ap-\nproach) may look sufficiently different. Any of the well-designed systems, however, will give similar\ntransient and steady-state performance. The best among many alternatives may be chosen from the\neconomic consideration that the time constants of the lag compensator should not be too large.\nGc(s)G(s) =\n5(10s + 1)\ns(100s + 1)(s + 1)(0.5s + 1)\nKc = K\nb = 5\n10 = 0.5\nGc(s) = Kc(10) 10s + 1\n100s + 1 = Kc\ns + 1\n10\ns + 1\n100\n8\n4\n0\n–4\n–90/H11034\n24\n16\n20\n12\n–8\n–12\n–16\n–20\n–240/H11034–210/H11034–180/H11034–150/H11034–120/H11034\nG1\nG1 in dB\n0.6\n0.4\n0.8\n1 0.1\n0.2\n2\n0.6\n0.4\n0.8\nG1\nGcG\n3 dB\n1\n24\nFigure 7–105\nLog-magnitude-\nversus-phase plots of\nG1 (gain-adjusted but\nuncompensated\nopen-loop transfer\nfunction) and Gc G\n(compensated open-\nloop transfer\nfunction).508\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nFinally, we shall examine the unit-step response and unit-ramp response of the compensated\nsystem and the original uncompensated system without gain adjustment. The closed-loop trans-\nfer functions of the compensated and uncompensated systems are\nand\nrespectively. MATLAB Program 7–14 will produce the unit-step and unit-ramp responses of the\ncompensated and uncompensated systems.The resulting unit-step response curves and unit-ramp\nresponse curves are shown in Figures 7–106 and 7–107, respectively. From the response curves\nwe find that the designed system satisfies the given specifications and is satisfactory.\nC(s)\nR(s) = 1\n0.5s\n3\n+ 1.5s\n2\n+ s + 1\nC(s)\nR(s) = 50s + 5\n50s\n4\n+ 150.5s\n3\n+ 101.5s\n2\n+ 51s + 5\nMATLAB Program 7–14\n%*****Unit-step response*****\nnum = [1];\nden = [0.5  1.5  1  1];\nnumc = [50  5];\ndenc = [50  150.5  101.5  51  5];\nt = 0:0.1:40;\n[c1,x1,t] = step(num,den,t);\n[c2,x2,t] = step(numc,denc,t);\nplot(t,c1,'.',t,c2,'-')\ngrid\ntitle('Unit-Step Responses of Compensated and Uncompensated Systems')\nxlabel('t Sec')\nylabel('Outputs')\ntext(12.7,1.27,'Compensated system')\ntext(12.2,0.7,'Uncompensated system')\n%*****Unit-ramp response*****\nnum1 = [1];\nden1 = [0.5  1.5  1  1  0];\nnum1c = [50  5];\nden1c = [50  150.5  101.5  51  5  0];\nt = 0:0.1:20;\n[y1,z1,t] = step(num1,den1,t);\n[y2,z2,t] = step(num1c,den1c,t);\nplot(t,y1,'.',t,y2,'-',t,t,'--');\ngrid\ntitle('Unit-Ramp Responses of Compensated and Uncompensated Systems')\nxlabel('t Sec')\nylabel('Outputs')\ntext(8.3,3,'Compensated system')\ntext(8.3,5,'Uncompensated system')\nOpenmirrors.comSection 7–12 / Lag Compensation 509\nNote that the zero and poles of the designed closed-loop system are as follows:\nThe dominant closed-loop poles are very close to the jv axis with the result that the response\nis slow. Also, a pair of the closed-loop pole at s=–0.1228 and the zero at s=–0.1 produces a\nslowly decreasing tail of small amplitude.\n Poles at s =- 0.2859 ; j0.5196,  s =- 0.1228,  s =- 2.3155\n Zero at s =- 0.1\nOutputs\n1.4\n0.6\n0\n1\n1.2\n0.4\n0.2\n0.8\nt Sec\n01 0 5 4030 352515 20\nUnit-Step Responses of Compensated and Uncompensated Systems\nCompensated system\nUncompensated system\nFigure 7–106\nUnit-step response\ncurves for the\ncompensated and\nuncompensated\nsystems (Example\n7–27).\nOutputs\n20\n8\n0\n12\n18\n4\n2\n16\n10\n14\n6\nt Sec\n04 2 2014 1812 1686 10\nUnit-Ramp Responses of Compensated  and Uncompensated Systems\nCompensated system\nUncompensated system\nFigure 7–107\nUnit-ramp response\ncurves for the\ncompensated and\nuncompensated\nsystems (Example\n7–27).A Few Comments on Lag Compensation.\n1. Lag compensators are essentially low-pass filters. Therefore, lag compensation\npermits a high gain at low frequencies (which improves the steady-state per-\nformance) and reduces gain in the higher critical range of frequencies so as to im-\nprove the phase margin. Note that in lag compensation we utilize the attenuation\ncharacteristic of the lag compensator at high frequencies rather than the phase-\nlag characteristic. (The phase-lag characteristic is of no use for compensation\npurposes.)\n2. Suppose that the zero and pole of a lag compensator are located at s=–z and\ns=–p, respectively.Then the exact locations of the zero and pole are not critical\nprovided that they are close to the origin and the ratio z/p is equal to the required\nmultiplication factor of the static velocity error constant.\nIt should be noted, however, that the zero and pole of the lag compensator\nshould not be located unnecessarily close to the origin, because the lag compen-\nsator will create an additional closed-loop pole in the same region as the zero and\npole of the lag compensator.\nThe closed-loop pole located near the origin gives a very slowly decaying tran-\nsient response, although its magnitude will become very small because the zero of\nthe lag compensator will almost cancel the effect of this pole. However, the tran-\nsient response (decay) due to this pole is so slow that the settling time will be ad-\nversely affected.\nIt is also noted that in the system compensated by a lag compensator the trans-\nfer function between the plant disturbance and the system error may not involve\na zero that is near this pole. Therefore, the transient response to the disturbance\ninput may last very long.\n3. The attenuation due to the lag compensator will shift the gain crossover \nfrequency to a lower frequency point where the phase margin is accept-\nable. Thus, the lag compensator will reduce the bandwidth of the system \nand will result in slower transient response. [The phase angle curve of\nG\nc\n(jv)G(jv) is relatively unchanged near and above the new gain crossover \nfrequency.]\n4. Since the lag compensator tends to integrate the input signal, it acts approximately\nas a proportional-plus-integral controller. Because of this, a lag-compensated sys-\ntem tends to become less stable. To avoid this undesirable feature, the time con-\nstant T should be made sufficiently larger than the largest time constant of the\nsystem.\n5. Conditional stability may occur when a system having saturation or limiting is\ncompensated by use of a lag compensator.When the saturation or limiting takes\nplace in the system, it reduces the effective loop gain. Then the system becomes\nless stable and unstable operation may even result, as shown in Figure 7–108.\nTo avoid this, the system must be designed so that the effect of lag compensa-\ntion becomes significant only when the amplitude of the input to the saturat-\ning element is small. (This can be done by means of minor feedback-loop\ncompensation.)\n510\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nOpenmirrors.comSection 7–13 / Lag–Lead Compensation 511\n7–13 LAG–LEAD COMPENSATION\nWe shall first examine the frequency-response characteristics of the lag–lead compen-\nsator. Then we present the lag–lead compensation technique based on the frequency-\nresponse approach.\nCharacteristic of Lag–Lead Compensator. Consider the lag–lead compensator\ngiven by\n(7–27)\nwhere g>1 and b>1. The term\nproduces the effect of the lead network, and the term\nproduces the effect of the lag network.\ns + 1\nT2\ns + 1\nbT2\n= ba T2 s + 1\nbT2 s + 1 b  (b 7 1)\ns + 1\nT1\ns + g\nT1\n= 1\ng °T1 s + 1\nT1\ng s + 1\n¢  (g 7 1)\nGc(s) = Kc ±\ns + 1\nT1\ns + g\nT1\n≤±\ns + 1\nT2\ns + 1\nbT2\n≤\ndB\n40\n30\n20\n10\n0\n–10\n–20\n–90°\n–180°\n–270°\n0.7 1 2 4 6 8 10 20\nLarge gain\nSmall\n gain\nv in rad/sec\nf /H11022  0f /H11021  0\nFigure 7–108\nBode diagram of a\nconditionally stable\nsystem.In designing a lag–lead compensator, we frequently chose g=b. (This is not\nnecessary. We can, of course, choose g Z b.) In what follows, we shall consider the\ncase where g=b.The polar plot of the lag–lead compensator with K\nc\n=1 and g=b\nbecomes as shown in Figure 7–109. It can be seen that, for 0<v<v\n1\n, the\ncompensator acts as a lag compensator, while for v\n1\n<v<q it acts as a lead\ncompensator. The frequency v\n1\nis the frequency at which the phase angle is zero. It\nis given by\n(To derive this equation, see Problem A–7–21.)\nFigure 7–110 shows the Bode diagram of a lag–lead compensator when K\nc\n=1,\ng=b=10, and Notice that the magnitude curve has the value 0 dB at the\nlow- and high-frequency regions.\nT\n2\n= 10T\n1\n \n.\nv\n1\n= 1\n1T\n1\n \nT\n2\n512\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nIm\nRe01 v = v\n1\nv = 0\nv = `\nFigure 7–109\nPolar plot of a\nlag–lead\ncompensator given\nby Equation (7–27),\nwith K\nc\n=1 and\ng=b.\n10\n0\n–10\n–20\n–30\n90°\n0°\n–90°\nv in rad/sec\ndB\n0.01\nT\n1\n1\nT\n1\n10\nT\n1\n0.1\nT\n1\n0.001\nT\n1\n100\nT\n1\nFigure 7–110\nBode diagram of a\nlag–lead\ncompensator given\nby Equation (7–27)\nwith K\nc\n=1,\ng=b=10, and\nT\n2\n= 10T\n1\n \n.\nOpenmirrors.comSection 7–13 / Lag–Lead Compensation 513\nLag–Lead Compensation Based on the Frequency-Response Approach. The\ndesign of a lag–lead compensator by the frequency-response approach is based on the\ncombination of the design techniques discussed under lead compensation and lag\ncompensation.\nLet us assume that the lag–lead compensator is of the following form:\n(7–28)\nwhere b>1. The phase-lead portion of the lag–lead compensator (the portion involv-\ning ) alters the frequency-response curve by adding phase-lead angle and increasing\nthe phase margin at the gain crossover frequency.The phase-lag portion (the portion in-\nvolving ) provides attenuation near and above the gain crossover frequency and there-\nby allows an increase of gain at the low-frequency range to improve the steady-state\nperformance.\nWe shall illustrate the details of the procedures for designing a lag–lead compen-\nsator by an example.\nEXAMPLE 7–28 Consider the unity-feedback system whose open-loop transfer function is\nIt is desired that the static velocity error constant be 10 sec –1, the phase margin be 50°, and the\ngain margin be 10 dB or more.\nAssume that we use the lag–lead compensator given by Equation (7–28). [Note that the phase-\nlead portion increases both the phase margin and the system bandwidth (which implies increas-\ning the speed of response). The phase-lag portion maintains the low-frequency gain.]\nThe open-loop transfer function of the compensated system is Gc(s)G(s). Since the gain K of\nthe plant is adjustable, let us assume that Kc=1. Then,\nFrom the requirement on the static velocity error constant, we obtain\nHence,\nWe shall next draw the Bode diagram of the uncompensated system with K=20, as shown in\nFigure 7–111. The phase margin of the gain-adjusted but uncompensated system is found to be\n–32°, which indicates that the gain-adjusted but uncompensated system is unstable.\nThe next step in the design of a lag–lead compensator is to choose a new gain crossover fre-\nquency. From the phase-angle curve for G(jv), we notice that at v=1.5 rad/H20862sec.\nIt is convenient to choose the new gain crossover frequency to be 1.5 rad /H20862sec so that the phase-\nlead angle required at v=1.5 rad/H20862sec is about 50°, which is quite possible by use of a single\nlag–lead network.\nOnce we choose the gain crossover frequency to be 1.5 rad/H20862sec, we can determine the corner\nfrequency of the phase-lag portion of the lag–lead compensator. Let us choose the corner fre-\nquency (which corresponds to the zero of the phase-lag portion of the compensator) to\nbe 1 decade below the new gain crossover frequency, or at v=0.15 rad/H20862sec.\nv = 1/H20862T2\n/G(jv) =- 180°\nK = 20\nKv = lim\ns S 0\nsGc(s)G(s) = lim\ns S 0\nsGc(s) K\ns(s + 1)(s + 2) = K\n2 = 10\nlim\ns S 0\nGc(s) = 1.\nG(s) = K\ns(s + 1)(s + 2)\nT2\nT1\nGc(s) = Kc\n(T1 s + 1)(T2 s + 1)\naT1\nb s + 1 b(bT2 s + 1)\n= Kc\nas + 1\nT1\nba s + 1\nT2\nb\nas + b\nT1\nba s + 1\nbT2\nbRecall that for the lead compensator the maximum phase-lead angle f\nm\nis given by Equation\n(7–25), where a is 1/b in the present case. By substituting a=1/b in Equation (7–25), we have\nNotice that b=10 corresponds to f\nm\n=54.9°. Since we need a 50° phase margin, we may choose\nb=10. (Note that we will be using several degrees less than the maximum angle, 54.9°.) Thus,\nb=10\nThen the corner frequency (which corresponds to the pole of the phase-lag portion of\nthe compensator) becomes v=0.015 rad/H20862sec. The transfer function of the phase-lag portion of\nthe lag–lead compensator then becomes\nThe phase-lead portion can be determined as follows: Since the new gain crossover frequen-\ncy is v=1.5 rad/H20862sec, from Figure 7–111,G(j1.5) is found to be 13 dB. Hence, if the lag–lead com-\npensator contributes –13 dB at v=1.5 rad/H20862sec, then the new gain crossover frequency is as\ndesired. From this requirement, it is possible to draw a straight line of slope 20 dB/H20862decade, pass-\ning through the point (1.5 rad /H20862sec, –13 dB). The intersections of this line and the 0-dB line and\n–20-dB line determine the corner frequencies. Thus, the corner frequencies for the lead portion\ns + 0.15\ns + 0.015 = 10\na\n6.67s + 1\n66.7s + 1\nb\nv = 1/H20862bT\n2\nsin f\nm\n=\n1 - 1\nb\n1 + 1\nb\n= b - 1\nb + 1\n514\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nv in rad/sec\ndB\n60\n40\n20\n0\n–40\n–20\n90°\n0\n–90°\n–180°\n–270°\n0.020.01 0.04 0.1 0.2 0.4 0.6\nGG\nc\nG\nG\nG\nc\nG\nG\nc\nG\nc\n16 dB\n124 6 1 0\n–32°\n50°\nFigure 7–111\nBode diagrams for G\n(gain-adjusted but\nuncompensated\nopen-loop transfer\nfunction), G\nc\n(compensator), and\nG\nc\nG (compensated\nopen-loop transfer\nfunction).\nOpenmirrors.comSection 7–13 / Lag–Lead Compensation 515\nare v=0.7 rad/H20862sec and v=7 rad/H20862sec. Thus, the transfer function of the lead portion of the\nlag–lead compensator becomes\nCombining the transfer functions of the lag and lead portions of the compensator, we obtain the\ntransfer function of the lag–lead compensator. Since we chose Kc=1, we have\nThe magnitude and phase-angle curves of the lag–lead compensator just designed are shown in\nFigure 7–111. The open-loop transfer function of the compensated system is\n(7–29)\nThe magnitude and phase-angle curves of the system of Equation (7–29) are also shown in Fig-\nure 7–111. The phase margin of the compensated system is 50°, the gain margin is 16 dB, and the\nstatic velocity error constant is 10 sec–1. All the requirements are therefore met, and the design\nhas been completed.\nFigure 7–112 shows the polar plots of G(jv) (gain-adjusted but uncompensated open-loop\ntransfer function) and Gc(jv)G(jv) (compensated open-loop transfer function).The Gc(jv)G(jv)\nlocus is tangent to the M=1.2 circle at about v=2 rad/H20862sec. Clearly, this indicates that the com-\npensated system has satisfactory relative stability. The bandwidth of the compensated system is\nslightly larger than 2 rad/H20862sec.\n =\n10(1.43s + 1)(6.67s + 1)\ns(0.143s + 1)(66.7s + 1)(s + 1)(0.5s + 1)\n Gc(s)G(s) =\n(s + 0.7)(s + 0.15)20\n(s + 7)(s + 0.015)s(s + 1)(s + 2)\nGc(s) = as + 0.7\ns + 7 ba s + 0.15\ns + 0.015 b = a 1.43s + 1\n0.143s + 1 ba 6.67s + 1\n66.7s + 1 b\ns + 0.7\ns + 7 = 1\n10 a 1.43s + 1\n0.143s + 1 b\nM = 1.2\nv = 0.15\nv = 1\nIm\nRe\nG\nGcG0.2\n0.4\n–8\n–7\n–6\n–5\n–4\n–3\n–2\n–1\n021\n1\n2–2\n2\n–1–4 –3–5–8 –7\n1\n2\n–6\nFigure 7–112\nPolar plots of G (gain\nadjusted) and Gc G.In the following we shall examine the transient-response characteristics of the compensated\nsystem. (The gain-adjusted but uncompensated system is unstable.) The closed-loop transfer func-\ntion of the compensated system is\nThe unit-step and unit-ramp response curves obtained with MATLAB are shown in Figures 7–113\nand 7–114, respectively.\nC(s)\nR(s) = 95.381s\n2\n+ 81s + 10\n4.7691s\n5\n+ 47.7287s\n4\n+ 110.3026s\n3\n+ 163.724s\n2\n+ 82s + 10\n516\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nOutput\n1.6\n0.6\n0\n1\n1.4\n0.4\n0.2\n1.2\n0.8\nt Sec\n04\n2\n2014\n18\n12\n16\n8\n6\n10\nUnit-Step Response of Compensated System\nFigure 7–113\nUnit-step response of\nthe compensated\nsystem (Example\n7–28).\nOutput\n20\n8\n0\n12\n18\n4\n2\n16\n10\n14\n6\nt Sec\n04\n2\n2014\n18\n12\n16\n8\n6\n10\nUnit-Ramp Response of Compensated System\nFigure 7–114\nUnit-ramp response\nof the compensated\nsystem (Example\n7–28).\nOpenmirrors.comSection 7–13 / Lag–Lead Compensation 517\nNote that the designed closed-loop control system has the following closed-loop zeros and poles:\nThe pole at s=–0.1785 and zero at s=–0.1499 are located very close to each other. Such a pair\nof pole and zero produces a long tail of small amplitude in the step response, as seen in Figure 7–113.\nAlso, the pole at s=–0.5425and zero at s=–0.6993are located fairly close to each other.This pair\nadds amplitude to the long tail.\nSummary of Control Systems Design by Frequency-Response Approach.\nThe last three sections presented detailed procedures for designing lead, lag, and\nlag–lead compensators by the use of simple examples. We have shown that the design\nof a compensator to satisfy the given specifications (in terms of the phase margin and\ngain margin) can be carried out in the Bode diagram in a simple and straightforward\nmanner. It is noted that not every system can be compensated with a lead, lag, or\nlag–lead compensator. In some cases compensators with complex poles and zeros may\nbe used. For systems that cannot be designed by use of the root-locus or frequency-\nresponse methods, the pole-placement method may be used. (See Chapter 10.) In a\ngiven design problem if both conventional design methods and the pole-placement\nmethod can be used, conventional methods (root-locus or frequency-response methods)\nusually result in a lower-order stable compensator. Note that a satisfactory design of a\ncompensator for a complex system may require a creative application of all available\ndesign methods.\nComparison of Lead, Lag, and Lag–Lead Compensation\n1. Lead compensation is commonly used for improving stability margins. Lag com-\npensation is used to improve the steady-state performance. Lead compensation\nachieves the desired result through the merits of its phase-lead contribution, where-\nas lag compensation accomplishes the result through the merits of its attenuation\nproperty at high frequencies.\n2. In some design problems both lead compensation and lag compensation may sat-\nisfy the specifications. Lead compensation yields a higher gain crossover frequen-\ncy than is possible with lag compensation. The higher gain crossover frequency\nmeans a larger bandwidth.A large bandwidth means reduction in the settling time.\nThe bandwidth of a system with lead compensation is always greater than that\nwith lag compensation.Therefore, if a large bandwidth or fast response is desired,\nlead compensation should be employed. If, however, noise signals are present, then\na large bandwidth may not be desirable, since it makes the system more suscepti-\nble to noise signals because of an increase in the high-frequency gain. Hence, lag\ncompensation should be used for such a case.\n3. Lead compensation requires an additional increase in gain to offset the attenua-\ntion inherent in the lead network.This means that lead compensation will require\na larger gain than that required by lag compensation. A larger gain, in most cases,\nimplies larger space, greater weight, and higher cost.\n s =- 0.1785,  s =- 0.5425,  s =- 7.4923\n Poles at s =- 0.8973 ; j1.4439\n Zeros at s =- 0.1499,  s =- 0.69934. Lead compensation may generate large signals in the system. Such large signals\nare not desirable because they will cause saturation in the system.\n5. Lag compensation reduces the system gain at higher frequencies without reduc-\ning the system gain at lower frequencies. Since the system bandwidth is reduced,\nthe system has a slower speed to respond. Because of the reduced high-frequen-\ncy gain, the total system gain can be increased, and thereby low-frequency gain\ncan be increased and the steady-state accuracy can be improved. Also, any high-\nfrequency noises involved in the system can be attenuated.\n6. Lag compensation will introduce a pole-zero combination near the origin that will\ngenerate a long tail with small amplitude in the transient response.\n7. If both fast responses and good static accuracy are desired, a lag–lead compensator\nmay be employed. By use of the lag–lead compensator, the low-frequency gain can\nbe increased (which means an improvement in steady-state accuracy), while at the\nsame time the system bandwidth and stability margins can be increased.\n8. Although a large number of practical compensation tasks can be accomplished\nwith lead, lag, or lag–lead compensators, for complicated systems, simple\ncompensation by use of these compensators may not yield satisfactory results.\nThen, different compensators having different pole–zero configurations must be\nemployed.\nGraphical Comparison. Figure 7–115(a) shows a unit-step response curve and\nunit-ramp response curve of an uncompensated system. Typical unit-step response and\nunit-ramp response curves for the compensated system using a lead, lag, and lag–lead\ncompensator, respectively, are shown in Figures 7–115(b), (c), and (d). The system with\na lead compensator exhibits the fastest response, while that with a lag compensator ex-\nhibits the slowest response, but with marked improvements in the unit-ramp response.\nThe system with a lag–lead compensator will give a compromise; reasonable improve-\n518\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nc(t)\n1\n0 t\nc(t)\n1\n0 t\nc(t)\n1\n0 t\nc(t)\n1\n0 t\nc(t)\n0 t\nc(t)\n0 t\nc(t)\n0 t\nc(t)\n0 t\ne\nss\ne\nss\ne\nss\ne\nss\n(a) (b) (c) (d)\nFigure 7–115\nUnit-step response\ncurves and unit-ramp\nresponse curves.\n(a) Uncompensated\nsystem; (b) lead\ncompensated system;\n(c) lag compensated\nsystem; (d) lag–lead\ncompensated system.\nOpenmirrors.comSection 7–13 / Lag–Lead Compensation 519\nments in both the transient response and steady-state response can be expected. The\nresponse curves shown depict the nature of improvements that may be expected from\nusing different types of compensators.\nFeedback Compensation. A tachometer is one of the rate feedback devices.\nAnother common rate feedback device is the rate gyro. Rate gyros are commonly used\nin aircraft autopilot systems.\nVelocity feedback using a tachometer is very commonly used in positional servo\nsystems. It is noted that, if the system is subjected to noise signals, velocity feedback\nmay generate some difficulty if a particular velocity feedback scheme performs\ndifferentiation of the output signal. (The result is the accentuation of the noise \neffects.)\nCancellation of Undesirable Poles. Since the transfer function of elements in\ncascade is the product of their individual transfer functions, it is possible to cancel some\nundesirable poles or zeros by placing a compensating element in cascade, with its poles\nand zeros being adjusted to cancel the undesirable poles or zeros of the original system.\nFor example, a large time constant may be canceled by use of the lead network\nas follows:\nIf is much smaller than we can effectively eliminate the large time constant \nFigure 7–116 shows the effect of canceling a large time constant in step transient\nresponse.\nIf an undesirable pole in the original system lies in the right-half s plane, this com-\npensation scheme should not be used since, although mathematically it is possible to\ncancel the undesirable pole with an added zero, exact cancellation is physically impos-\nsible because of inaccuracies involved in the location of the poles and zeros. A pole in\nthe right-half s plane not exactly canceled by the compensator zero will eventually lead\nto unstable operation, because the response will involve an exponential term that in-\ncreases with time.\nIt is noted that if a left-half plane pole is almost canceled but not exactly can-\nceled, as is almost always the case, the uncanceled pole-zero combination will cause\nthe response to have a small amplitude but long-lasting transient-response compo-\nnent. If the cancellation is not exact but is reasonably good, then this component will\nbe small.\nIt should be noted that the ideal control system is not the one that has a transfer\nfunction of unity. Physically, such a control system cannot be built since it cannot\nT1 .T1 ,T2\na 1\nT1 s + 1 ba T1 s + 1\nT2 s + 1 b = 1\nT2 s + 1\nAT1 s + 1B/H20862AT2 s + 1B\nT1\nx\nxy z\nyz\ntt t 1\nT1s + 1\nT1s + 1\nT2s + 1\nFigure 7–116\nStep-response curves\nshowing the effect of\ncanceling a large\ntime constant.instantaneously transfer energy from the input to the output. In addition, since\nnoise is almost always present in one form or another, a system with a unity transfer\nfunction is not desirable. A desired control system, in many practical cases, may\nhave one set of dominant complex-conjugate closed-loop poles with a reasonable\ndamping ratio and undamped natural frequency.The determination of the significant\npart of the closed-loop pole-zero configuration, such as the location of the domi-\nnant closed-loop poles, is based on the specifications that give the required system\nperformance.\nCancellation of Undesirable Complex-Conjugate Poles. If the transfer func-\ntion of a plant contains one or more pairs of complex-conjugate poles, then a lead, lag,\nor lag–lead compensator may not give satisfactory results. In such a case, a network that\nhas two zeros and two poles may prove to be useful. If the zeros are chosen so as to\ncancel the undesirable complex-conjugate poles of the plant, then we can essentially\nreplace the undesirable poles by acceptable poles. That is, if the undesirable complex-\nconjugate poles are in the left-half s plane and are in the form\nthen the insertion of a compensating network having the transfer function\nwill result in an effective change of the undesirable complex-conjugate poles to ac-\nceptable poles. Note that even though the cancellation may not be exact, the com-\npensated system will exhibit better response characteristics. (As stated earlier, this\napproach cannot be used if the undesirable complex-conjugate poles are in the right-\nhalf s plane.)\nFamiliar networks consisting only of RC components whose transfer functions pos-\nsess two zeros and two poles are the bridged- T networks. Examples of bridged-T net-\nworks and their transfer functions are shown in Figure 7–117. (The derivations of the\ntransfer functions of the bridged-T networks were given in Problem A–3–5.)\ns\n2\n+ 2z\n1\n \nv\n1\n \ns + v\n2\n1\ns\n2\n+ 2z\n2\n \nv\n2\n \ns + v\n2\n2\n1\ns\n2\n+ 2z\n1\n \nv\n1\n \ns + v\n2\n1\n520\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nC\n2\nRR\nC\n1\nR\n2\nCC\nR\n1\ne\ni\ne\no\ne\ni\ne\no\n(a) (b)\nE\no\n(s)\nE\ni\n(s)\nRC\n1\nRC\n2\ns\n2\n+ 2RC\n2\ns + 1\nRC\n1\nRC\n2\ns\n2\n+ (RC\n1\n+ 2RC\n2\n)s + 1\n=\nE\no\n(s)\nE\ni\n(s)\nR\n1\nCR\n2\nCs\n2\n+ 2R\n1\nCs + 1\nR\n1\nCR\n2\nCs\n2\n+ (R\n2\nC + 2R\n1\nC)s + 1\n=\nFigure 7–117\nBridged-T networks.\nOpenmirrors.comExample Problems and Solutions 521\nConcluding Comments. In the design examples presented in this chapter, we\nhave been primarily concerned only with the transfer functions of compensators. In ac-\ntual design problems, we must choose the hardware. Thus, we must satisfy additional\ndesign constraints such as cost, size, weight, and reliability.\nThe system designed may meet the specifications under normal operating condi-\ntions but may deviate considerably from the specifications when environmental changes\nare considerable. Since the changes in the environment affect the gain and time con-\nstants of the system, it is necessary to provide automatic or manual means to adjust the\ngain to compensate for such environmental changes, for nonlinear effects that were not\ntaken into account in the design, and also to compensate for manufacturing tolerances\nfrom unit to unit in the production of system components. (The effects of manufactur-\ning tolerances are suppressed in a closed-loop system; therefore, the effects may not be\ncritical in closed-loop operation but critical in open-loop operation.) In addition to this,\nthe designer must remember that any system is subject to small variations due mainly\nto the normal deterioration of the system.\n15\n10\n5\n0\n–5\n–10\n–15\n90°\n45°\n0°\n–45°\n–90°\n0.2 0.4 0.6 1 2 4 6 10 20 40\nv in rad/sec\nC(jv)\nR(jv)\nC(jv)\nR(jv) in dB\nAsymptote\nFigure 7–118\nBode diagram for\n10(1+ jv)/H20862C(2 + jv)(5 + jv)D.\nEXAMPLE PROBLEMS AND SOLUTIONS\nA–7–1. Consider a system whose closed-loop transfer function is\nClearly, the closed-loop poles are located at s=–2 and s=–5, and the system is not oscillatory.\nShow that the closed-loop frequency response of this system will exhibit a resonant peak, al-\nthough the damping ratio of the closed-loop poles is greater than unity.\nSolution. Figure 7–118 shows the Bode diagram for the system. The resonant peak value is ap-\nproximately 3.5 dB. (Note that, in the absence of a zero, the second-order system with z>0.7 will\nnot exhibit a resonant peak; however, the presence of a closed-loop zero will cause such a peak.)\nC(s)\nR(s) =\n10(s + 1)\n(s + 2)(s + 5)A–7–2. Consider the system defined by\nObtain the sinusoidal transfer functions and\nIn deriving and we assume that Simi-\nlarly, in obtaining and we assume that \nSolution. The transfer matrix expression for the system defined by\nis given by\nwhere G(s) is the transfer matrix and is given by\nFor the system considered here, the transfer matrix becomes\nHence\nAssuming that U\n2\n(jv)=0, we find and as follows:\nSimilarly, assuming that U\n1\n(jv)=0, we find and as follows:\nNotice that is a nonminimum-phase transfer function.Y\n2\n(jv)/H20862U\n2\n(jv)\nY\n2\n(jv)\nU\n2\n(jv) = jv - 25\n(jv)\n2\n+ 4jv + 25\nY\n1\n(jv)\nU\n2\n(jv) = jv + 5\n(jv)\n2\n+ 4jv + 25\nY\n2\n(jv)/H20862U\n2\n(jv)Y\n1\n(jv)/H20862U\n2\n(jv)\nY\n2\n(jv)\nU\n1\n(jv) = -25\n(jv)\n2\n+ 4jv + 25\nY\n1\n(jv)\nU\n1\n(jv) = jv + 4\n(jv)\n2\n+ 4jv + 25\nY\n2\n(jv)/H20862U\n1\n(jv)Y\n1\n(jv)/H20862U\n1\n(jv)\nB\nY\n1\n(s)\nY\n2\n(s)\nR\n=\nD\ns + 4\ns\n2\n+ 4s + 25\n-25\ns\n2\n+ 4s + 25\ns + 5\ns\n2\n+ 4s + 25\ns - 25\ns\n2\n+ 4s + 25\nTB\nU\n1\n(s)\nU\n2\n(s)\nR\n =\nD\ns + 4\ns\n2\n+ 4s + 25\n-25\ns\n2\n+ 4s + 25\ns + 5\ns\n2\n+ 4s + 25\ns - 25\ns\n2\n+ 4s + 25\nT\n = 1\ns\n2\n+ 4s + 25\nB\ns + 4\n-25\n1\ns\nRB\n1\n0\n1\n1\nR\n C(s\n \nI - A)\n-1\n \nB + D =\nB\n1\n0\n0\n1\nRB\ns\n25\n-1\ns + 4\nR\n-1\nB\n1\n0\n1\n1\nR\nG(s) = C(s\n \nI - A)\n-1\n \nB + D\nY(s) = G(s)U(s)\ny# = Cx + Du\nx# = Ax + Bu\nU\n1\n(jv) = 0.Y\n2\n(jv)/H20862U\n2\n(jv),Y\n1\n(jv)/H20862U\n2\n(jv)\nU\n2\n(jv) = 0.Y\n2\n(jv)/H20862U\n1\n(jv),Y\n1\n(jv)/H20862U\n1\n(jv)Y\n2\n(jv)/H20862U\n2\n(jv).\nY\n1\n(jv)/H20862U\n2\n(jv),Y\n2\n(jv)/H20862U\n1\n(jv),Y\n1\n(jv)/H20862U\n1\n(jv),\n \nB\ny\n1\ny\n2\nR\n=\nB\n1\n0\n0\n1\nRB\nx\n1\nx\n2\nR\n \nB\nx#\n1\nx#\n2\nR\n=\nB\n0\n-25\n1\n-4\nRB\nx\n1\nx\n2\nR\n+\nB\n1\n0\n1\n1\nRB\nu\n1\nu\n2\nR\n522\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nOpenmirrors.comExample Problems and Solutions 523\nFrequency (rad/sec)\nPhase (deg); Magnitude (dB)\nBode Diagrams\n100 101 102 100 101 102\nFrom: U1 From: U2\n−40\n−20\n0\n−100\n0\n100\n−100\n0\n100\n−200\n0\n200\nTo: Y1To: Y2\nFigure 7–119\nBode diagrams.\nA–7–3. Referring to Problem A–7–2, plot Bode diagrams for the system, using MATLAB.\nSolution. MATLAB Program 7–15 produces Bode diagrams for the system. There are four\nsets of Bode diagrams: two for input 1 and two for input 2. These Bode diagrams are shown in\nFigure 7–119.\nMATLAB Program 7–15\nA = [0  1;-25  -4];\nB = [1  1;0  1];\nC = [1  0;0  1];\nD = [0  0;0  0];\nbode(A,B,C,D)524\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nK\ns(s + 1) (s + 5)\n+ –\nR(s) C(s)\nFigure 7–120\nClosed-loop system.\nA–7–4. Using MATLAB, plot Bode diagrams for the closed-loop system shown in Figure 7–120 for K=1,\nK=10, and K=20. Plot three magnitude curves in one diagram and three phase-angle curves\nin another diagram.\nSolution. The closed-loop transfer function of the system is given by\nHence the numerator and denominator of C(s)/H20862R(s) are\nnum = [K]\nden = [1  6  5  K]\nA possible MATLAB program is shown in MATLAB Program 7–16.The resulting Bode diagrams\nare shown in Figures 7–121(a) and (b).\n = K\ns\n3\n+ 6s\n2\n+ 5s + K\n \nC(s)\nR(s) = K\ns(s + 1)(s + 5) + K\nMATLAB Program 7–16\nw = logspace(-1,2,200);\nfor i = 1:3;\nif i = 1; K = 1;[mag,phase,w] = bode([K],[1  6  5  K],w);\nmag1dB = 20*log10(mag); phase1 = phase; end;\nif i = 2; K = 10;[mag,phase,w] = bode([K],[1  6  5  K],w);\nmag2dB = 20*log10(mag); phase2 = phase; end;\nif i = 3; K = 20;[mag,phase,w] = bode([K],[1  6  5  K],w);\nmag3dB = 20*log10(mag); phase3 = phase; end;\nend\nsemilogx(w,mag1dB,'-',w,mag2dB,'-',w,mag3dB,'-')\ngrid\ntitle('Bode Diagrams of G(s) = K/[s(s + 1)(s + 5)], where K = 1, K = 10, and K = 20')\nxlabel('Frequency (rad/sec)')\nylabel('Gain (dB)')\ntext(1.2,-31,'K = 1')\ntext(1.1,-8,'K = 10')\ntext(11,-31,'K = 20')\nsemilogx(w,phase1,'-',w,phase2,'-',w,phase3,'-')\ngrid\nxlabel('Frequency (rad/sec)')\nylabel('Phase (deg)')\ntext(0.2,-90,'K = 1')\ntext(0.2,-20,'K =10')\ntext(1.6,-20,'K = 20')\nOpenmirrors.comExample Problems and Solutions 525\nFrequency (rad/sec)\nBode Diagrams of G(s) = K/[s(s + 1)(s + 5)], where K = 1, K = 10, and K = 20\n−140\nGain (dB)\n−120\n−100\n−80\n−60\n−40\n−20\n20\n0\n10−1 100 101 102\nK = 10\nK = 20K = 1\n(a)\nFrequency (rad/sec)\n−300\n−200\n−150\n−100\n−50\n−250\n0\nPhase (deg)\n10−1 100 101 102\nK = 10 K = 20\nK = 1\n(b)\nFigure 7–121\nBode diagrams:\n(a) Magnitude-\nversus-frequency\ncurves; (b) phase-\nangle-versus-\nfrequency curves.\nA–7–5. Prove that the polar plot of the sinusoidal transfer function\nis a semicircle. Find the center and radius of the circle.\nG(jv) = jvT\n1 + jvT ,  for 0 /H11349v /H11349q526\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nSolution. The given sinusoidal transfer function G(jv) can be written as follows:\nwhere\nThen\nHence, we see that the plot of G(jv) is a circle centered at (0.5,0) with radius equal to 0.5. The\nupper semicircle corresponds to 0 /H11349v /H11349q, and the lower semicircle corresponds to\n–q /H11349v /H113490.\nA–7–6. Prove the following mapping theorem: Let F(s) be a ratio of polynomials in s. Let P be the num-\nber of poles and Z be the number of zeros of F(s) that lie inside a closed contour in the s plane,\nwith multiplicity accounted for. Let the closed contour be such that it does not pass through any\npoles or zeros of F(s).The closed contour in the s plane then maps into the F(s) plane as a closed\ncurve. The number N of clockwise encirclements of the origin of the F(s) plane, as a representa-\ntive point s traces out the entire contour in the s plane in the clockwise direction, is equal to Z-P.\nSolution. To prove this theorem, we use Cauchy’s theorem and the residue theorem. Cauchy’s\ntheorem states that the integral of F(s) around a closed contour in the s plane is zero if F(s) is\nanalytic\n#\nwithin and on the closed contour, or\nSuppose that F(s) is given by\nwhere X(s) is analytic in the closed contour in the s plane and all the poles and zeros are located\nin the contour. Then the ratio F¿(s)/F(s) can be written\n(7–30)\nThis may be seen from the following consideration: If is given by\nthen has a zero of kth order at s=–z\n1\n. Differentiating F(s) with respect to s yields\nHence,\n(7–31)\nWe see that by taking the ratio , the kth-order zero of becomes a simple pole of\n.F\nˆ\n¿(s)/H20862F\nˆ\n(s)\nF\nˆ\n(s)F\nˆ\n¿(s)/H20862F\nˆ\n(s)\nF\nˆ\n¿(s)\nF\nˆ\n(s) = k\ns + z\n1\n+\nX¿(s)\nX(s)\nF\nˆ\n¿(s) = kAs + z\n1\nB\nk - 1\nX(s) + As + z\n1\nB\nk\nX¿(s)\nF\nˆ\n(s)\nF\nˆ\n(s) = As + z\n1\nB\nk\nX(s)\nF\nˆ\n(s)\nF¿(s)\nF(s) =\na\nk\n1\ns + z\n1\n+ k\n2\ns + z\n2\n+ p\nb\n-\na\nm\n1\ns + p\n1\n+ m\n2\ns + p\n2\n+ p\nb\n+\nX¿(s)\nX(s)\nF(s) =\nAs + z\n1\nB\nk\n1\nAs + z\n2\nB\nk\n2\np\nAs + p\n1\nB\nm\n1\nAs + p\n2\nB\nm\n2\np X(s)\nI\nF(s) ds = 0\na\nX - 1\n2\nb\n2\n+ Y\n2\n=\nAv\n2\n \nT\n2\n- 1B\n2\n4A1 + v\n2\n \nT\n2\nB\n2\n+ v\n2\n \nT\n2\nA1 + v\n2\n \nT\n2\nB\n2\n= 1\n4\nX = v\n2\n \nT\n2\n1 + v\n2\n \nT\n2\n,\n  \nY = vT\n1 + v\n2\n \nT\n2\nG(jv) = X + jY\n#\nFor the definition of an analytic function, see the footnote on page 447.\nOpenmirrors.comExample Problems and Solutions 527\nIf the last term on the right-hand side of Equation (7–31) does not contain any poles or zeros\nin the closed contour in the s plane,F¿(s)/F(s) is analytic in this contour except at point s=–z1 .\nThen, referring to Equation (7–30) and using the residue theorem, which states that the integral\nofF¿(s)/F(s) taken in the clockwise direction around a closed contour in the s plane is equal to\n–2pj times the residues at the simple poles of F¿(s)/F(s),o r\nwe have\nwhere total number of zeros of F(s) enclosed in the closed \ncontour in the s plane\ntotal number of poles of F(s) enclosed in the closed \ncontour in the s plane\n[The k multiple zeros (or poles) are considered k zeros (or poles) located at the same point.]\nSince F(s) is a complex quantity,F(s) can be written\nand\nNoting that F¿(s)/F(s) can be written\nwe obtain\nIf the closed contour in the s plane is mapped into the closed contour in the F(s) plane, then\nThe integral is zero since the magnitude is the same at the initial point and the final\npoint of the contour Thus we obtain\nThe angular difference between the final and initial values of u is equal to the total change in\nthe phase angle of F¿(s)/F(s) as a representative point in the s plane moves along the closed\ncontour. Noting that N is the number of clockwise encirclements of the origin of the F(s) plane\nand u2-u1 is zero or a multiple of 2 p rad, we obtain\nu2 - u1\n2p =- N\nu2 - u1\n2p = P - Z\nG.\nln ∑F∑DG d ln ∑F∑\nI\nF¿(s)\nF(s) ds =\nI\nG  d ln ∑F∑ + j\nI\nG du = j\n3\ndu = 2pj(P - Z)\nG\nF¿(s)\nF(s) =\nd ln ∑F∑\nds + j du\nds\nF¿(s)\nF(s) =\nd ln F(s)\nds\nln F(s) = ln ∑F∑ + ju\nF(s) = ∑F∑eju\n P = m1 + m2 + p =\nZ = k1 + k2 + p =\nI\nF¿(s)\nF(s) ds =- 2pjCAk1 + k2 + pB- Am1 + m2 + pBD =- 2pj(Z - P)\nI\nF¿(s)\nF(s) ds =- 2pj aa  residues b528\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\n0 Re\n(a)\nIm\nv = /H11009\n–1\nv = 0\nRe\nIm\n–1\nG Plane\nv = /H11009\nv = 0+\nv = 0–\n/H11009\n(b)\nFigure 7–123\n(a) Nyquist plot;\n(b) complete Nyquist\nplot in the G plane.\nThus, we have the relationship\nThis proves the theorem.\nNote that by this mapping theorem, the exact numbers of zeros and of poles cannot be found—\nonly their difference. Note also that, from Figures 7–122(a) and (b), we see that if u does not\nchange through 2p rad, then the origin of the F(s) plane cannot be encircled.\nA–7–7. The Nyquist plot (polar plot) of the open-loop frequency response of a unity-feedback control\nsystem is shown in Figure 7–123(a). Assuming that the Nyquist path in the s plane encloses the\nentire right-half s plane, draw a complete Nyquist plot in the G plane. Then answer the following\nquestions:\n(a) If the open-loop transfer function has no poles in the right-half s plane, is the closed-loop\nsystem stable?\n(b) If the open-loop transfer function has one pole and no zeros in right-half s plane, is the closed-\nloop system stable?\n(c) If the open-loop transfer function has one zero and no poles in the right-half s plane, is the\nclosed-loop system stable?\nN = Z - P\nRe\nIm\nu\n1\nu\n2\nu\n2\nOrigin encircled\nu\n2\n– u\n1\n= 2p\nOrigin not encircled\nu\n2\n– u\n1\n= 0\nF(s) PlaneF(s) Plane\n0\n(a) (b)\nRe\nIm\n0\nu\n1\nFigure 7–122\nDetermination of\nencirclement of the\norigin of F(s) plane.\nOpenmirrors.comExample Problems and Solutions 529\nSolution. Figure 7–123(b) shows a complete Nyquist plot in the G plane.The answers to the three\nquestions are as follows:\n(a) The closed-loop system is stable, because the critical point (–1+j0) is not encircled by the\nNyquist plot. That is, since P=0 and N=0, we have Z=N+P=0.\n(b) The open-loop transfer function has one pole in the right-half s plane. Hence, P=1.( T h e\nopen-loop system is unstable.) For the closed-loop system to be stable, the Nyquist plot must\nencircle the critical point (–1+j0) once counterclockwise. However, the Nyquist plot does\nnot encircle the critical point. Hence,N=0.Therefore,Z=N+P=1.The closed-loop sys-\ntem is unstable.\n(c) Since the open-loop transfer function has one zero, but no poles, in the right-half s plane, we\nhave Z=N+P=0. Thus, the closed-loop system is stable. (Note that the zeros of the\nopen-loop transfer function do not affect the stability of the closed-loop system.)\nA–7–8. Is a closed-loop system with the following open-loop transfer function and with K=2 stable?\nFind the critical value of the gain K for stability.\nSolution. The open-loop transfer function is\nThis open-loop transfer function has no poles in the right-half s plane. Thus, for stability, the\n–1+j0 point should not be encircled by the Nyquist plot. Let us find the point where the Nyquist\nplot crosses the negative real axis. Let the imaginary part of G(jv)H(jv) be zero, or\nfrom which\nSubstituting into G(jv)H(jv), we obtain\nThe critical value of the gain K is obtained by equating –2K/3 to –1,o r\nHence,\nThe system is stable if Hence, the system with K=2 is unstable.0 6 K 6 3\n2 .\nK = 3\n2\n- 2\n3 K =- 1\nG aj 1\n12 bH aj 1\n12 b =- 2K\n3\nv = 1/H2086212\nv =;  1\n12\n1 - 2v2 = 0\n = K\n-3v2 + jvA1 - 2v2B\n G(jv)H(jv) = K\njv(jv + 1)(2jv + 1)\nG(s)H(s) = K\ns(s + 1)(2s + 1)530\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nRe\nIm\nRe Re\nIm Im\n–1 –1\nG Plane\nG Plane G Plane\n(Stable) (Unstable)\n(a)\n(b)\nv = /H11009\nv = /H11009 v = /H11009\nv =– /H11009\nv =– /H11009v =– /H11009\nv = 0\nv = 0\nv = 0\nP = 1\nN =– 1\nZ = 0\nP = 1\nN = 0\nK /H11021 1K /H11022 1\nZ = 1\nK\n2\nK\n2\n–\nFigure 7–125\n(a) Polar plot of\nK/(jv-1);\n(b) polar plots of\nK/(jv-1) for\nstable and unstable\ncases.\nA–7–9. Consider the closed-loop system shown in Figure 7–124. Determine the critical value of K for\nstability by the use of the Nyquist stability criterion.\nSolution. The polar plot of\nis a circle with center at –K/2 on the negative real axis and radius K/2 , as shown in Figure\n7–125(a). As v is increased from –q to q, the G(jv) locus makes a counterclockwise rotation.\nIn this system, P=1 because there is one pole of G(s) in the right-half s plane. For the closed-\nloop system to be stable,Z must be equal to zero.Therefore,N=Z-P must be equal to –1,o r\nthere must be one counterclockwise encirclement of the –1+j0 point for stability. (If there is no\nencirclement of the –1+j0 point, the system is unstable.) Thus, for stability,K must be greater\nthan unity, and K=1 gives the stability limit. Figure 7–125(b) shows both stable and unstable cases\nof G(jv) plots.\nG(jv) = K\njv - 1\nR(s) C(s)K\ns – 1\n+ –\nFigure 7–124\nClosed-loop system.\nOpenmirrors.comExample Problems and Solutions 531\nRe\nIm\n4\n3\nv = 2.45\nv = 2\nv = 1.5\n–1\n–2\n–1\n1\n123\nv = 1\nv = 06\n89\n10\nv = 0.5\n2.65\n1 + jv\n2.65 e–0.8jv\n1 + jv\nFigure 7–126\nPolar plots of\nand 2.65/(1+jv).\n2.65e-0.8jv/H20862(1 + jv)\nA–7–10. Consider a unity-feedback system whose open-loop transfer function is\nUsing the Nyquist plot, determine the critical value of K for stability.\nSolution. For this system,\nThe imaginary part of G(jv) is equal to zero if\nHence,\nSolving this equation for the smallest positive value of v, we obtain\nSubstituting v=2.4482 into G(jv), we obtain\nThe critical value of K for stability is obtained by letting G(j2.4482) equal –1. Hence,\nor\nFigure 7–126 shows the Nyquist or polar plots of 2.65e–0.8jv/(1+jv) and 2.65/(1+jv).The first-\norder system without transport lag is stable for all values of K, but the one with a transport lag of\n0.8 sec becomes unstable for K>2.65.\nK = 2.65\n0.378K = 1\nG(j2.4482) = K\n1 + 2.44822 (cos 1.9586 - 2.4482 sin 1.9586) =- 0.378K\nv = 2.4482\nv =- tan 0.8v\nsin 0.8v + v cos 0.8v = 0\n = K\n1 + v2 C(cos 0.8v - v sin 0.8v) - j(sin 0.8v + v cos 0.8v)D\n =\nK(cos 0.8v - j sin 0.8v)(1 - jv)\n1 + v2\n G(jv) = Ke-0.8jv\njv + 1\nG(s) = Ke-0.8s\ns + 1532\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nA–7–11. Consider a unity-feedback system with the following open-loop transfer function:\nDraw a Nyquist plot with MATLAB and examine the stability of the closed-loop system.\nSolution. MATLAB Program 7–17 produces the Nyquist diagram shown in Figure 7–127. From\nthis figure, we see that the Nyquist plot does not encircle the –1+j0 point. Hence,N=0 in the\nNyquist stability criterion. Since no open-loop poles lie in the right-half s plane,P=0. Therefore,\nZ=N+P=0. The closed-loop system is stable.\nG(s) =\n20As\n2\n+ s + 0.5B\ns(s + 1)(s + 10)\nA–7–12. Consider the same system as discussed in Problem A–7–11. Draw the Nyquist plot for only the\npositive-frequency region.\nSolution. Drawing a Nyquist plot for only the positive-frequency region can be done by the use\nof the following command:\n[re,im,w] = nyquist(num,den,w)\nThe frequency region may be divided into several subregions by using different increments. For\nexample, the frequency region of interest may be divided into three subregions as follows:\nw1 = 0.1:0.1:10;\nw2 = 10:2:100;\nw3 = 100:10:500;\nw = [w1  w2  w3]\nMATLAB Program 7–17\nnum = [20  20  10];\nden = [1  11  10  0];\nnyquist(num,den)\nv = [-2  3  -3  3]; axis(v)\ngrid\nReal Axis\n−1 −0.5−1.5−23 1 1.50.5 2 2.50\nImaginary Axis\n−3\n3\n2\n1\n−2\n−1\n0\nNyquist Diagram\nFigure 7–127\nNyquist plot of\nG(s) =\n20As\n2\n+ s + 0.5B\ns(s + 1)(s + 10) .\nOpenmirrors.comExample Problems and Solutions 533\nReal Axis\n–3 3210–1–2\nImag Axis\n–3\n–5\n1\n–1\n–4\n–2\n0\nNyquist Plot of G(s) = 20(s2+s+0.5)/[s(s+1)(s+10)]\nFigure 7–128\nNyquist plot for the\npositive-frequency\nregion.\nMATLAB Program 7–18\nnum = [20  20  10];\nden = [1  11  10  0];\nw1 = 0.1:0.1:10; w2 = 10:2:100; w3 = 100:10:500;\nw = [w1  w2  w3];\n[re,im,w] = nyquist(num,den,w);\nplot(re,im)\nv = [-3  3  -5  1]; axis(v);\ngrid\ntitle('Nyquist Plot of G(s) = 20(s^2 + s + 0.5)/[s(s + 1)(s + 10)]')\nxlabel('Real Axis')\nylabel('Imag Axis')\nA–7–13. Referring to Problem A–7–12, plot the polar locus of G(s) where\nLocate on the polar locus frequency points where v= 0.2, 0.3, 0.5, 1, 2, 6, 10, and 20 rad /H20862sec.\nAlso, find the magnitudes and phase angles of G(jv) at the specified frequency points.\nSolution. In MATLAB Program 7–19 we used the frequency vector w, which consists of\nthree frequency subvectors: w1, w2, and w3. Instead of such a w, we may simply use the\nG(s) =\n20As2 + s + 0.5B\ns(s + 1)(s + 10)\nMATLAB Program 7–18 uses this frequency region. Using this program, we obtain the Nyquist\nplot shown in Figure 7–128.534\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nMATLAB Program 7–19\nnum = [20  20  10];\nden = [1  11  10  0];\nww = logspace(-1,2,100);\nnyquist(num,den,ww)\nv = [-2  3  -5  0]; axis(v);\ngrid\nhold\nCurrent plot held\nw = [0.2  0.3  0.5  1  2  6  10  20];\n[re,im,w] = nyquist(num,den,w);\nplot(re,im,'o')\ntext(1.1,-4.8,'w = 0.2')\ntext(1.1,-3.1,'0.3')\ntext(1.25,-1.7,'0.5')\ntext(1.37,-0.4,'1')\ntext(1.8,-0.3,'2')\ntext(1.4,-1.1,'6')\ntext(0.77,-0.8,'10')\ntext(0.037,-0.8,'20')\n% ----- To get the values of magnitude and phase (in degrees) of G(jw)\n% at the specified w values, enter the command [mag,phase,w]\n% = bode(num,den,w) ------\n[mag,phase,w] = bode(num,den,w);\n% ----- The following table shows the specified frequency values w and\n% the corresponding values of magnitude and phase (in degrees) -----\n[w  mag  phase]\nans =\n0.2000  4.9176  -78.9571\n0.3000  3.2426  -72.2244\n0.5000  1.9975  -55.9925\n1.0000  1.5733  -24.1455\n2.0000  1.7678  -14.4898\n6.0000  1.6918  -31.0946\n10.0000  1.4072  -45.0285\n20.0000  0.8933  -63.4385\nfrequency vector w = logscale(d\n1\n,d\n2\n,n ). MATLAB Program 7–19 uses the following fre-\nquency vector:\nw = logscale(-1,2,100)\nThis MATLAB program plots the polar locus and locates the specified frequency points on the\npolar locus, as shown in Figure 7–129.\nOpenmirrors.comExample Problems and Solutions 535\nMATLAB Program 7–20\nnum = [-1  -4  -6];\nden = [1  5  4];\nnyquist(num,den);\ngrid\ntitle('Nyquist Plot of G(s) = -(s^2 + 4s + 6)/(s^2 + 5s + 4)')\nA–7–14. Consider a unity-feedback, positive-feedback system with the following open-loop transfer\nfunction:\nDraw a Nyquist plot.\nSolution. The Nyquist plot of the positive-feedback system can be obtained by defining num and\nden as\nnum = [-1  -4  -6]\nden = [1  5  4]\nand using the command nyquist(num,den). MATLAB Program 7–20 produces the Nyquist plot,\nas shown in Figure 7–130.\nThis system is unstable, because the –1+j0 point is encircled once clockwise. Note that this\nis a special case where the Nyquist plot passes through –1+j0 point and also encircles this point\nonce clockwise. This means that the closed-loop system is degenerate; the system behaves as if it\nwere an unstable first-order system. See the following closed-loop transfer function of the positive-\nfeedback system:\n = s2 + 4s + 6\ns - 2\n \nC(s)\nR(s) = s2 + 4s + 6\ns2 + 5s + 4 - As2 + 4s + 6B\nG(s) = s2 + 4s + 6\ns2 + 5s + 4\nReal Axis\n−1 −0.5−1.5−23 1 1.50.5 2 2.50\nImaginary Axis\n−5\n0\n−0.5\n−1\n−2.5\n−3\n−3.5\n−4\n−4.5\n−2\n−1.5\nNyquist Diagram\nw = 0.2\n0.3\n0.5\n6\n21\n1020\nFigure 7–129\nPolar plot of G(jv)\ngiven in Problem\nA–7–13.536\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nNote that the Nyquist plot for the positive-feedback case is a mirror image about the imaginary\naxis of the Nyquist plot for the negative-feedback case.This may be seen from Figure 7–131, which\nwas obtained by use of MATLAB Program 7–21. (Note that the positive-feedback case is unsta-\nble, but the negative-feedback case is stable.)\nMATLAB Program 7–21\nnum1 = [1  4  6];\nden1 = [1  5  4];\nnum2 = [-1  -4  -6];\nden2 = [1  5  4];\nnyquist(num1,den1);\nhold on\nnyquist(num2,den2);\nv = [-2  2  -1  1];\naxis(v);\ngrid\ntitle('Nyquist Plots of G(s) and -G(s)')\ntext(1.0,0.5,'G(s)')\ntext(0.57,-0.48,'Use this Nyquist')\ntext(0.57,-0.61,'plot for negative')\ntext(0.57,-0.73,'feedback system')\ntext(-1.3,0.5,'-G(s)')\ntext(-1.7,-0.48,'Use this Nyquist')\ntext(-1.7,-0.61,'plot for positive')\ntext(-1.7,-0.73,'feedback system')\nReal Axis\n–1.4\n–1.5 –0.9\n–0.7–1\n–0.8\n–1.2\n–1.3\n–1.1\nImag Axis\n–0.2\n0.1\n–0.5\n0.5\n–0.1\n0.2\n–0.3\n–0.4\n0\n0.3\n0.4\nNyquist Plot of G(s) = –(s\n2\n+4s+6)/(s\n2\n+5s+4)\nFigure 7–130\nNyquist plot for\npositive-feedback\nsystem.\nOpenmirrors.comExample Problems and Solutions 537\nReal Axis\n–1.5–2 1 20.5 1.5–0.5–1 0\nImag Axis\n–0.4\n0.2\n–1\n1\n–0.2\n0.4\n–0.6\n–0.8\n0\n0.6\n0.8\nNyquist Plots of G(s) and –G(s)\n–G(s) G(s)\nUse this Nyquist\nplot for positive\nfeedback system\nUse this Nyquist\nplot for negative\nfeedback systemFigure 7–131\nNyquist plots for\npositive-feedback\nsystem and negative-\nfeedback system.\nA–7–15. Consider the control system shown in Figure 7–60. (Refer to Example 7–19.) Using the inverse\npolar plot, determine the range of gain K for stability.\nSolution. Since\nwe have\nHence, the inverse of the feedforward transfer function is\nNotice that 1/G(s) has a pole at s=–0.5. It does not have any pole in the right-half s plane.\nTherefore, the Nyquist stability equation\nreduces to Z=N since P=0. The reduced equation states that the number Z of the zeros of\n1+C1/G(s)Din the right-half s plane is equal to N, the number of clockwise encirclements of\nthe –1+j0 point. For stability,N must be equal to zero, or there should be no encirclement. Fig-\nure 7–132 shows the Nyquist plot or polar plot of K/G(jv).\nNotice that since\n =\n0.5 - 0.5v2 - v4 + jvA-1 + 0.5v2B\n0.25 + v2\n K\nG(jv) = c\n(jv)3 + (jv)2 + 1\njv + 0.5 da0.5 - jv\n0.5 - jvb\nZ = N + P\n1\nG(s) = s3 + s2 + 1\nK(s + 0.5)\nG(s) = G1(s)G2(s) =\nK(s + 0.5)\ns3 + s2 + 1\nG2(s) = 1\ns3 + s2 + 1538\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nFigure 7–132\nPolar plot of\nK/G(jv).\nthe K/G(jv) locus crosses the negative real axis at and the crossing point at the nega-\ntive real axis is –2.\nFrom Figure 7–132, we see that if the critical point lies in the region between –2 and –q, then\nthe critical point is not encircled. Hence, for stability, we require\nThus, the range of gain K for stability is\n2<K\nwhich is the same result as we obtained in Example 7–19.\nA–7–16. Figure 7–133 shows a block diagram of a space-vehicle control system. Determine the gain K such\nthat the phase margin is 50°. What is the gain margin in this case?\nSolution. Since\nwe have\nThe requirement that the phase margin be 50° means that must be equal to –130°, where\nv\nc\nis the gain crossover frequency, or\n/\nGAjv\nc\nB\n=- 130°\n/\nGAjv\nc\nB\n/\nG(jv)\n=\n/\njv + 2\n- 2\n/\njv\n= tan\n-1\nv\n2 - 180°\nG(jv) =\nK(jv + 2)\n(jv)\n2\n-1 6 -2\nK\nv = 12\n,\nIm\nRe\nK\nG\nPlaneK\nG\nLocus\n/H11009\n/H11009\n– /H11009\n–20 2\nv = 0v =     2\nv\nv\nOpenmirrors.comExample Problems and Solutions 539\nHence, we set\nfrom which we obtain\nSince the phase curve never crosses the –180° line, the gain margin is ±q dB. Noting that the\nmagnitude of G(jv) must be equal to 0 dB at v=2.3835, we have\nfrom which we get\nThis K value will give the phase margin of 50°.\nA–7–17. For the standard second-order system\nshow that the bandwidth vb is given by\nNote that vb/vn is a function only of z. Plot a curve of vb/vn versus z.\nSolution. The bandwidth vb is determined from @CAjvb B/RAjvb B@=–3 dB. Quite often, instead of\n–3 dB, we use –3.01 dB, which is equal to 0.707. Thus,\nThen\nfrom which we get\nv4\nn = 0.5CAv2\nn - v2\nbB\n2\n+ 4z2v2\nn v2\nbD\nv2\nn\n3Av2\nn - v2\nbB\n2\n+ A2zvn vbB\n2\n= 0.707\n2CAjvbB\nRAjvbB\n2= 2 v2\nn\nAjvbB\n2\n+ 2zvnAjvbB+ v2\nn\n2= 0.707\nvb = vnA1 - 2z2 + 24z4 - 4z2 + 2B\n1/H208622\nC(s)\nR(s) = v2\nn\ns2 + 2zvn s + v2\nn\nK = 2.38352\n222 + 2.38352\n= 1.8259\n2K(jv + 2)\n(jv)2\n2\nv= 2.3835\n= 1\nvc = 2.3835 rad/H20862sec\ntan-1 vc\n2 = 50°\nG(s)\nK(s + 2) 1\ns2+ –\nFigure 7–133\nSpace-vehicle control\nsystem.540\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\n2.0\n1.8\n1.6\n1.4\n1.2\n1.0\n0.8\n0.6\n0.4\n0.2\n0\n0 0.2 0.4 0.6 0.8 1.0\nz\nv\nb\nv\nn\nFigure 7–134\nCurve of v\nb\n/v\nn\nversus z, where v\nb\nis\nthe bandwidth.\nBy dividing both sides of this last equation by v\n4\nn\n, we obtain\nSolving this last equation for Av\nb\n/v\nn\nB\n2\nyields\nSince Av\nb\n/v\nn\nB\n2\n>0, we take the plus sign in this last equation. Then\nor\nFigure 7–134 shows a curve relating v\nb\n/v\nn\nversus z.\nA–7–18. A Bode diagram of the open-loop transfer function G(s) of a unity-feedback control system is\nshown in Figure 7–135. It is known that the open-loop transfer function is minimum phase. From\nthe diagram, it can be seen that there is a pair of complex-conjugate poles at v=2 rad/H20862sec.\nDetermine the damping ratio of the quadratic term involving these complex-conjugate poles.\nAlso, determine the transfer function G(s).\nSolution. Referring to Figure 7–9 and examining the Bode diagram of Figure 7–135, we find the\ndamping ratio z and undamped natural frequency v\nn\nof the quadratic term to be\nz = 0.1,\n  \nv\nn\n= 2 rad/H20862sec\nv\nb\n= v\nn\nA1 - 2z\n2\n+ 24z\n4\n- 4z\n2\n+ 2\nB\n1/H208622\nv\n2\nb\n= v\n2\nn\nA1 - 2z\n2\n+ 24z\n4\n- 4z\n2\n+ 2\nB\na\nv\nb\nv\nn\nb\n2\n=- 2z\n2\n+ 1 ; 24z\n4\n- 4z\n2\n+ 2\n1 = 0.5\ne\nc\n1 -\na\nv\nb\nv\nn\nb\n2\nd\n2\n+ 4z\n2\na\nv\nb\nv\nn\nb\n2\nf\nOpenmirrors.comExample Problems and Solutions 541\n40\n20\n–20\ndB\n0\n–40\n–60\n–80\n0.1 0.2 0.4 0.6 1 4 2 6 10 20 60 40 100\n–270°\n–180°\n–90°\n0°\nv in rad/sec\nFigure 7–135\nBode diagram of the\nopen-loop transfer\nfunction of a unity-\nfeedback control\nsystem.\nNoting that there is another corner frequency at v=0.5 rad/H20862sec and the slope of the magnitude\ncurve in the low-frequency region is –40 dB/H20862decade, G(jv) can be tentatively determined as\nfollows:\nSince, from Figure 7–135 we find @G(j0.1)@=40 dB, the gain value K can be determined to be\nunity.Also, the calculated phase curve, versus v, agrees with the given phase curve. Hence,\nthe transfer function G(s) can be determined to be\nA–7–19. A closed-loop control system may include an unstable element within the loop.When the Nyquist\nstability criterion is to be applied to such a system, the frequency-response curves for the unsta-\nble element must be obtained.\nHow can we obtain experimentally the frequency-response curves for such an unstable ele-\nment? Suggest a possible approach to the experimental determination of the frequency response\nof an unstable linear element.\nSolution. One possible approach is to measure the frequency-response characteristics of the un-\nstable element by using it as a part of a stable system.\nG(s) =\n4(2s + 1)\ns2As2 + 0.4s + 4B\n/G(jv)\nG(jv) =\nK ajv\n0.5 + 1 b\n(jv)2 cajv\n2 b\n2\n+ 0.1(jv) + 1 d542\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nConsider the system shown in Figure 7–136. Suppose that the element G\n1\n(s) is unstable. The\ncomplete system may be made stable by choosing a suitable linear element G\n2\n(s). We apply a si-\nnusoidal signal at the input. At steady state, all signals in the loop will be sinusoidal. We measure\nthe signals e(t), the input to the unstable element, and x(t), the output of the unstable element.\nBy changing the frequency [and possibly the amplitude for the convenience of measuring e(t)\nand x(t)] of the input sinusoid and repeating this process, it is possible to obtain the frequency re-\nsponse of the unstable linear element.\nA–7–20. Show that the lead network and lag network inserted in cascade in an open loop act as\nproportional-plus-derivative control (in the region of small v) and proportional-plus-integral\ncontrol (in the region of large v), respectively.\nSolution. In the region of small v, the polar plot of the lead network is approximately the same\nas that of the proportional-plus-derivative controller. This is shown in Figure 7–137(a).\nSimilarly, in the region of large v, the polar plot of the lag network approximates the\nproportional-plus-integral controller, as shown in Figure 7–137(b).\nA–7–21. Consider a lag–lead compensator G\nc\n(s) defined by\nShow that at frequency v\n1\n, where\nthe phase angle of G\nc\n(jv) becomes zero. (This compensator acts as a lag compensator for\n0<v<v\n1\nand acts as a lead compensator for v\n1\n<v<q.) (Refer to Figure 7–109.)\nv\n1\n= 1\n1T\n1\n \nT\n2\nG\nc\n(s) = K\nc\na\ns + 1\nT\n1\nba\ns + 1\nT\n2\nb\na\ns + b\nT\n1\nba\ns + 1\nbT\n2\nb\nG\n1\n(s) G\n2\n(s)\nre x c\n+ –\nFigure 7–136\nControl system.\nIm Im\nRe0\nPD controller\nLead network\na\nv = 0 v = ` v = `v  = 0\n(a) (b)\nPI controller\n1\nRe0\n1\nLag network\n1\nb\nFigure 7–137\n(a) Polar plots of a\nlead network and a\nproportional-plus-\nderivative controller;\n(b) polar plots of a\nlag network and a\nproportional-plus-\nintegral controller.\nOpenmirrors.comExample Problems and Solutions 543\nSolution. The angle of Gc (jv) is given by\nAt we have\nSince\nor\nand also\nwe have\nThus, the angle of Gc Ajv1 Bbecomes 0° at \nA–7–22. Consider the control system shown in Figure 7–138. Determine the value of gain K such that the\nphase margin is 60°. What is the gain margin with this value of gain K?\nSolution. The open-loop transfer function is\n =\nK(10s + 1)\ns3 + 1.5s2 + 0.5s\n G(s) = K s + 0.1\ns + 0.5 10\ns(s + 1)\nv = v1 = 1/H208621T1 T2 .\n/GcAjv1B= 0°\ntan-1 1\nb B\nT1\nT2\n+ tan-1 bB\nT2\nT1\n= 90°\ntan-1\nB\nT1\nT2\n+ tan-1\nB\nT2\nT1\n= 90°\ntan atan-1\nB\nT1\nT2\n+ tan-1\nB\nT2\nT1\nb = B\nT1\nT2\n+ B\nT2\nT1\n1 - B\nT1\nT2 B\nT2\nT1\n=q\n/GcAjv1B = tan-1\nB\nT1\nT2\n+ tan-1\nB\nT2\nT1\n- tan-1 1\nb B\nT1\nT2\n- tan-1bB\nT2\nT1\nv = v1 = 1/H208621T1 T2 ,\n = tan-1 vT1 + tan-1 vT2 - tan-1 vT1/H20862b - tan-1 vT2 b\n /Gc(jv) = njv + 1\nT1\n+ njv + 1\nT2\n- njv + b\nT1\n- njv + 1\nbT2\nK s + 0.1\ns + 0.5\n10\ns(s + 1)+ –\nFigure 7–138\nControl system.544\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nMATLAB Program 7–22\nnum = [10  1];\nden = [1  1.5  0.5  0];\nbode(num,den)\ntitle('Bode Diagram of G(s) = (10s + 1)/[s(s + 0.5)(s + 1)]')\nLet us plot the Bode diagram of G(s) when K=1. MATLAB Program 7–22 may be used for this\npurpose. Figure 7–139 shows the Bode diagram produced by this program. From this diagram the\nrequired phase margin of 60° occurs at the frequency v=1.15 rad/H20862sec. The magnitude of G(jv)\nat this frequency is found to be 14.5 dB. Then gain K must satisfy the following equation:\nor\nK = 0.188\n20 log K =- 14.5 dB\nFrequency (rad/sec)\nBode Diagram of G(s) = (10s + 1)/[s(s + 0.5)(s + 1)]\n−200\n−150\n−50\n−100\n−50\nPhase (deg); Magnitude (dB)\n0\n100\n50\n10\n−3\n10\n−2\n10\n−1\n10\n0\n10\n1\nFigure 7–139\nBode diagram of\nG(s) = 10s + 1\ns(s + 0.5)(s + 1) .\nThus, we have determined the value of gain K. Since the angle curve does not cross the –180° line,\nthe gain margin is ±q dB.\nTo verify the results, let us draw a Nyquist plot of G for the frequency range\nw = 0.5:0.01:1.15\nThe end point of the locus (v=1.15 rad/H20862sec) will be on a unit circle in the Nyquist plane.To check\nthe phase margin, it is convenient to draw the Nyquist plot on a polar diagram, using polar grids.\nTo draw the Nyquist plot on a polar diagram, first define a complex vector z by\nz = re + i*im = re\niu\nwhere r and u (theta) are given by\nr = abs(z)\ntheta = angle(z)\nThe abs means the square root of the sum of the real part squared and imaginary part squared;\nangle means tan\n–1\n(imaginary part/real part).\nOpenmirrors.comExample Problems and Solutions 545\nIf we use the command\npolar(theta,r)\nMATLAB will produce a plot in the polar coordinates. Subsequent use of the grid command\ndraws polar grid lines and grid circles.\nMATLAB Program 7–23 produces the Nyquist plot of G(jv), where v is between 0.5 and\n1.15 rad/H20862sec.The resulting plot is shown in Figure 7–140. Notice that point G(j1.15) lies on the unit\nMATLAB Program 7–23\n%*****Nyquist plot in rectangular coordinates*****\nnum = [1.88  0.188];\nden = [1  1.5  0.5  0];\nw = 0.5:0.01:1.15;\n[re,im,w] = nyquist(num,den,w);\n%*****Convert rectangular coordinates into polar coordinates\n% by defining z, r, theta as follows*****\nz = re + i*im;\nr = abs(z);\ntheta = angle(z);\n%*****To draw polar plot, enter command 'polar(theta,r)'*****\npolar(theta,r)\ntext(-1,3,'Check of Phase Margin')\ntext(0.3,-1.7,'Nyquist plot')\ntext(-2.2,-0.75,'Phase margin')\ntext(-2.2,-1.1,'is 60 degrees')\ntext(1.45,-0.7,'Unit circle')\nNyquist plot\nPhase margin\nis 60 degrees\nUnit circle\n270\n240\n210\n180\n150\n120\n90\n60\n30\n0\n300\n330\n2\n1\n0.5\nCheck of Phase Margin\n2.5\n1.5\nFigure 7–140\nNyquist plot of \nG(jv) showing that \nthe phase margin is 60°.circle, and the phase angle of this point is –120°. Hence, the phase margin is 60°. The fact that\npoint G(j1.15) is on the unit circle verifies that at v=1.15 rad/H20862sec the magnitude is equal to 1\nor 0 dB. (Thus,v=1.15 is the gain crossover frequency.) Thus,K=0.188 gives the desired phase\nmargin of 60°.\nNote that in writing ‘text’ in the polar diagram we enter the text command as follows:\ntext(x,y,' ')\nFor example, to write ‘Nyquist plot’ starting at point (0.3, –1.7), enter the command\ntext(0.3, –1.7,'Nyquist plot')\nThe text is written horizontally on the screen.\nA–7–23. If the open-loop transfer function G(s) involves lightly damped complex-conjugant poles, then\nmore than one M locus may be tangent to the G(jv) locus.\nConsider the unity-feedback system whose open-loop transfer function is\n(7–32)\nDraw the Bode diagram for this open-loop transfer function. Draw also the log-magnitude-versus-\nphase plot, and show that two M loci are tangent to the G(jv) locus. Finally, plot the Bode diagram\nfor the closed-loop transfer function.\nSolution. Figure 7–141 shows the Bode diagram of G(jv). Figure 7–142 shows the log-magni-\ntude-versus-phase plot of G(jv). It is seen that the G(jv) locus is tangent to the M=8-dB locus\nat v=0.97 rad/H20862sec, and it is tangent to the M=–4-dB locus at v=2.8 rad/H20862sec.\nG(s) = 9\ns(s + 0.5)As\n2\n+ 0.6s + 10B\n546\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\n40\n20\n0\ndB\n–20\n–40\n0/H11034\n–90/H11034\n–180/H11034\n–270/H11034\n–360/H11034\n0.1 0.2 0.4 1 2 4 10\nv in rad/sec\nFigure 7–141\nBode diagram of\nG(s) given by\nEquation (7–32).\nOpenmirrors.comExample Problems and Solutions 547\nFigure 7–143 shows the Bode diagram of the closed-loop transfer function. The magnitude\ncurve of the closed-loop frequency response shows two resonant peaks. Note that such a case\noccurs when the closed-loop transfer function involves the product of two lightly damped second-\norder terms and the two corresponding resonant frequencies are sufficiently separated from each\nother. As a matter of fact, the closed-loop transfer function of this system can be written\n = 9\nAs2 + 0.487s + 1BAs2 + 0.613s + 9B\n \nC(s)\nR(s) =\nG(s)\n1 + G(s)\n30\n24\n18\n12\n6\n0\n–18\n–12\n–6\n–360/H11034 –270/H11034 –180/H11034 –90/H11034\nM = 0.5 dB\nM =– 2 dB\nM = 8 dB\nM = 2 dB\nM =– 4 dB\n0.1\n0.3\n0.5\n1\n1.522.5\n3\n3.5\nG\nG in dB\nFigure 7–142\nLog-magnitude-\nversus-phase plot of\nG(s) given by\nEquation (7–32).\n20\n0\n–20\n–40\n0°\n–90°\n–180°\n–270°\n–360°\n0.1 0.2 0.4 0.6 1 2 4 6 10\nv in rad/sec\ndB\nFigure 7–143\nBode diagram of\nwhere G(s) is given\nby Equation (7–32).\nG(s)/H20862C1 + G(s)D,Clearly, the denominator of the closed-loop transfer function is a product of two lightly damped\nsecond-order terms (the damping ratios are 0.243 and 0.102), and the two resonant frequencies are\nsufficiently separated.\nA–7–24. Consider the system shown in Figure 7–144(a). Design a compensator such that the closed-loop\nsystem will satisfy the requirements that the static velocity error constant =20 sec\n–1\n, phase\nmargin=50°, and gain margin G 10 dB.\nSolution. To satisfy the requirements, we shall try a lead compensator G\nc\n(s) of the form\n(If the lead compensator does not work, then we need to employ a compensator of different\nform.) The compensated system is shown in Figure 7–144(b).\nDefine\nwhere K=K\nc\na. The first step in the design is to adjust the gain K to meet the steady-state per-\nformance specification or to provide the required static velocity error constant. Since the static ve-\nlocity error constant K\nv\nis given as 20 sec\n–1\n, we have\nor\nK=2\nWith K=2, the compensated system will satisfy the steady-state requirement.\nWe shall next plot the Bode diagram of\nG\n1\n(s) = 20\ns(s + 1)\n = 10K = 20\n = lim\ns S 0\n s10K\ns(s + 1)\n = lim\ns S 0\ns Ts + 1\naTs + 1 G\n1\n(s)\n K\nv\n= lim\ns S 0\nsG\nc\n(s)G(s)\nG\n1\n(s) = KG(s) = 10K\ns(s + 1)\n = K\nc\ns + 1\nT\ns + 1\naT\n G\nc\n(s) = K\nc\n \na Ts + 1\naTs + 1\n548\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nG\nc\n(s)\nG(s)G(s)\n10\ns(s + 1)\n(b)\n10\ns(s + 1)\n(a)\n+ –\n+ –\nFigure 7–144\n(a) Control system;\n(b) compensated\nsystem.\nOpenmirrors.comExample Problems and Solutions 549\nMATLAB Program 7–24 produces the Bode diagram shown in Figure 7–145. From this plot, the\nphase margin is found to be 14°. The gain margin is ±q dB.\nFrequency (rad/sec)\nBode Diagram of G1(s) = 20/[s(s + 1)]\n−200\n−100\n−150\n−50\n−100\nPhase (deg); Magnitude (dB)\n50\n−50\n0\n10−1 100 101 102\nFigure 7–145\nBode diagram of\nG1(s).\nMATLAB Program 7–24\nnum = [20];\nden = [1  1  0];\nw = logspace(-1,2,100);\nbode(num,den,w)\ntitle('Bode Diagram of G1(s) = 20/[s(s + 1)]')\nSince the specification calls for a phase margin of 50°, the additional phase lead necessary to\nsatisfy the phase-margin requirement is 36°. A lead compensator can contribute this amount.\nNoting that the addition of a lead compensator modifies the magnitude curve in the Bode di-\nagram, we realize that the gain crossover frequency will be shifted to the right.We must offset the\nincreased phase lag of G1(jv) due to this increase in the gain crossover frequency.Taking the shift\nof the gain crossover frequency into consideration, we may assume that fm , the maximum phase\nlead required, is approximately 41°. (This means that approximately 5° has been added to com-\npensate for the shift in the gain crossover frequency.) Since\nfm=41° corresponds to a=0.2077. Note that a=0.21 corresponds to fm=40.76°. Whether\nwe choose fm=41° or fm=40.76° does not make much difference in the final solution. Hence,\nlet us choose a=0.21.\nsin fm = 1 - a\n1 + aOnce the attenuation factor a has been determined on the basis of the required phase-lead\nangle, the next step is to determine the corner frequencies v=1/T and v=1/(aT) of the lead\ncompensator. Notice that the maximum phase-lead angle f\nm\noccurs at the geometric mean of the\ntwo corner frequencies, or \nThe amount of the modification in the magnitude curve at due to the inclusion\nof the term (Ts+1)/(aTs+1) is\nNote that\nWe need to find the frequency point where, when the lead compensator is added, the total mag-\nnitude becomes 0 dB.\nFrom Figure 7–145 we see that the frequency point where the magnitude of G\n1\n(jv) is\n–6.7778 dB occurs between v=1 and 10 rad /H20862sec. Hence, we plot a new Bode diagram of\nG\n1\n(jv) in the frequency range between v=1 and 10 to locate the exact point where\nG\n1\n(jv)=–6.7778 dB. MATLAB Program 7–25 produces the Bode diagram in this frequency\nrange, which is shown in Figure 7–146. From this diagram, we find the frequency point where\noccurs at v=6.5686 rad/H20862sec. Let us select this frequency to be the new\ngain crossover frequency, or v\nc\n=6.5686 rad/H20862sec. Noting that this frequency corresponds to\nor\nwe obtain\nand\n1\naT = v\nc\n1a\n= 6.5686\n10.21\n= 14.3339\n1\nT = v\nc\n1a\n= 6.568610.21\n= 3.0101\nv\nc\n= 1\n1a\nT\n1/H20862A1a\nTB,\n@G\n1\n(jv)@ =- 6.7778 dB\n1\n1a\n= 1\n10.21\n= 6.7778 dB\n2\n1 + jvT\n1 + jvaT\n2\nv= 1\n1a\nT\n=\n4\n1 + j 1\n1a\n1 + ja 1\n1a\n4\n= 1\n1a\nv = 1/H20862A1a\nTB\nv = 1/H20862A1a\nTB.\n550\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nMATLAB Program 7–25\nnum = [20];\nden = [1  1  0];\nw = logspace(0,1,100);\nbode(num,den,w)\ntitle('Bode Diagram of G1(s) = 20/[s(s + 1)]')\nOpenmirrors.comExample Problems and Solutions 551\nThe lead compensator thus determined is\nwhere Kc is determined as\nThus, the transfer function of the compensator becomes\nMATLAB Program 7–26 produces the Bode diagram of this lead compensator, which is shown\nin Figure 7–147.\nGc(s) = 9.5238 s + 3.0101\ns + 14.3339 = 2 0.3322s + 1\n0.06976s + 1\nKc = K\na = 2\n0.21 = 9.5238\nGc(s) = Kc\ns + 3.0101\ns + 14.3339 = Kc a 0.3322s + 1\n0.06976s + 1\nFrequency (rad/sec)\nBode Diagram of G1(s) = 20/[s(s + 1)]\n−180\n−140\n−130\n−150\n−160\n−170\n−120\n−20\n−10\n0\nPhase (deg); Magnitude (dB)\n40\n30\n20\n10\n100 101\nFigure 7–146\nBode diagram of\nG1(s).\nMATLAB Program 7–26\nnumc = [9.5238  28.6676];\ndenc = [1  14.3339];\nw = logspace(-1,3,100);\nbode(numc,denc,w)\ntitle('Bode Diagram of Gc(s) = 9.5238(s + 3.0101)/(s + 14.3339')552\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nFrequenc\ny\n (rad/sec)\nBode Diagram of Gc(s) = 9.5238(s + 3.0101)/(s + 14.3339)\n0\n40\n30\n20\n10\n60\n50\n5\nPhase (deg); Magnitude (dB)\n10\n20\n15\n10\n−1\n10\n0\n10\n1\n10\n2\n10\n3\nFigure 7–147\nBode diagram of\nG\nc\n(s).\nThe open-loop transfer function of the designed system is\nMATLAB Program 7–27 will produce the Bode diagram of G\nc\n(s)G(s) , which is shown in \nFigure 7–148.\n= 95.238s + 286.6759\ns\n3\n+ 15.3339s\n2\n+ 14.3339s\nG\nc\n(s)G(s) = 9.5238 s + 3.0101\ns + 14.3339\n10\ns(s + 1)\nMATLAB Program 7–27\nnum = [95.238  286.6759];\nden = [1  15.3339  14.3339  0];\nsys = tf(num,den);\nw = logspace(–1,3,100);\nbode(sys,w);\ngrid;\ntitle('Bode Diagram of Gc(s)G(s)')\n[Gm,pm,wcp,wcg] = margin(sys);\nGmdB = 20*log10(Gm);\n[Gmdb,pm,wcp,wcg]\nans = \nInf    49.4164    Inf    6.5686\nOpenmirrors.comExample Problems and Solutions 553\nFrom MATLAB Program 7–27 and Figure 7–148 it is clearly seen that the phase margin is ap-\nproximately 50° and the gain margin is ± q dB. Since the static velocity error constant Kv is\n20 sec–1, all the specifications are met. Before we conclude this problem, we need to check the\ntransient-response characteristics.\nUnit-Step Response: We shall compare the unit-step response of the compensated system with\nthat of the original uncompensated system.\nThe closed-loop transfer function of the original uncompensated system is\nThe closed-loop transfer function of the compensated system is\nMATLAB Program 7–28 produces the unit-step responses of the uncompensated and compen-\nsated systems. The resulting response curves are shown in Figure 7–149. Clearly, the compensat-\ned system exhibits a satisfactory response. Note that the closed-loop zero and poles are located\nas follows:\nZero at s=–3.0101\nPoles at s=–5.2880 ; j5.6824, s=–4.7579\nUnit-Ramp Response: It is worthwhile to check the unit-ramp response of the compensated\nsystem. Since Kv=20 sec–1, the steady-state error following the unit-ramp input will be\nC(s)\nR(s) = 95.238s + 286.6759\ns3 + 15.3339s2 + 110.5719s + 286.6759\nC(s)\nR(s) = 10\ns2 + s + 10\nFrequency (rad/sec)\nBode Diagram of Gc(s)G(s)\n−200\n−100\n−150\n−50\n−100\nPhase (deg); Magnitude (dB)\n−50\n50\n0\n10−1 100 101 102 103\nFigure 7–148\nBode diagram of\nGc(s)G(s).MATLAB Program 7–29 produces the unit-ramp response curves. [Note that the unit-ramp\nresponse is obtained as the unit-step response of C(s)/sR(s).] The resulting curves are shown in\nFigure 7–150.The compensated system has a steady-state error equal to one-half that of the orig-\ninal uncompensated system.\n554\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nOutputs\n1.8\n0.8\n0\n1.2\n1.6\n0.6\n0.2\n1\n1.4\n0.4\nt Sec\n01\n64\n5\n2\n3\nUnit-Step Responses of Uncompensated System and Compensated System\nUncompensated system\nCompensated system\nFigure 7–149\nUnit-step responses\nof the uncompensated\nand compensated\nsystems.\nMATLAB Program 7–28\n%*****Unit-step responses*****\nnum1 = [10];\nden1 = [1  1  10];\nnum2 = [95.238  286.6759];\nden2 = [1  15.3339  110.5719  286.6759];\nt = 0:0.01:6;\n[c1,x1,t] = step(num1,den1,t);\n[c2,x2,t] = step(num2,den2,t);\nplot(t,c1,'.',t,c2,'-')\ngrid;\ntitle('Unit-Step Responses of Uncompensated System and Compensated System')\nxlabel('t Sec');\nylabel('Outputs')\ntext(1.70,1.45,'Uncompensated System')\ntext(1.1,0.5,'Compensated System')\n1/K\nv\n=0.05. The static velocity error constant of the uncompensated system is 10 sec\n–1\n. Hence,\nthe original uncompensated system will have twice as large a steady-state error in following the\nunit-ramp input.\nOpenmirrors.comExample Problems and Solutions 555\nA–7–25. Consider a unity-feedback system whose open-loop transfer function is\nDesign a lag–lead compensator Gc(s) such that the static velocity error constant is 10 sec –1, the\nphase margin is 50°, and the gain margin is 10 dB or more.\nG(s) = K\ns(s + 1)(s + 4)\nMATLAB Program 7–29\n%*****Unit-ramp responses*****\nnum1 = [10];\nden1 = [1  1  10  0];\nnum2 = [95.238  286.6759];\nden2 = [1  15.3339  110.5719  286.6759  0];\nt = 0:0.01:3;\n[c1,x1,t] = step(num1,den1,t);\n[c2,x2,t] = step(num2,den2,t);\nplot(t,c1,'.',t,c2,'-',t,t,'--');\ngrid;\ntitle('Unit-Ramp Responses of Uncompensated System and Compensated System');\nxlabel('t Sec');\nylabel('Outputs')\ntext(1.2,0.65,'Uncompensated System')\ntext(0.1,1.3,'Compensated System')\nOutputs\n3\n0\n2\n2.5\n1\n0.5\n1.5\nt Sec\n0 0.5 32 2.51 1.5\nUnit-Ramp Responses of Uncompensated System and Compensated System\nCompensated System\nUncompensated SystemFigure 7–150\nUnit-ramp responses\nof the uncompensated\nand compensated\nsystems.Solution. We shall design a lag–lead compensator of the form\nThen the open-loop transfer function of the compensated system is G\nc\n(s)G(s). Since the gain K\nof the plant is adjustable, let us assume that K\nc\n=1. Then From the requirement\non the static velocity error constant, we obtain\nHence,\nK=40\nWe shall first plot a Bode diagram of the uncompensated system with K=40. MATLAB Pro-\ngram 7–30 may be used to plot this Bode diagram. The diagram obtained is shown in Figure 7–151.\n = K\n4 = 10\n K\nv\n= lim\ns S 0\nsG\nc\n(s)G(s) = lim\ns S 0\nsG\nc\n(s) K\ns(s + 1)(s + 4)\nlim\ns S 0\nG\nc\n(s) = 1.\nG\nc\n(s) = K\nc\na\ns + 1\nT\n1\nba\ns + 1\nT\n2\nb\na\ns + b\nT\n1\nba\ns + 1\nbT\n2\nb\n556\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nMATLAB Program 7–30\nnum = [40];\nden = [1  5  4  0];\nw = logspace(-1,1,100);\nbode(num,den,w)\ntitle('Bode Diagram of G(s) = 40/[s(s + 1)(s + 4)]')\nFrequency (rad/sec)\nBode Diagram of G(s) = 40/[s(s + 1)(s + 4)]\n−250\n−100\n−150\n−200\n−50\n−40\n−20\n0\nPhase (deg); Magnitude (dB)\n40\n20\n10\n−1\n10\n0\n10\n1\nFigure 7–151\nBode diagram of\nG(s) = 40/H20862Cs(s + 1)(s + 4)D.\nOpenmirrors.comExample Problems and Solutions 557\nFrom Figure 7–151, the phase margin of the gain-adjusted but uncompensated system is\nfound to be –16°, which indicates that this system is unstable. The next step in the design of a\nlag–lead compensator is to choose a new gain crossover frequency. From the phase-angle curve\nforG(jv), we notice that the phase crossover frequency is v=2 rad/H20862sec. We may choose the\nnew gain crossover frequency to be 2 rad /H20862sec so that the phase-lead angle required at\nv=2 rad/H20862sec is about 50°. A single lag–lead compensator can provide this amount of phase-\nlead angle quite easily.\nOnce we choose the gain crossover frequency to be 2 rad /H20862sec, we can determine the corner\nfrequencies of the phase-lag portion of the lag–lead compensator. Let us choose the corner\nfrequency (which corresponds to the zero of the phase-lag portion of the compensator)\nto be 1 decade below the new gain crossover frequency, or at v=0.2 rad/H20862sec. For another corner\nfrequency we need the value of b. The value of b can be determined from the\nconsideration of the lead portion of the compensator, as shown next.\nFor the lead compensator, the maximum phase-lead angle fm is given by\nNotice that b=10 corresponds to fm=54.9°. Since we need a 50° phase margin, we may\nchoose b=10. (Note that we will be using several degrees less than the maximum angle, 54.9°.)\nThus,\nb=10\nThen the corner frequency (which corresponds to the pole of the phase-lag portion\nof the compensator) becomes\nv=0.02\nThe transfer function of the phase-lag portion of the lag–lead compensator becomes\nThe phase-lead portion can be determined as follows: Since the new gain crossover frequency\nis v=2 rad/H20862sec, from Figure 7–151, @G(j2)@is found to be 6 dB. Hence, if the lag–lead compen-\nsator contributes –6 dB at v=2 rad/H20862sec, then the new gain crossover frequency is as desired. From\nthis requirement, it is possible to draw a straight line of slope 20 dB/decade passing through the\npoint (2 rad/H20862sec, –6 dB). (Such a line has been manually drawn on Figure 7–151.) The intersec-\ntions of this line and the 0-dB line and –20-dB line determine the corner frequencies. From this\nconsideration, the corner frequencies for the lead portion can be determined as v=0.4 rad/H20862sec\nand v=4 rad/H20862sec. Thus, the transfer function of the lead portion of the lag–lead compensator\nbecomes\nCombining the transfer functions of the lag and lead portions of the compensator, we can obtain\nthe transfer function Gc(s) of the lag–lead compensator. Since we chose Kc=1, we have\nGc(s) = s + 0.4\ns + 4\ns + 0.2\ns + 0.02 =\n(2.5s + 1)(5s + 1)\n(0.25s + 1)(50s + 1)\ns + 0.4\ns + 4 = 1\n10 a 2.5s + 1\n0.25s + 1 b\ns + 0.2\ns + 0.02 = 10 a 5s + 1\n50s + 1 b\nv = 1/H20862AbT2B\nsin fm = b - 1\nb + 1\nv = 1/H20862AbT2B,\nv = 1/H20862T2The open-loop transfer function of the compensated system is\nUsing MATLAB Program 7–32 the magnitude and phase-angle curves of the designed open-loop\ntransfer function G\nc\n(s)G(s) can be obtained as shown in Figure 7–153. Note that the denominator\npolynomial den1 was obtained using the conv command, as follows:\n = 40s\n2\n+ 24s + 3.2\ns\n5\n+ 9.02s\n4\n+ 24.18s\n3\n+ 16.48s\n2\n+ 0.32s\n G\nc\n(s)G(s) =\n(s + 0.4)(s + 0.2)\n(s + 4)(s + 0.02)  40\ns(s + 1)(s + 4)\n558\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nMATLAB Program 7–31\nnumc = [1  0.6  0.08];\ndenc = [1  4.02  0.08];\nbode(numc,denc)\ntitle('Bode Diagram of Lag–Lead Compensator')\nFrequency (rad/sec)\nBode Diagram of Lag-Lead Compensator\n−50\n0\n50\n−20\n−15\nPhase (deg); Magnitude (dB)\n−10\n0\n−5\n10\n−3\n10\n−2\n10\n−1\n10\n0\n10\n1\n10\n2\nFigure 7–152\nBode diagram of the\ndesigned lag–lead\ncompensator.\na = [1  4.02  0.08];\nb = [1  5  4  0];\nconv(a,b)\nans = \n1.0000  9.0200  24.1800  16.4800  0.320000  0\nThe Bode diagram of the lag–lead compensator G\nc\n(s) can be obtained by entering MATLAB\nProgram 7–31 into the computer. The resulting plot is shown in Figure 7–152.\nOpenmirrors.comExample Problems and Solutions 559\nSince the phase margin of the compensated system is 50°, the gain margin is 12 dB, and the\nstatic velocity error constant is 10 sec–1, all the requirements are met.\nWe shall next investigate the transient-response characteristics of the designed system.\nUnit-Step Response: Noting that\nwe have\nTo determine the denominator polynomial with MATLAB, we may proceed as follows:\nDefine\n c(s) = 40(s + 0.4)(s + 0.2) = 40s2 + 24s + 3.2\n b(s) = s(s + 1)(s + 4) = s3 + 5s2 + 4s\n a(s) = (s + 4)(s + 0.02) = s2 + 4.02s + 0.08\n =\n40(s + 0.4)(s + 0.2)\n(s + 4)(s + 0.02)s(s + 1)(s + 4) + 40(s + 0.4)(s + 0.2)\n \nC(s)\nR(s) =\nGc(s)G(s)\n1 + Gc(s)G(s)\nGc(s)G(s) =\n40(s + 0.4)(s + 0.2)\n(s + 4)(s + 0.02)s(s + 1)(s + 4)\nMATLAB Program 7–32\nnum1 = [40  24  3.2];\nden1 = [1  9.02  24.18  16.48  0.32  0];\nbode(num1,den1)\ntitle('Bode Diagram of Gc(s)G(s)')\nFrequency (rad/sec)\nBode Diagram of Gc(s)G(s)\n−300\n−250\n−200\n−150\n−100\n−50\n0\n−100\nPhase (deg); Magnitude (dB)\n−50\n0\n50\n100\n10−4 10−3 10−2 10−1 100 101 102\nFigure 7–153\nBode diagram of the\nopen-loop transfer\nfunction Gc(s)G(s)\nof the compensated\nsystem.Then we have\na = [1  4.02  0.08]\nb = [1  5  4  0]\nc = [40  24  3.2]\nUsing the following MATLAB program, we obtain the denominator polynomial.\n560\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\na = [1  4.02  0.08];\nb = [1  5  4  0];\nc = [40  24  3.2];\np = [conv(a,b)] + [0  0  0  c]\np =\n1.0000  9.0200  24.1800  56.4800  24.3200  3.2000\nMATLAB Program 7–33\n%*****Unit-step response****\nnum = [40  24  3.2];\nden = [1  9.02  24.18  56.48  24.32  3.2];\nt = 0:0.2:40;\nstep(num,den,t)\ngrid\ntitle('Unit-Step Response of Compensated System')\nAmplitude\n1.2\n0.4\n0\n1\n0.2\n0.6\n0.8\nUnit-Step Response of Compensated System\nTime (sec)\n01 0\n5\n4030\n35\n25\n15\n20\nFigure 7–154\nUnit-step response\ncurve of the\ncompensated system.\nMATLAB Program 7–33 is used to obtain the unit-step response of the compensated system.\nThe resulting unit-step response curve is shown in Figure 7–154. (Note that the gain-adjusted but\nuncompensated system is unstable.)\nOpenmirrors.comProblems 561\nUnit-Ramp Response: The unit-ramp response of the compensated system may be obtained by\nentering MATLAB Program 7–34 into the computer. Here we converted the unit-ramp response\nofGc G/A1+Gc GBinto the unit-step response of Gc G/CsA1+Gc GBD. The unit-ramp response\ncurve obtained using this program is shown in Figure 7–155.\nMATLAB Program 7–34\n%*****Unit-ramp response*****\nnum = [40  24  3.2];\nden = [1  9.02  24.18  56.48  24.32  3.2  0];\nt = 0:0.05:20;\nc = step(num,den,t);\nplot(t,c,'-',t,t,'.')\ngrid\ntitle('Unit-Ramp Response of Compensated System')\nxlabel('Time (sec)')\nylabel('Unit-Ramp Input and Output c(t)')Unit-Ramp Input and Output c(t)\n20\n8\n0\n12\n18\n4\n2\n16\n10\n14\n6\nTime (sec)\n04 2 2014 1812 1686 10\nUnit-Ramp Response of Compensated System\nFigure 7–155\nUnit-ramp response\nof the compensated\nsystem.\nPROBLEMS\nB–7–1. Consider the unity-feedback system with the open-\nloop transfer function:\nG(s) = 10\ns + 1\nObtain the steady-state output of the system when it is sub-\njected to each of the following inputs:\n(a) r(t)=sin(t+30°)\n(b) r(t)=2 cos(2t-45°)\n(c) r(t)=sin(t+30°)-2 cos(2t-45°)562\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nB–7–2. Consider the system whose closed-loop transfer\nfunction is\nObtain the steady-state output of the system when it is sub-\njected to the input r(t)=R sin vt.\nB–7–3. Using MATLAB, plot Bode diagrams of G\n1\n(s) and\nG\n2\n(s) given below.\nG\n1\n(s) is a minimum-phase system and G\n2\n(s) is a nonmini-\nmum-phase system.\nB–7–4. Plot the Bode diagram of\nB–7–5. Given\nshow that\nB–7–6. Consider a unity-feedback control system with the\nfollowing open-loop transfer function:\nThis is a nonminimum-phase system. Two of the three\nopen-loop poles are located in the right-half s plane as\nfollows:\nPlot the Bode diagram of G(s) with MATLAB. Explain why\nthe phase-angle curve starts from 0° and approaches ±180°.\n s = 0.2328 - j0.7926\n s = 0.2328 + j0.7926\n Open-loop poles at s =- 1.4656\nG(s) = s + 0.5\ns\n3\n+ s\n2\n+ 1\n@GAjv\nn\nB@ = 1\n2z\nG(s) = v\n2\nn\ns\n2\n+ 2zv\nn\n \ns + v\n2\nn\nG(s) =\n10As\n2\n+ 0.4s + 1B\nsAs\n2\n+ 0.8s + 9B\n G\n2\n(s) = 1 - s\n1 + 2s\n G\n1\n(s) = 1 + s\n1 + 2s\nC(s)\nR(s) =\nKAT\n2\n \ns + 1B\nT\n1\n \ns + 1\nB–7–7. Sketch the polar plots of the open-loop transfer\nfunction\nfor the following two cases:\n(a)\n(b)\nB–7–8. Draw a Nyquist locus for the unity-feedback control\nsystem with the open-loop transfer function\nUsing the Nyquist stability criterion, determine the stabili-\nty of the closed-loop system.\nB–7–9. A system with the open-loop transfer function\nis inherently unstable.This system can be stabilized by adding\nderivative control. Sketch the polar plots for the open-loop\ntransfer function with and without derivative control.\nB–7–10. Consider the closed-loop system with the following\nopen-loop transfer function:\nPlot both the direct and inverse polar plots of G(s)H(s)\nwith K=1 and K=10. Apply the Nyquist stability crite-\nrion to the plots, and determine the stability of the system\nwith these values of K.\nB–7–11. Consider the closed-loop system whose open-loop\ntransfer function is\nFind the maximum value of K for which the system is stable.\nB–7–12. Draw a Nyquist plot of the following G(s):\nB–7–13. Consider a unity-feedback control system with the\nfollowing open-loop transfer function:\nDraw a Nyquist plot of G(s) and examine the stability of\nthe system.\nG(s) = 1\ns\n3\n+ 0.2s\n2\n+ s + 1\nG(s) = 1\nsAs\n2\n+ 0.8s + 1B\nG(s)H(s) = Ke\n-2s\ns\nG(s)H(s) =\n10K(s + 0.5)\ns\n2\n(s + 2)(s + 10)\nG(s)H(s) = K\ns\n2\nAT\n1\n \ns + 1B\nG(s) =\nK(1 - s)\ns + 1\nT 7 T\na\n7 0,\n  \nT 7 T\nb\n7 0\nT\na\n7 T 7 0,\n  \nT\nb\n7 T 7 0\nG(s)H(s) =\nKAT\na\n \ns + 1BAT\nb\n \ns + 1B\ns\n2\n(Ts + 1)\nOpenmirrors.comProblems 563\nB–7–14. Consider a unity-feedback control system with the\nfollowing open-loop transfer function:\nDraw a Nyquist plot of G(s) and examine the stability of\nthe closed-loop system.\nB–7–15. Consider the unity-feedback system with the fol-\nlowing G(s):\nSuppose that we choose the Nyquist path as shown in Fig-\nure 7–156. Draw the corresponding G(jv) locus in the G(s)\nplane. Using the Nyquist stability criterion, determine the\nstability of the system.\nG(s) = 1\ns(s - 1)\nG(s) = s2 + 2s + 1\ns3 + 0.2s2 + s + 1\nB–7–16. Consider the closed-loop system shown in Figure\n7–157. G(s) has no poles in the right-half s plane.\nIf the Nyquist plot of G(s) is as shown in Figure\n7–158(a), is this system stable?\nIf the Nyquist plot is as shown in Figure 7–158(b), is this\nsystem stable?\njv\ns\n`\ne\nFigure 7–156\nNyquist path.\nG(s)+ –\nFigure 7–157\nClosed-loop system.\nB–7–17. A Nyquist plot of a unity-feedback system with the\nfeedforward transfer function G(s) is shown in Figure 7–159.\nIf G(s) has one pole in the right-half s plane, is the sys-\ntem stable?\nIf G(s) has no pole in the right-half s plane, but has one\nzero in the right-half s plane, is the system stable?\nFigure 7–158\nNyquist plots.\n0–1R e\nIm\nG(jv)\nFigure 7–159\nNyquist plot.\n0R e\nIm\n–1\n(a)\nRe\nIm\n0–1\n(b)B–7–18. Consider the unity-feedback control system with\nthe following open-loop transfer function G(s):\nPlot Nyquist diagrams of G(s) for K=1, 10, and 100.\nB–7–19. Consider a negative-feedback system with the fol-\nlowing open-loop transfer function:\nPlot the Nyquist diagram of G(s). If the system were a pos-\nitive-feedback one with the same open-loop transfer func-\ntion G(s), what would the Nyquist diagram look like?\nB–7–20. Consider the control system shown in Figure 7–160.\nPlot Nyquist diagrams of G(s), where\nfor k=0.3, 0.5, and 0.7.\n = 10\ns\n3\n+ 6s\n2\n+ (5 + 10k)s\n G(s) = 10\nsC(s + 1)(s + 5) + 10kD\nG(s) = 2\ns(s + 1)(s + 2)\nG(s) =\nK(s + 2)\ns(s + 1)(s + 10)\n564\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nk\n1\ns\n10\n(s + 1) (s + 5)\n+ –\n+ –\nFigure 7–160\nControl system.\nB–7–22. Referring to Problem B–7–21, it is desired to plot\nonly for v>0. Write a MATLAB program\nto produce such a plot.\nIf it is desired to plot for –q<v<q,\nwhat changes must be made in the MATLAB program?\nB–7–23. Consider the unity-feedback control system whose\nopen-loop transfer function is\nDetermine the value of a so that the phase margin is 45°.\nB–7–24. Consider the system shown in Figure 7–161. Draw\na Bode diagram of the open-loop transfer function G(s).\nDetermine the phase margin and gain margin.\nG(s) = as + 1\ns\n2\nY\n1\n(jv)/H20862U\n1\n(jv)\nY\n1\n(jv)/H20862U\n1\n(jv)\nG(s)\n25\ns(s + 1) (s + 10)\n+ –\nFigure 7–161\nControl system.\nG(s)\n20(s + 1)\ns(s\n2\n+ 2s + 10) (s + 5)\n+ –\nFigure 7–162\nControl system.\nB–7–21. Consider the system defined by\nThere are four individual Nyquist plots involved in this sys-\ntem. Draw two Nyquist plots for the input u\n1\nin one dia-\ngram and two Nyquist plots for the input u\n2\nin another\ndiagram. Write a MATLAB program to obtain these two\ndiagrams.\n \nB\ny\n1\ny\n2\nR\n=\nB\n1\n0\n0\n1\nRB\nx\n1\nx\n2\nR\n+\nB\n0\n0\n0\n0\nRB\nu\n1\nu\n2\nR\n \nB\nx#\n1\nx#\n2\nR\n=\nB\n-1\n6.5\n-1\n0\nRB\nx\n1\nx\n2\nR\n+\nB\n1\n1\n1\n0\nRB\nu\n1\nu\n2\nR\nB–7–25. Consider the system shown in Figure 7–162.\nDraw a Bode diagram of the open-loop transfer function\nG(s). Determine the phase margin and gain margin with\nMATLAB.\nOpenmirrors.comProblems 565\nB–7–26. Consider a unity-feedback control system with the\nopen-loop transfer function\nDetermine the value of the gain K such that the phase\nmargin is 50°. What is the gain margin with this gain K?\nB–7–27. Consider the system shown in Figure 7–163. Draw\na Bode diagram of the open-loop transfer function, and\ndetermine the value of the gain K such that the phase\nmargin is 50°. What is the gain margin of this system with\nthis gain K?\nG(s) = K\nsAs2 + s + 4B\n10\ns(s + 1)K s + 0.1\ns + 0.5+ –\nFigure 7–163\nControl system.\nB–7–28. Consider a unity-feedback control system whose\nopen-loop transfer function is\nDetermine the value of the gain K such that the resonant\npeak magnitude in the frequency response is 2 dB, or\nMr=2 dB.\nB–7–29. A Bode diagram of the open-loop transfer function\nG(s) of a unity-feedback control system is shown in Figure\n7–164. It is known that the open-loop transfer function is\nminimum phase. From the diagram, it can be seen that there\nis a pair of complex-conjugate poles at v=2 rad/H20862sec.\nDetermine the damping ratio of the quadratic term involv-\ning these complex-conjugate poles. Also, determine the\ntransfer function G(s).\nG(s) = K\nsAs2 + s + 0.5B\n40\n20\n–20\ndB\n0\n–40\n–60\n–80\n0.1 0.2 0.4 0.6 1 4 2 6 10 20 60 40 100\n–270°\n–180°\n–90°\n0°\nv in rad/sec\nFigure 7–164\nBode diagram of the open-loop transfer function of a unity-\nfeedback control system.566\nChapter 7 / Control Systems Analysis and Design by the Frequency-Response Method\nB–7–30. Draw Bode diagrams of the PI controller given by\nand the PD controller given by\nB–7–31. Figure 7–165 shows a block diagram of a space-\nvehicle attitude-control system. Determine the proportional\ngain constant K\np\nand derivative time such that the band-\nwidth of the closed-loop system is 0.4 to 0.5 rad/H20862sec. (Note\nthat the closed-loop bandwidth is close to the gain crossover\nfrequency.) The system must have an adequate phase mar-\ngin. Plot both the open-loop and closed-loop frequency re-\nsponse curves on Bode diagrams.\nT\nd\nG\nc\n(s) = 5(1 + 0.5s)\nG\nc\n(s) = 5\na\n1 + 1\n2s\nb\nK\np\n(1 + T\nd\ns) 1\ns\n2\n+ –\nG\nc\n(s) K\ns(0.1s + 1)(s + 1) \n+ –\nFigure 7–166\nClosed-loop system.\nB–7–32. Referring to the closed-loop system shown in Fig-\nure 7–166, design a lead compensator G\nc\n(s) such that the\nphase margin is 45°, gain margin is not less than 8 dB, and the\nstatic velocity error constant K\nv\nis 4.0 sec\n–1\n. Plot unit-step\nand unit-ramp response curves of the compensated system\nwith MATLAB.\nB–7–33. Consider the system shown in Figure 7–167. It is\ndesired to design a compensator such that the static\nvelocity error constant is 4 sec\n–1\n, phase margin is 50°, and\ngain margin is 8 dB or more. Plot the unit-step and unit-\nramp response curves of the compensated system with\nMATLAB.\nG\nc\n(s)\n1\nHydraulic servo\n1\ns\nAircraft\n2s + 0.1\ns\n2\n+ 0.1s + 4\nRate gyro\nCR\n+ –\nFigure 7–167\nControl system.\nG\nc\n(s) 1\ns(s + 1)(s + 5) \n+ –\nFigure 7–168\nControl system.\nB–7–34. Consider the system shown in Figure 7–168. De-\nsign a lag–lead compensator such that the static velocity\nerror constant K\nv\nis 20 sec\n–1\n, phase margin is 60°, and gain\nmargin is not less than 8 dB. Plot the unit-step and unit-\nramp response curves of the compensated system with\nMATLAB.\nFigure 7–165\nBlock diagram of space-vehicle attitude-control system.\nOpenmirrors.com8\n567\nPID Controllers and\nModified PID \nControllers\n8–1 INTRODUCTION\nIn previous chapters, we occasionally discussed the basic PID controllers. For example,\nwe presented electronic, hydraulic, and pneumatic PID controllers. We also designed\ncontrol systems where PID controllers were involved.\nIt is interesting to note that more than half of the industrial controllers in use today\nare PID controllers or modified PID controllers.\nBecause most PID controllers are adjusted on-site, many different types of tuning\nrules have been proposed in the literature. Using these tuning rules, delicate and fine tun-\ning of PID controllers can be made on-site. Also, automatic tuning methods have been\ndeveloped and some of the PID controllers may possess on-line automatic tuning\ncapabilities. Modified forms of PID control, such as I-PD control and multi-degrees-of-\nfreedom PID control, are currently in use in industry. Many practical methods for bump-\nless switching (from manual operation to automatic operation) and gain scheduling are\ncommercially available.\nThe usefulness of PID controls lies in their general applicability to most control sys-\ntems. In particular, when the mathematical model of the plant is not known and there-\nfore analytical design methods cannot be used, PID controls prove to be most useful. In\nthe field of process control systems, it is well known that the basic and modified PID con-\ntrol schemes have proved their usefulness in providing satisfactory control, although in\nmany given situations they may not provide optimal control.\nIn this chapter we first present the design of a PID controlled system using Ziegler\nand Nichols tuning rules.We next discuss a design of PID controller with the conventional568\nChapter 8 / PID Controllers and Modified PID Controllers\nPlantK\np\n(1 ++ T\nd\ns)1\nT\ni\ns\n+ –\nFigure 8–1\nPID control \nof a plant.\nfrequency-response approach, followed by the computational optimization approach to\ndesign PID controllers. Then we introduce modified PID controls such as PI-D control\nand I-PD control.Then we introduce multi-degrees-of-freedom control systems, which can\nsatisfy conflicting requirements that single-degree-of-freedom control systems cannot.\n(For the definition of multi-degrees-of-freedom control systems, see Section 8–6.)\nIn practical cases, there may be one requirement on the response to disturbance\ninput and another requirement on the response to reference input. Often these two re-\nquirements conflict with each other and cannot be satisfied in the single-degree-of-\nfreedom case. By increasing the degrees of freedom, we are able to satisfy both. In this\nchapter we present two-degrees-of-freedom control systems in detail.\nThe computational optimization approach presented in this chapter to design con-\ntrol systems (such as to search optimal sets of parameter values to satisfy given transient\nresponse specifications) can be used to design both single-degree-of-freedom control sys-\ntems and multi-degrees-of-freedom control systems, provided a fairly precice mathe-\nmatical model of the plant is known.\nOutline of the Chapter. Section 8–1 has presented introductory material for the\nchapter. Section 8–2 deals with a design of a PID controller with Ziegler–Nichols Rules.\nSection 8–3 treats a design of a PID controller with the frequency-response approach.\nSection 8–4 presents a computational optimization approach to obtain optimal param-\neter values of PID controllers. Section 8–5 discusses multi-degrees-of-freedom control\nsystems including modified PID control systems.\n8–2 ZIEGLER–NICHOLS RULES FOR TUNING \nPID CONTROLLERS\nPID Control of Plants. Figure 8–1 shows a PID control of a plant. If a mathe-\nmatical model of the plant can be derived, then it is possible to apply various design\ntechniques for determining parameters of the controller that will meet the transient and\nsteady-state specifications of the closed-loop system. However, if the plant is so com-\nplicated that its mathematical model cannot be easily obtained, then an analytical or\ncomputational approach to the design of a PID controller is not possible.Then we must\nresort to experimental approaches to the tuning of PID controllers.\nThe process of selecting the controller parameters to meet given performance spec-\nifications is known as controller tuning. Ziegler and Nichols suggested rules for tuning\nPID controllers (meaning to set values and ) based on experimental step\nresponses or based on the value of that results in marginal stability when only pro-\nportional control action is used. Ziegler–Nichols rules, which are briefly presented in\nthe following, are useful when mathematical models of plants are not known. (These\nrules can, of course, be applied to the design of systems with known mathematical\nK\np\nT\nd\nT\ni\n \n,K\np\n \n,\nOpenmirrors.comSection 8–2 / Ziegler–Nichols Rules for Tuning PID Controllers 569\nPlant\nu(t) c(t)\n1Figure 8–2\nUnit-step response \nof a plant.\nTangent line at\ninflection point\nK\n0\nc(t)\nt\nLT\nFigure 8–3\nS-shaped response\ncurve.\nmodels.) Such rules suggest a set of values of and that will give a stable oper-\nation of the system. However, the resulting system may exhibit a large maximum over-\nshoot in the step response, which is unacceptable. In such a case we need series of fine\ntunings until an acceptable result is obtained. In fact, the Ziegler–Nichols tuning rules\ngive an educated guess for the parameter values and provide a starting point for fine tun-\ning, rather than giving the final settings for and in a single shot.\nZiegler–Nichols Rules for Tuning PID Controllers. Ziegler and Nichols pro-\nposed rules for determining values of the proportional gain integral time and de-\nrivative time based on the transient response characteristics of a given plant. Such\ndetermination of the parameters of PID controllers or tuning of PID controllers can be\nmade by engineers on-site by experiments on the plant. (Numerous tuning rules for PID\ncontrollers have been proposed since the Ziegler–Nichols proposal. They are available\nin the literature and from the manufacturers of such controllers.)\nThere are two methods called Ziegler–Nichols tuning rules: the first method and the\nsecond method. We shall give a brief presentation of these two methods.\nFirst Method. In the first method, we obtain experimentally the response of the\nplant to a unit-step input, as shown in Figure 8–2. If the plant involves neither integra-\ntor(s) nor dominant complex-conjugate poles, then such a unit-step response curve may\nlook S-shaped, as shown in Figure 8–3. This method applies if the response to a step\ninput exhibits an S-shaped curve. Such step-response curves may be generated experi-\nmentally or from a dynamic simulation of the plant.\nThe S-shaped curve may be characterized by two constants, delay time L and time\nconstant T. The delay time and time constant are determined by drawing a tangent line\nat the inflection point of the S-shaped curve and determining the intersections of the\ntangent line with the time axis and line c(t)=K, as shown in Figure 8–3. The transfer\nTd\nTi ,Kp ,\nTdKp ,Ti ,\nTdKp ,Ti ,570\nChapter 8 / PID Controllers and Modified PID Controllers\nK\np\nPlant\nr(t) c(t)u(t)\n+ –\nFigure 8–4\nClosed-loop system\nwith a proportional\ncontroller.\nfunction C(s)/U(s) may then be approximated by a first-order system with a transport\nlag as follows:\nZiegler and Nichols suggested to set the values of and according to the formula\nshown in Table 8–1.\nNotice that the PID controller tuned by the first method of Ziegler–Nichols rules\ngives\nThus, the PID controller has a pole at the origin and double zeros at s=–1/L.\nSecond Method. In the second method, we first set and Using the\nproportional control action only (see Figure 8–4), increase K\np\nfrom 0 to a critical value\nK\ncr\nat which the output first exhibits sustained oscillations. (If the output does not ex-\nhibit sustained oscillations for whatever value K\np\nmay take, then this method does not\napply.) Thus, the critical gain K\ncr\nand the corresponding period are experimentallyP\ncr\nT\nd\n= 0.T\ni\n=q\n = 0.6T \na\ns + 1\nL\nb\n2\ns\n = 1.2 T\nL \na\n1 + 1\n2Ls + 0.5Ls\nb\n G\nc\n(s) = K\np\na\n1 + 1\nT\ni\n \ns + T\nd\n \ns\nb\nT\nd\nT\ni\n \n,K\np\n \n,\nC(s)\nU(s) = Ke\n-Ls\nTs + 1\nType of\nController\nP q 0\nPI 0\nPID 2L 0.5L1.2 T\nL\nL\n0.30.9 T\nL\nT\nL\nT\nd\nT\ni\nK\np\nTable 8–1\nZiegler–Nichols Tuning Rule Based on Step Response\nof Plant (First Method)\nOpenmirrors.comSection 8–2 / Ziegler–Nichols Rules for Tuning PID Controllers 571\nPcr\n0 t\nc(t)\nFigure 8–5\nSustained oscillation\nwith period \n( is measured in\nsec.)\nPcr \nPcr .\nType of\nController\nP 0.5 Kcr q 0\nPI 0.45 Kcr 0\nPID 0.6 Kcr 0.125Pcr0.5Pcr\n1\n1.2 Pcr\nTdTiKp\nTable 8–2 Ziegler–Nichols Tuning Rule Based on Critical Gain\nKcr and Critical Period (Second Method)Pcr\ndetermined (see Figure 8–5). Ziegler and Nichols suggested that we set the values of\nthe parameters and according to the formula shown in Table 8–2.TdKp ,Ti ,\nNotice that the PID controller tuned by the second method of Ziegler–Nichols rules\ngives\nThus, the PID controller has a pole at the origin and double zeros at \nNote that if the system has a known mathematical model (such as the transfer func-\ntion), then we can use the root-locus method to find the critical gain Kcr and the fre-\nquency of the sustained oscillations vcr , where These values can be found\nfrom the crossing points of the root-locus branches with the jv axis. (Obviously, if the\nroot-locus branches do not cross the jv axis, this method does not apply.)\n2p/H20862vcr = Pcr .\ns =- 4/H20862Pcr .\n = 0.075Kcr Pcr \nas + 4\nPcr\nb\n2\ns\n = 0.6Kcr a1 + 1\n0.5Pcr s + 0.125Pcr s b\n Gc(s) = Kp a1 + 1\nTi s + Td s b572\nChapter 8 / PID Controllers and Modified PID Controllers\nG\nc\n(s)\nPID\ncontroller\n1\ns(s + 1)(s + 5) \nC(s)R(s)\n+ –\nFigure 8–6\nPID-controlled\nsystem.\nComments. Ziegler–Nichols tuning rules (and other tuning rules presented in the\nliterature) have been widely used to tune PID controllers in process control systems\nwhere the plant dynamics are not precisely known. Over many years, such tuning rules\nproved to be very useful. Ziegler–Nichols tuning rules can, of course, be applied to plants\nwhose dynamics are known. (If the plant dynamics are known, many analytical and\ngraphical approaches to the design of PID controllers are available, in addition to\nZiegler–Nichols tuning rules.)\nEXAMPLE 8–1\nConsider the control system shown in Figure 8–6 in which a PID controller is used to control the\nsystem. The PID controller has the transfer function\nAlthough many analytical methods are available for the design of a PID controller for the pres-\nent system, let us apply a Ziegler–Nichols tuning rule for the determination of the values of pa-\nrameters and Then obtain a unit-step response curve and check to see if the designed\nsystem exhibits approximately 25% maximum overshoot. If the maximum overshoot is excessive\n(40% or more), make a fine tuning and reduce the amount of the maximum overshoot to ap-\nproximately 25% or less.\nSince the plant has an integrator, we use the second method of Ziegler–Nichols tuning rules.\nBy setting and we obtain the closed-loop transfer function as follows:\nThe value of K\np\nthat makes the system marginally stable so that sustained oscillation occurs can\nbe obtained by use of Routh’s stability criterion. Since the characteristic equation for the\nclosed-loop system is\ns\n3\n+6s\n2\n+5s+K\np\n=0\nthe Routh array becomes as follows:\ns\n3\ns\n2\ns\n1\ns\n0\n1\n6\n30 - K\np\n6\nK\np\n5\nK\np\nC(s)\nR(s) =\nK\np\ns(s + 1)(s + 5) + K\np\nT\nd\n= 0,T\ni\n=q\nT\nd\n \n.T\ni\n \n,K\np\n \n,\nG\nc\n(s) = K\np\na\n1 + 1\nT\ni\n \ns + T\nd\n \ns\nb\nOpenmirrors.comSection 8–2 / Ziegler–Nichols Rules for Tuning PID Controllers 573\nPID controller\n1\ns(s + 1)(s + 5) \n6.3223 (s + 1.4235)2\ns\nC(s)R(s)\n+ –\nFigure 8–7\nBlock diagram of the\nsystem with PID\ncontroller designed\nby use of the\nZiegler–Nichols\ntuning rule (second\nmethod).\nExamining the coefficients of the first column of the Routh table, we find that sustained oscilla-\ntion will occur if Thus, the critical gain Kcr is\nKcr=30\nWith gain Kp set equal to the characteristic equation becomes\ns3+6s2+5s+30=0\nTo find the frequency of the sustained oscillation, we substitute s=jv into this characteristic\nequation as follows:\n(jv)3+6(jv)2+5(jv)+30=0\nor\n6A5-v2 B+jvA5-v2 B=0\nfrom which we find the frequency of the sustained oscillation to be or Hence, the\nperiod of sustained oscillation is\nReferring to Table 8–2, we determine and as follows:\nThe transfer function of the PID controller is thus\nThe PID controller has a pole at the origin and double zero at s=–1.4235. A block diagram of\nthe control system with the designed PID controller is shown in Figure 8–7.\n =\n6.3223(s + 1.4235)2\ns\n = 18 a1 + 1\n1.405s + 0.35124s b\n Gc(s) = Kp a1 + 1\nTi s + Td s b\n Td = 0.125Pcr = 0.35124\n Ti = 0.5Pcr = 1.405\n Kp = 0.6Kcr = 18\nTdTi ,Kp ,\nPcr = 2p\nv = 2p\n15 = 2.8099\nv = 15 .v2 = 5\nKcr (= 30),\nKp = 30.574\nChapter 8 / PID Controllers and Modified PID Controllers\nNext, let us examine the unit-step response of the system. The closed-loop transfer function\nC(s)/R(s) is given by\nThe unit-step response of this system can be obtained easily with MATLAB. See MATLAB\nProgram 8–1. The resulting unit-step response curve is shown in Figure 8–8. The maximum\novershoot in the unit-step response is approximately 62%.The amount of maximum overshoot is\nexcessive. It can be reduced by fine tuning the controller parameters. Such fine tuning can be\nmade on the computer. We find that by keeping and by moving the double zero of the\nPID controller to s=–0.65—that is, using the PID controller\n(8–1)\nthe maximum overshoot in the unit-step response can be reduced to approximately 18 % (see\nFigure 8–9). If the proportional gain K\np\nis increased to 39.42, without changing the location of\nthe double zero (s=–0.65), that is, using the PID controller\n(8–2)G\nc\n(s) = 39.42\na\n1 + 1\n3.077s + 0.7692s\nb\n= 30.322\n(s + 0.65)\n2\ns\nG\nc\n(s) = 18\na\n1 + 1\n3.077s + 0.7692s\nb\n= 13.846\n(s + 0.65)\n2\ns\nK\np\n= 18\nC(s)\nR(s) = 6.3223s\n2\n+ 18s + 12.811\ns\n4\n+ 6s\n3\n+ 11.3223s\n2\n+ 18s + 12.811\nMATLAB Program 8–1\n% ---------- Unit-step response ----------\nnum = [6.3223  18  12.811];\nden = [1  6  11.3223  18  12.811];\nstep(num,den)\ngrid\ntitle('Unit-Step Response')\nUnit-Step Response\nTime (sec)\n02\n1412\n8\n10\n4\n6\nAmplitude\n0\n0.8\n1.8\n1.2\n0.6\n0.2\n1.4\n1.6\n1\n0.4\nFigure 8–8\nUnit-step response\ncurve of PID-\ncontrolled system\ndesigned by use of\nthe Ziegler–Nichols\ntuning rule (second\nmethod).\nOpenmirrors.comSection 8–2 / Ziegler–Nichols Rules for Tuning PID Controllers 575\nUnit-Step Response\nAmplitude\n0\n0.6\n1.2\n0.8\n0.4\n0.2\n1\nTime (sec)\n01 764 52 3\nFigure 8–9\nUnit-step response of\nthe system shown in\nFigure 8–6 with PID\ncontroller having\nparameters\nand\nTd = 0.7692.\nTi = 3.077,\nKp = 18,\nAmplitude\n1.4\n0.8\n0.4\n0\n1\n1.2\n0.6\n0.2\nUnit-Step Response\nTime (sec)\n0 0.5 54.53 3.5 41 1.5 2 2.5\nFigure 8–10\nUnit-step response of\nthe system shown in\nFigure 8–6 with PID\ncontroller having\nparameters\nand\nTd = 0.7692.\nTi = 3.077,\nKp = 39.42,\nthen the speed of response is increased, but the maximum overshoot is also increased to approxi-\nmately 28%, as shown in Figure 8–10. Since the maximum overshoot in this case is fairly close to 25%\nand the response is faster than the system with given by Equation (8–1), we may consider \nas given by Equation (8–2) as acceptable. Then the tuned values of and become\nIt is interesting to observe that these values respectively are approximately twice the values sug-\ngested by the second method of the Ziegler–Nichols tuning rule.The important thing to note here\nis that the Ziegler–Nichols tuning rule has provided a starting point for fine tuning.\nIt is instructive to note that, for the case where the double zero is located at s=–1.4235, in-\ncreasing the value of Kp increases the speed of response, but as far as the percentage maximum\novershoot is concerned, varying gain Kp has very little effect. The reason for this may be seen from\nKp = 39.42,  Ti = 3.077,  Td = 0.7692\nTdTi ,Kp ,\nGc(s)Gc(s)576\nChapter 8 / PID Controllers and Modified PID Controllers\nthe root-locus analysis. Figure 8–11 shows the root-locus diagram for the system designed by use of\nthe second method of Ziegler–Nichols tuning rules. Since the dominant branches of root loci are\nalong the lines for a considerable range of K, varying the value ofK (from 6 to 30) will not\nchange the damping ratio of the dominant closed-loop poles very much. However, varying the lo-\ncation of the double zero has a significant effect on the maximum overshoot, because the damping\nratio of the dominant closed-loop poles can be changed significantly.This can also be seen from the\nroot-locus analysis. Figure 8–12 shows the root-locus diagram for the system where the PID controller\nhas the double zero at s=–0.65. Notice the change of the root-locus configuration.This change in\nthe configuration makes it possible to change the damping ratio of the dominant closed-loop poles.\nIn Figure 8–12, notice that, in the case where the system has gain K=30.322, the closed-loop\npoles at s=–2.35_j4.82act as dominant poles.Two additional closed-loop poles are very near the\ndouble zero at s=–0.65,with the result that these closed-loop poles and the double zero almost can-\ncel each other.The dominant pair of closed-loop poles indeed determines the nature of the response.\nOn the other hand, when the system has K=13.846,the closed-loop poles at s=–2.35_j2.62are\nnot quite dominant because the two other closed-loop poles near the double zero at s=–0.65have\nconsiderable effect on the response. The maximum overshoot in the step response in this case (18%)\nis much larger than the case where the system is of second order and having only dominant closed-loop\npoles. (In the latter case the maximum overshoot in the step response would be approximately 6%.)\nIt is possible to make a third, a fourth, and still further trials to obtain a better response. But\nthis will take a lot of computations and time. If more trials are desired, it is desirable to use the\ncomputational approach presented in Section 10–3. Problem A–8–12 solves this problem with\nthe computational approach with MATLAB. It finds sets of parameter values that will yield the\nmaximum overshoot of 10% or less and the settling time of 3 sec or less.A solution to the present\nproblem obtained in Problem A–8–12 is that for the PID controller defined by\nG\nc\n(s) = K\n(s + a)\n2\ns\nz = 0.3\n1\ns(s + 1)(s + 5) \njv\nj3\nj2\nj1\n–j3\n–j2\n–j1\n–3 –2 –1–4–51 0 s\nK = 6.32\nK = 6.32\nK = 6.32K = 6.32\nz = 0.3\nz = 0.3\nK (s + 1.4235)\n2\ns+ –\nFigure 8–11\nRoot-locus diagram\nof system when PID\ncontroller has double\nzero at s=–1.4235.\nOpenmirrors.comSection 8–3 / Design of PID Controllers with Frequency-Response Approach 577\n1\ns(s + 1)(s +5)K (s + 0.65)2\ns\njv\nj8\nj6\nj4\nj2\n–j6\n–j8\n–j4\n–j2\n–6 –4 –2–8–10 20 s\nK = 60\nK = 30.322\nK = 30.322\nK = 13.846\nK = 13.846\nK = 13.846\nK = 60\nz = 0.358\nz = 0.67\n+ –\nFigure 8–12\nRoot-locus diagram \nof system when PID \ncontroller has double \nzero at s=–0.65.\nK=13.846\ncorresponds to \ngiven by Equation (8–1)\nand K=30.322\ncorresponds to \ngiven by Equation (8–2).\nGc(s)\nGc(s)\nthe values of K and a are\nK=29, a=0.25\nwith the maximum overshoot equal to 9.52% and settling time equal to 1.78 sec.Another possible\nsolution obtained there is that\nK=27, a=0.2\nwith the 5.5% maximum overshoot and 2.89 sec of settling time. See ProblemA–8–12 for details.\n8–3 DESIGN OF PID CONTROLLERS WITH FREQUENCY-RESPONSE\nAPPROACH\nIn this section we present a design of a PID controller based on the frequency-response\napproach.\nConsider the system shown in Figure 8–13. Using a frequency-response approach, de-\nsign a PID controller such that the static velocity error constant is 4 sec−1, phase margin\nis 50° or more, and gain margin is 10 dB or more. Obtain the unit-step and unit-ramp\nresponse curves of the PID controlled system with MATLAB.\nLet us choose the PID controller to be\nGc(s) = K(as + 1)(bs + 1)\nsSince the static velocity error constant K\nv\nis specified as 4 sec\n–1\n, we have\nThus\nNext, we plot a Bode diagram of\nMATLAB Program 8–2 produces a Bode diagram of G(s).The resulting Bode diagram\nis shown in Figure 8–14.\nG(s) = 4\nsAs\n2\n+ 1B\nG\nc\n(s) = 4(as + 1)(bs + 1)\ns\n= K = 4\nK\nv\n= lim\ns S 0\nsG\nc\n(s) 1\ns\n2\n+ 1 = lim\ns S 0\ns K(as + 1)(bs + 1)\ns\n1\ns\n2\n+ 1\n578\nChapter 8 / PID Controllers and Modified PID Controllers\nFigure 8–13\nControl system.\nG\nc\n(s) 1\ns\n2\n+ 1\n+ –\nMATLAB Program 8–2\nnum = [4];\nden = [1  0.00000000001  1  0];\nw = logspace(-1,1,200);\nbode(num,den,w)\ntitle('Bode Diagram of 4/[s(s^2+1)]')\nFrequency (rad/sec)\nBode Diagram of 4/[s(s\n2\n + 1)]\n−300\n−100\n−50\n−150\n−200\n−250\n0\n−50\n0\nPhase (deg); Magnitude (dB)\n50\n10\n−1\n10\n0\n10\n1\nFigure 8–14\nBode diagram of\n4/CsAs\n2\n+1BD.\nOpenmirrors.comSection 8–3 / Design of PID Controllers with Frequency-Response Approach 579\nMATLAB Program 8–3\nnum = [20  4];\nden = [1 0.00000000001  1  0];\nw = logspace(-2,1,101);\nbode(num,den,w)\ntitle('Bode Diagram of G(s) = 4(5s+1)/[s(s^2+1)]')\nFrequency (rad/sec)\nBode Diagram of G(s) = 4(5s + 1)/[s(s2 + 1)]\n−200\n−50\n−100\n−150\n0\n−20\n0\nPhase (deg); Magnitude (dB)\n60\n20\n40\n10−2 10−1 100 101\nFigure 8–15\nBode diagram of\nG(s)=4(5s+1)/\nCsAs2+1BD.\nWe need the phase margin of at least 50° and gain margin of 10 dB or more.\nFrom the Bode diagram of Figure 8–14, we notice that the gain crossover frequency \nis approximately v=1.8 rad/H20862sec. Let us assume the gain crossover frequency \nof the compensated system to be somewhere between v=1 and v=10 rad/H20862sec.\nNoting that\nwe choose a=5. Then, (as+1) will contribute up to 90° phase lead in the high-\nfrequency region. MATLAB Program 8–3 produces the Bode diagram of\nThe resulting Bode diagram is shown in Figure 8–15.\n4(5s + 1)\nsAs2 + 1B\nGc(s) = 4(as + 1)(bs + 1)\nsBased on the Bode diagram of Figure 8–15, we choose the value of b. The term\n(bs+1) needs to give the phase margin of at least 50°. By simple MATLAB trials, we\nfind b=0.25 to give the phase margin of at least 50° and gain margin of ±q dB.There-\nfore, by choosing b=0.25, we have\nand the open-loop transfer function of the designed system becomes\nMATLAB Program 8–4 produces the Bode diagram of the open-loop transfer function.\nThe resulting Bode diagram is shown in Figure 8–16. From it we see that the static ve-\nlocity error constant is 4 sec\n–1\n, the phase margin is 55°, and the gain margin is ±q dB.\n= 5s\n2\n+ 21s + 4\ns\n3\n+ s\n Open-loop transfer function = 4(5s + 1)(0.25s + 1)\ns\n1\ns\n2\n+ 1\nG\nc\n(s) = 4(5s + 1)(0.25s + 1)\ns\n580\nChapter 8 / PID Controllers and Modified PID Controllers\nMATLAB Program 8–4\nnum = [5  21  4];\nden = [1  0  1  0];\nw = logspace(-2,2,100);\nbode(num,den,w)\ntitle('Bode Diagram of 4(5s+1)(0.25s+1)/[s(s^2+1)]')\nFrequency (rad/sec)\nBode Diagram of 4(5s + 1)(0.25s + 1)/[s(s\n2\n + 1)]\n−200\n−100\n−50\n0\n50\n−150\n100\n−50\nPhase (deg); Magnitude (dB)\n0\n100\n50\n10\n–2\n10\n–1\n10\n0\n10\n1\n10\n2\nFigure 8–16\nBode diagram of\n4(5s+1)(0.25s+1)/\nCsAs\n2\n+1BD.\nOpenmirrors.comSection 8–3 / Design of PID Controllers with Frequency-Response Approach 581\nTherefore, the designed system satisfies all the requirements.Thus, the designed system\nis acceptable. (Note that there exist infinitely many systems that satisfy all the require-\nments. The present system is just one of them.)\nNext, we shall obtain the unit-step response and the unit-ramp response of the de-\nsigned system. The closed-loop transfer function is\nNote that the closed-loop zeros are located at\nThe closed-loop poles are located at\nNotice that the complex-conjugate closed-loop poles have the damping ratio of 0.5237.\nMATLAB Program 8–5 produces the unit-step response and the unit-ramp response.\ns =- 0.1897\ns =- 2.4052 - j3.9119\ns =- 2.4052 + j3.9119\ns =- 4,  s =- 0.2\nC(s)\nR(s) = 5s2 + 21s + 4\ns3 + 5s2 + 22s + 4\nMATLAB Program 8–5\n%***** Unit-step response *****\nnum = [5  21  4];\nden = [1  5  22  4];\nt = 0:0.01:14;\nc = step(num,den,t);\nplot(t,c)\ngrid\ntitle('Unit-Step Response of Compensated System')\nxlabel('t (sec)')\nylabel('Output c(t)')\n%***** Unit-ramp response *****\nnum1 = [5  21  4];\nden1 = [1  5  22  4  0];\nt = 0:0.02:20;\nc = step(num1,den1,t);\nplot(t,c,'-',t,t,'--')\ntitle('Unit-Ramp Response of Compensated System')\nxlabel('t (sec)')\nylabel('Unit-Ramp Input and Output c(t)')\ntext(10.8,8,'Compensated System')582\nChapter 8 / PID Controllers and Modified PID Controllers\nOutput c(t)\nt (sec)\nUnit-Step Response of Compensated System\n1.4\n1.2\n1\n0.8\n0.6\n0.4\n0.2\n0\n02468 1 0 1 2 1 4\nFigure 8–17\nUnit-step response\ncurve.\nUnit-Ramp Input and Output c(t)\nt (sec)\nUnit-Ramp Response of Compensated System\n20\n18\n16\n14\n12\n10\n8\n6\n4\n2\n0\n02468 1 0 1 2 1 4 1 6 1 8 2 0\nCompensated System\nFigure 8–18\nUnit-ramp input and\nthe output curve.\nThe resulting unit-step response curve is shown in Figure 8–17 and the unit-\nramp response curve in Figure 8–18. Notice that the closed-loop pole at s = /H110020.1897\nand the zero at s = /H110020.2 produce a long tail of small amplitude in the unit-step \nresponse.\nFor an additional example of design of a PID controller based on the frequency-\nresponse approach, see Problem A–8–7.\nOpenmirrors.comSection 8–4 / Design of PID Controllers with Computational Optimization Approach 583\n8–4 DESIGN OF PID CONTROLLERS WITH COMPUTATIONAL\nOPTIMIZATION APPROACH\nIn this section we shall explore how to obtain an optimal set (or optimal sets) of\nparameter values of PID controllers to satisfy the transient response specifications by\nuse of MATLAB.We shall present two examples to illustrate the approach in this section.\nEXAMPLE 8–2 Consider the PID-controlled system shown in Figure 8–19. The PID controller is given by\nIt is desired to find a combination of K and a such that the closed-loop system will have 10% (or\nless) maximum overshoot in the unit-step response. (We will not include any other condition in\nthis problem. But other conditions can easily be included, such as that the settling time be less than\na specified value. See, for example, Example 8–3.)\nThere may be more than one set of parameters that satisfy the specifications. In this example,\nwe shall obtain all sets of parameters that satisfy the given specifications.\nTo solve this problem with MATLAB, we first specify the region to search for appropriate K\nand a.We then write a MATLAB program that, in the unit-step response, will find a combination\nof K and a which will satisfy the criterion that the maximum overshoot is 10% or less.\nNote that the gain K should not be too large, so as to avoid the possibility that the system re-\nquire an unnecessarily large power unit.\nAssume that the region to search for K and a is\n2 /H11349K /H113493 and 0.5 /H11349a /H113491.5\nIf a solution does not exist in this region, then we need to expand it. In some problems, however,\nthere is no solution, no matter what the search region might be.\nIn the computational approach, we need to determine the step size for each of K and a. In the\nactual design process, we need to choose step sizes small enough. However, in this example, to avoid\nan overly large number of computations, we choose the step sizes to be reasonable—say, 0.2 for\nboth K and a.\nTo solve this problem it is possible to write many different MATLAB programs.We present here\none such program, MATLAB Program 8–6. In this program, notice that we use two “for” loops.We\nstart the program with the outer loop to vary the “K” values. Then we vary the “a” values in the\ninner loop. We proceed by writing the MATLAB program such that the nested loops in the pro-\ngram begin with the lowest values of “K” and “a” and step toward the highest. Note that, depend-\ning on the system and the ranges of search for “K” and “a” and the step sizes chosen, it may take\nfrom several seconds to a few minutes for MATLAB to compute the desired sets of the values.\nIn this program the statement\nsolution(k,:) = [K(i)  a(j)  m]\nwill produce a table of K, a, m values. (In the present system there are 15 sets of K and a that will\nexhibit m<1.10—that is, the maximum overshoot is less than 10%.)\nGc(s) = K\n(s + a)2\ns\nR(s)\nK\nC(s)\nPID\ncontroller\n1.2\n0.36s3 + 1.86s2 + 2.5s + 1\n(s + a)2\ns+ –\nFigure 8–19\nPID-controlled\nsystem.584\nChapter 8 / PID Controllers and Modified PID Controllers\nTo sort out the solution sets in the order of the magnitude of the maximum overshoot  (starting\nfrom the smallest value of m and ending at the largest value of m in the table), we use the command\nsortsolution = sortrows(solution,3)\nMATLAB Program 8–6\n%'K' and 'a' values to test\nK = [2.0  2.2  2.4  2.6  2.8  3.0];\na = [0.5  0.7  0.9  1.1  1.3  1.5];\n% Evaluate closed-loop unit-step response at each 'K' and 'a' combination\n% that will yield the maximum overshoot less than 10%\nt = 0:0.01:5;\ng = tf([1.2],[0.36  1.86  2.5  1]);\nk = 0;\nfor i = 1:6;\nfor j = 1:6;\ngc = tf(K(i)*[1  2*a(j)  a(j)^2], [1  0]);  % controller\nG = gc*g/(1 + gc*g);  % closed-loop transfer function\ny = step(G,t);\nm = max(y);\nif m < 1.10\nk = k+1;\nsolution(k,:) = [K(i)  a(j)  m];\nend\nend\nend\nsolution  % Print solution table\nsolution =\n2.0000  0.5000  0.9002\n2.0000  0.7000  0.9807\n2.0000  0.9000  1.0614\n2.2000  0.5000  0.9114\n2.2000  0.7000  0.9837\n2.2000  0.9000  1.0772\n2.4000  0.5000  0.9207\n2.4000  0.7000  0.9859\n2.4000  0.9000  1.0923\n2.6000  0.5000  0.9283\n2.6000  0.7000  0.9877\n2.8000  0.5000  0.9348\n2.8000  0.7000  1.0024\n3.0000  0.5000  0.9402\n3.0000  0.7000  1.0177\nsortsolution = sortrows(solution,3)  % Print solution table sorted by\n% column 3\n(continues on next page)\nOpenmirrors.comSection 8–4 / Design of PID Controllers with Computational Optimization Approach 585\nsortsolution =\n2.0000  0.5000  0.9002\n2.2000  0.5000  0.9114\n2.4000  0.5000  0.9207\n2.6000  0.5000  0.9283\n2.8000  0.5000  0.9348\n3.0000  0.5000  0.9402\n2.0000  0.7000  0.9807\n2.2000  0.7000  0.9837\n2.4000  0.7000  0.9859\n2.6000  0.7000  0.9877\n2.8000  0.7000  1.0024\n3.0000  0.7000  1.0177\n2.0000  0.9000  1.0614\n2.2000  0.9000  1.0772\n2.4000  0.9000  1.0923\n% Plot the response with the largest overshoot that is less than 10%\nK = sortsolution(k,1)\nK =\n2.4000\na = sortsolution(k,2)\na =\n0.9000\ngc = tf(K*[1  2*a  a^2], [1  0]);\nG = gc*g/(1 + gc*g);\nstep(G,t)\ngrid  % See Figure 8–20\n% If you wish to plot the response with the smallest overshoot that is\n% greater than 0%, then enter the following values of 'K' and 'a'\nK = sortsolution(11,1)\nK =\n2.8000\na = sortsolution(11,2)\na =\n0.7000\ngc = tf(K*[1  2*a  a^2], [1  0]);\nG = gc*g/(1 + gc*g);\nstep(G,t)\ngrid  % See Figure 8–21586\nChapter 8 / PID Controllers and Modified PID Controllers\nAmplitude\nTime (sec)\nStep Response\n1.4\n1.2\n1\n0.8\n0.6\n0.4\n0.2\n0\n0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5\nFigure 8–20\nUnit-step response of\nthe system with\nK=2.4 and a=0.9.\n(The maximum\novershoot is 9.23%.)\nTo plot the unit-step response curve of the last set of the K and a values in the sorted table,\nwe enter the commands\nK = sortsolution (k,1)\na = sortsolution (k,2)\nand use the step command. (The resulting unit-step response curve is shown in Figure 8–20.) To\nplot the unit-step response curve with the smallest overshoot that is greater than 0% found in the\nsorted table, enter the commands\nK = sortsolution (11,1)\na = sortsolution (11,2)\nand use the step command. (The resulting unit-step response curve is shown in Figure 8–21.)\nAmplitude\nTime (sec)\nStep Response\n1.2\n1.4\n1\n0.8\n0.6\n0.4\n0.2\n0\n0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5\nFigure 8–21\nUnit-step response of\nthe system with\nK=2.8 and a=0.7.\n(The maximum\novershoot is 0.24%.)\nOpenmirrors.comSection 8–4 / Design of PID Controllers with Computational Optimization Approach 587\nTo plot the unit-step response curve of the system with any set shown in the sorted table, we spec-\nify the K and a values by entering an appropriate sortsolution command.\nNote that for a specification that the maximum overshoot be between 10 % and 5%, there\nwould be three sets of solutions:\nK=2.0000, a=0.9000, m=1.0614\nK=2.2000, a=0.9000, m=1.0772\nK=2.4000, a=0.9000, m=1.0923\nUnit-step response curves for these three cases are shown in Figure 8–22. Notice that the sys-\ntem with a larger gain K has a smaller rise time and larger maximum overshoot.Which one of these\nthree systems is best depends on the system’s objective.\nEXAMPLE 8–3 Consider the system shown in Figure 8–23. We want to find all combinations of K and a values\nsuch that the closed-loop system has a maximum overshoot of less than 15%, but more than 10%,\nin the unit-step response. In addition, the settling time should be less than 3 sec. In this problem,\nassume that the search region is\n3 /H11349K /H113495 and 0.1 /H11349a /H113493\nDetermine the best choice of the parameters K and a.\nAmplitude\nTime (sec)\nUnit-Step Response Curves\n1.4\n1.2\n1\n0.8\n0.6\n0.4\n0.2\n0\n0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5\nK = 2.4, a = 0.9 \nK = 2.2, a = 0.9 \nK = 2, a = 0.9 \nFigure 8–22\nUnit-step response\ncurves of system with\nK=2, a=0.9;\nK=2.2, a=0.9;\nand K=2.4,\na=0.9.\nR(s) C(s)\nPID\ncontroller\n4\ns3 + 6s2 + 8s + 4+ –\nPlant\n(s + a)2\nsK\nFigure 8–23\nPID-controlled\nsystem with a\nsimplified PID\ncontroller.588\nChapter 8 / PID Controllers and Modified PID Controllers\nIn this problem, we choose the step sizes to be reasonable, — say 0.2 for K and 0.1 for a. MATLAB\nProgram 8–7 gives the solution to this problem. From the sortsolution table, it looks like the first row\nis a good choice. Figure 8–24 shows the unit step response curve for K = 3.2 and a = 0.9. Since this choice\nrequires a smaller K value than most other choices, we may decide that the first row is the best choice.\nMATLAB Program 8–7\nt = 0:0.01:8;\nk = 0;\nfor K = 3:0.2:5;\nfor a = 0.1:0.1:3; \nnum = [4*K  8*K*a  4*K*a^2];\nden = [1  6  8+4*K  4+8*K*a  4*K*a^2];\ny = step(num,den,t);\ns = 801;while y(s)>0.98 & y(s)<1.02; s = s – 1;end;\nts = (s–1)*0.01; % ts = settling time;\nm = max(y);\nif m<1.15 & m>1.10; if ts<3.00;\nk = k+1;\nsolution(k,:) = [K  a  m  ts];\nend\nend\nend\nend\nsolution\nsolution =\n3.0000 1.0000 1.1469 2.7700\n3.2000 0.9000 1.1065 2.8300\n3.4000 0.9000 1.1181 2.7000\n3.6000 0.9000 1.1291 2.5800\n3.8000 0.9000 1.1396 2.4700\n4.0000 0.9000 1.1497 2.3800\n4.2000 0.8000 1.1107 2.8300\n4.4000 0.8000 1.1208 2.5900\n4.6000 0.8000 1.1304 2.4300\n4.8000 0.8000 1.1396 2.3100\n5.0000 0.8000 1.1485 2.2100\nsortsolution = sortrows(solution,3)\nsortsolution =\n3.2000 0.9000 1.1065 2.8300\n4.2000 0.8000 1.1107 2.8300\n3.4000 0.9000 1.1181 2.7000\n4.4000 0.8000 1.1208 2.5900\n3.6000 0.9000 1.1291 2.5800\n4.6000 0.8000 1.1304 2.4300\n4.8000 0.8000 1.1396 2.3100\n3.8000 0.9000 1.1396 2.4700\n(continues on next page)\nOpenmirrors.comSection 8–4 / Design of PID Controllers with Computational Optimization Approach 589\n3.0000 1.0000 1.1469 2.7700\n5.0000 0.8000 1.1485 2.2100\n4.0000 0.9000 1.1497 2.3800\n% Plot the response curve with the smallest overshoot shown in\nsortsolution table.\nK = sortsolution(1,1), a = sortsolution(1,2)\nK =\n3.2000\na =\n0.9000\nnum = [4*K 8*K*a 4*K*a^2];\nden = [1 6 8+4*K 4+8*K*a 4*K*a^2];\nnum\nnum = \n12.8000 23.0400 10.3680\nden\nden = \n1.0000 6.0000 20.8000 27.0400 10.3680\ny = step(num,den,t);\nplot(t,y) % See Figure 8–24.\ngrid\ntitle('Unit-Step Response')\nxlabel('t sec')\nylabel('Output y(t)')\n0\n0\n0.2\n0.4\n0.6\n0.8\n1\n1.2\n1.4\n2468\nt sec\nOutput y(t)\nUnit-Step Response\nFigure 8–24\nUnit-step response\ncurve of the system\nwithK=3.2 and \na=0.9.590\nChapter 8 / PID Controllers and Modified PID Controllers\n8–5 MODIFICATIONS OF PID CONTROL SCHEMES\nConsider the basic PID control system shown in Figure 8–25(a), where the system is sub-\njected to disturbances and noises. Figure 8–25(b) is a modified block diagram of the same\nsystem. In the basic PID control system such as the one shown in Figure 8–25(b), if the ref-\nerence input is a step function, then, because of the presence of the derivative term in the\ncontrol action, the manipulated variable u(t) will involve an impulse function (delta func-\ntion). In an actual PID controller, instead of the pure derivative term , we employ\nwhere the value of g is somewhere around 0.1. Therefore, when the reference input is a\nstep function, the manipulated variable u(t) will not involve an impulse function, but will\ninvolve a sharp pulse function. Such a phenomenon is called set-point kick.\nPI-D Control. To avoid the set-point kick phenomenon, we may wish to operate\nthe derivative action only in the feedback path so that differentiation occurs only on\nthe feedback signal and not on the reference signal.The control scheme arranged in this\nway is called the PI-D control. Figure 8–26 shows a PI-D-controlled system.\nFrom Figure 8–26, it can be seen that the manipulated signal U(s) is given by\nU(s) = K\np\na\n1 + 1\nT\ni\n \ns\nb\nR(s) - K\np\na\n1 + 1\nT\ni\n \ns + T\nd\n \ns\nb\nB(s)\nT\nd\n \ns\n1 + gT\nd\n \ns\nT\nd\n \ns\nPID\ncontroller\nPlant\nG\np\n(s)\n1\nT\ni\ns\n1\nT\nd\ns\nOutput\nY(s)\nNoise\nN(s)\nReference\ninput R(s)\n(a)\n(b)\nDisturbance\nD(s)\nG\np\n(s)\nY(s)\nN(s)\nR(s) E(s)\nB(s)\nObserved signal B(s)\nU(s)\nD(s)\nK\np\n+ –\n++\n++\n++\n++\n+\n+ +\n+ –\nFigure 8–25\n(a) PID-controlled\nsystem;\n(b) equivalent block\ndiagram.\nOpenmirrors.comSection 8–5 / Modifications of PID Control Schemes 591\nNotice that in the absence of the disturbances and noises, the closed-loop transfer\nfunction of the basic PID control system [shown in Figure 8–25(b)] and the PI-D control\nsystem (shown in Figure 8–26) are given, respectively, by\nand\nIt is important to point out that in the absence of the reference input and noises, the\nclosed-loop transfer function between the disturbance D(s) and the output Y(s) in\neither case is the same and is given by\nI-PD Control. Consider the case where the reference input is a step function. Both\nPID control and PI-D control involve a step function in the manipulated signal. Such a\nstep change in the manipulated signal may not be desirable in many occasions. There-\nfore, it may be advantageous to move the proportional action and derivative action to\nthe feedback path so that these actions affect the feedback signal only. Figure 8–27 shows\nsuch a control scheme. It is called the I-PD control. The manipulated signal is given by\nNotice that the reference input R(s) appears only in the integral control part. Thus, in\nI-PD control, it is imperative to have the integral control action for proper operation of\nthe control system.\nU(s) = Kp\n1\nTi s R(s) - Kp a1 + 1\nTi s + Td s bB(s)\nY(s)\nD(s) =\nGp(s)\n1 + Kp Gp(s) a1 + 1\nTi s + Td s b\nY(s)\nR(s) = a1 + 1\nTi s b\nKp Gp(s)\n1 + a1 + 1\nTi s + Td s bKp Gp(s)\nY(s)\nR(s) = a1 + 1\nTi s + Td s b\nKp Gp(s)\n1 + a1 + 1\nTi s + Td s bKp Gp(s)\n1\nTis\n1\nGp(s)\nY(s)\nN(s)\nR(s) E(s)\nB(s)\nU(s)\nD(s)\nKp\nTds\nB(s)\n+ – + –\n+ ++\n++\nFigure 8–26\nPI-D-controlled\nsystem.592\nChapter 8 / PID Controllers and Modified PID Controllers\n1\nT\ni\ns\nG\np\n(s)\nY(s)\nN(s)\nR(s)\nB(s)\nB(s)\nU(s)\nD(s)\nK\np\nT\nd\ns\n1\n+ –\n+\n–\n++\n++\nFigure 8–27\nI-PD-controlled\nsystem.\nThe closed-loop transfer function Y(s)/R(s) in the absence of the disturbance input\nand noise input is given by\nIt is noted that in the absence of the reference input and noise signals, the closed-loop\ntransfer function between the disturbance input and the output is given by\nThis expression is the same as that for PID control or PI-D control.\nTwo-Degrees-of-Freedom PID Control. We have shown that PI-D control is ob-\ntained by moving the derivative control action to the feedback path, and I-PD control\nis obtained by moving the proportional control and derivative control actions to the\nfeedback path. Instead of moving the entire derivative control action or proportional\ncontrol action to the feedback path, it is possible to move only portions of these control\nactions to the feedback path, retaining the remaining portions in the feedforward path.\nIn the literature, PI-PD control has been proposed. The characteristics of this control\nscheme lie between PID control and I-PD control. Similarly, PID-PD control can be\nconsidered. In these control schemes, we have a controller in the feedforward path and\nanother controller in the feedback path. Such control schemes lead us to a more gener-\nal two-degrees-of-freedom control scheme.We shall discuss details of such a two-degrees-\nof-freedom control scheme in subsequent sections of this chapter.\n8–6 TWO-DEGREES-OF-FREEDOM CONTROL\nConsider the system shown in Figure 8–28, where the system is subjected to the\ndisturbance input D(s) and noise input N(s), in addition to the reference input R(s).\nis the transfer function of the controller and is the transfer function of the\nplant. We assume that is fixed and unalterable.G\np\n(s)\nG\np\n(s)G\nc\n(s)\nY(s)\nD(s) =\nG\np\n(s)\n1 + K\np\n \nG\np\n(s)\na\n1 + 1\nT\ni\n \ns + T\nd\n \ns\nb\nY(s)\nR(s) =\na\n1\nT\ni\n \ns\nb\nK\np\n \nG\np\n(s)\n1 + K\np\n \nG\np\n(s)\na\n1 + 1\nT\ni\n \ns + T\nd\n \ns\nb\nOpenmirrors.comSection 8–6 / Two-Degrees-of-Freedom Control 593\nFor this system, three closed-loop transfer functions Y(s)/R(s)= Gyr ,\nY(s)/D(s)=Gyd , and Y(s)/N(s)=Gyn may be derived. They are\n[In deriving Y(s)/R(s), we assumed D(s)=0 and N(s)=0. Similar comments apply\nto the derivations of Y(s)/D(s) and Y(s)/N(s).] The degrees of freedom of the control\nsystem refers to how many of these closed-loop transfer functions are independent. In\nthe present case, we have\nAmong the three closed-loop transfer functions Gyr , Gyn , and Gyd, if one of them is\ngiven, the remaining two are fixed. This means that the system shown in Figure 8–28 is\na one-degree-of-freedom control system.\nNext consider the system shown in Figure 8–29, where is the transfer function\nof the plant. For this system, closed-loop transfer functions Gyr , Gyn , and Gyd are given,\nrespectively, by\n Gyn = Y(s)\nN(s) =-  \nAGc1 + Gc2BGp\n1 + AGc1 + Gc2BGp\n Gyd = Y(s)\nD(s) =\nGp\n1 + AGc1 + Gc2BGp\n Gyr = Y(s)\nR(s) =\nGc1 Gp\n1 + AGc1 + Gc2BGp\nGp(s)\n Gyn =\nGyd - Gp\nGp\n Gyr =\nGp - Gyd\nGp\n Gyn = Y(s)\nN(s) =-  \nGc Gp\n1 + Gc Gp\n Gyd = Y(s)\nD(s) =\nGp\n1 + Gc Gp\n Gyr = Y(s)\nR(s) =\nGc Gp\n1 + Gc Gp\nGp(s)\nY(s)\nN(s)\nR(s)\nB(s)\nU(s)\nD(s)\nGc(s)+ – ++\n++\nFigure 8–28\nOne-degree-of-\nfreedom control\nsystem.594\nChapter 8 / PID Controllers and Modified PID Controllers\nHence, we have\nIn this case, if G\nyd\nis given, then G\nyn\nis fixed, but G\nyr\nis not fixed, because G\nc1\nis\nindependent of G\nyd\n. Thus, two closed-loop transfer functions among three closed-loop\ntransfer functions G\nyr\n, G\nyd\n, and G\nyn\nare independent. Hence, this system is a two-degrees-\nof-freedom control system.\nSimilarly, the system shown in Figure 8–30 is also a two-degrees-of-freedom control\nsystem, because for this system\n G\nyn\n= Y(s)\nN(s) =-  \nG\nc1\n \nG\np\n1 + G\nc1\n \nG\np\n G\nyd\n= Y(s)\nD(s) =\nG\np\n1 + G\nc1\n \nG\np\n G\nyr\n= Y(s)\nR(s) =\nG\nc1\n \nG\np\n1 + G\nc1\n \nG\np\n+\nG\nc2\n \nG\np\n1 + G\nc1\n \nG\np\n G\nyn\n=\nG\nyd\n- G\np\nG\np\n G\nyr\n= G\nc1\n \nG\nyd\nG\np\n(s)\nG\nc1\n(s)\nY(s)\nN(s)\nR(s)\nB(s)\nU(s)\nD(s)\nG\nc2\n(s)\nB(s)\n++\n++\n+ –\n+ –\nFigure 8–29\nTwo-degrees-of-\nfreedom control\nsystem.\nG\np\n(s)\nG\nc1\n(s)\nG\nc2\n(s)\nY(s)\nN(s)\nU(s)\nD(s)\nR(s)\nB(s)\n+ –\n++\n++\n++\nFigure 8–30\nTwo-degrees-of-\nfreedom control\nsystem.\nOpenmirrors.comSection 8–7 / Zero-Placement Approach to Improve Response Characteristics 595\nHence,\nClearly, if Gyd is given, then Gyn is fixed, but Gyr is not fixed, because Gc2 is independ-\nent of Gyd .\nIt will be seen in Section 8–7 that, in such a two-degrees-of-freedom control system,\nboth the closed-loop characteristics and the feedback characteristics can be adjusted\nindependently to improve the system response performance.\n8–7 ZERO-PLACEMENT APPROACH TO IMPROVE \nRESPONSE CHARACTERISTICS\nWe shall show here that by use of the zero-placement approach presented later in this\nsection, we can achieve the following:\nThe responses to the ramp reference input and acceleration reference input exhibit\nno steady-state errors.\nIn high-performance control systems it is always desired that the system output follow\nthe changing input with minimum error. For step, ramp, and acceleration inputs, it is\ndesired that the system output exhibit no steady-state error.\nIn what follows, we shall demonstrate how to design control systems that will exhibit\nno steady-state errors in following ramp and acceleration inputs and at the same time\nforce the response to the step disturbance input to approach zero quickly.\nConsider the two-degrees-of-freedom control system shown in Figure 8–31. Assume\nthat the plant transfer function is a minimum-phase transfer function and is\ngiven by\nGp(s) = K A(s)\nB(s)\nGp(s)\n Gyn =\nGyd - Gp\nGp\n Gyr = Gc2 Gyd +\nGp - Gyd\nGp\nGp(s)Gc1(s)\nY(s)R(s)\nD(s)\nGc2(s)\n+++ –+ –\nFigure 8–31\nTwo-degrees-of-\nfreedom control\nsystem.596\nChapter 8 / PID Controllers and Modified PID Controllers\nwhere\nA(s)=As+z\n1\nBAs+z\n2\nBp As+z\nm\nB\nB(s)=s\nN\nAs+p\nN±1\nBAs+p\nN±2\nBp As+p\nn\nB\nwhere N may be 0, 1, 2 and n /H11350m. Assume also that G\nc1\nis a PID controller followed\nby a filter 1/A(s), or\nand G\nc2\nis a PID, PI, PD, I, D, or P controller followed by a filter 1/A(s). That is\nwhere some of a\n2\n, b\n2\n, and g\n2\nmay be zero. Then it is possible to write as\n(8–3)\nwhere a, b, and g are constants. Then\nBecause of the presence of s in the numerator, the response y(t) to a step disturbance\ninput approaches zero as t approaches infinity, as shown below. Since\nif the disturbance input is a step function of magnitude d, or\nand assuming the system is stable, then\n = 0\n = lim\ns S 0\n sKA(0)d\nsB(0) + bK\n y(q) = lim\ns S 0\ns\nc\nsKA(s)\nsB(s) + Aas + b + gs\n2\nBK\nd\n d\ns\nD(s) = d\ns\nY(s) = sKA(s)\nsB(s) + Aas + b + gs\n2\nBK D(s)\n = sKA(s)\nsB(s) + Aas + b + gs\n2\nBK\n Y(s)\nD(s) =\nG\np\n1 + AG\nc1\n+ G\nc2\nBG\np\n=\nK A(s)\nB(s)\n1 + as + b + gs\n2\ns  K\nB(s)\nG\nc1\n+ G\nc2\n= as + b + gs\n2\ns\n1\nA(s)\nG\nc1\n+ G\nc2\nG\nc2\n(s) = a\n2\n \ns + b\n2\n+ g\n2\n \ns\n2\ns\n1\nA(s)\nG\nc1\n(s) = a\n1\n \ns + b\n1\n+ g\n1\n \ns\n2\ns\n1\nA(s)\nOpenmirrors.comThe response y(t) to a step disturbance input will have the general form shown in\nFigure 8–32.\nNote that Y(s)/R(s) and Y(s)/D(s) are given by\nNotice that the denominators of Y(s)/R(s) and Y(s)/D(s) are the same. Before we\nchoose the poles of Y(s)/R(s), we need to place the zeros of Y(s)/R(s).\nZero Placement. Consider the system\nIf we choose p(s) as\np(s)=a2 s2+a1 s+a0=a2 As+s1 BAs+s2 B\nthat is, choose the zeros s=–s1 and s=–s2 such that, together with a2, the numerator\npolynomial p(s) is equal to the sum of the last three terms of the denominator\npolynomial—then the system will exhibit no steady-state errors in response to the step\ninput, ramp input, and acceleration input.\nRequirement Placed on System Response Characteristics. Suppose that it is\ndesired that the maximum overshoot in the response to the unit-step reference input be\nbetween arbitrarily selected upper and lower limits—for example,\n2%<maximum overshoot<10%\nwhere we choose the lower limit to be slightly above zero to avoid having overdamped\nsystems. The smaller the upper limit, the harder it is to determine the coefficienta’s. In\nsome cases, no combination of the a’s may exist to satisfy the specification, so we must\nallow a higher upper limit for the maximum overshoot. We use MATLAB to search at\nleast one set of the a’s to satisfy the specification. As a practical computational matter,\ninstead of searching for the a’s, we try to obtain acceptable closed-loop poles by search-\ning a reasonable region in the left-half s plane for each closed-loop pole. Once we\ndetermine all closed-loop poles, then all coefficients an,a n–1 , p ,a 1,a 0 will be determined.\nY(s)\nR(s) = p(s)\nsn + 1 + an sn + an - 1 sn - 1 + p + a2 s2 + a1 s + a0\nY(s)\nR(s) =\nGc1 Gp\n1 + AGc1 + Gc2BGp\n,  Y(s)\nD(s) =\nGp\n1 + AGc1 + Gc2BGp\nSection 8–7 / Zero-Placement Approach to Improve Response Characteristics 597\n0 t\ny\nFigure 8–32\nTypical response\ncurve to a step\ndisturbance input.598\nChapter 8 / PID Controllers and Modified PID Controllers\nDetermination of G\nc2\n. Now that the coefficients of the transfer functionY(s)/R(s)\nare all known and Y(s)/R(s) is given by\n(8–4)\nwe have\nSince G\nc1\nis a PID controller and is given by\nY(s)/R(s) can be written as\nTherefore, we choose\nso that\n(8–5)\nThe response of this system to the unit-step reference input can be made to exhibit the\nmaximum overshoot between the chosen upper and lower limits, such as\n2%<maximum overshoot<10%\nThe response of the system to the ramp reference input or acceleration reference input\ncan be made to exhibit no steady-state error. The characteristic of the system of Equa-\ntion (8–4) is that it generally exhibits a short settling time. If we wish to further shorten\nthe settling time, then we need to allow a larger maximum overshoot—for example,\n2%<maximum overshoot<20%\nThe controller G\nc2\ncan now be determined from Equations (8–3) and (8–5). Since\nG\nc1\n+ G\nc2\n= as + b + gs\n2\ns\n1\nA(s)\nG\nc1\n= a\n1\n \ns + a\n0\n+ a\n2\n \ns\n2\nKs\n1\nA(s)\nKg\n1\n= a\n2\n \n,\n  \nKa\n1\n= a\n1\n \n,\n  \nKb\n1\n= a\n0\nY(s)\nR(s) =\nKAa\n1\n \ns + b\n1\n+ g\n1\n \ns\n2\nB\ns\nn + 1\n+ a\nn\n \ns\nn\n+ a\nn - 1\n \ns\nn - 1\n+ p + a\n2\n \ns\n2\n+ a\n1\n \ns + a\n0\nG\nc1\n= a\n1\n \ns + b\n1\n+ g\n1\n \ns\n2\ns\n1\nA(s)\n = G\nc1\n \nsKA(s)\ns\nn + 1\n+ a\nn\n \ns\nn\n+ a\nn - 1\n \ns\nn - 1\n+ p + a\n2\n \ns\n2\n+ a\n1\n \ns + a\n0\n = G\nc1\n \nsKA(s)\nsB(s) + Aas + b + gs\n2\nBK\n Y(s)\nR(s) = G\nc1\nY(s)\nD(s)\nY(s)\nR(s) = a\n2\n \ns\n2\n+ a\n1\n \ns + a\n0\ns\nn + 1\n+ a\nn\n \ns\nn\n+ a\nn - 1\n \ns\nn - 1\n+ p + a\n2\n \ns\n2\n+ a\n1\n \ns + a\n0\nOpenmirrors.comSection 8–7 / Zero-Placement Approach to Improve Response Characteristics 599\nwe have\n(8–6)\nThe two controllers Gc1 and Gc2 can be determined from Equations (8–5) and (8–6).\nEXAMPLE 8–4 Consider the two-degrees-of-freedom control system shown in Figure 8–33. The plant transfer\nfunction is given by\nDesign controllers and such that the maximum overshoot in the response to the\nunit-step reference input be less than 19 %, but more than 2%, and the settling time be less than\n1 sec. It is desired that the steady-state errors in following the ramp reference input and acceler-\nation reference input be zero.The response to the unit-step disturbance input should have a small\namplitude and settle to zero quickly.\nTo design suitable controllers and first note that\nTo simplify the notation, let us define\nGc=Gc1+Gc2\nThen\n = 10\ns(s + 1) + 10Gc\n \nY(s)\nD(s) =\nGp\n1 + Gp Gc\n=\n10\ns(s + 1)\n1 + 10\ns(s + 1) Gc\nY(s)\nD(s) =\nGp\n1 + GpAGc1 + Gc2B\nGc2(s),Gc1(s)\nGc2(s)Gc1(s)\nGp(s) = 10\ns(s + 1)\nGp(s)\n =\nAKa - a1Bs + AKb - a0B + AKg - a2Bs2\nKs  1\nA(s)\n Gc2 = cas + b + gs2\ns - a1 s + a0 + a2 s2\nKs d 1\nA(s)\nGp(s)Gc1(s)\nY(s)R(s) U(s)\nD(s)\nGc2(s)\n+++ –+ –\nFigure 8–33\nTwo-degrees-\nof-freedom control\nsystem.600\nChapter 8 / PID Controllers and Modified PID Controllers\nSecond, note that\nNotice that the characteristic equation for Y(s)/D(s) and the one for Y(s)/R(s) are identical.\nWe may be tempted to choose a zero of at s=–1 to cancel a pole at s=–1 of the\nplant However, the canceled pole s=–1 becomes a closed-loop pole of the entire system,\nas seen below. If we define as a PID controller such that\n(8–7)\nthen\nThe closed-loop pole at s=–1 is a slow-response pole, and if this closed-loop pole is included in\nthe system, the settling time will not be less than 1 sec. Therefore, we should not choose as\ngiven by Equation (8–7).\nThe design of controllers and consists of two steps.\nDesign Step 1: We design to satisfy the requirements on the response to the step-\ndisturbance input D(s). In this design stage, we assume that the reference input is zero.\nSuppose that we assume that is a PID controller of the form\nThen the closed-loop transfer function Y(s)/D(s) becomes\nNote that the presence of “s” in the numerator of Y(s)/D(s) assures that the steady-state response\nto the step disturbance input is zero.\nLet us assume that the desired dominant closed-loop poles are complex conjugates and are\ngiven by\ns=–a_jb\n = 10s\ns\n2\n(s + 1) + 10K(s + a)(s + b)\n = 10\ns(s + 1) +\n10K(s + a)(s + b)\ns\n \nY(s)\nD(s) = 10\ns(s + 1) + 10G\nc\nG\nc\n(s) =\nK(s + a)(s + b)\ns\nG\nc\n(s)\nG\nc\n(s)\nG\nc2\n(s)G\nc1\n(s)\nG\nc\n(s)\n = 10s\n(s + 1)Cs\n2\n+ 10K(s + b)D\n \nY(s)\nD(s) = 10\ns(s + 1) +\n10K(s + 1)(s + b)\ns\nG\nc\n(s) =\nK(s + 1)(s + b)\ns\nG\nc\n(s)\nG\np\n(s).\nG\nc\n(s)\nY(s)\nR(s) =\nG\np\n \nG\nc1\n1 + G\np\n \nG\nc\n= 10G\nc1\ns(s + 1) + 10G\nc\nOpenmirrors.comSection 8–7 / Zero-Placement Approach to Improve Response Characteristics 601\nand the remaining closed-loop pole is real and is located at\ns=–c\nNote that in this problem there are three requirements. The first requirement is that the\nresponse to the step disturbance input damp out quickly.The second requirement is that the max-\nimum overshoot in the response to the unit-step reference input be between 19% and 2% and the\nsettling time be less than 1 sec. The third requirement is that the steady-state errors in the re-\nsponses to both the ramp and acceleration reference inputs be zero.\nA set (or sets) of reasonable values of a, b, and c must be searched using a computational\napproach. To satisfy the first requirement, we choose the search region for a, b, and c to be\n2 /H11349a /H113496, 2 /H11349b /H113496, 6 /H11349c /H1134912\nThis region is shown in Figure 8–34. If the dominant closed-loop poles s=–a_jb are located\nanywhere in the shaded region, the response to a step disturbance input will damp out quickly. (The\nfirst requirement will be met.)\nNotice that the denominator of Y(s)/D(s) can be written as\n = s3 + (2a + c)s2 + Aa2 + b2 + 2acBs + Aa2 + b2Bc\n = (s + a + jb)(s + a - jb)(s + c)\n = s3 + (1 + 10K)s2 + 10K(a + b)s + 10Kab\ns2(s + 1) + 10K(s + a)(s + b)\n0\nj6\nj4\nj2\n–j6\n–j4\n–j2\n–6 –4 –2–8–10–12 2 s\nRegion for\na and b\nRegion for c\njv\nFigure 8–34\nSearch regions for\na, b,and c.602\nChapter 8 / PID Controllers and Modified PID Controllers\nSince the denominators of Y(s)/D(s) and Y(s)/R(s) are the same, the denominator of Y(s)/D(s)\ndetermines also the response characteristics for the reference input. To satisfy the third require-\nment, we refer to the zero-placement method and choose the closed-loop transfer function\nY(s)/R(s) to be of the following form:\nin which case the third requirement is automatically satisfied.\nOur problem then becomes a search of a set or sets of desired closed-loop poles in terms\nof a, b, and c in the specified region, such that the system will satisfy the requirement on the re-\nsponse to the unit-step reference input that the maximum overshoot be between 19% and 2% and\nthe settling time be less than 1 sec. (If an acceptable set cannot be found in the search region, we\nneed to widen the region.)\nIn the computational search, we need to assume a reasonable step size. In this problem, we\nassume it to be 0.2.\nMATLAB Program 8–8 produces a table of sets of acceptable values ofa, b, and c. Using this\nprogram, we find that the requirement on the response to the unit-step reference input is met by\nany of the 23 sets shown in the table in MATLAB Program 8–8. Note that the last row in the\ntable corresponds to the last search point. This point does not satisfy the requirement and thus it\nshould simply be ignored. (In the program written, the last search point produces the last row in\nthe table whether or not it satisfies the requirement.)\nY(s)\nR(s) =\n(2a + c)s\n2\n+ Aa\n2\n+ b\n2\n+ 2acBs + Aa\n2\n+ b\n2\nBc\ns\n3\n+ (2a + c)s\n2\n+ Aa\n2\n+ b\n2\n+ 2acBs + Aa\n2\n+ b\n2\nBc\nMATLAB Program 8–8\nt = 0:0.01:4;\nk = 0;\nfor i = 1:21;\na(i) = 6.2-i*0.2;\nfor j = 1:21;\nb(j) = 6.2-j*0.2;\nfor h = 1:31;\nc(h) = 12.2-h*0.2;\nnum = [0  2*a(i)+c(h)  a(i)^2+b(j)^2+2*a(i)*c(h)  (a(i)^2+b(j)^2)*c(h)];\nden = [1  2*a(i)+c(h)  a(i)^2+b(j)^2+2*a(i)*c(h)  (a(i)^2+b(j)^2)*c(h)];\ny = step(num,den,t);\nm = max(y);\ns = 401; while y(s) > 0.98 & y(s) < 1.02;\ns = s-1; end;\nts = (s-1)*0.01;\nif m < 1.19 & m > 1.02 & ts < 1.0;\nk = k+1;\ntable(k,:) = [a(i)  b(j)  c(h)  m  ts];\nend\nend\nend\nend\n(continues on next page)\nOpenmirrors.comSection 8–7 / Zero-Placement Approach to Improve Response Characteristics 603\nAs noted above, 23 sets of variables a, b, and c satisfy the requirement. Unit-step response\ncurves of the system with any of the 23 sets are about the same.The unit-step response curve with\na=4.2, b=2, c=12\nis shown in Figure 8–35(a). The maximum overshoot is 18.96 % and the settling time is 0.85 sec.\nUsing these values of a, b, and c, the desired closed-loop poles are located at\ns=–4.2_j2, s=–12\nUsing these closed-loop poles, the denominator of Y(s)/D(s) becomes\nor\n= s3 + 20.4s2 + 122.44s + 259.68s3 + (1 + 10K)s2 + 10K(a + b)s + 10Kab\n= (s + 4.2 + j2)(s + 4.2 - j2)(s + 12)s2(s + 1) + 10K(s + a)(s + b)\ntable(k,:) = [a(i)  b(j)  c(h)  m  ts]\ntable =\n4.2000  2.0000  12.0000  1.1896  0.8500\n4.0000  2.0000  12.0000  1.1881  0.8700\n4.0000  2.0000  11.8000  1.1890  0.8900\n4.0000  2.0000  11.6000  1.1899  0.9000\n3.8000  2.2000  12.0000  1.1883  0.9300\n3.8000  2.2000  11.8000  1.1894  0.9400\n3.8000  2.0000  12.0000  1.1861  0.8900\n3.8000  2.0000  11.8000  1.1872  0.9100\n3.8000  2.0000  11.6000  1.1882  0.9300\n3.8000  2.0000  11.4000  1.1892  0.9400\n3.6000  2.4000  12.0000  1.1893  0.9900\n3.6000  2.2000  12.0000  1.1867  0.9600\n3.6000  2.2000  11.8000  1.1876  0.9800\n3.6000  2.2000  11.6000  1.1886  0.9900\n3.6000  2.0000  12.0000  1.1842  0.9200\n3.6000  2.0000  11.8000  1.1852  0.9400\n3.6000  2.0000  11.6000  1.1861  0.9500\n3.6000  2.0000  11.4000  1.1872  0.9700\n3.6000  2.0000  11.2000  1.1883  0.9800\n3.4000  2.0000  12.0000  1.1820  0.9400\n3.4000  2.0000  11.8000  1.1831  0.9600\n3.4000  2.0000  11.6000  1.1842  0.9800\n3.2000  2.0000  12.0000  1.1797  0.9600\n2.0000  2.0000    6.0000  1.2163  1.8900604\nChapter 8 / PID Controllers and Modified PID Controllers\nBy equating the coefficients of equal powers of s on both sides of this last equation, we obtain\n1+10K=20.4\n10K(a+b)=122.44\n10Kab=259.68\nOutput\nt (sec)\n(a)\nUnit-Step Response (a = 4.2, b = 2, c = 12)\n0.6\n0.8\n1\n1.2\n1.4\n0.4\n0.2\n0\n0 0.5 1 1.5 2 2.5 3 3.5 4\nFigure 8–35\n(a) Response to unit-\nstep reference input\n(a=4.2, b=2, c=12);\n(b) response to unit-step\ndisturbance input\n(a=4.2, b=2, c=12).\n(b)\nOutput\nt (sec)\nResponse to Unit-Step Disturbance Input\n0.02\n0.03\n0.04\n0.05\n0.06\n0.07\n0.01\n0\n−0.01\n0 0.5 1 1.5 2 2.5 3 3.5 4\nOpenmirrors.comSection 8–7 / Zero-Placement Approach to Improve Response Characteristics 605\nHence\nThen can be written as\nThe closed-loop transfer function Y(s)/D(s) becomes\nUsing this expression, the response y(t) to a unit-step disturbance input can be obtained as shown\nin Figure 8–35(b).\nFigure 8–36(a) shows the response of the system to the unit-step reference input when a, b,\nand c are chosen as\na=3.2, b=2, c=12\nFigure 8–36(b) shows the response of this system when it is subjected to a unit-step disturbance\ninput. Comparing Figures 8–35(a) and Figure 8–36(a), we find that they are about the same. How-\never, comparing Figures 8–35(b) and 8–36(b), we find the former to be a little bit better than the\nlatter. Comparing the responses of systems with each set in the table, we conclude the first set of\nvalues (a=4.2, b=2, c=12) to be one of the best. Therefore, as the solution to this problem,\nwe choose\na=4.2, b=2, c=12\nDesign Step 2: Next, we determine Gc1 . Since Y(s)/R(s) can be given by\n = 10sGc1\ns3 + 20.4s2 + 122.44s + 259.68\n =\n10\ns(s + 1) Gc1\n1 + 10\ns(s + 1) 1.94s2 + 12.244s + 25.968\ns\n \nY(s)\nR(s) =\nGp Gc1\n1 + Gp Gc\n = 10s\ns3 + 20.4s2 + 122.44s + 259.68\n = 10\ns(s + 1) + 10 1.94s2 + 12.244s + 25.968\ns\n \nY(s)\nD(s) = 10\ns(s + 1) + 10Gc\n = 1.94s2 + 12.244s + 25.968\ns\n =\nKCs2 + (a + b)s + abD\ns\n Gc(s) = K \n(s + a)(s + b)\ns\nGc(s)\nK = 1.94,  a + b = 122.44\n19.4 ,  ab = 259.68\n19.4606\nChapter 8 / PID Controllers and Modified PID Controllers\nour problem becomes that of designing to satisfy the requirements on the responses to the\nstep, ramp, and acceleration inputs.\nSince the numerator involves “ s”, must include an integrator to cancel this “ s”.\n[Although we want “s” in the numerator of the closed-loop transfer function Y(s)/D(s) to obtain\nzero steady-state error to the step disturbance input, we do not want to have “s” in the numera-\nG\nc1\n(s)\nG\nc1\n(s)\n(a)\nOutput\nt (sec)\nUnit-Step Response (a = 3.2, b = 2, c = 12)\n0.6\n0.8\n1\n1.2\n1.4\n0.4\n0.2\n0\n0 0.5 1 1.5 2 2.5 3 3.5 4\nFigure 8–36\n(a) Response to unit-step\nreference input\n(a=3.2, b=2, c=12);\n(b) response to unit-step\ndisturbance input\n(a=3.2, b=2, c=12).\n(b)\nOutput\nt (sec)\nResponse to Unit-Step Disturbance Input\n0.02\n0.03\n0.04\n0.05\n0.06\n0.07\n0.08\n0.09\n0.01\n0\n−0.01\n0 0.5 1 1.5 2 2.5 3 3.5 4\nOpenmirrors.comSection 8–7 / Zero-Placement Approach to Improve Response Characteristics 607\ntor of the closed-loop transfer function Y(s)/R(s).] To eliminate the offset in the response to the\nstep reference input and eliminate the steady-state errors in following the ramp reference input\nand acceleration reference input, the numerator of Y(s)/R(s) must be equal to the last three\nterms of the denominator, as mentioned earlier. That is,\nor\nThus, is a PID controller. Since is given as\nwe obtain\nThus, is a derivative controller. A block diagram of the designed system is shown in \nFigure 8–37.\nThe closed-loop transfer function Y(s)/R(s) now becomes\nY(s)\nR(s) = 20.4s2 + 122.44s + 259.68\ns3 + 20.4s2 + 122.44s + 259.68\nGc2(s)\n =- 0.1s\n = a1.94s + 12.244 + 25.968\ns b - a2.04s + 12.244 + 25.968\ns b\n Gc2(s) = Gc(s) - Gc1(s)\nGc(s) = Gc1(s) + Gc2(s) = 1.94s2 + 12.244s + 25.968\ns\nGc(s)Gc1(s)\n Gc1(s) = 2.04s + 12.244 + 25.968\ns\n 10sGc1(s) = 20.4s2 + 122.44s + 259.68\nY(s)R(s)\nD(s)\nGc2(s)\nGc1(s)\n0.1s\n+ – ++ ++ 10\ns(s +1 )\n25.968\ns2.04s + 12.244 +\nFigure 8–37\nBlock diagram of the\ndesigned system.608\nChapter 8 / PID Controllers and Modified PID Controllers\nThe response to the unit-ramp reference input and that to the unit-acceleration reference input\nare shown in Figures 8–38(a) and (b), respectively. The steady-state errors in following the ramp\ninput and acceleration input are zero. Thus, all the requirements of the problem are satisfied.\nHence, the designed controllers and are acceptable.\nEXAMPLE 8–5\nConsider the control system shown in Figure 8–39. This is a two-degrees-of-freedom system. In the\ndesign problem considered here, we assume that the noise input \nN(s)\nis zero. Assume that the\nplant transfer function is given by\nG\np\n(s) = 5\n(s + 1)(s + 5)\nG\np\n(s)\nG\nc2\n(s)G\nc1\n(s)\nUnit-Ramp Response\nt (sec)\n0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2\nUnit-Ramp Input and Output\n2\n0\n0.4\n0.2\n0.6\n0.8\n1\n1.2\n1.4\n1.6\n1.8\n(a)\nOutput\nUnit-Ramp Input\nFigure 8–38\n(a) Response to unit-\nramp reference\ninput; (b) response to\nunit-acceleration\nreference input.\nUnit-Acceleration Response\nt (sec)\n0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2\nUnit-Acceleration Input and Output\n2.5\n0\n0.5\n1\n1.5\n2\n(b)\nUnit-Acceleration Input\nOutput\nOpenmirrors.comSection 8–7 / Zero-Placement Approach to Improve Response Characteristics 609\nAssume also that the controller is of PID type. That is,\nThe controller is of P or PD type. [If involves integral control action, then this will\nintroduce a ramp component in the input signal, which is not desirable. Therefore, should\nnot include the integral control action.] Thus, we assume that\nwhere may be zero.\nLet us design controllers and such that the responses to the step-disturbance\ninput and the step-reference input are of “desirable characteristics” in the sense that\n1. The response to the step-disturbance input will have a small peak and eventually approach\nzero. (That is, there will be no steady-state error.)\n2. The response to the step reference input will exhibit less than 25% overshoot with a settling\ntime less than 2 sec.The steady-state errors to the ramp reference input and acceleration ref-\nerence input should be zero.\nThe design of this two-degrees-of-freedom control system may be carried out by following the\nsteps 1 and 2 below.\n1. Determine so that the response to the step-disturbance input is of desirable characteristics.\n2. Design so that the responses to the reference inputs are of desirable characteristics\nwithout changing the response to the step disturbance considered in step 1.\nDesign of First, note that we assumed the noise input N(s) to be zero. To obtain the re-\nsponse to the step-disturbance input, we assume that the reference input is zero. Then the block\ndiagram which relates Y(s) and D(s) can be drawn as shown in Figure 8–40. The transfer func-\ntion Y(s)/D(s) is given by\nY(s)\nD(s) =\nGp\n1 + Gc1 Gp\nGc1(s):\nGc2(s)\nGc1(s)\nGc2(s)Gc1(s)\nTˆ d\nGc2(s) = Kˆ pA1 + Tˆ d sB\nGc2(s)\nGc2(s)Gc2(s)\nGc1(s) = Kp a1 + 1\nTi s + Td s b\nGc1(s)\nGp(s)Gc1(s)\nGc2(s)\nY(s)\nN(s)\nU(s)\nD(s)\nR(s)\nB(s)\n+ – ++ ++\n++\nFigure 8–39\nTwo-degrees-of-\nfreedom control\nsystem.\nD(s) Y(s)\n+ – Gp(s)\nGc1(s)Figure 8–40\nControl system.610\nChapter 8 / PID Controllers and Modified PID Controllers\nwhere\nThis controller involves one pole at the origin and two zeros. If we assume that the two zeros are\nlocated at the same place (a double zero), then can be written as\nThen the characteristic equation for the system becomes\nor\ns(s+1)(s+5)+5K(s+a)\n2\n=0\nwhich can be rewritten as\ns\n3\n+(6+5K)s\n2\n+(5+10Ka)s+5Ka\n2\n=0 (8–8)\nIf we place the double zero between s=–3 and s=–6, then the root-locus plot of \nmay look like the one shown in Figure 8–41. The speed of response should be fast, but not faster\nthan necessary, because faster response generally implies larger or more expensive components.\nTherefore, we may choose the dominant closed-loop poles at\ns=–3_j2\n(Note that this choice is not unique. There are infinitely many possible closed-loop poles that we\nmay choose from.)\nSince the system is of third order, there are three closed-loop poles. The third one is located\non the negative real axis to the left of point s=–5.\nLet us substitute s=–3+j2 into Equation (8–8).\n(–3+j2)\n3\n+(6+5K)(–3+j2)\n2\n+(5+10Ka)(–3+j2)+5Ka\n2\n=0\nG\nc1\n(s)G\np\n(s)\n1 + G\nc1\n(s)G\np\n(s) = 1 +\nK(s + a)\n2\ns\n5\n(s + 1)(s + 5) = 0\nG\nc1\n(s) = K\n(s + a)\n2\ns\nG\nc1\n(s)\nG\nc1\n(s) = K\np\na\n1 + 1\nT\ni\n \ns + T\nd\n \ns\nb\nRoot-Locus Plots of (s + a)\n2\n/(s\n3\n + 6s\n2\n + 5s)\nwith a = 3, a = 4, a = 4.5, and a = 6\nReal Axis\nImag Axis\n2\n−4\n−6\n−8−14 −12 −10 −8 −6 −4 −20 2\n4\n−2\n0\n6\n8\na = 6\na = 4.5\na = 4\na = 3\nFigure 8–41\nRoot-locus plots of\n5K(s+a)\n2\n/Cs(s+1)\n(s+5)Dwhen a=3,\na=4, a=4.5, and\na=6.\nOpenmirrors.comSection 8–7 / Zero-Placement Approach to Improve Response Characteristics 611\nwhich can be simplified to\n24+25K-30Ka+5Ka2+j(–16-60K+20Ka)=0\nBy equating the real part and imaginary part to zero, respectively, we obtain\n24+25K-30Ka+5Ka2=0 (8–9)\n–16-60K+20Ka=0 (8–10)\nFrom Equation (8–10), we have\n(8–11)\nSubstituting Equation (8–11) into Equation (8–9), we get\na2=13\nor a=3.6056 or –3.6056. Notice that the values of K become\nK=1.3210 for a=3.6056\nK=–0.1211 for a=–3.6056\nSince is in the feedforward path, the gain K should be positive. Hence, we choose\nK=1.3210, a=3.6056\nThen can be given by\nTo determine and we proceed as follows:\n(8–12)\nThus,\nTo check the response to a unit-step disturbance input, we obtain the closed-loop transfer\nfunction Y(s)/D(s).\n = 5s\ns3 + 12.605s2 + 52.63s + 85.8673\n = 5s\ns(s + 1)(s + 5) + 5K(s + a)2\n \nY(s)\nD(s) =\nGp\n1 + Gc1 Gp\nKp = 9.5260,  Ti = 0.5547,  Td = 0.1387\n = 9.5260 a1 + 1\n0.5547s + 0.1387s b\n Gc1(s) =\n1.3210As2 + 7.2112s + 13B\ns\nTd ,Kp ,Ti ,\n = 1.3210s2 + 9.5260s + 17.1735\ns\n = 1.3210 \n(s + 3.6056)2\ns\n Gc1(s) = K \n(s + a)2\ns\nGc1(s)\nGc1(s)\nK = 4\n5a - 15612\nChapter 8 / PID Controllers and Modified PID Controllers\nThe response to the unit-step disturbance input is shown in Figure 8–42. The response curve seems\ngood and acceptable. Note that the closed-loop poles are located at s=–3_j2 and s=–6.6051.\nThe complex-conjugate closed-loop poles act as dominant closed-loop poles.\nDesign of We now design to obtain the desired responses to the reference inputs.\nThe closed-loop transfer function Y(s)/R(s) can be given by\nZero placement. We place two zeros together with the dc gain constant such that the numera-\ntor is the same as the sum of the last three terms of the denominator. That is,\nBy equating the coefficients of s\n2\nterms and s terms on both sides of this last equation,\nfrom which we get\nTherefore,\n(8–13)G\nc2\n(s) = 1 + 1.2s\nK\nˆ\np\n= 1,\n  \nT\nˆ\nd\n= 1.2\n 47.63 + 5K\nˆ\np\n= 52.63\n 6.6051 + 5K\nˆ\np\n \nT\nˆ\nd\n= 12.6051\n= 12.6051s\n2\n+ 52.63s + 85.8673A6.6051 + 5K\nˆ\np\n \nT\nˆ\nd\nBs\n2\n+ A47.63 + 5K\nˆ\np\nBs + 85.8673\n =\nA6.6051 + 5K\nˆ\np\n \nT\nˆ\nd\nBs\n2\n+ A47.63 + 5K\nˆ\np\nBs + 85.8673\ns\n3\n+ 12.6051s\n2\n+ 52.63s + 85.8673\n =\nc\n1.321s\n2\n+ 9.526s + 17.1735\ns + K\nˆ\np\nA1 + T\nˆ\nd\n \nsB\nd\n 5\n(s + 1)(s + 5)\n1 + 1.321s\n2\n+ 9.526s + 17.1735\ns  5\n(s + 1)(s + 5)\n \nY(s)\nR(s) =\nAG\nc1\n+ G\nc2\nBG\np\n1 + G\nc1\n \nG\np\nG\nc2\n(s)G\nc2\n(s):\ny\nd\n(t)\nt (sec)\nUnit-Step Response of Y(s)/D(s)\n0.03\n0.04\n0.05\n0.06\n0.07\n0.08\n0.09\n0.1\n0.02\n0.01\n0\n0 0.5 1 1.5 2 2.5 3\nFigure 8–42\nResponse to unit-\nstep disturbance\ninput.\nOpenmirrors.comSection 8–7 / Zero-Placement Approach to Improve Response Characteristics 613\nWith this controller the closed-loop transfer function Y(s)/R(s) becomes\nThe response to the unit-step reference input becomes as shown in Figure 8–43(a).\nY(s)\nR(s) = 12.6051s2 + 52.63s + 85.8673\ns3 + 12.6051s2 + 52.63s + 85.8673\nGc2(s),\n(a)\nyr(t)\nt (sec)\nResponse to Unit-Step Reference Input\n0.6\n0.8\n1\n1.2\n1.4\n0.4\n0.2\n0\n0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2\nFigure 8–43\n(a) Response to unit-\nstep reference input;\n(b) response to unit-\nramp reference\ninput; (c) response to\nunit-acceleration\nreference input. (b)\nyr(t)\nt (sec)\nResponse to Unit-Ramp Reference Input\n0.6\n0.8\n1\n1.2\n1.4\n1.6\n1.8\n2\n0.4\n0.2\n0\n0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2\nInput\nOutput614\nChapter 8 / PID Controllers and Modified PID Controllers\nFigure 8–43\n(continued)\n(c)\ny\nr\n(t)\nt (sec)\nResponse to Unit-Acceleration Reference Input\n0.6\n0.8\n1\n1.2\n1.4\n1.6\n1.8\n2\n0.4\n0.2\n0\n0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2\nInput\nOutput\nThe response exhibits the maximum overshoot of 21 % and the settling time is approximately\n1.6 sec. Figures 8–43(b) and (c) show the ramp response and acceleration response. The steady-\nstate errors in both responses are zero.The response to the step disturbance was satisfactory.Thus,\nthe designed controllers and given by Equations (8–12) and (8–13), respectively, are\nsatisfactory.\nIf the response characteristics to the unit-step reference input are not satisfactory, we need to\nchange the location of the dominant closed-loop poles and repeat the design process. The domi-\nnant closed-loop poles should lie in a certain region in the left-half s plane (such as 2 /H11349a /H113496,\n2 /H11349b /H113496, 6 /H11349c /H1134912). If the computational search is desired, write a computer program (sim-\nilar to MATLAB Program 8–8) and execute the search process. Then a desired set or sets of val-\nues of a, b, and c may be found such that the system response to the unit-step reference input\nsatisfies all requirements on maximum overshoot and settling time.\nEXAMPLE PROBLEMS AND SOLUTIONS\nA–8–1. Describe briefly the dynamic characteristics of the PI controller, PD controller, and PID\ncontroller.\nSolution. The PI controller is characterized by the transfer function\nThe PI controller is a lag compensator. It possesses a zero at and a pole at s=0. Thus,\nthe characteristic of the PI controller is infinite gain at zero frequency. This improves the\nsteady-state characteristics. However, inclusion of the PI control action in the system increases the\ns =- 1/H20862T\ni\nG\nc\n(s) = K\np\na\n1 + 1\nT\ni\n \ns\nb\nG\nc2\n(s)G\nc1\n(s)\nOpenmirrors.comExample Problems and Solutions 615\nK\nE(s) U(s)\n1\nK0\nT1s\n1 + T1s\n1\n1 + T2s\n+ –\nFigure 8–44\nPID controller.\ntype number of the compensated system by 1, and this causes the compensated system to be less\nstable or even makes the system unstable.Therefore, the values of must be chosen care-\nfully to ensure a proper transient response. By properly designing the PI controller, it is possible\nto make the transient response to a step input exhibit relatively small or no overshoot.The speed\nof response, however, becomes much slower. This is because the PI controller, being a low-pass\nfilter, attenuates the high-frequency components of the signal.\nThe PD controller is a simplified version of the lead compensator. The PD controller has the\ntransfer function where\nThe value of Kp is usually determined to satisfy the steady-state requirement. The corner\nfrequency is chosen such that the phase lead occurs in the neighborhood of the gain\ncrossover frequency. Although the phase margin can be increased, the magnitude of the com-\npensator continues to increase for the frequency region (Thus, the PD controller is a\nhigh-pass filter.) Such a continued increase of the magnitude is undesirable, since it amplifies\nhigh-frequency noises that may be present in the system. Lead compensation can provide a\nsufficient phase lead, while the increase of the magnitude for the high-frequency region is\nvery much smaller than that for PD control. Therefore, lead compensation is preferred over\nPD control.\nBecause the transfer function of the PD controller involves one zero, but no pole, it is not\npossible to electrically realize it by passive RLC elements only. Realization of the PD controller\nusing op amps, resistors, and capacitors is possible, but because the PD controller is a high-pass\nfilter, as mentioned earlier, the differentiation process involved may cause serious noise problems\nin some cases.There is, however, no problem if the PD controller is realized by use of the hydraulic\nor pneumatic elements.\nThe PD control, as in the case of the lead compensator, improves the transient-response\ncharacteristics, improves system stability, and increases the system bandwidth, which implies fast\nrise time.\nThe PID controller is a combination of the PI and PD controllers. It is a lag–lead compensator.\nNote that the PI control action and PD control action occur in different frequency regions. The\nPI control action occurs at the low-frequency region and PD control action occurs at the high-\nfrequency region. The PID control may be used when the system requires improvements in both\ntransient and steady-state performances.\nA–8–2. Show that the transfer function U(s)/E(s) of the PID controller shown in Figure 8–44 is\nAssume that the gain K is very large compared with unity, orK /H112711.\nU(s)\nE(s) = K0\nT1 + T2\nT1\nc1 + 1\nAT1 + T2Bs\n+ T1 T2 s\nT1 + T2\nd\n1/H20862Td 6 v.\n1/H20862Td\nGc(s) = KpA1 + Td sB\nGc(s),\nKp and Ti616\nChapter 8 / PID Controllers and Modified PID Controllers\n+\n–\n+\n–\nE\ni\n(s) E(s) E\no\n(s)\nZ\n1\nZ\n2\nC\n1\nC\n2\nR\n1\nR\n2\nR\n4\nR\n3\nR\n5\nFigure 8–45\nModified PID\ncontroller.\nSolution\nA–8–3. Consider the electronic circuit involving two operational amplifiers shown in Figure 8–45. This is\na modified PID controller in that the transfer function involves an integrator and a first-order\nlag term. Obtain the transfer function of this PID controller.\nSolution. Since\nand\nwe have\nAlso,\nE\no\n(s)\nE(s) =- R\n5\nR\n4\nE(s)\nE\ni\n(s) =- Z\n2\nZ\n1\n=-\nAR\n2\n \nC\n2\ns + 1BAR\n1\n \nC\n1\n \ns + 1B\nC\n2\n \nsAR\n1\n+ R\n3\n+ R\n1\n \nR\n3\n \nC\n1\n \nsB\nZ\n2\n= R\n2\n+ 1\nC\n2\n \ns\nZ\n1\n= 1\n1\nR\n1\n+ C\n1\n \ns\n+ R\n3\n= R\n1\n+ R\n3\n+ R\n1\n \nR\n3\n \nC\n1\n \ns\n1 + R\n1\n \nC\n1\n \ns\n= K\n0\nT\n1\n+ T\n2\nT\n1\nc\n1 + 1\nAT\n1\n+ T\n2\nBs\n+ T\n1\n \nT\n2\n \ns\nT\n1\n+ T\n2\nd\n= K\n0\na\n1 + 1\nT\n1\n \ns + T\n2\n \ns + T\n2\nT\n1\nb\n= K\n0\na\n1 + 1\nT\n1\n \ns\nb\nA1 + T\n2\n \nsB\n=\nK\n0\nA1 + T\n1\n \nsBA1 + T\n2\n \nsB\nT\n1\n \ns\n/H11216 K\nK\na\n1\nK\n0\nT\n1\n \ns\n1 + T\n1\n \ns\n1\n1 + T\n2\n \ns\nb\nU(s)\nE(s) = K\n1 + K\na\n1\nK\n0\nT\n1\n \ns\n1 + T\n1\n \ns\n1\n1 + T\n2\n \ns\nb\nOpenmirrors.comExample Problems and Solutions 617\nR(s) C(s)1\ng\n1\nTds\n+ –\nFigure 8–46\nApproximate\ndifferentiator.\nPID controller Plant G(s)\nC(s)R(s)\nD(s)\nK(as + 1) (bs + 1)\ns\n1\ns2 + 3.6s + 9+ – ++\nFigure 8–47\nPID-controlled\nsystem.\nConsequently,\nNotice that R1C1 and R2C2 determine the locations of the zeros of the controller, whileR1, R3, and\nC1 affect the location of the pole on the negative real axis.R5/R4 adjusts the gain of the controller.\nA–8–4. In practice, it is impossible to realize the true differentiator. Hence, we always have to approxi-\nmate the true differentiator by something like\nOne way to realize such an approximate differentiator is to utilize an integrator in the feedback path.\nShow that the closed-loop transfer function of the system shown in Figure 8–46 is given by the pre-\nceding expression. (In the commercially available differentiator, the value ofg may be set as 0.1.)\nSolution. The closed-loop transfer function of the system shown in Figure 8–46 is\nNote that such a differentiator with first-order delay reduces the bandwidth of the closed-loop\ncontrol system and reduces the detrimental effect of noise signals.\nA–8–5. Consider the system shown in Figure 8–47. This is a PID control of a second-order plantG(s). As-\nsume that disturbances D(s) enter the system as shown in the diagram. It is assumed that the ref-\nerence input R(s) is normally held constant, and the response characteristics to disturbances are\na very important consideration in this system.\nC(s)\nR(s) =\n1\ng\n1 + 1\ngTd s\n= Td s\n1 + gTd s\nTd s\n1 + gTd s\nTd s\n= R5 R2\nR4 R3\nas + 1\nR1 C1\nba s + 1\nR2 C2\nb\ns as + R1 + R3\nR1 R3 C1\nb\n \nEo(s)\nEi(s) =\nEo(s)\nE(s)  \nE(s)\nEi(s) = R5\nR4AR1 + R3BC2\n \nAR1 C1 s + 1BAR2 C2 s + 1B\ns a R1 R3\nR1 + R3\n C1 s + 1 b618\nChapter 8 / PID Controllers and Modified PID Controllers\nDesign a control system such that the response to any step disturbance will be damped out\nquickly (in 2 to 3 sec in terms of the 2% settling time). Choose the configuration of the closed-loop\npoles such that there is a pair of dominant closed-loop poles. Then obtain the response to the\nunit-step disturbance input. Also, obtain the response to the unit-step reference input.\nSolution. The PID controller has the transfer function\nFor the disturbance input in the absence of the reference input, the closed-loop transfer function\nbecomes\n(8–14)\nThe specification requires that the response to the unit-step disturbance be such that the settling\ntime be 2 to 3 sec and the system have a reasonable damping. We may interpret the specification\nas and v\nn\n=4 rad/H20862sec for the dominant closed-loop poles. We may choose the third pole\nat s=–10 so that the effect of this real pole on the response is small. Then the desired charac-\nteristic equation can be written as\n(s+10)As\n2\n+2*0.5*4s+4\n2\nB=(s+10)As\n2\n+4s+16B=s\n3\n+14s\n2\n+56s+160\nThe characteristic equation for the system given by Equation (8–14) is\ns\n3\n+(3.6+Kab)s\n2\n+(9+Ka+Kb)s+K=0\nHence, we require\n3.6+Kab=14\n9+Ka+Kb=56\nK=160\nwhich yields\nab=0.065, a+b=0.29375\nThe PID controller now becomes\nWith this PID controller, the response to the disturbance is given by\n = s\n(s + 10)As\n2\n+ 4s + 16B\n D(s)\n C\nd\n(s) = s\ns\n3\n+ 14s\n2\n+ 56s + 160 D(s)\n =\n10.4As\n2\n+ 4.5192s + 15.385B\ns\n =\n160A0.065s\n2\n+ 0.29375s + 1B\ns\n G\nc\n(s) =\nKCabs\n2\n+ (a + b)s + 1D\ns\nz = 0.5\n = s\ns\n3\n+ (3.6 + Kab)s\n2\n+ (9 + Ka + Kb)s + K\n \nC\nd\n(s)\nD(s) = s\nsAs\n2\n+ 3.6s + 9B + K(as + 1)(bs + 1)\nG\nc\n(s) =\nK(as + 1)(bs + 1)\ns\nOpenmirrors.comExample Problems and Solutions 619\nClearly, for a unit-step disturbance input, the steady-state output is zero, since\nThe response to a unit-step disturbance input can be obtained easily with MATLAB. MATLAB\nProgram 8–9 produces a response curve as shown in Figure 8–48(a). From the response curve, we\nsee that the settling time is approximately 2.7 sec.The response damps out quickly.Therefore, the\nsystem designed here is acceptable.\nlim\nt Sq\ncd(t) = lim\ns S 0\nsCd(s) = lim\ns S 0\ns2\n(s + 10)As2 + 4s + 16B\n1\ns = 0\nMATLAB Program 8–9\n% ***** Response to unit-step disturbance input *****\nnumd = [1  0];\ndend = [1  14  56  160];\nt = 0:0.01:5;\n[c1,x1,t] = step(numd,dend,t);\nplot(t,c1)\ngrid\ntitle('Response to Unit-Step Disturbance Input')\nxlabel('t Sec')\nylabel('Output to Disturbance Input')\n% ***** Response to unit-step reference input *****\nnumr = [10.4  47  160];\ndenr = [1  14  56  160];\n[c2,x2,t] = step(numr,denr,t);\nplot(t,c2)\ngrid\ntitle('Response to Unit-Step Reference Input')\nxlabel('t Sec')\nylabel('Output to Reference Input')\nFor the reference input r(t), the closed-loop transfer function is\nThe response to a unit-step reference input can also be obtained by use of MATLAB Program 8–9.\nThe resulting response curve is shown in Figure 8–48(b).The response curve shows that the max-\nimum overshoot is 7.3% and the settling time is 1.2 sec.The system has quite acceptable response\ncharacteristics.\n = 10.4s2 + 47s + 160\ns3 + 14s2 + 56s + 160\n \nCr(s)\nR(s) =\n10.4As2 + 4.5192s + 15.385B\ns3 + 14s2 + 56s + 160620\nChapter 8 / PID Controllers and Modified PID Controllers\nA–8–6. Consider the system shown in Figure 8–49. It is desired to design a PID controller such that\nthe dominant closed-loop poles are located at For the PID controller,\nchoose a=1 and then determine the values of K and b. Sketch the root-locus diagram for the\ndesigned system.\nSolution. Since\nG\nc\n(s)G(s) = K\n(s + 1)(s + b)\ns\n1\ns\n2\n+ 1\ns =- 1 ; j13\n.\nG\nc\n(s)\nOutput to Disturbance Input\n14\n6\n2\n–4\n8\n12\n4\n10\n0\n–2\n 10\n–3\nResponse to Unit-Step Disturbance Input\nt Sec\n0 0.5\n54.5\n3\n3.5\n4\n1\n1.5\n2\n2.5\n(a)\nOutput to Reference Input\n1.2\n0.6\n0\n0.8\n1.0\n0.4\n0.2\nResponse to Unit-Step Reference Input\nt Sec\n0 0.5\n54.5\n3\n3.5\n4\n1\n1.5\n2\n2.5\n(b)\nFigure 8–48\n(a) Response to\nunit-step disturbance\ninput; (b) response to\nunit-step reference\ninput.\nOpenmirrors.comExample Problems and Solutions 621\nReal Axis\n–5 0 –1 1–3–4 –2\nImag Axis\n–2\n0\n3\n–3\n2\n–1\n1\nRoot-Locus Plot of Gc(s)G(s)\nFigure 8–50\nRoot-locus plot of\nthe compensated\nsystem.\nR(s) C(s)\nPID controller Plant\nGc(s) G(s)\n(s + a ) (s + b)\nsK\n1\ns2 + 1\n+ –\nFigure 8–49\nPID-controlled\nsystem.\nthe sum of the angles at one of the desired closed-loop poles, from the zero at\ns=–1 and poles at s=0, s=j, and s=–j is\n90°-143.794°-120°-110.104°=–283.898°\nHence the zero at s=–b must contribute 103.898°. This requires that the zero be located at\nb=0.5714\nThe gain constant K can be determined from the magnitude condition.\nor\nK=2.3333\nThen the compensator can be written as follows:\nThe open-loop transfer function becomes\nFrom this equation a root-locus plot for the compensated system can be drawn. Figure 8–50 is a\nroot-locus plot.\nGc(s)G(s) =\n2.3333(s + 1)(s + 0.5714)\ns\n1\ns2 + 1\nGc(s) = 2.3333\n(s + 1)(s + 0.5714)\ns\n2K\n(s + 1)(s + 0.5714)\ns\n1\ns2 + 1\n2\ns =- 1 + j13\n= 1\ns =- 1 + j13 ,622\nChapter 8 / PID Controllers and Modified PID Controllers\nThe closed-loop transfer function is given by\nThe closed-loop poles are located at and s=–0.3333. A unit-step response curve\nis shown in Figure 8–51. The closed-loop pole ats=–0.3333 and a zero at s=–0.5714 produce\na long tail of small amplitude.\nA–8–7. Consider the system shown in Figure 8–52. Design a compensator such that the static velocity\nerror constant is 4 sec\n−1\n, phase margin is 50°, and gain margin is 10 dB or more. Plot unit-step and\nunit-ramp response curves of the compensated system with MATLAB.Also, draw a Nyquist plot\nof the compensated system with MATLAB. Using the Nyquist stability criterion, verify that the\ndesigned system is stable.\nSolution. Since the plant does not have an integrator, it is necessary to have an integrator in the\ncompensator. Let us choose the compensator to be\nwhere is to be determined later. Since the static velocity error constant is specified as \n4 sec\n−1\n, we have\nK\nv\n= lim\ns S 0\nsG\nc\n(s)s + 0.1\ns\n2\n+ 1 = lim\ns S 0\ns K\ns G\nˆ\nc\n(s)s + 0.1\ns\n2\n+ 1 = 0.1K = 4\nG\nˆ\nc\n(s)\nG\nc\n(s) = K\ns G\nˆ\nc\n(s),      lim\ns S 0\nG\nˆ\nc\n(s) = 1\ns =- 1 ; j13\nC(s)\nR(s) =\n2.3333(s + 1)(s + 0.5714)\ns\n3\n+ s + 2.3333(s + 1)(s + 0.5714)\nTime (sec)\n08\n1210\n4\n2\n6\nAmplitude\n0.4\n0.8\n1.2\n0.6\n1\n0.2\n0\nUnit-Step Response of Compensated System\nFigure 8–51\nUnit-step response of\nthe compensated\nsystem.\nG\nc\n(s) s + 0.1\ns\n2\n+ 1\n+ −\nFigure 8–52\nControl system.\nOpenmirrors.comExample Problems and Solutions 623\nThus,K = 40. Hence\nNext, we plot a Bode diagram of\nMATLAB Program 8–10 produces a Bode diagram of G(s) as shown in Figure 8–53.\nG(s) =\n40(s + 0.1)\ns(s2 + 1)\nGc(s) = 40\ns Gˆc(s)\nWe need the phase margin of 50° and gain margin of 10 dB or more. Let us choose to be\nThen Gc(s) will contribute up to 90° phase lead in the high-frequency region. By simple MATLAB\ntrials, we find that a = 0.1526 gives the phase margin of 50° and gain margin of dB. +q\nGˆc(s) = as + 1 (a 7 0)\nGˆc(s)\nMATLAB Program 8–10\n% ***** Bode Diagram ***** \nnum = [40  4];\nden = [1  0.000000001  1  0];\nbode(num,den)\ntitle('Bode Diagram of G(s) = 40(s+0.1)/[s(s^2+1)]')\nFigure 8–53\nBode diagram of \nG(s)=\n40(s+0.1)/[s(s2+1)]. Frequency (rad/sec)\nBode Diagram of G(s) = 40(s + 0.1)/[s(s2 + 1)]\n−200\n−50\n−100\n−150\n0\n−100\nPhase (deg); Magnitude (dB)\n0\n300\n200\n100\n10−3 10−2 10−1 100 101624\nChapter 8 / PID Controllers and Modified PID Controllers\nMATLAB Program 8–11\n% ***** Bode Diagram *****\nnum = conv([40  4],[0.1526  1]);\nden = [1  0.000000001  1  0];\nsys = tf(num,den);\nw = logspace(-2,2,100);\nbode(sys,w)\n[Gm,pm,wcp,wcg] = margin(sys);\nGmdB = 20*log10(Gm);\n[GmdB,pm,wcp,wcg]\nans = \nInf 50.0026 NaN 8.0114\ntitle('Bode Diagram of G(s) = 40(s+0.1)(0.1526s+1)/[s(s^2+1)]')\nFigure 8–54\nBode diagram of\nG(s)=40(s+0.1)\n(0.1526s+1)/\n[s(s\n2\n+1)].\nFrequenc\ny\n (rad/sec)\nBode Diagram of G(s) = 40(s + 0.1)(0.1526s + 1)/[s(s\n2\n + 1)]\n−200\n50\n−50\n0\n−100\n−150\n100\n−50\nPhase (deg); Magnitude (dB)\n0\n100\n50\n10\n−2\n10\n−1\n10\n0\n10\n1\n10\n2\nThe designed compensator has the following transfer function:\nG\nc\n(s) = 40\ns G\nˆ\nc\n(s) =\n40(0.1526s + 1)\ns\nSee MATLAB Program 8–11 and the resulting Bode diagram shown in Figure 8–54. From this\nBode diagram we see that the static velocity error constant is 4 sec\n−1\n, phase margin is 50° and gain\nmargin is dB. Therefore, the designed system satisfies all the requirements.+q\nOpenmirrors.comExample Problems and Solutions 625\nThe open-loop transfer function of the designed system is\nOpen-loop transfer function\nWe shall next check the unit-step response and the unit-ramp response of the designed system.\nThe closed-loop transfer function is\nThe closed-loop poles are located at\ns=/H110023.0032+j5.6573\ns=/H110023.0032-j5.6573\ns=/H110020.0975\nMATLAB Program 8–12 will produce the unit-step response curve of the designed system.The re-\nsulting unit-step response curve is shown in Figure 8–55. Notice that the closed-loop pole at \ns = −0.0975 and the plant zero at s = −0.1 produce a long tail of small amplitude.\nC(s)\nR(s) = 6.104s2 + 40.6104s + 4\ns3 + 6.104s2 + 41.6104s + 4\n= 6.104s2 + 40.6104s + 4\ns(s2 + 1)\n=\n40(0.1526s + 1)\ns\ns + 0.1\ns2 + 1\nMATLAB Program 8–12\n% ***** Unit-Step Response *****\nnum = [6.104  40.6104  4];\nden = [1  6.104  41.6104  4];\nt = 0:0.01:10;\nstep(num,den,t)\ngrid\nFigure 8–55\nUnit-step response of\nC(s)/R(s)=(6.104s2+\n40.6104s+4)/(s3+\n6.104s2+41.6104s+4). Time (sec)\n21 796 8 100 43 5\nAmplitude\n1.4\n0.8\n0\n1.2\n0.4\n0.2\n1\n0.6\nStep ResponseMATLAB Program 8–13 produces the unit-ramp response curve of the designed system. The\nresulting response curve is shown in Figure 8–56.\n626\nChapter 8 / PID Controllers and Modified PID Controllers\nMATLAB Program 8–13\n% ***** Unit-Ramp Response *****\nnum = [0  0  6.104  40.6104  4];\nden = [1  6.104  41.6104  4  0];\nt = 0:0.01:20;\nc = step(num,den,t);\nplot(t,c,'-.',t,t,'-')\ntitle('Unit-Ramp Response')\nxlabel('t(sec)')\nylabel('Input Ramp Function and Output')\ntext(3,11.5,'Input Ramp Function')\ntext(13.8,11.2,'Output')\nFigure 8–56\nUnit-ramp response \nof C(s)/R(s)=\n(6.104s\n2\n+40.6104s+\n4)/(s\n3\n+6.104s\n2\n+\n41.6104s+4).\nOutputInput Ramp Function\nt (sec)\n42 14 1812 16 200 86 10\nInput Ramp Function and Output\n20\n8\n0\n12\n18\n4\n2\n16\n10\n14\n6\nUnit-Ramp Response\nNyquist Plot.\nEarlier we found that the three closed-loop poles of the designed system are\nall in the left-half s plane. Hence the designed system is stable. The purpose of plotting Nyquist\ndiagram here is not to test the stability of the system, but to enhance our understanding of Nyquist\nstability analysis. For a complicated system, Nyquist plot will look complicated enough that it is\nnot easy to count the number of encirclements of the −1+j0 point.\nOpenmirrors.comExample Problems and Solutions 627\nBecause the designed system involves three open-loop poles on the jw axis, the Nyquist dia-\ngram will look quite complicated as we will see in what follows:\nDefine the open-loop transfer function of the designed system as G(s). Then\nLet us choose a modified Nyquist path in the s plane as shown in Figure 8–57(a). The modified\npath encloses three open-loop poles (s=0, s=j1, s= /H11002j1). Now define s1=s+ . Then,\nthe Nyquist path in the s1 plane becomes as shown in Figure 8–57(b). In the s1 plane, the open-\nloop transfer function has three poles in the right-half s1 plane.\nLet us choose Since we have\nOpen-loop transfer function in the s1 plane\nA MATLAB program to obtain the Nyquist plot is shown in MATLAB Program 8–14. The re-\nsulting Nyquist plot is shown in Figure 8–58.\n= 6.104s1\n2 + 40.48832s1 + 3.5945064\ns1\n3 - 0.03s1\n2 + 1.0003s1 - 0.010001\n=\n6.104(s1\n2 - 0.02s1 + 0.0001) + 40.6104(s1 - 0.01) + 4\n(s1 - 0.01)(s1\n2 - 0.02s1 + 1.0001)\nG(s) = G(s1 - 0.01)\ns = s1 - s0 ,s0 = 0.01.\ns0\nG(s) = Gc(s)s + 0.1\ns2 + 1 = 6.104s2 + 40.6104s + 4\ns(s2 + 1)\nFigure 8–57\n(a) Modified\nNyquist path in \nthes plane;\n(b) Nyquist path in\nthes1 plane.\ns plane s1 planejv\n(a) (b)\n0 s\ns0\njv\n0 s\nMATLAB Program 8–14\n% ***** Nyquist Plot *****\nnum = [6.104  40.48832  3.5945064];\nden = [1  -0.03  1.0003  -0.010001];\nnyquist(num,den)\nv = [-1500  1500  -2500  2500]; axis(v)628\nChapter 8 / PID Controllers and Modified PID Controllers\nFigure 8–58\nNyquist plot.\n−1500 −1000 −500 0 500 1000 1500\nReal Axis\nNyquest Diagram\nImaginary Axis\n2500\n2000\n1500\n1000\n500\n0\n−500\n−1000\n−1500\n−2000\n−2500\nFigure 8–59\nRedrawn Nyquist\nplot.\nIm\nRev = 0+\nv = 0−\nv = −`\nv = +`\nUsing the Nyquist plot obtained here, it is not easy to determine the encirclements of the −1+j0\npoint by the Nyquist locus. Therefore, we need to redraw this Nyquist plot qualitatively to show\nthe details near the −1+j0 point. Such a redrawn Nyquist diagram is shown in Figure 8–59.\nFrom this diagram we find that the −1+j0 point is encircled counterclockwise three times.\nHence, N /H11005−3. Since the open-loop transfer function has three poles in the right-half s\n1\nplane,\nwe have P /H110053.Then, we have Z /H11005N+P /H110050.This means that there are no closed-loop poles in\nthe right-half s\n1\nplane. The system is therefore stable.\nA–8–8. Show that the I-PD-controlled system shown in Figure 8–60(a) is equivalent to the PID-controlled\nsystem with input filter shown in Figure 8–60(b).\nOpenmirrors.comExample Problems and Solutions 629\nSolution. The closed-loop transfer function C(s)/R(s) of the I-PD-controlled system is\nThe closed-loop transfer function C(s)/R(s) of the PID-controlled system with input filter\nshown in Figure 8–60(b) is\nThe closed-loop transfer functions of both systems are the same.Thus, the two systems are equivalent.\nA–8–9. The basic idea of the I-PD control is to avoid large control signals (which will cause a saturation\nphenomenon) within the system. By bringing the proportional and derivative control actions to\nthe feedback path, it is possible to choose larger values for than those possible by the\nPID control scheme.\nCompare, qualitatively, the responses of the PID-controlled system and I-PD-controlled system\nto the disturbance input and to the reference input.\nSolution. Consider first the response of the I-PD-controlled system to the disturbance input.\nSince, in the I-PD control of a plant, it is possible to select larger values for than those\nof the PID-controlled case, the I-PD-controlled system will attenuate the effect of disturbance\nfaster than the PID-controlled case.\nNext, consider the response of the I-PD-controlled system to a reference input. Since the\nI-PD-controlled system is equivalent to the PID-controlled system with input filter (refer to Prob-\nlemA–8–8), the PID-controlled system will have faster responses than the corresponding I-PD-con-\ntrolled system, provided a saturation phenomenon does not occur in the PID-controlled system.\nKp and Td\nKp and Td\n =\nKp\nTi s Gp(s)\n1 + Kp a1 + 1\nTi s + Td s bGp(s)\n \nC(s)\nR(s) = 1\n1 + Ti s + Ti Td s2 \nKp a1 + 1\nTi s + Td s bGp(s)\n1 + Kp a1 + 1\nTi s + Td s bGp(s)\nC(s)\nR(s) =\nKp\nTi s Gp(s)\n1 + Kp a1 + 1\nTi s + Td s bGp(s)\n(b)\nGp(s)\nC(s)R(s)\nKp(1 ++ Tds)1\nTis\n1\n1 + Tis + TiTds2 + –\n(a)\nKp\nTis Gp(s)\nC(s)R(s)\nKp(1 + Tds)\n+ – + –\nFigure 8–60\n(a) I-PD-controlled\nsystem;\n(b) PID-controlled\nsystem with input\nfilter.630\nChapter 8 / PID Controllers and Modified PID Controllers\nA–8–10. In some cases it is desirable to provide an input filter as shown in Figure 8–61(a). Notice that the\ninput filter is outside the loop. Therefore, it does not affect the stability of the closed-\nloop portion of the system.An advantage of having the input filter is that the zeros of the closed-loop\ntransfer function can be modified (canceled or replaced by other zeros) so that the closed-\nloop response is acceptable.\nShow that the configuration in Figure 8–61(a) can be modified to that shown in Figure 8–61(b),\nwhere The compensation structure shown in Figure 8–61(b) is some-\ntimes called command compensation.\nSolution. For the system of Figure 8–61(a), we have\n(8–15)\nFor the system of Figure 8–61(b), we have\nThus\nor\n(8–16)\nBy substituting into Equation (8–16), we obtain\n = G\nf\n(s) \nG\nc\n(s)G\np\n(s)\n1 + G\nc\n(s)G\np\n(s)\n \nC(s)\nR(s) =\nCG\nf\n(s)G\nc\n(s) - G\nc\n(s) + G\nc\n(s)DG\np\n(s)\n1 + G\nc\n(s)G\np\n(s)\nCG\nf\n(s) - 1DG\nc\n(s)G\nd\n(s) =\nC(s)\nR(s) =\nCG\nd\n(s) + G\nc\n(s)DG\np\n(s)\n1 + G\nc\n(s)G\np\n(s)\nC(s) = G\np\n(s)EG\nd\n(s)R(s) + G\nc\n(s)CR(s) - C(s)DF\n C(s) = G\np\n(s)U(s)\n E(s) = R(s) - C(s)\n U(s) = G\nd\n(s)R(s) + G\nc\n(s)E(s)\nC(s)\nR(s) = G\nf\n(s)\nG\nc\n(s)G\np\n(s)\n1 + G\nc\n(s)G\np\n(s)\nCG\nf\n(s) - 1DG\nc\n(s).G\nd\n(s) =\nG\nf\n(s)\n(a)\n(b)\nG\nc\n(s)\nC(s)R(s)\nG\np\n(s)\nG\nf\n(s)\nG\nc\n(s)\nC(s)R(s) E(s)\nG\nd\n(s)\nG\np\n(s)\nU(s)\n+ –\n+ –\n++\nFigure 8–61\n(a) Block diagram of\ncontrol system with\ninput filter;\n(b) modified block\ndiagram.\nOpenmirrors.comwhich is the same as Equation (8–15). Hence, we have shown that the systems shown in Figures\n8–61(a) and (b) are equivalent.\nIt is noted that the system shown in Figure 8–61(b) has a feedforward controller In\nsuch a case, does not affect the stability of the closed-loop portion of the system.\nA–8–11. A closed-loop system has the characteristic that the closed-loop transfer function is nearly equal\nto the inverse of the feedback transfer function whenever the open-loop gain is much greater\nthan unity.\nThe open-loop characteristic may be modified by adding an internal feedback loop with a\ncharacteristic equal to the inverse of the desired open-loop characteristic. Suppose that a\nunity-feedback system has the open-loop transfer function\nDetermine the transfer functionH(s) of the element in the internal feedback loop so that the inner\nloop becomes ineffective at both low and high frequencies.\nSolution. Figure 8–62(a) shows the original system. Figure 8–62(b) shows the addition of the in-\nternal feedback loop around G(s). Since\nif the gain around the inner loop is large compared with unity, then is\napproximately equal to unity, and the transfer functionC(s)/E(s)is approximately equal to 1/H(s).\nOn the other hand, if the gain is much less than unity, the inner loop becomes\nineffective and C(s)/E(s) becomes approximately equal to G(s).\nTo make the inner loop ineffective at both the low- and high-frequency ranges, we require that\nSince, in this problem,\nG(jv) = K\nA1 + jvT1BA1 + jvT2B\n|G(jv)H(jv)| /H112701, for v /H112701 and v /H112711\n@G(s)H(s)@\nG(s)H(s)/H20862C1 + G(s)H(s)D\nC(s)\nE(s) =\nG(s)\n1 + G(s)H(s) = 1\nH(s)\nG(s)H(s)\n1 + G(s)H(s)\nG(s) = K\nAT1 s + 1BAT2 s + 1B\nGd(s)\nGd(s).\nExample Problems and Solutions 631\n(a)\n(b)\nG(s)\nCR\nG(s)\nH(s)\nCER\nGH(s)1\nH(s)\nCER\n=\n+ –\n+ – + – + – + –Figure 8–62\n(a) Control system;\n(b) addition of the\ninternal feedback\nloop to modify the\nclosed-loop\ncharacteristic.632\nChapter 8 / PID Controllers and Modified PID Controllers\nthe requirement can be satisfied if H(s) is chosen to be\nH(s)=ks\nbecause\nThus, with H(s)=ks (velocity feedback), the inner loop becomes ineffective at both the low-\nand high-frequency regions. It becomes effective only in the intermediate-frequency region.\nA–8–12. Consider the control system shown in Figure 8–63. This is the same system as that considered in\nExample 8–1. In that example we designed a PID controller , starting with the second method\nof the Ziegler–Nichols tuning rule. Here we design a PID controller using the computational\napproach with MATLAB. We shall determine the values of K and a of the PID controller\nsuch that the unit-step response will exhibit the maximum overshoot between 10 % and 2 %\n(1.02 /H11349maximum output /H113491.10) and the settling time will be less than 3 sec. The search region is\n2 /H11349K /H1134950, 0.05 /H11349a /H113492\nLet us choose the step size for K to be 1 and that for a to be 0.05.\nWrite a MATLAB program to find the first set of variables K and a that will satisfy the given\nspecifications. Also, write a MATLAB program to find all possible sets of variablesK and a that\nwill satisfy the given specifications. Plot the unit-step response curves of the designed system with\nthe chosen sets of variables K and a.\nSolution. The transfer function of the plant is\nThe closed-loop transfer function C(s)/R(s) is given by\nA possible MATLAB program that will produce the first set of variables K and a that\nwill satisfy the given specifications is given in MATLAB Program 8–15. In this program we \nC(s)\nR(s) = Ks\n2\n+ 2Kas + Ka\n2\ns\n4\n+ 6s\n3\n+ (5 + K)s\n2\n+ 2Kas + Ka\n2\nG\np\n(s) = 1\ns\n3\n+ 6s\n2\n+ 5s\nG\nc\n(s) = K\n(s + a)\n2\ns\nG\nc\n(s)\n lim\nvSq\nG(jv)H(jv) = lim\nvSq\n Kkjv\nA1 + jvT\n1\nBA1 + jvT\n2\nB\n= 0\n lim\nvS 0\nG(jv)H(jv) = lim\nvS 0\n Kkjv\nA1 + jvT\n1\nBA1 + jvT\n2\nB\n= 0\nR(s) C(s)\nPID\ncontroller\n1\ns(s + 1) (s + 5)\n+ –\nG\nc\n(s)\nFigure 8–63\nControl system.\nOpenmirrors.comExample Problems and Solutions 633\nMATLAB Program 8–15\nt = 0:0.01:5;\nfor K = 50:-1:2;\nfor a = 2:-0.05:0.05;\nnum = [K  2*K*a  K*a^2];\nden = [1  6  5+K  2*K*a  K*a^2];\ny = step(num,den,t);\nm = max(y);\ns = 501; while y(s) > 0.98 & y(s) < 1.02;\ns = s-1; end;\nts = (s-1)*0.01;\nif m < 1.10 & m > 1.02 & ts < 3.0\nbreak;\nend\nend\nif m < 1.10 & m > 1.02 & ts < 3.0\nbreak\nend\nend\nplot(t,y)\ngrid\ntitle('Unit-Step Response')\nxlabel('t sec')\nylabel('Output')\nsolution = [K;a;m;ts]\nsolution =\n32.0000\n0.2000\n1.0969\n2.6400\nuse two ‘for’ loops. The specification for the settling time is interpreted by the following four\nlines:\n.\nNote that for t=0 : 0.01 : 5, we have 501 computing time points.s=501 corresponds to the last\ncomputing time point.\nThe solution obtained by this program is \nK=32, a=0.2\nwith the maximum overshoot equal to 9.69% and the settling time equal to 2.64 sec.The resulting\nunit-step response curve is shown in Figure 8–64.\nts 6 3.0\nts = (s - 1) * 0.01\ns = s - 1; end;\ns = 501; while y(s) 7 0.98 and y(s) 6 1.02;634\nChapter 8 / PID Controllers and Modified PID Controllers\nOutput\nt (sec)\nUnit-Step Response\n1.4\n1.2\n1\n0.8\n0.6\n0.4\n0.2\n0\n0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5\nFigure 8–64\nUnit-step response\ncurve.\nMATLAB Program 8–16\nt = 0:0.01:5;\nk = 0;\nfor i = 1:49;\nK(i) = 51-i*1;\nfor j = 1:40;\na(j) = 2.05-j*0.05;\nnum = [K(i)  2*K(i)*a(j)  K(i)*a(j)*a(j)];\nden = [1  6  5+K(i)  2*K(i)*a(j)  K(i)*a(j)*a(j)];\ny = step(num,den,t);\nm = max(y);\ns = 501; while y(s) > 0.98 & y(s) < 1.02;\ns = s-1; end;\nts = (s-1)*0.01;\nif m < 1.10 & m > 1.02 & ts < 3.0\nk = k+1;\ntable(k,:) = [K(i)  a(j)  m  ts];\nend\nend\nend\ntable(k,:) = [K(i)  a(j)  m  ts]\ntable =\n(continues on next page)\nNext, we shall consider the case where we want to find all sets of variables that will satisfy the\ngiven specifications. A possible MATLAB program for this purpose is given in MATLAB Pro-\ngram 8–16. Note that in the table shown in the program, the last row of the table (k, :) or the first\nrow of the sorttable should be ignored. (These are the last K and a values for searching purposes.)\nOpenmirrors.comExample Problems and Solutions 635\n32.0000  0.2000  1.0969  2.6400\n31.0000  0.2000  1.0890  2.6900\n30.0000  0.2000  1.0809  2.7300\n29.0000  0.2500  1.0952  1.7800\n29.0000  0.2000  1.0726  2.7800\n28.0000  0.2000  1.0639  2.8300\n27.0000  0.2000  1.0550  2.8900\n2.0000  0.0500  0.3781  5.0000\nsorttable = sortrows(table,3)\nsorttable =\n2.0000  0.0500  0.3781  5.0000\n27.0000  0.2000  1.0550  2.8900\n28.0000  0.2000  1.0639  2.8300\n29.0000  0.2000  1.0726  2.7800\n30.0000  0.2000  1.0809  2.7300\n31.0000  0.2000  1.0890  2.6900\n29.0000  0.2500  1.0952  1.7800\n32.0000  0.2000  1.0969  2.6400\nK = sorttable(7,1)\nK =\n29\na = sorttable(7,2)\na=\n0.2500\nnum = [K  2*K*a  K*a^2];\nden = [1  6  5+K  2*K*a  K*a^2];\ny = step(num,den,t);\nplot(t,y)\ngrid\nhold\nCurrent plot held\nK = sorttable(2,1)\nK=\n27\na = sorttable(2,2)\na=\n0.2000\n(continues on next page)636\nChapter 8 / PID Controllers and Modified PID Controllers\nFrom the sorttable, it seems that\nK=29, a=0.25 (max overshoot=9.52%, settling time=1.78 sec)\nand\nK=27, a=0.2 (max overshoot=5.5%, settling time=2.89 sec)\nare two of the best choices.The unit-step response curves for these two cases are shown in Figure 8–65.\nFrom these curves, we might conclude that the best choice depends on the system objective. If a small\nmaximum overshoot is desired,K=27, a=0.2will be the best choice. If the shorter settling time is\nmore important than a small maximum overshoot, then K=29, a=0.25will be the best choice.\nA–8–13. Consider the two-degrees-of-freedom control system shown in Figure 8–66. The plant is\ngiven by\nAssuming that the noise input \nN(s)\nis zero, design controllers and such that the\ndesigned system satisfies the following:\n1. The response to the step disturbance input has a small amplitude and settles to zero quickly\n(on the order of 1 sec to 2 sec).\nG\nc2\n(s)G\nc1\n(s)\nG\np\n(s) = 100\ns(s + 1)\nG\np\n(s)\nnum = [K  2*K*a  K*a^2];\nden = [1  6  5+K  2*K*a  K*a^2];\ny = step(num,den,t);\nplot(t,y)\ntitle('Unit-Step Response Curves')\nxlabel('t (sec)')\nylabel('Output')\ntext(1.22,1.22,'K = 29, a = 0.25')\ntext(1.22,0.72,'K = 27, a = 0.2')\nOutput\nt (sec)\nUnit-Step Response Curves\n1.4\n1.2\n1\n0.8\n0.6\n0.4\n0.2\n0\n0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5\nK = 29, a = 0.25\nK = 27, a = 0.2\nFigure 8–65\nUnit-step response\ncurves.\nOpenmirrors.comExample Problems and Solutions 637\nGp(s)Gc1(s)\nGc2(s)\nY(s)\nN(s)\nU(s)\nD(s)\nR(s)\nB(s)\n+ – ++ ++\n++\nFigure 8–66\nTwo-degrees-of-\nfreedom control\nsystem.\n2. The response to the unit-step reference input has a maximum overshoot of 25% or less, and\nthe settling time is 1 sec or less.\n3. The steady-state errors in following ramp reference input and acceleration reference input\nare zero.\nSolution. The closed-loop transfer functions for the disturbance input and reference input are\ngiven, respectively, by\nLet us assume that is a PID controller and has the following form:\nThe characteristic equation for the system is\nNotice that the open-loop poles are located at s=0 (a double pole) and s=–1. The zeros are\nlocated at s=–a (a double zero).\nIn what follows, we shall use the root-locus approach to determine the values of a and K. Let\nus choose the dominant closed-loop poles at s=–5_j5.Then, the angle deficiency at the desired\nclosed-loop pole at s=–5+j5 is\n–135°-135°-128.66°+180°=–218.66°\nThe double zero at s=–a must contribute 218.66°. (Each zero must contribute 109.33°.) By a\nsimple calculation, we find\na=–3.2460\nThe controller is then determined as\nThe constant K must be determined by use of the magnitude condition. This condition is\n@Gc1(s)Gp(s)@s =- 5 + j5 = 1\nGc1(s) =\nK(s + 3.2460)2\ns\nGc1(s)\n1 + Gc1(s)Gp(s) = 1 +\nK(s + a)2\ns\n100\ns(s + 1)\nGc1(s) =\nK(s + a)2\ns\nGc1(s)\n \nY(s)\nR(s) =\nCGc1(s) + Gc2(s)DGp(s)\n1 + Gc1(s)Gp(s)\n \nY(s)\nD(s) =\nGp(s)\n1 + Gc1(s)Gp(s)638\nChapter 8 / PID Controllers and Modified PID Controllers\nSince\nwe obtain\nThe controller thus becomes\n(8–17)\nThen, the closed-loop transfer function Y(s)/D(s) is obtained as follows:\nThe response curve when D(s) is a unit-step disturbance is shown in Figure 8–67.\n= 100s\ns\n3\n+ 12.403s\n2\n+ 74.028s + 120.148\n=\n100\ns(s + 1)\n1 +\n0.11403(s + 3.2460)\n2\ns\n100\ns(s + 1)\nY(s)\nD(s) =\nG\np\n(s)\n1 + G\nc1\n(s)G\np\n(s)\n= 0.74028 + 1.20148\ns + 0.11403s\n= 0.11403s\n2\n+ 0.74028s + 1.20148\ns\nG\nc1\n(s) =\n0.11403(s + 3.2460)\n2\ns\nG\nc1\n(s)\n = 0.11403\n K =\n2\ns\n2\n(s + 1)\n100(s + 3.2460)\n2\n2\ns =- 5 + j5\nG\nc1\n(s)G\np\n(s) =\nK(s + 3.2460)\n2\ns\n100\ns(s + 1)\ny\nd\n(t)\nt (sec)\nResponse to Unit-Step Disturbance Input\n0.6\n0.8\n1\n1.2\n1.4\n1.6\n1.8\n2\n0.4\n0.2\n0\n0 0.5 1 1.5 2 2.5 3 3.5 4\nFigure 8–67\nResponse to unit-\nstep disturbance\ninput.\nOpenmirrors.comExample Problems and Solutions 639\n(a)\nt (sec)\nResponse to Unit-Step Reference Input\n0.6\n0.8\n1\n1.2\n1.4\n0.4\n0.2\n0\n0 0.5 1 1.5 2 2.5 3\nyr(t)\nFigure 8–68\n(a) Response to unit-\nstep reference input;\n(b) response to unit-\nramp reference\ninput; (c) response to\nunit-acceleration\nreference input.\nNext, we consider the responses to reference inputs. The closed-loop transfer function\nY(s)/R(s) is\nLet us define\nThen\nTo satisfy the requirements on the responses to the ramp reference input and acceleration\nreference input, we use the zero-placement approach. That is, we choose the numerator of\nY(s)/R(s)to be the sum of the last three terms of the denominator, or\nfrom which we get\n(8–18)\nHence, the closed-loop transfer function Y(s)/R(s) becomes as\nThe response curves to the unit-step reference input, unit-ramp reference input, and unit-\nacceleration reference input are shown in Figures 8–68(a), (b), and (c), respectively.The maximum\nY(s)\nR(s) = 12.403s2 + 74.028s + 120.148\ns3 + 12.403s2 + 74.028s + 120.148\n= 0.74028 + 1.20148\ns + 0.12403s\nGc(s) = 0.12403s2 + 0.74028s + 1.20148\ns\n100sGc(s) = 12.403s2 + 74.028s + 120.148\n=\n100sGc(s)\ns3 + 12.403s2 + 74.028s + 120.148\nY(s)\nR(s) =\nGc(s)Gp(s)\n1 + Gc1(s)Gp(s)\nGc1(s) + Gc2(s) = Gc(s)\nY(s)\nR(s) =\nCGc1(s) + Gc2(s)DGp(s)\n1 + Gc1(s)Gp(s)overshoot in the unit-step response is approximately 25% and the settling time is approximately\n1.2 sec. The steady-state errors in the ramp response and acceleration response are zero. There-\nfore, the designed controller given by Equation (8–18) is satisfactory.\nFinally, we determine Noting that\nG\nc2\n(s) = G\nc\n(s) - G\nc1\n(s)\nG\nc2\n(s).\nG\nc\n(s)\n640\nChapter 8 / PID Controllers and Modified PID Controllers\n(b)\nt (sec)\nResponse to Unit-Ramp Reference Input\n1.5\n2\n2.5\n3\n1\n0.5\n0\n0 0.5 1 1.5 2 2.5 3\nInput\nOutput\ny\nr\n(t)\n(c)\ny\nr\n(t)\nt (sec)\nResponse to Unit-Acceleration Reference Input\n0.6\n0.8\n1\n1.2\n1.4\n1.6\n1.8\n2\n0.4\n0.2\n0\n0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2\nInput\nOutput\nFigure 8–68\n(continued)\nOpenmirrors.comand from Equation (8–17)\nwe obtain\n(8–19)\nEquations (8–17) and (8–19) give the transfer functions of the controllers re-\nspectively. The block diagram of the designed system is shown in Figure 8–69.\nNote that if the maximum overshoot were much higher than 25 % and/or the settling time\nwere much larger than 1.2 sec, then we might assume a search region (such as 3 /H11349a /H113496,\n3 /H11349b /H113496, and 6 /H11349c /H1134912) and use the computational method presented in Example 8–4 to\nfind a set or sets of variables that would give the desired response to the unit-step reference input.\nPROBLEMS\nGc1(s) and Gc2(s),\n = 0.01s\n - a0.7403 + 1.20148\ns + 0.11403s b\n Gc2(s) = a0.7403 + 1.20148\ns + 0.12403s b\nGc1(s) = 0.7403 + 1.20148\ns + 0.11403s\nProblems 641\n100\ns(s + 1)\n0.01s\nY(s)\nD(s)\nR(s)\n+ – ++ ++1.20148\ns0.7403 ++  0.11403s\nFigure 8–69\nBlock diagram of the\ndesigned system.\nB–8–1. Consider the electronic PID controller shown in\nFigure 8–70. Determine the values of R1 , R2 , R3 , R4 , C1 ,\nand C2 of the controller such that the transfer function\nisGc(s) = Eo(s)/H20862Ei(s)  = 30.3215 \n(s + 0.65)2\ns\n Gc(s) = 39.42 a1 + 1\n3.077s + 0.7692s b\n+\n–\n+\n–\nEi(s) E(s) Eo(s)\nC1 C2\nR1\nR2\nR3\nR4\nFigure 8–70\nElectronic PID controller.642\nChapter 8 / PID Controllers and Modified PID Controllers\nB–8–2. Consider the system shown in Figure 8–71.\nAssume that disturbances D(s) enter the system as shown\nin the diagram. Determine parameters K, a, and b such\nthat the response to the unit-step disturbance input and\nthe response to the unit-step reference input satisfy the\nfollowing specifications: The response to the step distur-\nbance input should attenuate rapidly with no steady-state\nerror, and the response to the step reference input exhibits\na maximum overshoot of 20 % or less and a settling time\nof 2 sec.\nB–8–3. Show that the PID-controlled system shown in\nFigure 8–72(a) is equivalent to the I-PD-controlled system\nwith feedforward control shown in Figure 8–72(b).\nB–8–4. Consider the systems shown in Figures 8–73(a) \nand (b). The system shown in Figure 8–73(a) is the system\ndesigned in Example 8–1. The response to the unit-step\nreference input in the absence of the disturbance input is\nshown in Figure 8–10. The system shown in Figure 8–73(b)\nis the I-PD-controlled system using the same K\np\n,\nas the system shown in Figure 8–73(a).\nT\ni\n \n, and T\nd\nC(s)R(s)\nD(s)\nK(as + 1) (bs + 1)\ns\n2(s + 2)\n(s + 1) (s + 10)\n+ –\n++\nFigure 8–71\nControl system.\n(a)\n(b)\nK\np\nTis\nG\np\n(s)\nC(s)R(s)\nK\np\n(1 + T\nd\ns)\nK\np\n(1 + T\nd\ns)\nG\np\n(s)\nC(s)R(s)\nK\np\n(1 ++ T\nd\ns)1\nT\ni\ns\n+ –\n+ –\n+ –\n+\nFigure 8–72\n(a) PID-controlled system; (b) I-PD-controlled system with\nfeedforward control.\nOpenmirrors.comProblems 643\nObtain the response of the I-PD-controlled system to\nthe unit-step reference input with MATLAB. Compare the\nunit-step response curves of the two systems.\nB–8–5. Referring to Problem B–8–4, obtain the response\nof the PID-controlled system shown in Figure 8–73(a) to the\nunit-step disturbance input.\nShow that for the disturbance input, the responses of\nthe PID-controlled system shown in Figure 8–73(a) and of\nthe I-PD-controlled system shown in Figure 8–73(b) are\nexactly the same. [When consideringD(s) to be the input, as-\nsume that the reference input R(s) is zero, and vice versa.]\nAlso, compare the closed-loop transfer functionC(s)/R(s)\nof both systems.\nB–8–6. Consider the system shown in Figure 8–74.This sys-\ntem is subjected to three input signals: the reference input,\ndisturbance input, and noise input. Show that the charac-\nteristic equation of this system is the same regardless of\nwhich input signal is chosen as input.\n(a)\n(b)\nC(s)R(s)\nD(s)\nPID contoller\n39.42 (1 + 1\n3.077s + 0.7692s) 1\ns(s + 1) (s + 5)\nD(s)\nC(s)R(s)\n1 + 0.7692s\n39.42 1\ns(s + 1) (s + 5)\n1\n3.077s\n+ – ++\n+ – + – ++\nFigure 8–73\n(a) PID-controlled system; (b) I-PD-controlled system.\nG2(s)\nH(s)\nC(s)\nNoise\nN(s)\nR(s)\nDisturbance\nD(s)\nG1(s) ++\n++\n+ –\nFigure 8–74\nControl system.644\nChapter 8 / PID Controllers and Modified PID Controllers\nB–8–7. Consider the system shown in Figure 8–75. Obtain\nthe closed-loop transfer function C(s)/R(s) for the refer-\nence input and the closed-loop transfer function C(s)/D(s)\nfor the disturbance input. When considering R(s) as the\ninput, assume that D(s) is zero, and vice versa.\nB–8–8. Consider the system shown in Figure 8–76(a),\nwhere K is an adjustable gain and G(s) and H(s) are fixed\ncomponents. The closed-loop transfer function for the\ndisturbance is\nTo minimize the effect of disturbances, the adjustable gain\nK should be chosen as large as possible.\nIs this true for the system in Figure 8–76(b), too?\nC(s)\nD(s) = 1\n1 + KG(s)H(s)\nG\n1\n(s) G\n2\n(s)\nR(s) C(s)\nD(s)\nG\n3\n(s)\nH\n1\n(s)\nH\n2\n(s)\n+ –\n+ –\n++\nFigure 8–75\nControl system.\nG(s)\nR(s) C(s)\nD(s)\nD(s)\nK\nH(s)\nG(s)\nR(s) C(s)\nK\nH(s)\n(a)\n(b)\n++\n+ –\n++\n+ –\nFigure 8–76\n(a) Control system with disturbance entering in the\nfeedforward path; (b) control system with disturbance\nentering in the feedback path.\nOpenmirrors.comD(s)\nR(s) Y(s)\nN(s)\nGc2\nGc1 Gc3 G1 G2+ – ––++\n– ––++\n++\nProblems 645\nB–8–9. Show that the control systems shown in Fig-\nures 8–77(a), (b), and (c) are two-degrees-of-freedom\nsystems. In the diagrams,Gc1 and Gc2 are controllers andGp\nis the plant.\nB–8–10. Show that the control system shown in Figure 8–78\nis a three-degrees-of freedom system. The transfer func-\ntionsGc1 , Gc2 , and Gc3 are controllers. The plant consists of\ntransfer functions G1 and G2 .\n(c)\nD(s)\nY(s)\nN(s)\nGpGc1\nGc2\nR(s)\n++\n+ – + +\n(b)\nD(s)\nY(s)\nN(s)\nGpGc1 Gc2\nR(s)\n+ – + +\n++\nD(s)\nR(s) Y(s)\nGpGc1\nGc2\n(a)\n+ – ++\n++ N(s)\nFigure 8–77\n(a), (b), (c) Two\ndegrees-of-freedom\nsystems.\nFigure 8–78\nThree-degrees-of-\nfreedom system.646\nChapter 8 / PID Controllers and Modified PID Controllers\nB–8–11. Consider the control system shown in Figure 8–79.\nAssume that the PID controller is given by\nIt is desired that the unit-step response of the system exhibit\nthe maximum overshoot of less than 10%, but more than 2%\n(to avoid an almost overdamped system), and the settling\ntime be less than 2 sec.\nUsing the computational approach presented in Section\n8–4, write a MATLAB program to determine the values\nof K and a that will satisfy the given specifications. Choose\nthe search region to be\n1 /H11349K /H113494, 0.4 /H11349a /H113494\nChoose the step size for K and a to be 0.05. Write the\nprogram such that the nested loops start with the highest\nvalues of K and a and step toward the lowest.\nUsing the first-found solution, plot the unit-step\nresponse curve.\nB–8–12. Consider the same control system as treated in\nProblem B–8–11 (Figure 8–79). The PID controller is given\nby\nIt is desired to determine the values of K and a such that\nthe unit-step response of the system exhibits the maximum\nG\nc\n(s) = K\n(s + a)\n2\ns\nG\nc\n(s) = K\n(s + a)\n2\ns\novershoot of less than 8%, but more than 3%, and the settling\ntime is less than 2 sec. Choose the search region to be\n2 /H11349K /H113494, 0.5 /H11349a /H113493\nChoose the step size for K and a to be 0.05.\nFirst, write a MATLAB program such that the nested\nloops in the program start with the highest values of K and\na and step toward the lowest and the computation stops\nwhen a successful set of K and a is found for the first time.\nNext, write a MATLAB program that will find all pos-\nsible sets of K and a that will satisfy the given specifications.\nAmong multiple sets of K and a that satisfy the given\nspecifications, determine the best choice.Then, plot the unit-\nstep response curves of the system with the best choice\nof K and a.\nB–8–13. Consider the two-degrees-of-freedom control\nsystem shown in Figure 8–80. The plant is given by\nDesign controllers and such that the\nresponse to the unit-step disturbance input should have\nsmall amplitude and settle to zero quickly (in approximately\n2 sec). The response to the unit-step reference input should\nbe such that the maximum overshoot is 25 % (or less) and\nthe settling time is 2 sec. Also, the steady-state errors in the\nresponse to the ramp and acceleration reference inputs\nshould be zero.\nG\nc2\n(s)G\nc1\n(s)\nG\np\n(s) =\n3(s + 5)\ns(s + 1)As\n2\n+ 4s + 13B\nG\np\n(s)\nR(s) C(s)\nPID\ncontroller\n1.2\n(0.3s + 1) (s + 1) (1.2s + 1)\n+ –\nG\nc\n(s)\nFigure 8–79\nControl system.\nG\np\n(s)\nG\nc1\n(s)\nG\nc2\n(s)\nY(s)U(s)\nD(s)\nR(s)\nB(s)\n+ –\n++\n++\nFigure 8–80\nTwo-degrees-of-freedom control system.\nOpenmirrors.comProblems 647\nB–8–14. Consider the system shown in Figure 8–81. The\nplant is given by\nDetermine the controllers and such that, for\nthe step disturbance input, the response shows a small am-\nplitude and approaches zero quickly (in a matter of 1 to\n2 sec). For the response to the unit-step reference input, it is\ndesired that the maximum overshoot be 20% or less and the\nsettling time 1 sec or less. For the ramp reference input and\nacceleration reference input, the steady-state errors should\nbe zero.\nGc2(s)Gc1(s)\nGp(s) =\n2(s + 1)\ns(s + 3)(s + 5)\nGp(s)\nB–8–15. Consider the two-degrees-of-freedom control\nsystem shown in Figure 8–82. Design controllers and\nsuch that the response to the step disturbance input\nshows a small amplitude and settles to zero quickly (in 1 to\n2 sec) and the response to the step reference input ex-\nhibits 25% or less maximum overshoot and the settling time\nis less than 1 sec.The steady-state error in following the ramp\nreference input or acceleration reference input should be\nzero.\nGc2(s)\nGc1(s)\nGp(s)Gc1(s)\nY(s)R(s) U(s)\nD(s)\nGc2(s)\n+++ –+ –\nFigure 8–81\nTwo-degrees-of-freedom control system.\n1\ns2C1(s)\nY(s)R(s)\nD(s)\nC2(s)\n+++ –+ –\nFigure 8–82\nTwo-degrees-of-freedom control system.9\n648\nControl Systems Analysis\nin State Space\n9–1 INTRODUCTION*\nA modern complex system may have many inputs and many outputs, and these may be\ninterrelated in a complicated manner. To analyze such a system, it is essential to reduce\nthe complexity of the mathematical expressions, as well as to resort to computers for most\nof the tedious computations necessary in the analysis.The state-space approach to system\nanalysis is best suited from this viewpoint.\nWhile conventional control theory is based on the input–output relationship, or trans-\nfer function, modern control theory is based on the description of system equations in\nterms of n first-order differential equations, which may be combined into a first-order\nvector-matrix differential equation.The use of vector-matrix notation greatly simplifies\nthe mathematical representation of systems of equations.The increase in the number of\nstate variables, the number of inputs, or the number of outputs does not increase the\ncomplexity of the equations. In fact, the analysis of complicated multiple-input, multiple-\noutput systems can be carried out by procedures that are only slightly more compli-\ncated than those required for the analysis of systems of first-order scalar differential\nequations.\nThis chapter and the next deal with the state-space analysis and design of control sys-\ntems. Basic materials of state-space analysis, including the state-space representation of\n* It is noted that in this book an asterisk used as a superscript of a matrix, such asA*, implies that it is a con-\njugate transpose of matrix A.The conjugate transpose is the conjugate of the transpose of a matrix. For a real\nmatrix (a matrix whose elements are all real), the conjugate transpose A* is the same as the transpose A\nT\n.\nOpenmirrors.comSection 9–2 / State-Space Representations of Transfer-Function Systems 649\nsystems, controllability, and observability are presented in this chapter. Useful design\nmethods based on state-feedback control are given in Chapter 10.\nOutline of the Chapter. Section 9–1 has presented an introduction to state-space\nanalysis of control systems. Section 9–2 deals with the state-space representation of\ntransfer-function systems. Here we present various canonical forms of state-space equa-\ntions. Section 9–3 discusses the transformation of system models (such as from transfer-\nfunction to state-space models, and vice versa) with MATLAB. Section 9–4 presents\nthe solution of time-invariant state equations. Section 9–5 gives some useful results in\nvector-matrix analysis that are necessary in studying the state-space analysis of control\nsystems. Section 9–6 discusses the controllability of control systems and Section 9–7\ntreats the observability of control systems.\n9–2 STATE-SPACE REPRESENTATIONS OF \nTRANSFER-FUNCTION SYSTEMS\nMany techniques are available for obtaining state-space representations of\ntransfer-function systems. In Chapter 2 we presented a few such methods. This section\npresents state-space representations in the controllable, observable, diagonal, or Jordan\ncanonical forms. (Methods for obtaining such state-space representations from transfer\nfunctions are discussed in detail in Problems A–9–1 through A–9–4.)\nState-Space Representations in Canonical Forms. Consider a system defined\nby\n(9–1)\nwhere u is the input and y is the output. This equation can also be written as\n(9–2)\nIn what follows we shall present state-space representations of the system defined by\nEquation (9–1) or (9–2) in controllable canonical form, observable canonical form, and\ndiagonal (or Jordan) canonical form.\nControllable Canonical Form. The following state-space representation is called\na controllable canonical form:\n(9–3) G\nx#\n1\nx#\n2\n/H11080\n/H11080\n/H11080\nx#\nn - 1\nx#\nn\nW = G\n0\n0\n/H11080\n/H11080\n/H11080\n0\n-an\n1\n0\n/H11080\n/H11080\n/H11080\n0\n-an - 1\n0\n1\n/H11080\n/H11080\n/H11080\n0\n-an - 2\np\np\np\np\n0\n0\n/H11080\n/H11080\n/H11080\n1\n-a1\nWG\nx1\nx2\n/H11080\n/H11080\n/H11080\nxn - 1\nxn\nW + G\n0\n0\n/H11080\n/H11080\n/H11080\n0\n1\nWu\nY(s)\nU(s) = b0 sn + b1 sn - 1 + p + bn - 1 s + bn\nsn + a1 sn - 1 + p + an - 1 s + an\ny\n(n)\n+ a1 y\n(n - 1)\n+ p + an - 1 y# + an y = b0 u\n(n)\n+ b1 u\n(n - 1)\n+ p + bn - 1 u# + bn u650\nChapter 9 / Control Systems Analysis in State Space\n(9–4)\nThe controllable canonical form is important in discussing the pole-placement approach\nto control systems design.\nObservable Canonical Form. The following state-space representation is called\nan observable canonical form:\n(9–5)\n(9–6)\nNote that the n*n state matrix of the state equation given by Equation (9–5) is the\ntranspose of that of the state equation defined by Equation (9–3).\nDiagonal Canonical Form. Consider the transfer-function system defined by Equa-\ntion  (9–2). Here we consider the case where the denominator polynomial involves only\ndistinct roots. For the distinct-roots case, Equation (9–2) can be written as\n(9–7)\nThe diagonal canonical form of the state-space representation of this system is given by\n = b\n0\n+ c\n1\ns + p\n1\n+ c\n2\ns + p\n2\n+ p + c\nn\ns + p\nn\n Y(s)\nU(s) = b\n0\n \ns\nn\n+ b\n1\n \ns\nn - 1\n+ p + b\nn - 1\n \ns + b\nn\nAs + p\n1\nBAs + p\n2\nB p As + p\nn\nB\n y = [0\n \n0\n \np\n \n0\n \n1]\nG\nx\n1\nx\n2\n/H11080\n/H11080\n/H11080\nx\nn - 1\nx\nn\nW\n+ b\n0\n \nu\n \nF\nx#\n1\nx#\n2\n/H11080\n/H11080\n/H11080\nx#\nn\nV\n=\nF\n0\n1\n/H11080\n/H11080\n/H11080\n0\n0\n0\n/H11080\n/H11080\n/H11080\n0\np\np\np\n0\n0\n/H11080\n/H11080\n/H11080\n1\n-a\nn\n-a\nn - 1\n/H11080\n/H11080\n/H11080\n-a\n1\nVF\nx\n1\nx\n2\n/H11080\n/H11080\n/H11080\nx\nn\nV\n+\nF\nb\nn\n- a\nn\n \nb\n0\nb\nn - 1\n- a\nn - 1\n \nb\n0\n/H11080\n/H11080\n/H11080\nb\n1\n- a\n1\n \nb\n0\nV\nu\n y = Cb\nn\n- a\nn\n \nb\n0\n/H21752b\nn - 1\n- a\nn - 1\n \nb\n0\n/H21752p /H21752b\n1\n- a\n1\n \nb\n0\nD\nF\nx\n1\nx\n2\n/H11080\n/H11080\n/H11080\nx\nn\nV\n+ b\n0\n \nu\nOpenmirrors.com(9–8)\n(9–9)\nJordan Canonical Form. Next we shall consider the case where the denominator\npolynomial of Equation (9–2) involves multiple roots. For this case, the preceding\ndiagonal canonical form must be modified into the Jordan canonical form. Suppose, for\nexample, that the pi ’s are different from one another, except that the first three pi ’s are\nequal, or p1=p2=p3 . Then the factored form of Y(s)/U(s) becomes\nThe partial-fraction expansion of this last equation becomes\nA state-space representation of this system in the Jordan canonical form is given by\n(9–10)\n(9–11)y = Cc1 c2 p cn DF\nx1\nx2\n/H11080\n/H11080\n/H11080\nxn\nV+ b0 u\nH\nx#\n1\nx#\n2\nx#\n3\nx#\n4\n/H11080\n/H11080\n/H11080\nx#\nn\nX = H\n-p1\n0\n0\n0\n/H11080\n/H11080\n/H11080\n0\n1\n-p1\n0\np\np\n0\n1\n-p1\n0\n/H11080\n/H11080\n/H11080\n0\n0\n:\n0\n-p4\n0\np\np\n/H11080\n/H11080\n/H11080\n0\n:\n0\n0\n-pn\nXH\nx1\nx2\nx3\nx4\n/H11080\n/H11080\n/H11080\nxn\nX + H\n0\n0\n1\n1\n/H11080\n/H11080\n/H11080\n1\nXu\nY(s)\nU(s) = b0 + c1\nAs + p1B\n3 + c2\nAs + p1B\n2 + c3\ns + p1\n+ c4\ns + p4\n+ p + cn\ns + pn\nY(s)\nU(s) = b0 sn + b1 sn - 1 + p + bn - 1 s + bn\nAs + p1B\n3\nAs + p4BAs + p5Bp As + pnB\n y = Cc1 c2 p cn DF\nx1\nx2\n/H11080\n/H11080\n/H11080\nxn\nV + b0 u\n F\nx#\n1\nx#\n2\n/H11080\n/H11080\n/H11080\nx#\nn\nV= F\n-p1\n0\n-p2\n/H11080\n/H11080\n/H11080\n0\n-pn\nVF\nx1\nx2\n/H11080\n/H11080\n/H11080\nxn\nV + F\n1\n1\n/H11080\n/H11080\n/H11080\n1\nVu\nSection 9–2 / State-Space Representations of Transfer-Function Systems 651652\nChapter 9 / Control Systems Analysis in State Space\nEXAMPLE 9–1\nConsider the system given by\nObtain state-space representations in the controllable canonical form, observable canonical form,\nand diagonal canonical form.\nControllable Canonical Form:\nObservable Canonical Form:\nDiagonal Canonical Form:\nEigenvalues of an n /H11547n Matrix A. The eigenvalues of an n*n matrix A are the\nroots of the characteristic equation\n|lI-A|=0\nThe eigenvalues are also called the characteristic roots.\nConsider, for example, the following matrix A:\nThe characteristic equation is\n|lI-A|=\n=l\n3\n+6l\n2\n+11l+6\n=(l+1)(l+2)(l+3)=0\nThe eigenvalues of A are the roots of the characteristic equation, or –1, –2, and –3.\nDiagonalization of n /H11547n Matrix. Note that if an n*n matrix A with distinct\neigenvalues is given by\n3\nl\n0\n6\n-1\nl\n11\n0\n-1\nl + 6\n3\nA =\nC\n0\n0\n-6\n1\n0\n-11\n0\n1\n-6\nS\n y(t) = [2\n \n-1]\nB\nx\n1\n(t)\nx\n2\n(t)\nR\n \nB\nx#\n1\n(t)\nx#\n2\n(t)\nR\n=\nB\n-1\n0\n0\n-2\nRB\nx\n1\n(t)\nx\n2\n(t)\nR\n+\nB\n1\n1\nR\nu(t)\n y(t) = [0\n \n1]\nB\nx\n1\n(t)\nx\n2\n(t)\nR\n \nB\nx#\n1\n(t)\nx#\n2\n(t)\nR\n=\nB\n0\n1\n-2\n-3\nRB\nx\n1\n(t)\nx\n2\n(t)\nR\n+\nB\n3\n1\nR\nu(t)\n y(t) = [3\n \n1]\nB\nx\n1\n(t)\nx\n2\n(t)\nR\n \nB\nx#\n1\n(t)\nx#\n2\n(t)\nR\n=\nB\n0\n-2\n1\n-3\nRB\nx\n1\n(t)\nx\n2\n(t)\nR\n+\nB\n0\n1\nR\nu(t)\nY(s)\nU(s) = s + 3\ns\n2\n+ 3s + 2\nOpenmirrors.comSection 9–2 / State-Space Representations of Transfer-Function Systems 653\n(9–12)\nthe transformation x=Pz, where\nP=\nl1 , l2 , p , ln=n distinct eigenvalues of A\nwill transform P–1 AP into the diagonal matrix, or\nIf the matrix A defined by Equation (9–12) involves multiple eigenvalues, then\ndiagonalization is impossible. For example, if the 3*3 matrix A, where\nhas the eigenvalues l1 , l1 , l3 , then the transformation x=Sz, where\nwill yield\nThis is in the Jordan canonical form.\nS-1 AS = C\nl1\n0\n0\n1\nl1\n0\n0\n0\nl3\nS\nS = C\n1\nl1\nl1\n2\n0\n1\n2l1\n1\nl3\nl3\n2\nS\nA = C\n0\n0\n-a3\n1\n0\n-a2\n0\n1\n-a1\nS\nP-1 AP = F\nl1\n0\nl2\n/H11080\n/H11080\n/H11080\n0\nln\nV\nG\n1\nl1\nl1\n2\n/H11080\n/H11080\n/H11080\nl1\nn - 1\n1\nl2\nl2\n2\n/H11080\n/H11080\n/H11080\nl2\nn - 1\np\np\np\np\n1\nln\nln\n2\n/H11080\n/H11080\n/H11080\nln\nn - 1\nW\nA = G\n0\n0\n/H11080\n/H11080\n/H11080\n0\n-an\n1\n0\n/H11080\n/H11080\n/H11080\n0\n-an - 1\n0\n1\n/H11080\n/H11080\n/H11080\n0\n-an - 2\np\np\np\np\n0\n0\n/H11080\n/H11080\n/H11080\n1\n-a1\nW654\nChapter 9 / Control Systems Analysis in State Space\nEXAMPLE 9–2\nConsider the following state-space representation of a system.\n(9–13)\n(9–14)\nEquations (9–13) and (9–14) can be put in a standard form as\n(9–15)\n(9–16)\nwhere\nThe eigenvalues of matrix A are\nl\n1\n=–1, l\n2\n=–2, l\n3\n=–3\nThus, three eigenvalues are distinct. If we define a set of new state variables z\n1\n,z\n2\n, and z\n3\nby the\ntransformation\nor\nx=Pz (9–17)\nwhere\n(9–18)\nthen, by substituting Equation (9–17) into Equation (9–15), we obtain\nBy premultiplying both sides of this last equation by P\n–1\n, we get\n(9–19)\nor\n +\nC\n3\n-3\n1\n2.5\n-4\n1.5\n0.5\n-1\n0.5\nSC\n0\n0\n6\nS\nu\n \nC\nz#\n1\nz#\n2\nz#\n3\nS\n=\nC\n3\n-3\n1\n2.5\n-4\n1.5\n0.5\n-1\n0.5\nSC\n0\n0\n-6\n1\n0\n-11\n0\n1\n-6\nSC\n1\n-1\n1\n1\n-2\n4\n1\n-3\n9\nSC\nz\n1\nz\n2\nz\n3\nS\nz# = P\n-1\n \nAPz + P\n-1\n \nBu\nPz# = APz + Bu\nP =\nC\n1\nl\n1\nl\n1\n2\n1\nl\n2\nl\n2\n2\n1\nl\n3\nl\n3\n2\nS\n=\nC\n1\n-1\n1\n1\n-2\n4\n1\n-3\n9\nS\nC\nx\n1\nx\n2\nx\n3\nS\n=\nC\n1\n-1\n1\n1\n-2\n4\n1\n-3\n9\nSC\nz\n1\nz\n2\nz\n3\nS\nA =\nC\n0\n0\n-6\n1\n0\n-11\n0\n1\n-6\nS\n,\n  \nB =\nC\n0\n0\n6\nS\n,\n  \nC = [1\n \n0\n \n0]\ny = Cx\nx# = Ax + Bu\n y = [1\n \n0\n \n0]\nC\nx\n1\nx\n2\nx\n3\nS\n \nC\nx#\n1\nx#\n2\nx#\n3\nS\n=\nC\n0\n0\n-6\n1\n0\n-11\n0\n1\n-6\nSC\nx\n1\nx\n2\nx\n3\nS\n+\nC\n0\n0\n6\nS\nu\nOpenmirrors.comSection 9–2 / State-Space Representations of Transfer-Function Systems 655\nSimplifying gives\n(9–20)\nEquation (9–20) is also a state equation that describes the same system as defined by Equation\n(9–13).\nThe output equation, Equation (9–16), is modified to\ny=CPz\nor\n(9–21)\nNotice that the transformation matrix P, defined by Equation (9–18), modifies the coefficient\nmatrix of z into the diagonal matrix.As is clearly seen from Equation (9–20), the three scalar state\nequations are uncoupled. Notice also that the diagonal elements of the matrix P–1AP in Equation\n(9–19) are identical with the three eigenvalues of A. It is very important to note that the eigen-\nvalues of A and those of P–1AP are identical.We shall prove this for a general case in what follows.\nInvariance of Eigenvalues. To prove the invariance of the eigenvalues under a\nlinear transformation, we must show that the characteristic polynomials ∑lI-A∑ and\n@lI-P–1 AP@are identical.\nSince the determinant of a product is the product of the determinants, we obtain\nNoting that the product of the determinants @P–1 @and ∑P∑ is the determinant of the prod-\nuct @P–1 P@, we obtain\nThus, we have proved that the eigenvalues of A are invariant under a linear\ntransformation.\nNonuniqueness of a Set of State Variables.It has been stated that a set of state vari-\nables is not unique for a given system. Suppose that x1,x 2, p ,x n are a set of state variables.\n = ∑l I - A∑\n @l I - P-1 AP@ = @P-1 P@@l I - A@\n = @P-1 @@P@@l I - A@\n = @P-1 @@l I - A@@P@\n = @P-1(l I - A) P@\n @l I - P-1 AP@ = @l P-1 P - P-1 AP@\n = [1 1 1] C\nz1\nz2\nz3\nS\n y = [1 0 0] C\n1\n-1\n1\n1\n-2\n4\n1\n-3\n9\nSC\nz1\nz2\nz3\nS\nC\nz#\n1\nz#\n2\nz#\n3\nS= C\n-1\n0\n0\n0\n-2\n0\n0\n0\n-3\nSC\nz1\nz2\nz3\nS + C\n3\n-6\n3\nSu656\nChapter 9 / Control Systems Analysis in State Space\nThen we may take as another set of state variables any set of functions\nprovided that, for every set of values there corresponds a unique set of\nvalues x\n1\n,x\n2\n, p ,x\nn\n, and vice versa. Thus, if x is a state vector, then where \nis also a state vector, provided the matrix P is nonsingular. Different state vectors convey\nthe same information about the system behavior.\n9–3 TRANSFORMATION OF SYSTEM MODELS WITH MATLAB\nIn this section we shall consider the transformation of the system model from transfer\nfunction to state space, and vice versa. We shall begin our discussion with the\ntransformation from transfer function to state space.\nLet us write the closed-loop transfer function as\nOnce we have this transfer-function expression, the MATLAB command\n[A, B, C, D] = tf2ss(num,den)\nwill give a state-space representation. It is important to note that the state-space repre-\nsentation for any system is not unique. There are many (indeed, infinitely many) state-\nspace representations for the same system.The MATLAB command gives one possible\nsuch state-space representation.\nState-Space Formulation of Transfer-Function Systems. Consider the\ntransfer-function system\n(9–22)\nThere are many (again, infinitely many) possible state-space representations for this\nsystem. One possible state-space representation is\n y = [1\n \n0\n \n0]\nC\nx\n1\nx\n2\nx\n3\nS\n+ [0] u\n \nC\nx#\n1\nx#\n2\nx#\n3\nS\n=\nC\n0\n0\n-10\n1\n0\n-5\n0\n1\n-6\nSC\nx\n1\nx\n2\nx\n3\nS\n+\nC\n0\n10\n-50\nS\nu\nY(s)\nU(s) = 10s + 10\ns\n3\n+ 6s\n2\n+ 5s + 10\nY(s)\nU(s) = numerator polynomial in s\ndenominator polynomial in s = num\nden\nx\nˆ\n= Px\nx\nˆ\n,\nx\nˆ\n1\n \n,x\nˆ\n2\n \n, p ,x\nˆ\nn\n \n,\n x\nˆ\nn\n= X\nn\nAx\n1\n \n, x\n2\n \n, p , x\nn\nB\n /H11080\n /H11080\n /H11080\n x\nˆ\n2\n= X\n2\nAx\n1\n \n, x\n2\n \n, p , x\nn\nB\n x\nˆ\n1\n= X\n1\nAx\n1\n \n, x\n2\n \n, p , x\nn\nB\nOpenmirrors.comSection 9–3 / Transformation of System Models with MATLAB 657\nAnother possible state-space representation (among infinitely many alternatives) is\n(9–23)\n(9–24)\nMATLAB transforms the transfer function given by Equation (9–22) into the state-space\nrepresentation given by Equations (9–23) and (9–24). For the example system considered\nhere, MATLAB Program 9–1 will produce matrices A, B, C, and D.\n y = [0 10 10] C\nx1\nx2\nx3\nS + [0] u\n C\nx#\n1\nx#\n2\nx#\n3\nS = C\n-6\n1\n0\n-5\n0\n1\n-10\n0\n0\nSC\nx1\nx2\nx3\nS + C\n1\n0\n0\nSu\nMATLAB Program 9–1\nnum = [10  10];\nden = [1  6  5  10];\n[A,B,C,D] = tf2ss(num,den)\nA=\n-6 -5 -10\n1 -0 - 0\n0 -1 - 0\nB =\n1\n0\n0\nC =\n01 01 0\nD =\n0\nTransformation from State Space to Transfer Function. To obtain the transfer\nfunction from state-space equations, use the following command:\n[num,den] = ss2tf(A,B,C,D,iu)\niu must be specified for systems with more than one input. For example, if the system\nhas three inputs (u1, u2, u3), then iu must be either 1, 2, or 3, where 1 implies u1, 2\nimplies u2, and 3 implies u3.\nIf the system has only one input, then either\n[num,den] = ss2tf(A,B,C,D)\nor\n[num,den] = ss2tf(A,B,C,D,1)\nmay be used. (See Example 9–3 and MATLAB Program 9–2.)658\nChapter 9 / Control Systems Analysis in State Space\nFor the case where the system has multiple inputs and multiple outputs, see\nExample 9–4.\nEXAMPLE 9–3\nObtain the transfer function of the system defined by the following state-space equations:\nMATLAB Program 9–2 will produce the transfer function for the given system. The transfer\nfunction obtained is given by\nY(s)\nU(s) = 25.04s + 5.008\ns\n3\n+ 5.0325s\n2\n+ 25.1026s + 5.008\n y = [1\n \n0\n \n0]\nC\nx\n1\nx\n2\nx\n3\nS\n \nC\nx#\n1\nx#\n2\nx#\n3\nS\n=\nC\n0\n0\n-5.008\n1\n0\n-25.1026\n0\n1\n-5.03247\nSC\nx\n1\nx\n2\nx\n3\nS\n+\nC\n0\n25.04\n-121.005\nS\nu\nMATLAB Program 9–2\nA = [0  1  0;0  0  1;-5.008  -25.1026  -5.03247];\nB = [0;25.04; -121.005];\nC = [1  0  0];\nD = [0];\n[num,den] = ss2tf(A,B,C,D)\nnum =\n0 -0.0000 25.0400 5.0080\nden =\n1.0000 5.0325 25.1026 5.0080\n% ***** The same result can be obtained by entering the following command *****\n[num,den] = ss2tf(A,B,C,D,1)\nnum =\n0 -0.0000 25.0400 5.0080\nden =\n1.0000 5.0325 25.1026 5.0080\nOpenmirrors.comSection 9–3 / Transformation of System Models with MATLAB 659\nEXAMPLE 9–4 Consider a system with multiple inputs and multiple outputs.When the system has more than one\noutput, the command\n[NUM,den] = ss2tf(A,B,C,D,iu)\nproduces transfer functions for all outputs to each input. (The numerator coefficients are returned\nto matrix NUM with as many rows as there are outputs.)\nConsider the system defined by\nThis system involves two inputs and two outputs. Four transfer functions are involved:\nand (When considering input u1 , we assume that input u2\nis zero and vice versa.) See the output of MATLAB Program 9–3.\nY2(s)/H20862U2(s).Y1(s)/H20862U2(s),Y2(s)/H20862U1(s),\nY1(s)/H20862U1(s),\n By1\ny2\nR = B1\n0\n0\n1 RBx1\nx2\nR+ B0\n0\n0\n0 RBu1\nu2\nR\n Bx#\n1\nx#\n2\nR = B 0\n-25\n1\n-4 RBx1\nx2\nR+ B1\n0\n1\n1 RBu1\nu2\nR\nMATLAB Program 9–3\nA = [0  1;-25  -4];\nB = [1  1;0  1];\nC = [1  0;0  1];\nD = [0  0;0  0];\n[NUM,den] = ss2tf(A,B,C,D,1)\nNUM =\n01 4\n0 0 -25\nden =\n1  4  25\n[NUM,den] = ss2tf(A,B,C,D,2)\nNUM =\n0   1.0000 5.0000\n0   1.0000 -25.0000\nden =\n142 5\nThis is the MATLAB representation of the following four transfer functions:\n \nY1(s)\nU2(s) = s + 5\ns2 + 4s + 25 ,   \nY2(s)\nU2(s) = s - 25\ns2 + 4s + 25\n \nY1(s)\nU1(s) = s + 4\ns2 + 4s + 25 ,   \nY2(s)\nU1(s) = -25\ns2 + 4s + 25660\nChapter 9 / Control Systems Analysis in State Space\n9–4 SOLVING THE TIME-INVARIANT STATE EQUATION\nIn this section, we shall obtain the general solution of the linear time-invariant state equa-\ntion. We shall first consider the homogeneous case and then the nonhomogeneous case.\nSolution of Homogeneous State Equations. Before we solve vector-matrix\ndifferential equations, let us review the solution of the scalar differential equation\n(9–25)\nIn solving this equation, we may assume a solution x(t) of the form\nx(t)=b\n0\n+b\n1\nt+b\n2\nt\n2\n+p+b\nk\nt\nk\n+p (9–26)\nBy substituting this assumed solution into Equation (9–25), we obtain\n(9–27)\nIf the assumed solution is to be the true solution, Equation (9–27) must hold for any t.\nHence, equating the coefficients of the equal powers of t, we obtain\nThe value of b\n0\nis determined by substituting t=0 into Equation (9–26), or\nx(0)=b\n0\nHence, the solution x(t) can be written as\nWe shall now solve the vector-matrix differential equation\n(9–28)\nwhere\nBy analogy with the scalar case, we assume that the solution is in the form of a vector\npower series in t, or\nx(t)=b\n0\n+b\n1\nt+b\n2\nt\n2\n+p+b\nk\nt\nk\n+p (9–29)\n A = n * n constant matrix\n x = n-vector\nx# = Ax\n = e\nat\nx(0)\n x(t) =\na\n1 + at + 1\n2! a\n2\nt\n2\n+ p + 1\nk! a\nk\nt\nk\n+ p\nb\nx(0)\n b\nk\n= 1\nk! a\nk\nb\n0\n /H11080\n /H11080\n /H11080\n b\n3\n= 1\n3 ab\n2\n= 1\n3 * 2 a\n3\nb\n0\n b\n2\n= 1\n2 ab\n1\n= 1\n2 a\n2\nb\n0\n b\n1\n= ab\n0\n= aAb\n0\n+ b\n1\n \nt + b\n2\n \nt\n2\n+ p + b\nk\n \nt\nk\n+ pB\nb\n1\n+ 2b\n2\n \nt + 3b\n3\n \nt\n2\n+ p + kb\nk\n \nt\nk - 1\n+ p\nx# = ax\nOpenmirrors.comSection 9–4 / Solving the Time-Invariant State Equation 661\nBy substituting this assumed solution into Equation (9–28), we obtain\n(9–30)\nIf the assumed solution is to be the true solution, Equation (9–30) must hold for all t. Thus,\nby equating the coefficients of like powers of t on both sides of Equation (9–30), we obtain\nBy substituting t=0 into Equation (9–29), we obtain\nx(0)=b0\nThus, the solution x(t) can be written as\nThe expression in the parentheses on the right-hand side of this last equation is an n*n\nmatrix. Because of its similarity to the infinite power series for a scalar exponential, we\ncall it the matrix exponential and write\nIn terms of the matrix exponential, the solution of Equation (9–28) can be written as\n(9–31)\nSince the matrix exponential is very important in the state-space analysis of linear\nsystems, we shall next examine its properties.\nMatrix Exponential. It can be proved that the matrix exponential of an n*n\nmatrix A,\nconverges absolutely for all finite t. (Hence, computer calculations for evaluating the\nelements of eAt by using the series expansion can be easily carried out.)\neAt = a\nq\nk = 0\nAktk\nk!\nx(t) = eAt x(0)\nI + At + 1\n2! A2t2 + p + 1\nk! Aktk + p = eAt\nx(t) = aI + At + 1\n2! A2t2 + p + 1\nk! Aktk + p b x(0)\n bk = 1\nk! Ak b0\n /H11080\n /H11080\n /H11080\n b3 = 1\n3 Ab2 = 1\n3 * 2 A3 b0\n b2 = 1\n2 Ab1 = 1\n2 A2 b0\n b1 = Ab0\n= AAb0 + b1 t + b2 t2 + p + bk tk + p B\nb1 + 2 b2 t + 3 b3 t2 + p + k bk tk - 1 + p662\nChapter 9 / Control Systems Analysis in State Space\nBecause of the convergence of the infinite series the series can be\ndifferentiated term by term to give\nThe matrix exponential has the property that\nThis can be proved as follows:\nIn particular, if s=–t, then\nThus, the inverse of is Since the inverse of always exists, is nonsingular.\nIt is very important to remember that\nTo prove this, note that\n + A\n2\n \nBt\n3\n2! + AB\n2\nt\n3\n2! + B\n3\nt\n3\n3! + p\n = I + (A + B)t + A\n2\nt\n2\n2! + ABt\n2\n+ B\n2\nt\n2\n2! + A\n3\nt\n3\n3!\n e\nAt\ne\nBt\n=\na\nI + At + A\n2\nt\n2\n2! + A\n3\nt\n3\n3! + p\nba\nI + Bt + B\n2\nt\n2\n2! + B\n3\nt\n3\n3! + p\nb\n e\n(A + B)t\n= I + (A + B)t + (A + B)\n2\n2!  t\n2\n+ (A + B)\n3\n3!  t\n3\n+ p\ne\n(A + B)t\nZ e\nAt\ne\nBt\n,\n  \nif AB Z BA\ne\n(A + B)t\n= e\nAt\ne\nBt\n,\n  \nif AB = BA\ne\nAt\ne\nAt\ne\n-\n \nAt\n.e\nAt\ne\nAt\ne\n-\n \nAt\n= e\n-\n \nAt\ne\nAt\n= e\nA(t - t)\n= I\n = e\nA(t + s)\n = a\nq\nk = 0\nA\nk\n(t + s)\nk\nk!\n = a\nq\nk = 0\nA\nk\na\na\nq\ni = 0\nt\ni\ns\nk - i\ni! (k - i)!\nb\n e\nAt\ne\nAs\n=\na\na\nq\nk = 0\n A\nk\nt\nk\nk!\nba\na\nq\nk = 0\n A\nk\ns\nk\nk!\nb\ne\nA(t + s)\n= e\nAt\ne\nAs\n =\nc\nI + At + A\n2\nt\n2\n2! + p + A\nk - 1\nt\nk - 1\n(k - 1)! + p\nd\n \nA = e\nAt\n \nA\n = A\nc\nI + At + A\n2\nt\n2\n2! + p + A\nk - 1\nt\nk - 1\n(k - 1)! + p\nd\n= Ae\nAt\n d\ndt e\nAt\n= A + A\n2\nt + A\n3\nt\n2\n2! + p + A\nk\nt\nk - 1\n(k - 1)! + p\ng\nq\nk = 0 \nA\nk\nt\nk\n/H20862k!,\nOpenmirrors.comSection 9–4 / Solving the Time-Invariant State Equation 663\nHence,\nThe difference between and vanishes if A and B commute.\nLaplace Transform Approach to the Solution of Homogeneous State\nEquations. Let us first consider the scalar case:\n(9–32)\nTaking the Laplace transform of Equation (9–32), we obtain\nsX(s)-x(0)=aX(s) (9–33)\nwhere Solving Equation (9–33) for X(s) gives\nThe inverse Laplace transform of this last equation gives the solution\nx(t)=eatx(0)\nThe foregoing approach to the solution of the homogeneous scalar differential\nequation can be extended to the homogeneous state equation:\n(9–34)\nTaking the Laplace transform of both sides of Equation (9–34), we obtain\nsX(s)-x(0)=AX(s)\nwhere Hence,\n(sI-A)X(s)=x(0)\nPremultiplying both sides of this last equation by (sI-A)–1, we obtain\nX(s)=(sI-A)–1 x(0)\nThe inverse Laplace transform of gives the solution Thus,\nx(t)=l–1 C(sI-A)–1 Dx(0) (9–35)\nNote that\nHence, the inverse Laplace transform of (sI-A)–1 gives\n(9–36)l-1 C(s I - A)-1 D = I + At + A2t2\n2! + A3t3\n3! + p = eAt\n(s I - A)-1 = I\ns + A\ns2 + A2\ns3 + p\nx(t).X(s)\nX(s) = l[x].\nx# (t) = Ax(t)\nX(s) = x(0)\ns - a = (s - a)-1x(0)\nX(s) = l[x].\nx# = ax\neAteBte(A + B)t\n+ BA2 + ABA + B2 A + BAB - 2 A2 B - 2 AB2\n3! t3 + p\ne(A + B)t - eAteBt = BA - AB\n2!  t2664\nChapter 9 / Control Systems Analysis in State Space\n(The inverse Laplace transform of a matrix is the matrix consisting of the inverse Laplace\ntransforms of all elements.) From Equations (9–35) and (9–36), the solution of Equation\n(9–34) is obtained as\nThe importance of Equation (9–36) lies in the fact that it provides a convenient\nmeans for finding the closed solution for the matrix exponential.\nState-Transition Matrix. We can write the solution of the homogeneous state\nequation\n(9–37)\nas\n(9–38)\nwhere is an n*n matrix and is the unique solution of\nTo verify this, note that\nand\nWe thus confirm that Equation (9–38) is the solution of Equation (9–37).\nFrom Equations (9–31), (9–35), and (9–38), we obtain\nNote that\nFrom Equation (9–38), we see that the solution of Equation (9–37) is simply a\ntransformation of the initial condition. Hence, the unique matrix is called the state-\ntransition matrix.The state-transition matrix contains all the information about the free\nmotions of the system defined by Equation (9–37).\nIf the eigenvalues l\n1\n, l\n2\n, p , l\nn\nof the matrix A are distinct, than will contain\nthe n exponentials\nIn particular, if the matrix A is diagonal, then\n/H9021(t) = e\nAt\n=\nF\ne\nl\n1\n \nt\n0\ne\nl\n2\n \nt\n/H11080\n/H11080\n/H11080\n0\ne\nl\nn\n \nt\nV\n  \n(A: diagonal)\ne\nl\n1\n \nt\n, e\nl\n2\n \nt\n, p ,e\nl\nn\n \nt\n/H9021(t)\n/H9021(t)\n/H9021\n-1\n(t) = e\n-\n \nAt\n= /H9021(-t)\n/H9021(t) = e\nAt\n= l\n-1\nC(s\n \nI - A)\n-1\nD\nx# (t) = /H9021\n#\n(t)\n \nx(0) = A/H9021(t)\n \nx(0) = Ax(t)\nx(0) = /H9021(0)\n \nx(0) = x(0)\n/H9021# (t) = A/H9021(t),\n  \n/H9021(0) = I\n/H9021(t)\nx(t) = /H9021(t)\n \nx(0)\nx# = Ax\nx(t) = e\nAt\n \nx(0)\nOpenmirrors.comSection 9–4 / Solving the Time-Invariant State Equation 665\nIf there is a multiplicity in the eigenvalues—for example, if the eigenvalues of A are\nl1 , l1 , l1 , l4 , l5 , p , ln,\nthen will contain, in addition to the exponentials terms like\nand\nProperties of State-Transition Matrices. We shall now summarize the important\nproperties of the state-transition matrix For the time-invariant system\nfor which\nwe have the following:\n1.\n2. or\n3.\n4.\n5.\nEXAMPLE 9–5 Obtain the state-transition matrix of the following system:\nObtain also the inverse of the state-transition matrix,\nFor this system,\nThe state-transition matrix is given by\nSince\nthe inverse of (sI-A) is given by\n = D\ns + 3\n(s + 1)(s + 2)\n-2\n(s + 1)(s + 2)\n1\n(s + 1)(s + 2)\ns\n(s + 1)(s + 2)\nT\n (s I - A)-1 = 1\n(s + 1)(s + 2) Bs + 3\n-2\n1\ns R\ns I - A = Bs\n0\n0\ns R - B 0\n-2\n1\n-3 R= Bs\n2\n-1\ns + 3 R\n/H9021(t) = eAt = l-1 C(s I - A)-1 D\n/H9021(t)\nA = B 0\n-2\n1\n-3 R\n/H9021-1(t).\nBx#\n1\nx#\n2\nR = B 0\n-2\n1\n-3 RBx1\nx2\nR\n/H9021(t)\n/H9021At2 - t1B /H9021At1 - t0B = /H9021At2 - t0B = /H9021At1 - t0B /H9021At2 - t1B\nC/H9021(t)D\nn\n= /H9021(nt)\n/H9021At1 + t2B = eAAt1 + t2B = eAt1eAt2 = /H9021At1B /H9021At2B = /H9021At2B /H9021At1B\n/H9021-1(t) = /H9021(-t)/H9021(t) = eAt = Ae- AtB\n-1\n= C/H9021(-t)D\n-1\n/H9021(0) = eA0 = I\n/H9021(t) = eAt\nx# = Ax\n/H9021(t).\nt2el1 t.tel1 t\nel1 t, el4 t, el5 t, p ,eln t,/H9021(t)666\nChapter 9 / Control Systems Analysis in State Space\nHence,\nNoting that we obtain the inverse of the state-transition matrix as follows:\nSolution of Nonhomogeneous State Equations. We shall begin by considering\nthe scalar case\n(9–39)\nLet us rewrite Equation (9–39) as\nMultiplying both sides of this equation by e\n–at\n, we obtain\nIntegrating this equation between 0 and t gives\nor\nThe first term on the right-hand side is the response to the initial condition and the\nsecond term is the response to the input u(t).\nLet us now consider the nonhomogeneous state equation described by\n(9–40)\nwhere\nBy writing Equation (9–40) as\nand premultiplying both sides of this equation by e\n–At\n, we obtain\ne\n-\n \nAt\nCx# (t) - Ax(t)D = d\ndt Ce\n-\n \nAt\n \nx(t)D = e\n-\n \nAt\n \nBu(t)\nx# (t) - Ax(t) = Bu(t)\n B = n * r constant matrix\n A = n * n constant matrix\n u = r-vector\n x = n-vector\nx# = Ax + Bu\nx(t) = e\nat\nx(0) + e\nat\n3\nt\n0\ne\n-at\nbu(t) dt\ne\n-at\nx(t) - x(0) =\n3\nt\n0\ne\n-at\nbu(t) dt\ne\n-at\nCx# (t) - ax(t)D = d\ndt Ce\n-at\nx(t)D = e\n-at\nbu(t)\nx# - ax = bu\nx# = ax + bu\n/H9021\n-1\n(t) = e\n-\n \nAt\n=\nB\n2e\nt\n- e\n2t\n-2e\nt\n+ 2e\n2t\ne\nt\n- e\n2t\n-e\nt\n+ 2e\n2t\nR\n/H9021\n-1\n(t) = /H9021(-t),\n =\nB\n2e\n-t\n- e\n-2t\n-2e\n-t\n+ 2e\n-2t\ne\n-t\n- e\n-2t\n-e\n-t\n+ 2e\n-2t\nR\n /H9021(t) = e\nAt\n= l\n-1\nC(s\n \nI - A)\n-1\nD\nOpenmirrors.comSection 9–4 / Solving the Time-Invariant State Equation 667\nIntegrating the preceding equation between 0 and t gives\nor\n(9–41)\nEquation (9–41) can also be written as\n(9–42)\nwhere Equation (9–41) or (9–42) is the solution of Equation (9–40). The\nsolution x(t) is clearly the sum of a term consisting of the transition of the initial state\nand a term arising from the input vector.\nLaplace Transform Approach to the Solution of Nonhomogeneous State\nEquations. The solution of the nonhomogeneous state equation\ncan also be obtained by the Laplace transform approach.The Laplace transform of this\nlast equation yields\nsX(s)-x(0)=AX(s)+BU(s)\nor\n(sI-A)X(s)=x(0)+BU(s)\nPremultiplying both sides of this last equation by (sI-A)–1, we obtain\nX(s)=(sI-A)–1 x(0)+(sI-A)–1 BU(s)\nUsing the relationship given by Equation (9–36) gives\nX(s)=lCeAt Dx(0)+lCeAt DBU(s)\nThe inverse Laplace transform of this last equation can be obtained by use of the\nconvolution integral as follows:\nSolution in Terms of Thus far we have assumed the initial time to be zero.\nIf, however, the initial time is given by t0 instead of 0, then the solution to Equation\n(9–40) must be modified to\n(9–43)x(t) = eAAt - t0B xAt0B +\n3\nt\nt0\neA(t - t) Bu(t) dt\nxAt0B.\nx(t) = eAt x(0) +\n3\nt\n0\neA(t - t) Bu(t) dt\nx# = Ax + Bu\n/H9021(t) = eAt.\nx(t) = /H9021(t) x(0) +\n3\nt\n0\n/H9021(t - t) Bu(t) dt\nx(t) = eAt x(0) +\n3\nt\n0\neA(t - t) Bu(t) dt\ne- At x(t) - x(0) =\n3\nt\n0\ne- At Bu(t) dt668\nChapter 9 / Control Systems Analysis in State Space\nEXAMPLE 9–6\nObtain the time response of the following system:\nwhere u(t) is the unit-step function occurring at t=0, or\nu(t)=1(t)\nFor this system,\nThe state-transition matrix was obtained in Example 9–5 as\nThe response to the unit-step input is then obtained as\nor\nIf the initial state is zero, or x(0)=0, then x(t) can be simplified to\n9–5 SOME USEFUL RESULTS IN VECTOR-MATRIX ANALYSIS\nIn this section we present some useful results in vector-matrix analysis that we use in\nSection 9–6. Specifically, we present the Cayley–Hamilton theorem, the minimal poly-\nnomial, Sylvester’s interpolation method for calculating and the linear independence\nof vectors.\nCayley–Hamilton Theorem. The Cayley–Hamilton theorem is very useful in\nproving theorems involving matrix equations or solving problems involving matrix\nequations.\nConsider an n*n matrix A and its characteristic equation:\n|lI-A|=l\nn\n+a\n1\nl\nn–1\n+p+a\nn–1\nl+a\nn\n=0\nThe Cayley–Hamilton theorem states that the matrix A satisfies its own characteristic\nequation, or that\nA\nn\n+a\n1\nA\nn–1\n+p+a\nn–1\nA+a\nn\nI=0 (9–44)\nTo prove this theorem, note that is a polynomial in l of degree n-1.\nThat is,\nadj(l\n \nI - A) = B\n1\n \nl\nn - 1\n+ B\n2\n \nl\nn - 2\n+ p + B\nn - 1\n \nl + B\nn\nadj(l\n \nI - A)\ne\nAt\n,\nB\nx\n1\n(t)\nx\n2\n(t)\nR\n=\nC\n1\n2 - e\n-t\n+ 1\n2 e\n-2t\ne\n-t\n- e\n-2t\nS\nB\nx\n1\n(t)\nx\n2\n(t)\nR\n=\nB\n2e\n-t\n- e\n-2t\n-2e\n-t\n+ 2e\n-2t\ne\n-t\n- e\n-2t\n-e\n-t\n+ 2e\n-2t\nRB\nx\n1\n(0)\nx\n2\n(0)\nR\n+\nB\n1\n2\n- e\n-t\n+\n1\n2\ne\n-2t\ne\n-t\n- e\n-2t\nR\nx(t) = e\nAt\n \nx(0) +\n3\nt\n0\nB\n2e\n-(t - t)\n- e\n-2(t - t)\n-2e\n-(t - t)\n+ 2e\n-2(t - t)\ne\n-(t - t)\n- e\n-2(t - t)\n-e\n-(t - t)\n+ 2e\n-2(t - t)\nRB\n0\n1\nR\n[1] dt\n/H9021(t) = e\nAt\n=\nB\n2e\n-t\n- e\n-2t\n-2e\n-t\n+ 2e\n-2t\ne\n-t\n- e\n-2t\n-e\n-t\n+ 2e\n-2t\nR\n/H9021(t) = e\nAt\nA =\nB\n0\n-2\n1\n-3\nR\n,\n  \nB =\nB\n0\n1\nR\nB\nx#\n1\nx#\n2\nR\n=\nB\n0\n-2\n1\n-3\nRB\nx\n1\nx\n2\nR\n+\nB\n0\n1\nR\nu\nOpenmirrors.comSection 9–5 / Some Useful Results in Vector-Matrix Analysis 669\nwhere Since\n(lI-A) adj(lI-A)=Cadj(lI-A)D(lI-A)=|lI-A|I\nwe obtain\nFrom this equation, we see that A and (i=1, 2, p ,n ) commute. Hence, the product\nof (lI-A) and becomes zero if either of these is zero. If A is substitut-\ned for l in this last equation, then clearly lI-A becomes zero. Hence, we obtain\nAn+a1 An–1 +p+an–1 A+an I=0\nThis proves the Cayley–Hamilton theorem, or Equation (9–44).\nMinimal Polynomial. Referring to the Cayley–Hamilton theorem, every n*n\nmatrix A satisfies its own characteristic equation. The characteristic equation is not,\nhowever, necessarily the scalar equation of least degree that A satisfies.The least-degree\npolynomial having A as a root is called the minimal polynomial. That is, the minimal\npolynomial of an n*n matrix A is defined as the polynomial of least degree,\nf(l)=lm+a1 lm–1 +p+am–1 l+am ,m /H11349n\nsuch that or\nf(A)=Am+a1 Am–1 +p+am–1 A+am I=0\nThe minimal polynomial plays an important role in the computation of polynomials in\nan n*n matrix.\nLet us suppose that a polynomial in l, is the greatest common divisor of all the\nelements of We can show that if the coefficient of the highest-degree term\ninl of is chosen as 1, then the minimal polynomial is given by\n(9–45)\n[See Problem A–9–8 for the derivation of Equation (9–45).]\nIt is noted that the minimal polynomial of an n*n matrix A can be determined\nby the following procedure:\n1. Form and write the elements of as factored polynomials\nin l.\n2. Determine as the greatest common divisor of all the elements of \nChoose the coefficient of the highest-degree term in lof to be 1. If there is no\ncommon divisor,\n3. The minimal polynomial is then given as divided by \nMatrix Exponential In solving control engineering problems, it often becomes\nnecessary to compute If matrix A is given with all elements in numerical values,\nMATLAB provides a simple way to compute , where T is a constant.eAT\neAt.\neAt.\nd(l).∑l I - A∑f(l)\nd(l) = 1.\nd(l)\nadj(l I - A).d(l)\nadj(l I - A)adj(l I - A)\nf(l)\nf(l) = ∑l I - A∑\nd(l)\nf(l)d(l)\nadj(l I - A).\nd(l),\nf(A) = 0,\nf(l)\nadj(l I - A)\nBi\n = AB1 ln - 1 + B2 ln - 2 + p + Bn - 1 l + BnB(l I - A)\n = (l I - A)AB1 ln - 1 + B2 ln - 2 + p + Bn - 1 l + BnB\n ∑l I - A∑ I = Iln + a1  Iln - 1 + p + an - 1  Il + an  I\nB1 = I.670\nChapter 9 / Control Systems Analysis in State Space\nAside from computational methods, several analytical methods are available for the\ncomputation of We shall present three methods here.\nComputation of e\nAt\n: Method 1. If matrix A can be transformed into a diagonal\nform, then can be given by\n(9–46)\nwhere P is a diagonalizing matrix for A. [For the derivation of Equation (9–46), see\nProblem A–9–11.]\nIf matrix A can be transformed into a Jordan canonical form, then can be given by\nwhere S is a transformation matrix that transforms matrix A into a Jordan canonical\nform J.\nAs an example, consider the following matrix A:\nThe characteristic equation is\n|lI-A|=l\n3\n-3l\n2\n+3l-1=(l-1)\n3\n=0\nThus, matrix A has a multiple eigenvalue of order 3 at It can be shown that matrix\nA has a multiple eigenvector of order 3. The transformation matrix that will transform\nmatrix A into a Jordan canonical form can be given by\nThe inverse of matrix S is\nThen it can be seen that\n =\nC\n1\n0\n0\n1\n1\n0\n0\n1\n1\nS\n= J\n S\n-1\n \nAS =\nC\n1\n-1\n1\n0\n1\n-2\n0\n0\n1\nSC\n0\n0\n1\n1\n0\n-3\n0\n1\n3\nSC\n1\n1\n1\n0\n1\n2\n0\n0\n1\nS\nS\n-1\n=\nC\n1\n-1\n1\n0\n1\n-2\n0\n0\n1\nS\nS =\nC\n1\n1\n1\n0\n1\n2\n0\n0\n1\nS\nl = 1.\nA =\nC\n0\n0\n1\n1\n0\n-3\n0\n1\n3\nS\ne\nAt\n= Se\nJt\n \nS\n-1\ne\nAt\ne\nAt\n= Pe\nDt\n \nP\n-1\n= P\nF\ne\nl\n1\n \nt\n0\ne\nl\n2\n \nt\n/H11080\n/H11080\n/H11080\n0\ne\nl\nn\n \nt\nV\nP\n-1\ne\nAt\ne\nAt\n.\nOpenmirrors.comSection 9–5 / Some Useful Results in Vector-Matrix Analysis 671\nNoting that\nwe find\nComputation of e At: Method 2. The second method of computing uses the\nLaplace transform approach. Referring to Equation (9–36), can be given as follows:\nThus, to obtain first invert the matrix This results in a matrix whose\nelements are rational functions of s. Then take the inverse Laplace transform of each\nelement of the matrix.\nEXAMPLE 9–7 Consider the following matrix A:\nCompute by use of the two analytical methods presented previously.\nMethod 1. The eigenvalues of A are 0 and –2 A necessary transformation\nmatrix P may be obtained as\nThen, from Equation (9–46), is obtained as follows:\nMethod 2. Since\nwe obtain\n(s I - A)-1 = D\n1\ns\n0\n1\ns(s + 2)\n1\ns + 2\nT\ns I - A = Bs\n0\n0\ns R - B0\n0\n1\n-2 R= Bs\n0\n-1\ns + 2 R\neAt = B1\n0\n1\n-2 RBe0\n0\n0\ne-2t RB1\n0\n1\n2\n- 1\n2\nR = B1\n0\n1\n2 A1 - e-2tB\ne-2t R\neAt\nP = B1\n0\n1\n-2 R\nAl1 = 0, l2 =- 2B.\neAt\nA = B0\n0\n1\n-2 R\n(s I - A).eAt,\neAt = l-1 C(s I - A)-1 D\neAt\neAt\n = C\net - tet + 1\n2 t2et\n1\n2 t2et\ntet + 1\n2 t2et\ntet - t2et\net - tet - t2et\n-3tet - t2et\n1\n2 t2et\ntet + 1\n2 t2et\net + 2tet + 1\n2 t2et\nS\n = C\n1\n1\n1\n0\n1\n2\n0\n0\n1\nSC\net\n0\n0\ntet\net\n0\n1\n2 t2et\ntet\net\nSC\n1\n-1\n1\n0\n1\n-2\n0\n0\n1\nS\n eAt = SeJt S-1\neJt = C\net\n0\n0\ntet\net\n0\n1\n2 t2et\ntet\net\nS672\nChapter 9 / Control Systems Analysis in State Space\nHence,\nComputation of e\nAt\n: Method 3. The third method is based on Sylvester’s interpo-\nlation method. (For Sylvester’s interpolation formula, see Problem A–9–12.) We shall first\nconsider the case where the roots of the minimal polynomial of A are distinct.\nThen we shall deal with the case of multiple roots.\nCase 1:\nMinimal Polynomial of A Involves Only Distinct Roots. We shall assume\nthat the degree of the minimal polynomial of A is m. By using Sylvester’s interpolation\nformula, it can be shown that can be obtained by solving the following determinant\nequation:\n(9–47)\nBy solving Equation (9–47) for can be obtained in terms of the A\nk\n(k=0, 1,\n2, p , m-1) and the (i=1, 2, 3,p ,m ). [Equation (9–47) may be expanded, for ex-\nample, about the last column.]\nNotice that solving Equation (9–47) for is the same as writing\n(9–48)\nand determining the ( k = 0 ,1 ,2 ,p ,m - 1 )by solving the following set of m\nequations for the \nIf A is an n*n matrix and has distinct eigenvalues, then the number of to be\ndetermined is m=n. If A involves multiple eigenvalues, but its minimal polynomial has\nonly simple roots, however, then the number m of to be determined is less than n.\nCase 2:\nMinimal Polynomial ofA Involves Multiple Roots. As an example, consider\nthe case where the minimal polynomial of A involves three equal roots \nand has other roots that are all distinct. By applying Sylvester’s\ninterpolation formula, it can be shown that can be obtained from the following\ndeterminant equation:\ne\nAt\nAl\n4\n \n, l\n5\n \n, p , l\nm\nB\nAl\n1\n= l\n2\n= l\n3\nB\na\nk\n(t)’s\na\nk\n(t)’s\n a\n0\n(t) + a\n1\n(t)l\nm\n+ a\n2\n(t)l\nm\n2\n+ p + a\nm - 1\n(t)l\nm\nm - 1\n= e\nl\nm\n \nt\n /H11080\n /H11080\n /H11080\n a\n0\n(t) + a\n1\n(t)l\n2\n+ a\n2\n(t)l\n2\n2\n+ p + a\nm - 1\n(t)l\n2\nm - 1\n= e\nl\n2\n \nt\n a\n0\n(t) + a\n1\n(t)l\n1\n+ a\n2\n(t)l\n1\n2\n+ p + a\nm - 1\n(t)l\n1\nm - 1\n= e\nl\n1\n \nt\na\nk\n(t):\na\nk\n(t)\ne\nAt\n= a\n0\n(t)\n \nI + a\n1\n(t)\n \nA + a\n2\n(t)\n \nA\n2\n+ p + a\nm - 1\n(t)\n \nA\nm - 1\ne\nAt\ne\nl\ni\n \nt\ne\nAt\ne\nAt\n,\n7\n1\n1\n/H11080\n/H11080\n/H11080\n1\nI\nl\n1\nl\n2\n/H11080\n/H11080\n/H11080\nl\nm\nA\nl\n1\n2\nl\n2\n2\n/H11080\n/H11080\n/H11080\nl\nm\n2\nA\n2\np\np\np\np\nl\n1\nm - 1\nl\n2\nm - 1\n/H11080\n/H11080\n/H11080\nl\nm\nm - 1\nA\nm - 1\ne\nl\n1\n \nt\ne\nl\n2\n \nt\n/H11080\n/H11080\n/H11080\ne\nl\nm\n \nt\ne\nAt\n7\n= 0\ne\nAt\nf(l)\ne\nAt\n= l\n-1\nC(s\n \nI - A)\n-1\nD =\nB\n1\n0\n1\n2\nA1 - e\n-2t\nB\ne\n-2t\nR\nOpenmirrors.comSection 9–5 / Some Useful Results in Vector-Matrix Analysis 673\n=0 (9–49)\nEquation (9–49) can be solved for by expanding it about the last column.\nIt is noted that, just as in case 1, solving Equation (9–49) for is the same as writing\n(9–50)\nand determining the ak(t)’s (k=0, 1, 2,p , m-1) from\nThe extension to other cases where, for example, there are two or more sets of multiple\nroots will be apparent. Note that if the minimal polynomial of A is not found, it is possible\nto substitute the characteristic polynomial for the minimal polynomial. The number of\ncomputations may, of course, be increased.\nEXAMPLE 9–8 Consider the matrix\nCompute using Sylvester’s interpolation formula.\nFrom Equation (9–47), we get\n3\n1\n1\nI\nl1\nl2\nA\nel1 t\nel2 t\neAt\n3= 0\neAt\nA = B0\n0\n1\n-2 R\n a0(t) + a1(t)lm + a2(t)lm\n2 + p + am - 1(t)lm\nm - 1 = elm t\n /H11080\n /H11080\n /H11080\n a0(t) + a1(t)l4 + a2(t)l4\n2 + p + am - 1(t)l4\nm - 1 = el4 t\n a0(t) + a1(t)l1 + a2(t)l1\n2 + p + am - 1(t)l1\nm - 1 = el1 t\n a1(t) + 2a2(t)l1 + 3a3(t)l1\n2 + p + (m - 1)am - 1(t)l1\nm - 2 = tel1 t\n a2(t) + 3a3(t)l1 + p + (m - 1)(m - 2)\n2 am - 1(t)l1\nm - 3 = t2\n2 el1 t\neAt = a0(t) I + a1(t) A + a2(t) A2 + p + am - 1(t) Am - 1\neAt\neAt\n(m - 1)(m - 2)\n2 l1\nm - 3\n(m - 1)l1\nm - 2\nl1\nm - 1\nl4\nm - 1\n/H11080\n/H11080\n/H11080\nlm\nm - 1\nAm - 1\nt2\n2 el1 t\ntel1 t\nel1 t\nel4 t\n/H11080\n/H11080\n/H11080\nelmt\neAt\n0\n0\n1\n1\n/H11080\n/H11080\n/H11080\n1\nI\n0\n1\nl1\nl4\n/H11080\n/H11080\n/H11080\nlm\nA\n1\n2l1\nl1\n2\nl4\n2\n/H11080\n/H11080\n/H11080\nlm\n2\nA2\n3l1\n3l1\n2\nl1\n3\nl4\n3\n/H11080\n/H11080\n/H11080\nlm\n3\nA3\np\np\np\np\np\np\np\np\np674\nChapter 9 / Control Systems Analysis in State Space\nSubstituting 0 for l\n1\nand –2 for l\n2\nin this last equation, we obtain\nExpanding the determinant, we obtain\nor\nAn alternative approach is to use Equation (9–48). We first determine a\n0\n(t) and a\n1\n(t) from\nSince l\n1\n=0 and l\n2\n=–2, the last two equations become\nSolving for a\n0\n(t) and a\n1\n(t) gives\nThen can be written as\nLinear Independence of Vectors. The vectors x\n1\n, x\n2\n, p , x\nn\nare said to be linearly\nindependent if\nwhere c\n1\n,c\n2\n, p , c\nn\nare constants, implies that\nConversely, the vectors x\n1\n, x\n2\n, p , x\nn\nare said to be linearly dependent if and only if x\ni\ncan\nbe expressed as a linear combination of x\nj\n(j=1, 2, p , n; j Z i), or\nx\ni\n= a\nn\nj = 1\nj Z i\nc\nj\n  \nx\nj\nc\n1\n= c\n2\n= p = c\nn\n= 0\nc\n1\n  \nx\n1\n+ c\n2\n  \nx\n2\n+ p + c\nn\n  \nx\nn\n= 0\ne\nAt\n= a\n0\n(t)\n \nI + a\n1\n(t)\n \nA = I + 1\n2 A1 - e\n-2t\nB\n \nA =\nB\n1\n0\n1\n2\nA1 - e\n-2t\nB\ne\n-2t\nR\ne\nAt\na\n0\n(t) = 1,\n  \na\n1\n(t) = 1\n2 A1 - e\n-2t\nB\n a\n0\n(t) - 2a\n1\n(t) = e\n-2t\n a\n0\n(t) = 1\n a\n0\n(t) + a\n1\n(t)l\n2\n= e\nl\n2\n \nt\n a\n0\n(t) + a\n1\n(t)l\n1\n= e\nl\n1\n \nt\n =\nB\n1\n0\n1\n2\nA1 - e\n-2t\nB\ne\n-2t\nR\n = 1\n2\nb\nB\n0\n0\n1\n-2\nR\n+\nB\n2\n0\n0\n2\nR\n-\nB\n0\n0\n1\n-2\nR\ne\n-2t\nr\n e\nAt\n=\n1\n2\nAA + 2\n \nI - Ae\n-2t\nB\n-2e\nAt\n+ A + 2\n \nI - Ae\n-2t\n= 0\n3\n1\n1\nI\n0\n-2\nA\n1\ne\n-2t\ne\nAt\n3\n= 0\nOpenmirrors.comSection 9–6 / Controllability 675\nfor some set of constants cj. This means that if xi can be expressed as a linear combination\nof the other vectors in the set, it is linearly dependent on them or it is not an independent\nmember of the set.\nEXAMPLE 9–9 The vectors\nare linearly dependent since\nThe vectors\nare linearly independent since\nimplies that\nNote that if an n*n matrix is nonsingular (that is, the matrix is of rank n or the determinant\nis nonzero) then n column (or row) vectors are linearly independent. If the n*n matrix is singular\n(that is, the rank of the matrix is less than n or the determinant is zero), then n column (or row)\nvectors are linearly dependent. To demonstrate this, notice that\n9–6 CONTROLLABILITY\nControllability and Observability. A system is said to be controllable at time t0\nif it is possible by means of an unconstrained control vector to transfer the system from\nany initial state x(t0) to any other state in a finite interval of time.\nA system is said to be observable at time t0 if, with the system in state x(t0), it is possible\nto determine this state from the observation of the output over a finite time interval.\nThe concepts of controllability and observability were introduced by Kalman. They\nplay an important role in the design of control systems in state space. In fact, the\nconditions of controllability and observability may govern the existence of a complete\nsolution to the control system design problem. The solution to this problem may not\n Cy1 /H21752y2 /H21752y3 D = C\n1\n2\n3\n1\n0\n1\n2\n2\n2\nS = nonsingular\n Cx1 /H21752x2 /H21752x3 D = C\n1\n2\n3\n1\n0\n1\n2\n2\n4\nS = singular\nc1 = c2 = c3 = 0\nc1  y1 + c2  y2 + c3  y3 = 0\ny1 = C\n1\n2\n3\nS,  y2 = C\n1\n0\n1\nS,  y3 = C\n2\n2\n2\nS\nx1 + x2 - x3 = 0\nx1 = C\n1\n2\n3\nS,  x2 = C\n1\n0\n1\nS,  x3 = C\n2\n2\n4\nS676\nChapter 9 / Control Systems Analysis in State Space\nexist if the system considered is not controllable. Although most physical systems are\ncontrollable and observable, corresponding mathematical models may not possess the\nproperty of controllability and observability.Then it is necessary to know the conditions\nunder which a system is controllable and observable. This section deals with controlla-\nbility and the next section discusses observability.\nIn what follows, we shall first derive the condition for complete state controllability.\nThen we derive alternative forms of the condition for complete state controllability\nfollowed by discussions of complete output controllability. Finally, we present the concept\nof stabilizability.\nComplete State Controllability of Continuous-Time Systems. Consider the\ncontinuous-time system.\n(9–51)\nwhere\nThe system described by Equation (9–51) is said to be state controllable at t=t\n0\nif it is\npossible to construct an unconstrained control signal that will transfer an initial state to\nany final state in a finite time interval If every state is controllable, then the\nsystem is said to be completely state controllable.\nWe shall now derive the condition for complete state controllability.Without loss of\ngenerality, we can assume that the final state is the origin of the state space and that the\ninitial time is zero, or t\n0\n=0.\nThe solution of Equation (9–51) is\nApplying the definition of complete state controllability just given, we have\nor\n(9–52)\nReferring to Equation (9–48) or (9–50), can be written\n(9–53)\nSubstituting Equation (9–53) into Equation (9–52) gives\n(9–54)x(0) =- a\nn - 1\nk = 0\nA\nk\n \nB\n3\nt\n1\n0\na\nk\n(t)u(t) dt\ne\n-At\n= a\nn - 1\nk = 0\na\nk\n(t)\n \nA\nk\ne\n-At\nx(0) =-\n3\nt\n1\n0\ne\n-At\n \nBu(t)d t\nxAt\n1\nB = 0 = e\nAt\n1\n \nx(0) +\n3\nt\n1\n0\ne\nA(t\n1\n- t)\n \nBu(t)d t\nx(t) = e\nAt\n \nx(0) +\n3\nt\n0\ne\nA(t - t)\n \nBu(t)d t\nt\n0\n/H11349t /H11349t\n1\n \n.\n B = n * 1 matrix\n A = n * n matrix\n u = control signal (scalar)\n x = state vector (n-vector)\nx# = Ax + Bu\nOpenmirrors.comSection 9–6 / Controllability 677\nLet us put\nThen Equation (9–54) becomes\n(9–55)\nIf the system is completely state controllable, then, given any initial state x(0), Equation\n(9–55) must be satisfied. This requires that the rank of the n*n matrix\nbe n.\nFrom this analysis, we can state the condition for complete state controllability as fol-\nlows: The system given by Equation (9–51) is completely state controllable if and only\nif the vectors are linearly independent, or the n*n matrix\nis of rank n.\nThe result just obtained can be extended to the case where the control vector u is\nr-dimensional. If the system is described by\nwhere u is an r-vector, then it can be proved that the condition for complete state\ncontrollability is that the n*nr matrix\nbe of rank n, or contain n linearly independent column vectors. The matrix\nis commonly called the controllability matrix.\nEXAMPLE 9–10 Consider the system given by\nSince\nthe system is not completely state controllable.\nCB /H21752ABD = B1\n0\n1\n0 R = singular\nBx#\n1\nx#\n2\nR = B1\n0\n1\n-1 RBx1\nx2\nR + B1\n0 Ru\nCB /H21752 AB /H21752 p /H21752 An - 1 BD\nCB /H21752 AB /H21752 p /H21752 An - 1 BD\nx# = Ax + Bu\nCB /H21752 AB /H21752 p /H21752 An - 1 BD\nB, AB, p , An - 1 B\nCB /H21752 AB /H21752 p /H21752 An - 1 BD\n =- CB /H21752AB /H21752p /H21752An - 1 BDF\nb0\nb1\n/H11080\n/H11080\n/H11080\nbn - 1\nV\n x(0) =- a\nn - 1\nk = 0\nAk Bbk\n3\nt1\n0\nak(t)u(t) dt = bk678\nChapter 9 / Control Systems Analysis in State Space\nEXAMPLE 9–11\nConsider the system given by\nFor this case,\nThe system is therefore completely state controllable.\nAlternative Form of the Condition for Complete State Controllability.Consider\nthe system defined by\n(9–56)\nwhere\nIf the eigenvectors of A are distinct, then it is possible to find a transformation matrix\nP such that\nNote that if the eigenvalues of A are distinct, then the eigenvectors of A are distinct; how-\never, the converse is not true. For example, an n*n real symmetric matrix having\nmultiple eigenvalues has n distinct eigenvectors. Note also that each column of the P\nmatrix is an eigenvector of A associated with \nLet us define\n(9–57)\nSubstituting Equation (9–57) into Equation (9–56), we obtain\n(9–58)\nBy defining\nP\n-1\n \nB = F = Af\nij\nB\nz# = P\n-1\n \nAPz + P\n-1\n \nBu\nx = Pz\nl\ni\n(i = 1, 2, p , n).\nP\n-1\n \nAP = D =\nF\nl\n1\n0\nl\n2\n/H11080\n/H11080\n/H11080\n0\nl\nn\nV\n B = n * r matrix\n A = n * n matrix\n u = control vector (r-vector)\n x = state vector (n-vector)\nx# = Ax + Bu\nCB /H21752ABD =\nB\n0\n1\n1\n-1\nR\n= nonsingular\nB\nx#\n1\nx#\n2\nR\n=\nB\n1\n2\n1\n-1\nRB\nx\n1\nx\n2\nR\n+\nB\n0\n1\nR\n[u]\nOpenmirrors.comSection 9–6 / Controllability 679\nwe can rewrite Equation (9–58) as\nIf the elements of any one row of the n*r matrix F are all zero, then the corresponding\nstate variable cannot be controlled by any of the ui . Hence, the condition of complete\nstate controllability is that if the eigenvectors of A are distinct, then the system is com-\npletely state controllable if and only if no row of has all zero elements. It is im-\nportant to note that, to apply this condition for complete state controllability, we must\nput the matrix in Equation (9–58) in diagonal form.\nIf the A matrix in Equation (9–56) does not possess distinct eigenvectors, then\ndiagonalization is impossible. In such a case, we may transform A into a Jordan canonical\nform. If, for example,A has eigenvalues and has n-3 distinct\neigenvectors, then the Jordan canonical form of A is\nThe square submatrices on the main diagonal are called Jordan blocks.\nSuppose that we can find a transformation matrix S such that\nIf we define a new state vector z by\n(9–59)\nthen substitution of Equation (9–59) into Equation (9–56) yields\n(9–60)\nThe condition for complete state controllability of the system of Equation (9–56) may\nthen be stated as follows: The system is completely state controllable if and only if (1)\n = Jz + S-1 Bu\n z# = S-1 ASz + S-1 Bu\nx = Sz\nS-1 AS = J\nJ = I\nl1\n0\n0\n0\n1\nl1\n0\n0\n1\nl1\nl4\n0\n1\nl4\nl6\n/H11080\n/H11080\n/H11080\n0\nln\nY\nl1 ,l1 ,l1 ,l4 ,l4 ,l6 , p , ln\nP-1 AP\nP-1 B\n z#\nn = ln zn + fn1 u1 + fn2 u2 + p + fnr ur\n /H11080\n /H11080\n /H11080\n z#\n2 = l2 z2 + f21 u1 + f22 u2 + p + f2r ur\n z#\n1 = l1 z1 + f11 u1 + f12 u2 + p + f1r ur680\nChapter 9 / Control Systems Analysis in State Space\nno two Jordan blocks in J of Equation (9–60) are associated with the same eigenvalues,\n(2) the elements of any row of that correspond to the last row of each Jordan block\nare not all zero, and (3) the elements of each row of that correspond to distinct\neigenvalues are not all zero.\nEXAMPLE 9–12\nThe following systems are completely state controllable:\nThe following systems are not completely state controllable:\nCondition for Complete State Controllability in the s Plane. The condition for\ncomplete state controllability can be stated in terms of transfer functions or transfer\nmatrices.\nIt can be proved that a necessary and sufficient condition for complete state con-\ntrollability is that no cancellation occur in the transfer function or transfer matrix. If\ncancellation occurs, the system cannot be controlled in the direction of the canceled\nmode.\nEXAMPLE 9–13\nConsider the following transfer function:\nClearly, cancellation of the factor (s+2.5) occurs in the numerator and denominator of this\ntransfer function. (Thus one degree of freedom is lost.) Because of this cancellation, this system\nis not completely state controllable.\nX(s)\nU(s) = s + 2.5\n(s + 2.5)(s - 1)\n \nE\nx#\n1\nx#\n2\nx#\n3\nx#\n4\nx#\n5\nU\n=\nE\n-2\n0\n0\n0\n1\n-2\n0\n0\n1\n-2\n-5\n0\n0\n1\n-5\nUE\nx\n1\nx\n2\nx\n3\nx\n4\nx\n5\nU\n+\nE\n4\n2\n1\n3\n0\nU\nu\n \nC\nx#\n1\nx#\n2\nx#\n3\nS\n=\nC\n-1\n0\n0\n1\n-1\n0\n0\n0\n-2\nSC\nx\n1\nx\n2\nx\n3\nS\n+\nC\n4\n0\n3\n2\n0\n0\nSB\nu\n1\nu\n2\nR\n \nB\nx#\n1\nx#\n2\nR\n=\nB\n-1\n0\n0\n-2\nRB\nx\n1\nx\n2\nR\n+\nB\n2\n0\nR\nu\n \nE\nx#\n1\nx#\n2\nx#\n3\nx#\n4\nx#\n5\nU\n=\nE\n-2\n0\n0\n0\n1\n-2\n0\n0\n1\n-2\n-5\n0\n0\n1\n-5\nUE\nx\n1\nx\n2\nx\n3\nx\n4\nx\n5\nU\n+\nE\n0\n0\n3\n0\n2\n1\n0\n0\n0\n1\nUB\nu\n1\nu\n2\nR\n \nC\nx#\n1\nx#\n2\nx#\n3\nS\n=\nC\n-1\n0\n0\n1\n-1\n0\n0\n0\n-2\nSC\nx\n1\nx\n2\nx\n3\nS\n+\nC\n0\n4\n3\nS\nu\n \nB\nx#\n1\nx#\n2\nR\n=\nB\n-1\n0\n0\n-2\nRB\nx\n1\nx\n2\nR\n+\nB\n2\n5\nR\nu\nS\n-1\n \nB\nS\n-1\n \nB\nOpenmirrors.comSection 9–6 / Controllability 681\nThe same conclusion can be obtained by writing this transfer function in the form of a state\nequation. A state-space representation is\nSince\nthe rank of the matrix is 1. Therefore, we arrive at the same conclusion: The system is\nnot completely state controllable.\nOutput Controllability. In the practical design of a control system, we may want\nto control the output rather than the state of the system. Complete state controllability\nis neither necessary nor sufficient for controlling the output of the system. For this\nreason, it is desirable to define separately complete output controllability.\nConsider the system described by\n(9–61)\n(9–62)\nwhere\nThe system described by Equations (9–61) and (9–62) is said to be completely output\ncontrollable if it is possible to construct an unconstrained control vector u(t) that will\ntransfer any given initial output yAt0 Bto any final output yAt1 Bin a finite time interval\nt0 /H11349t /H11349t1 .\nIt can be proved that the condition for complete output controllability is as follows:\nThe system described by Equations (9–61) and (9–62) is completely output controllable\nif and only if the m*(n+1)r matrix\nis of rank m. (For a proof, see Problem A–9–16.) Note that the presence of the Du term\nin Equation (9–62) always helps to establish output controllability.\nUncontrollable System. An uncontrollable system has a subsystem that is\nphysically disconnected from the input.\nCCB /H21752 CAB /H21752 CA2 B /H21752 p /H21752 CAn - 1 B /H21752 DD\n D = m * r matrix\n C = m * n matrix\n B = n * r matrix\n A = n * n matrix\n y = output vector (m-vector)\nu = control vector (r-vector)\n x = state vector (n-vector)\n y = Cx + Du\n x# = Ax + Bu\nCB /H21752 ABD\nCB /H21752ABD = B1\n1\n1\n1 R\nBx#\n1\nx#\n2\nR = B0\n2.5\n1\n-1.5 RBx1\nx2\nR+ B1\n1 Ru682\nChapter 9 / Control Systems Analysis in State Space\nStabilizability. For a partially controllable system, if the uncontrollable modes are\nstable and the unstable modes are controllable, the system is said to be stabilizable. For\nexample, the system defined by\nis not state controllable.The stable mode that corresponds to the eigenvalue of –1 is not\ncontrollable.The unstable mode that corresponds to the eigenvalue of 1 is controllable.\nSuch a system can be made stable by the use of a suitable feedback. Thus this system is\nstabilizable.\n9–7 OBSERVABILITY\nIn this section we discuss the observability of linear systems. Consider the unforced\nsystem described by the following equations:\n(9–63)\n(9–64)\nwhere\nThe system is said to be completely observable if every state xAt\n0\nBcan be determined\nfrom the observation of y(t) over a finite time interval, The system is, there-\nfore, completely observable if every transition of the state eventually affects every ele-\nment of the output vector.The concept of observability is useful in solving the problem\nof reconstructing unmeasurable state variables from measurable variables in the mini-\nmum possible length of time. In this section we treat only linear, time-invariant systems.\nTherefore, without loss of generality, we can assume that t\n0\n=0.\nThe concept of observability is very important because, in practice, the difficulty\nencountered with state feedback control is that some of the state variables are not\naccessible for direct measurement, with the result that it becomes necessary to estimate\nthe unmeasurable state variables in order to construct the control signals. It will be\nshown in Section 10–5 that such estimates of state variables are possible if and only if\nthe system is completely observable.\nIn discussing observability conditions, we consider the unforced system as given by\nEquations (9–63) and (9–64).The reason for this is as follows: If the system is described\nby\nthen\nx(t) = e\nAt\n \nx(0) +\n3\nt\n0\ne\nA(t - t)\n \nBu(t) dt\n y = Cx + Du\n x# = Ax + Bu\nt\n0\n/H11349t /H11349t\n1\n \n.\n C = m * n matrix\n A = n * n matrix\n y = output vector (m-vector)\n x = state vector (n-vector)\n y = Cx\n x# = Ax\nB\nx#\n1\nx#\n2\nR\n=\nB\n1\n0\n0\n-1\nRB\nx\n1\nx\n2\nR\n+\nB\n1\n0\nR\nu\nOpenmirrors.comSection 9–7 / Observability 683\nand y(t) is\nSince the matrices A, B, C, and D are known and u(t) is also known, the last two terms\non the right-hand side of this last equation are known quantities. Therefore, they may\nbe subtracted from the observed value of y(t). Hence, for investigating a necessary and\nsufficient condition for complete observability, it suffices to consider the system described\nby Equations (9–63) and (9–64).\nComplete Observability of Continuous-Time Systems. Consider the system\ndescribed by Equations (9–63) and (9–64). The output vector y(t) is\nReferring to Equation (9–48) or (9–50), we have\nwhere n is the degree of the characteristic polynomial. [Note that Equations (9–48) and\n(9–50) with m replaced by n can be derived using the characteristic polynomial.]\nHence, we obtain\nor\n(9–65)\nIf the system is completely observable, then, given the output y(t) over a time interval\nx(0) is uniquely determined from Equation (9–65). It can be shown that this\nrequires the rank of the nm*n matrix\nto be n. (See Problem A–9–19 for the derivation of this condition.)\nFrom this analysis, we can state the condition for complete observability as follows:\nThe system described by Equations (9–63) and (9–64) is completely observable if and\nonly if the n*nm matrix\nis of rank n or has n linearly independent column vectors. This matrix is called the\nobservability matrix.\nCC*/H21752A*C*/H21752p /H21752(A*)n - 1 C*D\nF\nC\nCA\n/H11080\n/H11080\n/H11080\nCAn - 1\nV\n0 /H11349t /H11349t1 ,\ny(t) = a0(t) Cx(0) + a1(t) CAx(0) + p + an - 1(t) CAn - 1 x(0)\ny(t) = a\nn - 1\nk = 0\nak(t) CAk x(0)\neAt = a\nn - 1\nk = 0\nak(t) Ak\ny(t) = CeAt x(0)\ny(t) = CeAt x(0) + C\n3\nt\n0\neA(t - t) Bu(t) dt + Du684\nChapter 9 / Control Systems Analysis in State Space\nEXAMPLE 9–14\nConsider the system described by\nIs this system controllable and observable?\nSince the rank of the matrix\nis 2, the system is completely state controllable.\nFor output controllability, let us find the rank of the matrix Since\nthe rank of this matrix is 1. Hence, the system is completely output controllable.\nTo test the observability condition, examine the rank of Since\nthe rank of is 2. Hence, the system is completely observable.\nConditions for Complete Observability in the s Plane. The conditions for com-\nplete observability can also be stated in terms of transfer functions or transfer matrices.\nThe necessary and sufficient conditions for complete observability is that no cancella-\ntion occur in the transfer function or transfer matrix. If cancellation occurs, the canceled\nmode cannot be observed in the output.\nEXAMPLE 9–15\nShow that the following system is not completely observable:\nwhere\nNote that the control function u does not affect the complete observability of the system. To\nexamine complete observability, we may simply set u=0. For this system, we have\nCC* /H21752A*C* /H21752(A*)\n2\n \nC*D =\nC\n4\n5\n1\n-6\n-7\n-1\n6\n5\n-1\nS\nx =\nC\nx\n1\nx\n2\nx\n3\nS\n,\n  \nA =\nC\n0\n0\n-6\n1\n0\n-11\n0\n1\n-6\nS\n,\n  \nB =\nC\n0\n0\n1\nS\n,\n  \nC = [4\n \n5\n \n1]\n y = Cx\n x# = Ax + Bu\nCC*/H21752A*C*D\nCC* /H21752A*C*D =\nB\n1\n0\n1\n1\nR\n[C*/H21752A*C*] .\nCCB /H21752 CABD = [0\n \n1]\nCCB /H21752 CABD.\nCB /H21752ABD =\nB\n0\n1\n1\n-1\nR\n y = [1\n \n0]\nB\nx\n1\nx\n2\nR\n \nB\nx#\n1\nx#\n2\nR\n=\nB\n1\n-2\n1\n-1\nRB\nx\n1\nx\n2\nR\n+\nB\n0\n1\nR\nu\nOpenmirrors.comSection 9–7 / Observability 685\nNote that\nHence, the rank of the matrix is less than 3.Therefore, the system is not\ncompletely observable.\nIn fact, in this system, cancellation occurs in the transfer function of the system. The transfer\nfunction between X1(s) and U(s) is\nand the transfer function between Y(s) and X1(s) is\nTherefore, the transfer function between the output Y(s) and the input U(s) is\nClearly, the two factors (s+1) cancel each other.This means that there are nonzero initial states\nx(0), which cannot be determined from the measurement of y(t).\nComments. The transfer function has no cancellation if and only if the system is com-\npletely state controllable and completely observable.This means that the canceled transfer\nfunction does not carry along all the information characterizing the dynamic system.\nAlternative Form of the Condition for Complete Observability. Consider the\nsystem described by Equations (9–63) and (9–64), rewritten\n(9–66)\n(9–67)\nSuppose that the transformation matrix P transforms A into a diagonal matrix, or\nwhere D is a diagonal matrix. Let us define\nThen Equations (9–66) and (9–67) can be written\nHence,\ny(t) = CPeDt z(0)\n y = CPz\n z# = P-1 APz = Dz\nx = Pz\nP-1 AP = D\n y = Cx\n x# = Ax\nY(s)\nU(s) =\n(s + 1)(s + 4)\n(s + 1)(s + 2)(s + 3)\nY(s)\nX1(s) = (s + 1)(s + 4)\nX1(s)\nU(s) = 1\n(s + 1)(s + 2)(s + 3)\nCC*/H21752A*C*/H21752(A*)2 C*D\n3\n4\n5\n1\n-6\n-7\n-1\n6\n5\n-1\n3= 0or\nThe system is completely observable if none of the columns of the m*n matrix CP\nconsists of all zero elements. This is because, if the ith column of CP consists of all zero\nelements, then the state variable z\ni\n(0) will not appear in the output equation and there-\nfore cannot be determined from observation of y(t). Thus,x(0), which is related to z(0)\nby the nonsingular matrix P, cannot be determined. (Remember that this test applies only\nif the matrix is in diagonal form.)\nIf the matrix A cannot be transformed into a diagonal matrix, then by use of a suitable\ntransformation matrix S, we can transform A into a Jordan canonical form, or\nwhere J is in the Jordan canonical form.\nLet us define\nThen Equations (9–66) and (9–67) can be written\nHence,\nThe system is completely observable if (1) no two Jordan blocks in J are associated with\nthe same eigenvalues, (2) no columns of CS that correspond to the first row of each\nJordan block consist of zero elements, and (3) no columns of CS that correspond to\ndistinct eigenvalues consist of zero elements.\nTo clarify condition (2), in Example 9–16 we have encircled by dashed lines the\ncolumns of CS that correspond to the first row of each Jordan block.\nEXAMPLE 9–16\nThe following systems are completely observable.\n \nE\nx#\n1\nx#\n2\nx#\n3\nx#\n4\nx#\n5\nU\n=\nE\n2\n0\n0\n0\n1\n2\n0\n0\n1\n2\n-3\n0\n0\n1\n-3\nUE\nx\n1\nx\n2\nx\n3\nx\n4\nx\n5\nU\n,\n  \nc\ny\n1\ny\n2\nd\n=\nB\n1\n0\n1\n1\n1\n1\n0\n1\n0\n0\nRE\nx\n1\nx\n2\nx\n3\nx\n4\nx\n5\nU\n \nC\nx#\n1\nx#\n2\nx#\n3\nS\n=\nC\n2\n0\n0\n1\n2\n0\n0\n1\n2\nSC\nx\n1\nx\n2\nx\n3\nS\n,\n  \nc\ny\n1\ny\n2\nd\n=\nB\n3\n4\n0\n0\n0\n0\nRC\nx\n1\nx\n2\nx\n3\nS\n \nB\nx#\n1\nx#\n2\nR\n=\nB\n-1\n0\n0\n-2\nRB\nx\n1\nx\n2\nR\n,\n  \ny = [1\n \n3]\nB\nx\n1\nx\n2\nR\ny(t) = CSe\nJt\n \nz(0)\n y = CSz\n z# = S\n-1\n \nASz = Jz\nx = Sz\nS\n-1\n \nAS = J\nP\n-1\n \nAP\ny(t) = CP\nF\ne\nl\n1\n \nt\n0\ne\nl\n2\n \nt\n/H11080\n/H11080\n/H11080\n0\ne\nl\nn\n \nt\nV\nz(0) = CP\nF\ne\nl\n1\n \nt\nz\n1\n(0)\ne\nl\n2\n \nt\nz\n2\n(0)\n/H11080\n/H11080\n/H11080\ne\nl\nn\n \nt\nz\nn\n(0)\nV\n686\nChapter 9 / Control Systems Analysis in State Space\nOpenmirrors.comThe following systems are not completely observable.\nPrinciple of Duality. We shall now discuss the relationship between controllability\nand observability. We shall introduce the principle of duality, due to Kalman, to clarify\napparent analogies between controllability and observability.\nConsider the system S1 described by\nwhere\nand the dual system S2 defined by\nwhere\nThe principle of duality states that the system S1 is completely state controllable\n(observable) if and only if system S2 is completely observable (state controllable).\nTo verify this principle, let us write down the necessary and sufficient conditions for\ncomplete state controllability and complete observability for systems S1 and S2 .\n C* = conjugate transpose of C\n B* = conjugate transpose of B\n A* = conjugate transpose of A\n n = output vector (r-vector)\n v = control vector (m-vector)\n z = state vector (n-vector)\nn = B*z\nz# = A*z + C*v\n C = m * n matrix\n B = n * r matrix\n A = n * n matrix\n y = output vector (m-vector)\n u = control vector (r-vector)\n x = state vector (n-vector)\n y = Cx\n x# = Ax + Bu\n E\nx#\n1\nx#\n2\nx#\n3\nx#\n4\nx#\n5\nU= E\n2\n0\n0\n0\n1\n2\n0\n0\n1\n2\n-3\n0\n0\n1\n-3\nUE\nx1\nx2\nx3\nx4\nx5\nU,  c\ny1\ny2\nd= B1\n0\n1\n1\n1\n1\n0\n0\n0\n0 RE\nx1\nx2\nx3\nx4\nx5\nU\n C\nx#\n1\nx#\n2\nx#\n3\nS= C\n2\n0\n0\n1\n2\n0\n0\n1\n2\nSC\nx1\nx2\nx3\nS,  c\ny1\ny2\nd= B0\n0\n1\n2\n3\n4 RC\nx1\nx2\nx3\nS\n Bx#\n1\nx#\n2\nR= B-1\n0\n0\n-2 RBx1\nx2\nR,  y = [0 1] Bx1\nx2\nR\nSection 9–7 / Observability 687688\nChapter 9 / Control Systems Analysis in State Space\nFor system S\n1\n:\n1. A necessary and sufficient condition for complete state controllability is that the\nrank of the n*nr matrix\nbe n.\n2. A necessary and sufficient condition for complete observability is that the rank of\nthe n*nm matrix\nbe n.\nFor system S\n2\n:\n1. A necessary and sufficient condition for complete state controllability is that the\nrank of the n*nm matrix\nbe n.\n2. A necessary and sufficient condition for complete observability is that the rank of\nthe n*nr matrix\nbe n.\nBy comparing these conditions, the truth of this principle is apparent. By use of this\nprinciple, the observability of a given system can be checked by testing the state con-\ntrollability of its dual.\nDetectability. For a partially observable system, if the unobservable modes are\nstable and the observable modes are unstable, the system is said to be detectable. Note\nthat the concept of detectability is dual to the concept of stabilizability.\nEXAMPLE PROBLEMS AND SOLUTIONS\nA–9–1. Consider the transfer function system defined by Equation (9–2), rewritten\n(9–68)\nDerive the following controllable canonical form of the state-space representation for this\ntransfer-function system:\n(9–69)\nG\nx#\n1\nx#\n2\n/H11080\n/H11080\n/H11080\nx#\nn - 1\nx#\nn\nW\n=\nG\n0\n0\n/H11080\n/H11080\n/H11080\n0\n-a\nn\n1\n0\n/H11080\n/H11080\n/H11080\n0\n-a\nn - 1\n0\n1\n/H11080\n/H11080\n/H11080\n0\n-a\nn - 2\np\np\np\np\n0\n0\n/H11080\n/H11080\n/H11080\n1\n-a\n1\nWG\nx\n1\nx\n2\n/H11080\n/H11080\n/H11080\nx\nn - 1\nx\nn\nW\n+\nG\n0\n0\n/H11080\n/H11080\n/H11080\n0\n1\nW\nu\nY(s)\nU(s) = b\n0\n \ns\nn\n+ b\n1\n \ns\nn - 1\n+ p + b\nn - 1\n \ns + b\nn\ns\nn\n+ a\n1\n \ns\nn - 1\n+ p + a\nn - 1\n \ns + a\nn\nCB /H21752 AB /H21752 p /H21752 A\nn - 1\n \nBD\nCC* /H21752A*C* /H21752p /H21752(A*)\nn - 1\n \nC*D\nCC* /H21752A*C* /H21752p /H21752(A*)\nn - 1\n \nC*D\nCB /H21752 AB /H21752 p /H21752 A\nn - 1\n \nBD\nOpenmirrors.comExample Problems and Solutions 689\n(9–70)\nSolution. Equation (9–68) can be written as\nwhich can be modified to\n(9–71)\nwhere\nLet us rewrite this last equation in the following form:\nFrom this last equation, the following two equations may be obtained:\n(9–72)\n(9–73)\nNow define state variables as follows:\nThen, clearly,\n sXn - 1(s) = Xn(s)\n /H11080\n /H11080\n /H11080\n sX2(s) = X3(s)\n sX1(s) = X2(s)\n Xn(s) = sn - 1Q(s)\n Xn - 1(s) = sn - 2Q(s)\n /H11080\n /H11080\n /H11080\n X2(s) = sQ(s)\n X1(s) = Q(s)\n + Abn - an b0BQ(s)\n Yˆ (s) = Ab1 - a1 b0Bsn - 1Q(s) + p + Abn - 1 - an - 1 b0BsQ(s)\n snQ(s) =- a1 sn - 1Q(s) - p - an - 1 sQ(s) - an Q(s) + U(s)\n =\nU(s)\nsn + a1 sn - 1 + p + an - 1 s + an\n= Q(s)\nYˆ (s)\nAb1 - a1 b0Bsn - 1 + p + Abn - 1 - an - 1 b0Bs + Abn - an b0B\nYˆ (s) =\nAb1 - a1 b0Bsn - 1 + p + Abn - 1 - an - 1 b0Bs + Abn - an b0B\nsn + a1 sn - 1 + p + an - 1 s + an\nU(s)\nY(s) = b0 U(s) + Yˆ (s)\nY(s)\nU(s) = b0 +\nAb1 - a1 b0Bsn - 1 + p + Abn - 1 - an - 1 b0Bs + Abn - an b0B\nsn + a1 sn - 1 + p + an - 1 s + an\n y = Cbn - an b0 /H21752bn - 1 - an - 1 b0 /H21752p /H21752b1 - a1 b0 DF\nx1\nx2\n/H11080\n/H11080\n/H11080\nxn\nV + b0 u690\nChapter 9 / Control Systems Analysis in State Space\nwhich may be rewritten as\n(9–74)\nNoting that we can rewrite Equation (9–72) as\nor\n(9–75)\nAlso, from Equations (9–71) and (9–73), we obtain\nThe inverse Laplace transform of this output equation becomes\n(9–76)\nCombining Equations (9–74) and (9–75) into one vector–matrix differential equation, we obtain\nEquation (9–69). Equation (9–76) can be rewritten as given by Equation (9–70). Equations (9–69)\nand (9–70) are said to be in the controllable canonical form. Figure 9–1 shows the block diagram\nrepresentation of the system defined by Equations (9–69) and (9–70).\ny = Ab\nn\n- a\nn\n \nb\n0\nBx\n1\n+ Ab\nn - 1\n- a\nn - 1\n \nb\n0\nBx\n2\n+ p + Ab\n1\n- a\n1\n \nb\n0\nBx\nn\n+ b\n0\n \nu\n + Ab\nn\n- a\nn\n \nb\n0\nBX\n1\n(s)\n = b\n0\n \nU(s) + Ab\n1\n- a\n1\n \nb\n0\nBX\nn\n(s) + p + Ab\nn - 1\n- a\nn - 1\n \nb\n0\nBX\n2\n(s)\n + Ab\nn\n- a\nn\n \nb\n0\nBQ(s)\n Y(s) = b\n0\n \nU(s) + Ab\n1\n- a\n1\n \nb\n0\nBs\nn - 1\nQ(s) + p + Ab\nn - 1\n- a\nn - 1\n \nb\n0\nBsQ(s)\nx#\nn\n=- a\nn\n \nx\n1\n- a\nn - 1\n \nx\n2\n- p - a\n1\n \nx\nn\n+ u\nsX\nn\n(s) =- a\n1\n \nX\nn\n(s) - p - a\nn - 1\n \nX\n2\n(s) - a\nn\n \nX\n1\n(s) + U(s)\ns\nn\nQ(s) = sX\nn\n(s),\n x#\nn - 1\n= x\nn\n /H11080\n /H11080\n /H11080\n x#\n2\n= x\n3\n x#\n1\n= x\n2\nb\n0\ny\nu\na\n1\na\n2\na\nn–1\na\nn\nx\nn–1\nx\nn\nx\n1\nx\n2\nb\n1\n– a\n1\nb\n0\nb\n2\n– a\n2\nb\n0\nb\nn–1\n– a\nn–1\nb\n0\nb\nn\n– a\nn\nb\n0\n/H20848/H20848 /H20848\n++\n++\n++\n++\n++\n++\n++\n+ –\nFigure 9–1\nBlock diagram\nrepresentation of the\nsystem defined by\nEquations (9–69)\nand (9–70)\n(controllable\ncanonical form).\nOpenmirrors.comExample Problems and Solutions 691\nA–9–2. Consider the following transfer-function system:\n(9–77)\nDerive the following observable canonical form of the state-space representation for this transfer-\nfunction system:\n(9–78)\n(9–79)\nSolution. Equation (9–77) can be modified into the following form:\nBy dividing the entire equation by sn and rearranging, we obtain\n(9–80)\nNow define state variables as follows:\n(9–81)\n X1 (s) = 1\ns Cbn U(s) - an Y(s)D\n X2 (s) = 1\ns Cbn - 1 U(s) - an - 1 Y(s) + X1 (s)D\n /H11080\n /H11080\n /H11080\n Xn - 1 (s) = 1\ns Cb2 U(s) - a2 Y(s) + Xn - 2 (s)D\n Xn (s) = 1\ns Cb1 U(s) - a1 Y(s) + Xn - 1 (s)D\n+ 1\nsn - 1 Cbn - 1 U(s) - an - 1 Y(s)D + 1\nsn Cbn U(s) - an Y(s)D\nY(s) = b0 U(s) + 1\ns Cb1 U(s) - a1 Y(s)D + p\n+ sCan - 1 Y(s) - bn - 1 U(s)D + an Y(s) - bn U(s) = 0\nsn CY(s) - b0 U(s)D + sn - 1 Ca1 Y(s) - b1 U(s)D + p\ny = [0 0 p 0 1] G\nx1\nx2\n/H11080\n/H11080\n/H11080\nxn - 1\nxn\nW + b0 u\nF\nx#\n1\nx#\n2\n/H11080\n/H11080\n/H11080\nx#\nn\nV= F\n0\n1\n/H11080\n/H11080\n/H11080\n0\n0\n0\n/H11080\n/H11080\n/H11080\n0\np\np\np\n0\n0\n/H11080\n/H11080\n/H11080\n1\n-an\n-an - 1\n/H11080\n/H11080\n/H11080\n-a1\nVF\nx1\nx2\n/H11080\n/H11080\n/H11080\nxn\nV + F\nbn - an b0\nbn - 1 - an - 1 b0\n/H11080\n/H11080\n/H11080\nb1 - a1 b0\nVu\n \nY(s)\nU(s) = b0 sn + b1 sn - 1 + p + bn - 1 s + bn\nsn + a1 sn - 1 + p + an - 1 s + an692\nChapter 9 / Control Systems Analysis in State Space\nThen Equation (9–80) can be written as\n(9–82)\nBy substituting Equation (9–82) into Equation (9–81) and multiplying both sides of the equations\nby s, we obtain\nTaking the inverse Laplace transforms of the preceding n equations and writing them in the\nreverse order, we get\nAlso, the inverse Laplace transform of Equation (9–82) gives\nRewriting the state and output equations in the standard vector-matrix forms gives Equations\n(9–78) and (9–79). Figure 9–2 shows a block diagram representation of the system defined by\nEquations (9–78) and (9–79).\ny = x\nn\n+ b\n0\nu\nx#\nn\n= x\nn - 1\n- a\n1\n \nx\nn\n+ Ab\n1\n- a\n1\n \nb\n0\nBu\nx#\nn - 1\n= x\nn - 2\n- a\n2\n \nx\nn\n+ Ab\n2\n- a\n2\n \nb\n0\nBu\n/H11080\n/H11080\n/H11080\nx#\n2\n= x\n1\n- a\nn - 1\n \nx\nn\n+ Ab\nn - 1\n- a\nn - 1\n \nb\n0\nBu\nx#\n1\n=- a\nn\n \nx\nn\n+ Ab\nn\n- a\nn\n \nb\n0\nBu\n sX\n1\n(s) =- a\nn\n \nX\nn\n(s) + Ab\nn\n- a\nn\n \nb\n0\nBU(s)\n sX\n2\n(s) = X\n1\n(s) - a\nn - 1\n \nX\nn\n(s) + Ab\nn - 1\n- a\nn - 1\n \nb\n0\nBU(s)\n /H11080\n /H11080\n /H11080\n sX\nn - 1\n(s) = X\nn - 2\n(s) - a\n2\n \nX\nn\n(s) + Ab\n2\n- a\n2\n \nb\n0\nBU(s)\n sX\nn\n(s) = X\nn - 1\n(s) - a\n1\n \nX\nn\n(s) + Ab\n1\n- a\n1\n \nb\n0\nBU(s)\nY(s) = b\n0\n \nU(s) + X\nn\n(s)\ny\nu\na\nn–1\na\n1\na\nn\nx\nn–1\nx\n1\nx\n2\nx\nn\nb\n0\nb\nn\n– a\nn\nb\n0\nb\nn–1\n– a\nn–1\nb\n0\nb\n1\n– a\n1\nb\n0\n/H20848/H20848 /H20848\n+\n–\n++\n–\n++\n–\n++\nFigure 9–2\nBlock diagram\nrepresentation of the\nsystem defined by\nEquations (9–78)\nand (9–79)\n(observable\ncanonical form).\nOpenmirrors.comExample Problems and Solutions 693\nA–9–3. Consider the transfer-function system defined by\n(9–83)\nwhere Derive the state-space representation of this system in the following diagonal\ncanonical form:\n(9–84)\n(9–85)\nSolution. Equation (9–83) may be written as\n(9–86)\nDefine the state variables as follows:\nwhich may be rewritten as\n sXn(s) =- pn Xn(s) + U(s)\n /H11080\n /H11080\n /H11080\n sX2(s) =- p2 X2(s) + U(s)\n sX1(s) =- p1 X1(s) + U(s)\n Xn(s) = 1\ns + pn\n U(s)\n /H11080\n /H11080\n /H11080\n X2(s) = 1\ns + p2\n U(s)\n X1(s) = 1\ns + p1\n U(s)\nY(s) = b0 U(s) + c1\ns + p1\nU(s) + c2\ns + p2\nU(s) + p + cn\ns + pn\nU(s)\ny = Cc1 c2 p cn DF\nx1\nx2\n/H11080\n/H11080\n/H11080\nxn\nV + b0 u\nF\nx#\n1\nx#\n2\n/H11080\n/H11080\n/H11080\nx#\nn\nV= F\n-p1\n0\n-p2\n/H11080\n/H11080\n/H11080\n0\n-pn\nVF\nx1\nx2\n/H11080\n/H11080\n/H11080\nxn\nV + F\n1\n1\n/H11080\n/H11080\n/H11080\n1\nVu\npi Z pj .\n = b0 + c1\ns + p1\n+ c2\ns + p2\n+ p + cn\ns + pn\n \nY(s)\nU(s) = b0 sn + b1 sn - 1 + p + bn - 1 s + bn\nAs + p1BAs + p2B p As + pnB694\nChapter 9 / Control Systems Analysis in State Space\nThe inverse Laplace transforms of these equations give\n(9–87)\nThese n equations make up a state equation.\nIn terms of the state variables X\n1\n(s), X\n2\n(s), p , X\nn\n(s), Equation (9–86) can be written as\nThe inverse Laplace transform of this last equation is\n(9–88)\nwhich is the output equation.\nEquation (9–87) can be put in the vector-matrix equation as given by Equation (9–84). Equa-\ntion (9–88) can be put in the form of Equation (9–85).\nFigure 9–3 shows a block diagram representation of the system defined by Equations (9–84)\nand (9–85).\nIt is noted that if we choose the state variables as\n X\nˆ\nn\n(s) = c\nn\ns + p\nn\n U(s)\n /H11080\n /H11080\n /H11080\n X\nˆ\n2\n(s) = c\n2\ns + p\n2\n U(s)\n X\nˆ\n1\n(s) = c\n1\ns + p\n1\n U(s)\ny = c\n1\n \nx\n1\n+ c\n2\n \nx\n2\n+ p + c\nn\n \nx\nn\n+ b\n0\n \nu\nY(s) = b\n0\n \nU(s) + c\n1\n \nX\n1\n(s) + c\n2\n \nX\n2\n(s) + p + c\nn\n \nX\nn\n(s)\n x#\nn\n=- p\nn\n \nx\nn\n+ u\n /H11080\n /H11080\n /H11080\n x#\n2\n=- p\n2\n \nx\n2\n+ u\n x#\n1\n=- p\n1\n \nx\n1\n+ u\nu\ny\nx\nn\nx\n2\nx\n1\nc\n2\n1\ns + p\n2\nc\n1\nb\n0\nc\nn\n1\ns + p\n1\n…\n…\n1\ns + p\nn\n++\n+\n++\nFigure 9–3\nBlock diagram\nrepresentation of the\nsystem defined by\nEquations (9–84)\nand (9–85) (diagonal\ncanonical form).\nOpenmirrors.comExample Problems and Solutions 695\nthen we get a slightly different state-space representation. This choice of state variables gives\nfrom which we obtain\n(9–89)\nReferring to Equation (9–86), the output equation becomes\nfrom which we get\n(9–90)\nEquations (9–89) and (9–90) give the following state-space representation for the system:\nA–9–4. Consider the system defined by\n(9–91)\nwhere the system involves a triple pole at s=–p1 . (We assume that, except for the first three\npi ’s being equal, the pi ’s are different from one another.) Obtain the Jordan canonical form of the\nstate-space representation for this system.\nY(s)\nU(s) = b0 sn + b1 sn - 1 + p + bn - 1 s + bn\nAs + p1B\n3\nAs + p4BAs + p5Bp As + pnB\ny = [1 1 p 1] F\nxˆ1\nxˆ2\n/H11080\n/H11080\n/H11080\nxˆn\nV + b0 u\nF\nxˆ\n#\n1\nxˆ\n#\n2\n/H11080\n/H11080\n/H11080\nxˆ\n#\nn\nV= F\n-p1\n0\n-p2\n/H11080\n/H11080\n/H11080\n0\n-pn\nVF\nxˆ1\nxˆ2\n/H11080\n/H11080\n/H11080\nxˆn\nV + F\nc1\nc2\n/H11080\n/H11080\n/H11080\ncn\nVu\ny = xˆ1 + xˆ2 + p + xˆn + b0 u\nY(s) = b0 U(s) + Xˆ 1(s) + Xˆ 2(s) + p + Xˆ n(s)\nxˆ\n#\nn =- pn xˆn + cn u\n/H11080\n/H11080\n/H11080\nxˆ\n#\n2 =- p2 xˆ2 + c2 u\nxˆ\n#\n1 =- p1 xˆ1 + c1 u\n sXˆ n(s) =- pn Xˆ n(s) + cn U(s)\n /H11080\n /H11080\n /H11080\n sXˆ 2(s) =- p2 Xˆ 2(s) + c2 U(s)\n sXˆ 1(s) =- p1 Xˆ 1(s) + c1 U(s)696\nChapter 9 / Control Systems Analysis in State Space\nSolution. The partial-fraction expansion of Equation (9–91) becomes\nwhich may be written as\n(9–92)\nDefine\nNotice that the following relationships exist among X\n1\n(s), X\n2\n(s), and X\n3\n(s):\nThen, from the preceding definition of the state variables and the preceding relationships, we\nobtain\n sX\nn\n(s) =- p\nn\n \nX\nn\n(s) + U(s)\n /H11080\n /H11080\n /H11080\n sX\n4\n(s) =- p\n4\n \nX\n4\n(s) + U(s)\n sX\n3\n(s) =- p\n1\n \nX\n3\n(s) + U(s)\n sX\n2\n(s) =- p\n1\n \nX\n2\n(s) + X\n3\n(s)\n sX\n1\n(s) =- p\n1\n \nX\n1\n(s) + X\n2\n(s)\nX\n2\n(s)\nX\n3\n(s) = 1\ns + p\n1\nX\n1\n(s)\nX\n2\n(s) = 1\ns + p\n1\n X\nn\n(s) = 1\ns + p\nn\n U(s)\n /H11080\n /H11080\n /H11080\n X\n4\n(s) = 1\ns + p\n4\n U(s)\n X\n3\n(s) = 1\ns + p\n1\n U(s)\n X\n2\n(s) = 1\nAs + p\n1\nB\n2\n U(s)\n X\n1\n(s) = 1\nAs + p\n1\nB\n3\n U(s)\n+ c\n3\ns + p\n1\nU(s) + c\n4\ns + p\n4\nU(s) + p + c\nn\ns + p\nn\nU(s)\nY(s) = b\n0\n \nU(s) + c\n1\nAs + p\n1\nB\n3\nU(s) + c\n2\nAs + p\n1\nB\n2\nU(s)\nY(s)\nU(s) = b\n0\n+ c\n1\nAs + p\n1\nB\n3\n+ c\n2\nAs + p\n1\nB\n2\n+ c\n3\ns + p\n1\n+ c\n4\ns + p\n4\n+ p + c\nn\ns + p\nn\nOpenmirrors.comExample Problems and Solutions 697\nThe inverse Laplace transforms of the preceding n equations give\nThe output equation, Equation (9–92), can be rewritten as\nThe inverse Laplace transform of this output equation is\nThus, the state-space representation of the system for the case when the denominator polynomial\ninvolves a triple root –p1 can be given as follows:\n(9–93)\n(9–94)\nThe state-space representation in the form given by Equations (9–93) and (9–94) is said to be in\nthe Jordan canonical form. Figure 9–4 shows a block diagram representation of the system given\nby Equations (9–93) and (9–94).\nA–9–5. Consider the transfer-function system\nObtain a state-space representation of this system with MATLAB.\nY(s)\nU(s) = 25.04s + 5.008\ns3 + 5.03247s2 + 25.1026s + 5.008\n y = Cc1 c2 p cn DF\nx1\nx2\n/H11080\n/H11080\n/H11080\nxn\nV + b0 u\nH\nx#\n1\nx#\n2\nx#\n3\nx#\n4\n/H11080\n/H11080\n/H11080\nx#\nn\nX= H\n-p1\n0\n0\n0\n/H11080\n/H11080\n/H11080\n0\n1\n-p1\n0\np\np\n0\n1\n-p1\n0\n/H11080\n/H11080\n/H11080\n0\n0\n/H11080\n0\n-p4\n0\np\np\n/H11080\n/H11080\n/H11080\n0\n/H11080\n0\n-pn\nXH\nx1\nx2\nx3\nx4\n/H11080\n/H11080\n/H11080\nxn\nX + H\n0\n0\n1\n1\n/H11080\n/H11080\n/H11080\n1\nXu\ny = c1 x1 + c2 x2 + c3 x3 + c4 x4 + p + cn xn + b0 u\nY(s) = b0 U(s) + c1 X1(s) + c2 X2(s) + c3 X3(s) + c4 X4(s) + p + cn Xn(s)\n x#\nn =- pn xn + u\n /H11080\n /H11080\n /H11080\n x#\n4 =- p4 x4 + u\n x#\n3 =- p1 x3 + u\n x#\n2 =- p1 x2 + x3\n x#\n1 =- p1 x1 + x2698\nChapter 9 / Control Systems Analysis in State Space\nyu\nc\n1\n1\ns + p\n1\n1\ns + p\n1\n1\ns + p\n1\nc\n4\n1\ns + p\n4\nc\n2\nc\n3\nx\n3\nx\n4\nx\nn\nx\n2\nx\n1\nb\n0\nc\nn\n…\n…\n1\ns + p\nn\n++\n++\n+ +\n+\n++\nFigure 9–4\nBlock diagram\nrepresentation of the\nsystem defined by\nEquations (9–93)\nand (9–94) (Jordan\ncanonical form).\nSolution. MATLAB command\n[A,B,C,D] = tf2ss(num,den)\nwill produce a state-space representation for the system. See MATLAB Program 9–4.\nMATLAB Program 9–4\nnum = [25.04  5.008];\nden = [1  5.03247  25.1026  5.008];\n[A,B,C,D] = tf2ss(num,den)\nA=\n-5.0325 -25.1026 -5.0080\n1.0000 0 0\n0 1.0000 0\nB =\n1\n0\n0\nC =\n0 25.0400 5.0080\nD  =\n0\nOpenmirrors.comExample Problems and Solutions 699\nThis is the MATLAB representation of the following state-space equations:\nA–9–6. Consider the system defined by\nwhere\nObtain the response of the system to each of the following inputs:\n(a) The r components of u are impulse functions of various magnitudes.\n(b) The r components of u are step functions of various magnitudes.\n(c) The r components of u are ramp functions of various magnitudes.\nSolution.\n(a) Impulse response: Referring to Equation (9–43), the solution to the given state equation is\nSubstituting t0=0– into this solution, we obtain\nLet us write the impulse input u(t) as\nwhere w is a vector whose components are the magnitudes of r impulse functions applied at\nt=0. The solution of the state equation when the impulse input d(t)w is given at t=0 is\n(9–95)\n(b) Step response: Let us write the step input u(t) as\nu(t) = k\n = eAt x(0-) + eAt Bw\n x(t) = eAt x(0-) +\n3\nt\n0-\neA(t - t) Bd(t) w dt\nu(t) = d(t) w\nx(t) = eAt x(0 -) +\n3\nt\n0-\neA(t - t) Bu(t) dt\nx(t) = eAAt - t0B xAt0B+\n3\nt\nt0\neA(t - t) Bu(t) dt\n B = n * r constant matrix\n A = n * n constant matrix\n u = control vector (r-vector)\n x = state vector (n-vector)\nx# = Ax + Bu\n y = [0 25.04 5.008] C\nx1\nx2\nx3\nS + [0]u\n C\nx#\n1\nx#\n2\nx#\n3\nS = C\n-5.0325\n1\n0\n-25.1026\n0\n1\n-5.008\n0\n0\nSC\nx1\nx2\nx3\nS + C\n1\n0\n0\nSu700\nChapter 9 / Control Systems Analysis in State Space\nwhere k is a vector whose components are the magnitudes of r step functions applied at\nt=0. The solution to the step input at t=0 is given by\nIf A is nonsingular, then this last equation can be simplified to give\n(9–96)\n(c) Ramp response: Let us write the ramp input u(t) as\nwhere v is a vector whose components are magnitudes of ramp functions applied at t=0.T he\nsolution to the ramp input tv given at t=0 is\nIf A is nonsingular, then this last equation can be simplified to give\n(9–97)\nA–9–7. Obtain the response y(t) of the following system:\nwhere u(t) is the unit-step input occurring at t=0,o r\nu(t)=1(t)\nSolution. For this system\nThe state transition matrix can be obtained as follows:\n/H9021(t) = e\nAt\n= l\n-1\nC(s\n \nI - A)\n-1\nD\n/H9021(t) = e\nAt\nA =\nB\n-1\n1\n-0.5\n0\nR\n,\n  \nB =\nB\n0.5\n0\nR\n y = [1\n \n0]\nC\nx\n1\nx\n2\nS\n \nB\nx#\n1\nx#\n1\nR\n=\nB\n-1\n1\n-0.5\n0\nRB\nx\n1\nx\n2\nR\n+\nB\n0.5\n0\nR\nu,\n  \nB\nx\n1\n(0)\nx\n2\n(0)\nR\n=\nB\n0\n0\nR\n= e\nAt\n \nx(0) + CA\n-2\nAe\nAt\n- IB - A\n-1\ntD\n \nBv\nx(t) = e\nAt\n \nx(0) + AA\n-2\nBAe\nAt\n- I - AtB\n \nBv\n= e\nAt\n \nx(0) + e\nAt\na\nI\n2 t\n2\n- 2\n \nA\n3! t\n3\n+ 3\n \nA\n2\n4! t\n4\n- 4\n \nA\n3\n5! t\n5\n+ p\nb\n \nBv\n= e\nAt\n \nx(0) + e\nAt\n3\nt\n0\ne\n-At\nt dt\n \nBv\nx(t) = e\nAt\n \nx(0) +\n3\nt\n0\ne\nA(t - t)\n \nBt\n \nv dt\nu(t) = t\n \nv\n = e\nAt\n \nx(0) + A\n-1\nAe\nAt\n- IB\n \nBk\n x(t) = e\nAt\n \nx(0) + e\nAt\nC-AA\n-1\nBAe\n-At\n- IBD\n \nBk\n = e\nAt\n \nx(0) + e\nAt\na\nIt - At\n2\n2! + A\n2\nt\n3\n3! - p\nb\n \nBk\n = e\nAt\n \nx(0) + e\nAt\nc\n3\nt\n0\na\nI - At + A\n2\nt\n2\n2! - p\nb\ndt\nd\n \nBk\n x(t) = e\nAt\n \nx(0) +\n3\nt\n0\ne\nA(t - t)\n \nBk dt\nOpenmirrors.comExample Problems and Solutions 701\nSince\nwe have\nSince x(0)=0 and k=1, referring to Equation (9–96), we have\nHence, the output y(t) can be given by\nA–9–8. The Cayley–Hamilton theorem states that every n*n matrix A satisfies its own characteristic\nequation. The characteristic equation is not, however, necessarily the scalar equation of least\ndegree that A satisfies. The least-degree polynomial having A as a root is called the minimal\npolynomial. That is, the minimal polynomial of an n*n matrix A is defined as the polynomial\nf(l) of least degree,\nsuch that or\nThe minimal polynomial plays an important role in the computation of polynomials in an n*n\nmatrix.\nLet us suppose that d(l), a polynomial in l, is the greatest common divisor of all the elements\nof adj(lI-A). Show that, if the coefficient of the highest-degree term in l of d(l) is chosen as\n1, then the minimal polynomial f(l) is given by\nSolution. By assumption, the greatest common divisor of the matrix adj(lI-A) is d(l).Therefore,\nadj(lI-A)=d(l)B(l)\nf(l) = 2l I - A\nd(l)\n2\nf(A) = Am + a1  Am - 1 + p + am - 1  A + am  I = 0\nf(A) = 0,\nf(l) = lm + a1 lm - 1 + p + am - 1 l + am ,  m /H11349n\ny(t) = [1 0] Bx1\nx2\nR= x1 = e-0.5t sin 0.5t\n= B e-0.5t sin 0.5t\n-e-0.5t(cos 0.5t + sin 0.5t) + 1 R\n= B 0\n-2\n1\n-2 RB0.5e-0.5t(cos 0.5t - sin 0.5t) - 0.5\ne-0.5t sin 0.5t R\n= A-1AeAt - IB B\nx(t) = eAt x(0) + A-1AeAt - IB Bk\n = Be-0.5t(cos 0.5t - sin 0.5t)\n2e-0.5t sin 0.5t\n-e-0.5t sin 0.5t\ne-0.5t(cos 0.5t + sin 0.5t) R\n /H9021(t) = eAt = l-1 C(s I - A)-1 D\n= D\ns + 0.5 - 0.5\n(s + 0.5)2 + 0.52\n1\n(s + 0.5)2 + 0.52\n-0.5\n(s + 0.5)2 + 0.52\ns + 0.5 + 0.5\n(s + 0.5)2 + 0.52\nT\n(s I - A)-1 = Bs + 1\n-1\n0.5\ns R\n-1\n= 1\ns2 + s + 0.5 Bs\n1\n-0.5\ns + 1 R702\nChapter 9 / Control Systems Analysis in State Space\nwhere the greatest common divisor of the n\n2\nelements (which are functions of l) of B(l) is unity.\nSince\n(lI-A) adj(lI-A)=|lI-A|I\nwe obtain\n(9–98)\nfrom which we find that is divisible by d(l). Let us put\n(9–99)\nBecause the coefficient of the highest-degree term in l of d(l) has been chosen to be 1, the\ncoefficient of the highest-degree term in l of c(l) is also 1. From Equations (9–98) and (9–99),\nwe have\nHence,\nNote that c(l) can be written as\nwhere a(l) is of lower degree than f(l). Since c(A)=0 and f(A)=0, we must have a(A)=0.\nAlso, since f(l) is the minimal polynomial, a(l) must be identically zero, or\nNote that because f(A)=0, we can write\nHence,\nNoting that , we obtain\nSince the greatest common divisor of the n\n2\nelements of B(l) is unity, we have\nTherefore,\nThen, from this last equation and Equation (9–99), we obtain\nf(l) =\n∑l\n \nI - A∑\nd(l)\nc(l) = f(l)\ng(l) = 1\nB(l) = g(l)\n \nC(l)\n(l\n \nI - A)\n \nB(l) = c(l)\n \nI\nc(l)\n \nI = g(l)f(l)\n \nI = g(l)(l\n \nI - A)\n \nC(l)\nf(l)\n \nI = (l\n \nI - A)\n \nC(l)\nc(l) = g(l)f(l)\nc(l) = g(l)f(l) + a(l)\nc(A) = 0\n(l\n \nI - A)\n \nB(l) = c(l)\n \nI\n∑l\n \nI - A∑ = d(l)c(l)\n∑l\n \nI - A∑\nd(l)(l\n \nI - A)\n \nB(l) = ∑l\n \nI - A∑\n \nI\nOpenmirrors.comExample Problems and Solutions 703\nA–9–9. If an n*n matrix A has n distinct eigenvalues, then the minimal polynomial of A is identical to\nthe characteristic polynomial. Also, if the multiple eigenvalues of A are linked in a Jordan chain,\nthe minimal polynomial and the characteristic polynomial are identical. If, however, the multiple\neigenvalues of A are not linked in a Jordan chain, the minimal polynomial is of lower degree than\nthe characteristic polynomial.\nUsing the following matrices A and B as examples, verify the foregoing statements about the\nminimal polynomial when multiple eigenvalues are involved:\nSolution. First, consider the matrix A. The characteristic polynomial is given by\nThus, the eigenvalues of A are 2, 2, and 1. It can be shown that the Jordan canonical form of A is\nand the multiple eigenvalues are linked in the Jordan chain as shown.\nTo determine the minimal polynomial, let us first obtain adj(lI-A). It is given by\nNotice that there is no common divisor of all the elements of Hence, d(l)=1.\nThus, the minimal polynomial f(l) is identical to the characteristic polynomial, or\nA simple calculation proves that\n= C\n0\n0\n0\n0\n0\n0\n0\n0\n0\nS = 0\n= C\n8\n0\n0\n72\n  8\n21\n28\n  0\n  1\nS- 5 C\n4\n0\n0\n16\n  4\n  9\n12\n  0\n  1\nS+ 8 C\n2\n0\n0\n1\n2\n3\n4\n0\n1\nS- 4 C\n1\n0\n0\n0\n1\n0\n0\n0\n1\nS\nA3 - 5 A2 + 8 A - 4 I\n = l3 - 5l2 + 8l - 4\n f(l) = ∑l I - A∑ = (l - 2)2(l - 1)\nadj(l I - A).\nadj(l I - A) = C\n(l - 2)(l - 1)\n0\n0\n(l + 11)\n(l - 2)(l - 1)\n3(l - 2)\n4(l - 2)\n0\n(l - 2)2\nS\nC\n2\n0\n0\n1\n2\n0\n0\n0\n1\nS\n∑l I - A∑ = 3\nl - 2\n0\n0\n-1\nl - 2\n-3\n-4\n0\nl - 1\n3= (l - 2)2(l - 1)\nA = C\n2\n0\n0\n1\n2\n3\n4\n0\n1\nS,  B = C\n2\n0\n0\n0\n2\n3\n0\n0\n1\nS704\nChapter 9 / Control Systems Analysis in State Space\nbut\nThus, we have shown that the minimal polynomial and the characteristic polynomial of this matrix\nA are the same.\nNext, consider the matrix B. The characteristic polynomial is given by\nA simple computation reveals that matrix B has three eigenvectors, and the Jordan canonical\nform of B is given by\nThus, the multiple eigenvalues are not linked.To obtain the minimal polynomial, we first compute\n:\nfrom which it is evident that\nHence,\nAs a check, let us compute :\nFor the given matrix B, the degree of the minimal polynomial is lower by 1 than that of the char-\nacteristic polynomial.As shown here, if the multiple eigenvalues of an n*n matrix are not linked\nin a Jordan chain, the minimal polynomial is of lower degree than the characteristic polynomial.\nf(B) = B\n2\n- 3\n \nB + 2\n \nI =\nC\n4\n0\n0\n0\n4\n9\n0\n0\n1\nS\n- 3\nC\n2\n0\n0\n0\n2\n3\n0\n0\n1\nS\n+ 2\nC\n1\n0\n0\n0\n1\n0\n0\n0\n1\nS\n=\nC\n0\n0\n0\n0\n0\n0\n0\n0\n0\nS\n= 0\nf(B)\nf(l) =\n∑l\n \nI - B∑\nd(l) =\n(l - 2)\n2\n(l - 1)\nl - 2 = l\n2\n- 3l + 2\nd(l) = l - 2\nadj(l\n \nI - B) =\nC\n(l - 2)(l - 1)\n0\n0\n0\n(l - 2)(l - 1)\n3(l - 2)\n0\n0\n(l - 2)\n2\nS\nadj(l\n \nI - B)\nC\n2\n0\n0\n0\n2\n0\n0\n0\n1\nS\n∑l\n \nI - B∑ =\n3\nl - 2\n0\n0\n0\nl - 2\n-3\n0\n0\nl - 1\n3\n= (l - 2)\n2\n(l - 1)\n=\nC\n0\n0\n0\n13\n 0\n 0\n0\n0\n0\nS\nZ 0\n=\nC\n4\n0\n0\n16\n  4\n  9\n12\n  0\n  1\nS\n- 3\nC\n2\n0\n0\n1\n2\n3\n4\n0\n1\nS\n+ 2\nC\n1\n0\n0\n0\n1\n0\n0\n0\n1\nS\nA\n2\n- 3\n \nA + 2\n \nI\nOpenmirrors.comExample Problems and Solutions 705\nA–9–10. Show that by use of the minimal polynomial, the inverse of a nonsingular matrix A can be ex-\npressed as a polynomial in A with scalar coefficients as follows:\n(9–100)\nwhere a1 ,a 2 , p , am are coefficients of the minimal polynomial\nThen obtain the inverse of the following matrix A:\nSolution. For a nonsingular matrix A, its minimal polynomial f(A) can be written as\nwhere am Z 0. Hence,\nPremultiplying by A–1, we obtain\nwhich is Equation (9–100).\nFor the given matrix A, adj(lI-A) can be given as\nClearly, there is no common divisor d(l) of all elements of adj (lI-A). Hence, d(l)=1.\nConsequently, the minimal polynomial f(l) is given by\nThus, the minimal polynomial f(l) is the same as the characteristic polynomial.\nSince the characteristic polynomial is\nwe obtain\nf(l) = l3 + 3l2 - 7l - 17\n∑l I - A∑ = l3 + 3l2 - 7l - 17\nf(l) =\n∑l I - A∑\nd(l) = ∑l I - A∑\nadj(/H9261I - A) = C\nl2 + 4l + 3\n3l + 7\nl + 1\n2l + 6\nl2 + 2l - 3\n2\n-4\n-2l + 2\nl2 - 7\nS\nA-1 =- 1\nam\nAAm - 1 + a1  Am - 2 + p + am - 2  A + am - 1  IB\nI =-  1\nam\n AAm + a1  Am - 1 + p + am - 2  A2 + am - 1  AB\nf(A) = Am + a1  Am - 1 + p + am - 1  A + am  I = 0\nA = C\n1\n3\n1\n2\n-1\n0\n0\n-2\n-3\nS\nf(l) = lm + a1 lm - 1 + p + am - 1 l + am\nA-1 =- 1\nam\nAAm - 1 + a1  Am - 2 + p + am - 2  A + am - 1  IB706\nChapter 9 / Control Systems Analysis in State Space\nBy identifying the coefficients a\ni\nof the minimal polynomial (which is the same as the characteristic\npolynomial in this case), we have\nThe inverse of A can then be obtained from Equation (9–100) as follows:\nA–9–11. Show that if matrix A can be diagonalized, then\nwhere P is a diagonalizing transformation matrix that transforms A into a diagonal matrix, or\nP\n–1\nAP=D, where D is a diagonal matrix.\nShow also that if matrix A can be transformed into a Jordan canonical form, then\nwhere S is a transformation matrix that transforms A into a Jordan canonical form J, or S\n–1\nAS=J.\nSolution. Consider the state equation\nIf a square matrix can be diagonalized, then a diagonalizing matrix (transformation matrix) exists\nand it can be obtained by a standard method. Let P be a diagonalizing matrix for A. Let us define\nThen\nwhere D is a diagonal matrix. The solution of this last equation is\nHence,\nx(t) = Px\nˆ\n(t) = Pe\nDt\n \nP\n-1\n \nx(0)\nx\nˆ\n(t) = e\nDt\n \nx\nˆ\n(0)\nx\nˆ\n#\n= P\n-1\n \nAPx\nˆ\n= Dx\nˆ\nx = Px\nˆ\nx# = Ax\ne\nAt\n= Se\nJt\n \nS\n-1\ne\nAt\n= Pe\nDt\n \nP\n-1\n =\nC\n3\n17\n7\n17\n1\n17\n6\n17\n-\n3\n17\n2\n17\n-\n4\n17\n2\n17\n-\n7\n17\nS\n = 1\n17\nC\n3\n7\n1\n6\n-3\n2\n-4\n2\n-7\nS\n = 1\n17\nc\nC\n7\n-2\n-2\n0\n7\n2\n-4\n8\n9\nS\n+ 3\nC\n1\n3\n1\n2\n-1\n0\n0\n-2\n-3\nS\n- 7\nC\n1\n0\n0\n0\n1\n0\n0\n0\n1\nS\ns\n A\n-1\n=- 1\na\n3\nAA\n2\n+ a\n1\n  \nA + a\n2\n  \nIB = 1\n17 AA\n2\n+ 3\n \nA - 7\n \nIB\na\n1\n= 3,\n  \na\n2\n=- 7,\n  \na\n3\n=- 17\nOpenmirrors.comExample Problems and Solutions 707\nNoting that x(t) can also be given by the equation\nwe obtain or\n(9–101)\nNext, we shall consider the case where matrix A may be transformed into a Jordan canonical\nform. Consider again the state equation\nFirst obtain a transformation matrix S that will transform matrix A into a Jordan canonical form\nso that\nwhere J is a matrix in a Jordan canonical form. Now define\nThen\nThe solution of this last equation is\nHence,\nSince the solution x(t) can also be given by the equation\nwe obtain\nNote that eJt is a triangular matrix [which means that the elements below (or above, as the case\nmay be) the principal diagonal line are zeros] whose elements are elt, telt, , and so forth. For\nexample, if matrix J has the following Jordan canonical form:\nthen\neJt = C\nel1 t\n0\n0\ntel1 t\nel1 t\n0\n1\n2 t2el1 t\ntel1 t\nel1 t\nS\nJ = C\nl1\n0\n0\n1\nl1\n0\n0\n1\nl1\nS\n1\n2 t2elt\neAt = SeJt S-1\nx(t) = eAt x(0)\nx(t) = Sxˆ(t) = SeJt S-1 x(0)\nxˆ(t) = eJt xˆ(0)\nxˆ#\n= S-1 AS xˆ = Jxˆ\nx = Sxˆ\nS-1 AS = J\nx# = Ax\neAt = PeDt P-1 = P F\nel1 t\n0\nel2 t\n/H11080\n/H11080\n/H11080\n0\neln t\nVP-1\neAt = PeDt P-1,\nx(t) = eAt x(0)708\nChapter 9 / Control Systems Analysis in State Space\nSimilarly, if\nthen\nA–9–12. Consider the following polynomial in l of degree m-1, where we assume l\n1\n, l\n2\n, p , l\nm\nto be\ndistinct:\nwhere k=1, 2, p , m. Notice that\nThen the polynomial f(l) of degree m-1,\ntakes on the values fAl\nk\nBat the points l\nk\n. This last equation is commonly called Lagrange’s\ninterpolation formula. The polynomial f(l) of degree m-1 is determined from m independent\ndata fAl\n1\nB, fAl\n2\nB, p , fAl\nm\nB. That is, the polynomial f(l) passes through m points\nfAl\n1\nB, fAl\n2\nB, p , fAl\nm\nB. Since f(l) is a polynomial of degree m-1, it is uniquely determined.\nAny other representations of the polynomial of degree m-1 can be reduced to the Lagrange\npolynomial f(l).\n = a\nm\nk = 1\nfAl\nk\nB\nAl - l\n1\nBp Al - l\nk - 1\nBAl - l\nk + 1\nBp Al - l\nm\nB\nAl\nk\n- l\n1\nBp Al\nk\n- l\nk - 1\nBAl\nk\n- l\nk + 1\nBp Al\nk\n- l\nm\nB\n f(l) = a\nm\nk = 1\nfAl\nk\nBp\nk\n(l)\np\nk\nAl\ni\nB =\nb\n1,\n0,\nif i = k\nif i Z k\np\nk\n(l) =\nAl - l\n1\nBp Al - l\nk - 1\nBAl - l\nk + 1\nBp Al - l\nm\nB\nAl\nk\n- l\n1\nBp Al\nk\n- l\nk - 1\nBAl\nk\n- l\nk + 1\nBp Al\nk\n- l\nm\nB\ne\nJt\n=\nG\ne\nl\n1\n \nt\n0\n0\n0\nte\nl\n1\n \nt\ne\nl\n1\n \nt\n0\n1\n2\nt\n2\ne\nl\n1\n \nt\nte\nl\n1\n \nt\ne\nl\n1\n \nt\ne\nl\n4\n \nt\n0\nte\nl\n4\n \nt\ne\nl\n4\n \nt\ne\nl\n6\n \nt\n0\n0\n0\ne\nl\n7\n \nt\nW\nJ =\nG\nl\n1\n0\n0\n0\n1\nl\n1\n0\n0\n1\nl\n1\nl\n4\n0\n1\nl\n4\nl\n6\n0\nl\n7\nW\nOpenmirrors.comExample Problems and Solutions 709\nAssuming that the eigenvalues of an n*n matrix A are distinct, substitute A for l in the\npolynomial pk(l). Then we get\nNotice that pk(A) is a polynomial in A of degree m-1. Notice also that\nNow define\n(9–102)\nEquation (9–102) is known as Sylvester’s interpolation formula. Equation (9–102) is equivalent\nto the following equation:\n(9–103)\nEquations (9–102) and (9–103) are frequently used for evaluating functions f(A) of matrix A—\nfor example, (lI-A)–1, eAt, and so forth. Note that Equation (9–103) can also be written as\n(9–104)\nShow that Equations (9–102) and (9–103) are equivalent. To simplify the arguments, assume\nthat m=4.\n7\n1\n1\n/H11080\n/H11080\n/H11080\n1\nI\nl1\nl2\n/H11080\n/H11080\n/H11080\nlm\nA\nl2\n1\nl2\n2\n/H11080\n/H11080\n/H11080\nl2\nm\nA2\np\np\np\np\np\nlm - 1\n1\nlm - 1\n2\n/H11080\n/H11080\n/H11080\nlm - 1\nm\nAm - 1\nfAl1B\nfAl2B\n/H11080\n/H11080\n/H11080\nfAlmB\nf(A)\n7= 0\n8\n1\nl1\nl2\n1\n/H11080\n/H11080\n/H11080\nlm - 1\n1\nfAl1B\n1\nl2\nl2\n2\n/H11080\n/H11080\n/H11080\nlm - 1\n2\nfAl2B\np\np\np\np\np\n1\nlm\nl2\nm\n/H11080\n/H11080\n/H11080\nlm - 1\nm\nfAlmB\nI\nA\nA2\n/H11080\n/H11080\n/H11080\nAm - 1\nf(A)\n8= 0\n = a\nm\nk = 1\nfAlkB\nAA - l1  IBp AA - lk - 1  IBAA - lk + 1  IBp AA - lm  IB\nAlk - l1Bp Alk - lk - 1BAlk - lk + 1Bp Alk - lmB\n f(A) = a\nm\nk = 1\nfAlkBpk(A)\npkAli  IB= bI,\n0,\nif i = k\nif i Z k\npk(A) =\nAA - l1  IB p AA - lk - 1  IBAA - lk + 1  IB p AA - lm  IB\nAlk - l1Bp Alk - lk - 1BAlk - lk + 1Bp Alk - lmB710\nChapter 9 / Control Systems Analysis in State Space\nSolution. Equation (9–103), where m=4, can be expanded as follows:\nSince\nand\nwe obtain\n = 0\n + fAl\n1\nBCAA - l\n4\n  \nIBAA - l\n3\n  \nIBAA - l\n2\n  \nIBAl\n4\n- l\n3\nBAl\n4\n- l\n2\nBAl\n3\n- l\n2\nBD\n - fAl\n2\nBCAA - l\n4\n  \nIBAA - l\n3\n  \nIBAA - l\n1\n  \nIBAl\n4\n- l\n3\nBAl\n4\n- l\n1\nBAl\n3\n- l\n1\nBD\n + fAl\n3\nBCAA - l\n4\n  \nIBAA - l\n2\n  \nIBAA - l\n1\n  \nIBAl\n4\n- l\n2\nBAl\n4\n- l\n1\nBAl\n2\n- l\n1\nBD\n - fAl\n4\nBCAA - l\n3\n  \nIBAA - l\n2\n  \nIBAA - l\n1\n  \nIBAl\n3\n- l\n2\nBAl\n3\n- l\n1\nBAl\n2\n- l\n1\nBD\n ¢= f(A)CAl\n4\n- l\n3\nBAl\n4\n- l\n2\nBAl\n4\n- l\n1\nBAl\n3\n- l\n2\nBAl\n3\n- l\n1\nBAl\n2\n- l\n1\nBD\n4\n1\nl\ni\nl\n2\ni\nl\n3\ni\n1\nl\nj\nl\n2\nj\nl\n3\nj\n1\nl\nk\nl\n2\nk\nl\n3\nk\nI\nA\nA\n2\nA\n3\n4\n= AA - l\nk\n  \nIBAA - l\nj\n  \nIBAA - l\ni\n  \nIBAl\nk\n- l\nj\nBAl\nk\n- l\ni\nBAl\nj\n- l\ni\nB\n4\n1\nl\n1\nl\n2\n1\nl\n3\n1\n1\nl\n2\nl\n2\n2\nl\n3\n2\n1\nl\n3\nl\n2\n3\nl\n3\n3\n1\nl\n4\nl\n2\n4\nl\n3\n4\n4\n= Al\n4\n- l\n3\nBAl\n4\n- l\n2\nBAl\n4\n- l\n1\nBAl\n3\n- l\n2\nBAl\n3\n- l\n1\nBAl\n2\n- l\n1\nB\n + fAl\n1\nB\n4\n1\nl\n2\nl\n2\n2\nl\n3\n2\n1\nl\n3\nl\n2\n3\nl\n3\n3\n1\nl\n4\nl\n2\n4\nl\n3\n4\nI\nA\nA\n2\nA\n3\n4\n + fAl\n3\nB\n4\n1\nl\n1\nl\n2\n1\nl\n3\n1\n1\nl\n2\nl\n2\n2\nl\n3\n2\n1\nl\n4\nl\n2\n4\nl\n3\n4\nI\nA\nA\n2\nA\n3\n4\n- fAl\n2\nB\n4\n1\nl\n1\nl\n2\n1\nl\n3\n1\n1\nl\n3\nl\n2\n3\nl\n3\n3\n1\nl\n4\nl\n2\n4\nl\n3\n4\nI\nA\nA\n2\nA\n3\n4\n = f(A)\n4\n1\nl\n1\nl\n2\n1\nl\n3\n1\n1\nl\n2\nl\n2\n2\nl\n3\n2\n1\nl\n3\nl\n2\n3\nl\n3\n3\n1\nl\n4\nl\n2\n4\nl\n3\n4\n4\n- fAl\n4\nB\n4\n1\nl\n1\nl\n2\n1\nl\n3\n1\n1\nl\n2\nl\n2\n2\nl\n3\n2\n1\nl\n3\nl\n2\n3\nl\n3\n3\nI\nA\nA\n2\nA\n3\n4\n ¢=\n5\n1\nl\n1\nl\n2\n1\nl\n3\n1\nfAl\n1\nB\n1\nl\n2\nl\n2\n2\nl\n3\n2\nfAl\n2\nB\n1\nl\n3\nl\n2\n3\nl\n3\n3\nfAl\n3\nB\n1\nl\n4\nl\n2\n4\nl\n3\n4\nfAl\n4\nB\nI\nA\nA\n2\nA\n3\nf(A)\n5\nOpenmirrors.comExample Problems and Solutions 711\nSolving this last equation for f(A), we obtain\nwhere m=4. Thus, we have shown the equivalence of Equations (9–102) and (9–103). Although\nwe assumed m=4, the entire argument can be extended to an arbitrary positive integer m.( F o r\nthe case when the matrix A involves multiple eigenvalues, refer to Problem A–9–13.)\nA–9–13. Consider Sylvester’s interpolation formula in the form given by Equation (9–104):\nThis formula for the determination of f(A) applies to the case where the minimal polynomial of\nA involves only distinct roots.\nSuppose that the minimal polynomial of A involves multiple roots. Then the rows in the\ndeterminant that correspond to the multiple roots become identical, and therefore modification\nof the determinant in Equation (9–104) becomes necessary.\nModify the form of Sylvester’s interpolation formula given by Equation (9–104) when the\nminimal polynomial of A involves multiple roots. In deriving a modified determinant equation,\nassume that there are three equal roots in the minimal polynomial of A and that\nthere are other roots that are distinct.\nSolution. Since the minimal polynomial of A involves three equal roots, the minimal polynomial\nf(l) can be written as\nAn arbitrary function f(A) of an n*n matrix A can be written as\nwhere the minimal polynomial f(A) is of degree m and a(A) is a polynomial in A of degree\nm-1 or less. Hence we have\nwhere a(l) is a polynomial in l of degree m-1 or less, which can thus be written as\n(9–105)a(l) = a0 + a1 l + a2 l2 + p + am - 1 lm - 1\nf(l) = g(l)f(l) + a(l)\nf(A) = g(A)f(A) + a(A)\n= Al - l1B\n3\nAl - l4BAl - l5Bp Al - lmB\nf(l) = lm + a1 lm - 1 + p + am - 1 l + am\nAl4, l5, p , lmB\nAl1 = l2 = l3B\n7\n1\n1\n/H11080\n/H11080\n/H11080\n1\nI\nl1\nl2\n/H11080\n/H11080\n/H11080\nlm\nA\nl2\n1\nl2\n2\n/H11080\n/H11080\n/H11080\nl2\nm\nA2\np\np\np\np\np\nlm - 1\n1\nlm - 1\n2\n/H11080\n/H11080\n/H11080\nlm - 1\nm\nAm - 1\nfAl1B\nfAl2B\n/H11080\n/H11080\n/H11080\nfAlmB\nf(A)\n7= 0\n = a\nm\nk = 1\nfAlkB\nAA - l1  IBp AA - lk - 1  IBAA - lk + 1  IBp AA - lm  IB\nAlk - l1Bp Alk - lk - 1BAlk - lk + 1Bp Alk - lmB\n  + fAl3B\nAA - l1  IBAA - l2  IBAA - l4  IB\nAl3 - l1BAl3 - l2BAl3 - l4B\n+ fAl4B\nAA - l1  IBAA - l2  IBAA - l3  IB\nAl4 - l1BAl4 - l2BAl4 - l3B\n f(A) = fAl1B\nAA - l2  IBAA - l3  IBAA - l4  IB\nAl1 - l2BAl1 - l3BAl1 - l4B\n+ fAl2B\nAA - l1  IBAA - l3  IBAA - l4  IB\nAl2 - l1BAl2 - l3BAl2 - l4B712\nChapter 9 / Control Systems Analysis in State Space\nIn the present case we have\n(9–106)\nBy substituting l\n1\n, l\n4\n, p , l\nm\nfor l in Equation (9–106), we obtain the following m-2 equations:\n(9–107)\nBy differentiating Equation (9–106) with respect to l, we obtain\n(9–108)\nwhere\nSubstitution of l\n1\nfor l in Equation (9–108) gives\nReferring to Equation (9–105), this last equation becomes\n(9–109)\nSimilarly, differentiating Equation (9–106) twice with respect to l and substituting l\n1\nfor l,w e\nobtain\nThis last equation can be written as\n(9–110)\nRewriting Equations (9–110), (9–109), and (9–107), we get\n(9–111)\na\n0\n+ a\n1\n \nl\nm\n+ a\n2\n \nl\n2\nm\n+ p + a\nm - 1\n \nl\nm - 1\nm\n= fAl\nm\nB\n/H11080\n/H11080\n/H11080\na\n0\n+ a\n1\n \nl\n4\n+ a\n2\n \nl\n2\n4\n+ p + a\nm - 1\n \nl\nm - 1\n4\n= fAl\n4\nB\na\n0\n+ a\n1\n \nl\n1\n+ a\n2\n \nl\n2\n1\n+ p + a\nm - 1\n \nl\nm - 1\n1\n= fAl\n1\nB\na\n1\n+ 2a\n2\n \nl\n1\n+ p + (m - 1)a\nm - 1\n \nl\nm - 2\n1\n= f¿Al\n1\nB\na\n2\n+ 3a\n3\n \nl\n1\n+ p +\n(m - 1)(m - 2)\n2 a\nm - 1\n \nl\nm - 3\n1\n=\nf–Al\n1\nB\n2\nf–Al\n1\nB= 2a\n2\n+ 6a\n3\n \nl\n1\n+ p + (m - 1)(m - 2)a\nm - 1\n \nl\nm - 3\n1\nd\n2\nd\n2\nl f(l)\n2\nl= l\n1\n= f–Al\n1\nB = d\n2\ndl\n2\na(l)\n2\nl= l\n1\nf¿Al\n1\nB= a\n1\n+ 2a\n2\n \nl\n1\n+ p + (m - 1)a\nm - 1\n \nl\nm - 2\n1\nd\ndl f(l)\n2\nl= l\n1\n= f¿Al\n1\nB = d\ndl a(l)\n2\nl= l\n1\nAl - l\n1\nB\n2\nh(l) = d\ndl Cg(l)Al - l\n1\nB\n3\nAl - l\n4\nBp Al - l\nm\nBD\nd\ndl f(l) = Al - l\n1\nB\n2\nh(l) + d\ndl a(l)\nfAl\nm\nB= aAl\nm\nB\n/H11080\n/H11080\n/H11080\nfAl\n4\nB= aAl\n4\nB\nfAl\n1\nB= aAl\n1\nB\n = g(l)CAl - l\n1\nB\n3\nAl - l\n4\nBp Al - l\nm\nBD + a(l)\n f(l) = g(l)f(l) + a(l)\nOpenmirrors.comExample Problems and Solutions 713\nThese m simultaneous equations determine the ak values (where k=0,1 ,2 ,p , m-1). Noting\nthat f(A)=0 because it is a minimal polynomial, we have f(A) as follows:\nHence, referring to Equation (9–105), we have\n(9–112)\nwhere the ak values are given in terms of fAl1 B, f¿Al1 B, f–Al1 B, fAl4 B, fAl5 B, p , fAlm B. In terms of\nthe determinant equation, f(A) can be obtained by solving the following equation:\n(9–113)\nEquation (9–113) shows the desired modification in the form of the determinant. This equation\ngives the form of Sylvester’s interpolation formula when the minimal polynomial of A involves\nthree equal roots. (The necessary modification of the form of the determinant for other cases will\nbe apparent.)\nA–9–14. Using Sylvester’s interpolation formula, compute eAt, where\nSolution. Referring to Problem A–9–9, the characteristic polynomial and the minimal polynomial\nare the same for this A. The minimal polynomial (characteristic polynomial) is given by\nNote that l1=l2=2 and l3=1. Referring to Equation (9–112) and noting that f(A) in this\nproblem is eAt, we have\nwhere a0(t), a1(t), and a2(t) are determined from the equations\n a0(t) + a1(t)l3 + a2(t)l2\n3 = el3 t\n a0(t) + a1(t)l1 + a2(t)l2\n1 = el1 t\n a1(t) + 2a2(t)l1 = tel1 t\neAt = a0(t) I + a1(t) A + a2(t) A2\nf(l) = (l - 2)2(l - 1)\nA = C\n2\n0\n0\n1\n2\n3\n4\n0\n1\nS\nf–Al1B\n2\nf¿Al1B\nfAl1B\nfAl4B\n/H11080\n/H11080\n/H11080\nfAlmB\nf(A)\n = 0\n0\n0\n1\n1\n/H11080\n/H11080\n/H11080\n1\nI\n0\n1\nl1\nl4\n/H11080\n/H11080\n/H11080\nlm\nA\n1\n2l1\nl2\n1\nl2\n4\n/H11080\n/H11080\n/H11080\nl2\nm\nA2\n3l1\n3l2\n1\nl3\n1\nl3\n4\n/H11080\n/H11080\n/H11080\nl3\nm\nA3\np\np\np\np\np\np\n(m - 1)(m - 2)\n2 lm - 3\n1\n(m - 1)lm - 2\n1\nlm - 1\n1\nlm - 1\n4\n/H11080\n/H11080\n/H11080\nlm - 1\nm\nAm - 1\nf(A) = a(A) = a0  I + a1  A + a2  A2 + p + am - 1  Am - 1\nf(A) = g(A)f(A) + a(A) = a(A)714\nChapter 9 / Control Systems Analysis in State Space\nSubstituting l\n1\n=2, and l\n3\n=1 into these three equations gives\nSolving for a\n0\n(t), a\n1\n(t), and a\n2\n(t), we obtain\nHence,\nA–9–15. Show that the system described by\n(9–114)\n(9–115)\nwhere\nis completely output controllable if and only if the composite m*nr matrix P, where\nis of rank m. (Notice that complete state controllability is neither necessary nor sufficient for\ncomplete output controllability.)\nSolution. Suppose that the system is output controllable and the output y(t) starting from any y(0),\nthe initial output, can be transferred to the origin of the output space in a finite time interval\n0 /H11349t /H11349T. That is,\n(9–116)y(T) = Cx(T) = 0\nP = CCB /H21752 CAB /H21752 CA\n2\n \nB /H21752 p /H21752 CA\nn - 1\n \nBD\n C = m * n matrix\n B = n * r matrix\n A = n * n matrix\n y = output vector (m-vector)\n \n(m /H11349n)\n u = control vector (r-vector)\n x = state vector (n-vector)\ny = Cx\nx# = Ax + Bu\n =\nC\ne\n2t\n0\n0\n12e\nt\n- 12e\n2t\n+ 13te\n2t\ne\n2t\n-3e\nt\n+ 3e\n2t\n-4e\nt\n+ 4e\n2t\n0\ne\nt\nS\n + Ae\nt\n- e\n2t\n+ te\n2t\nB\nC\n4\n0\n0\n16\n4\n9\n12\n0\n1\nS\n e\nAt\n= A4e\nt\n- 3e\n2t\n+ 2te\n2t\nB\nC\n1\n0\n0\n0\n1\n0\n0\n0\n1\nS\n+ A-4e\nt\n+ 4e\n2t\n- 3te\n2t\nB\nC\n2\n0\n0\n1\n2\n3\n4\n0\n1\nS\n a\n2\n(t) = e\nt\n- e\n2t\n+ te\n2t\na\n1\n(t) =- 4e\nt\n+ 4e\n2 t\n- 3te\n2 t\n a\n0\n(t) = 4e\nt\n- 3e\n2t\n+ 2te\n2t\n a\n0\n(t) + a\n1\n(t) + a\n2\n(t) = e\nt\n a\n0\n(t) + 2a\n1\n(t) + 4a\n2\n(t) = e\n2t\n a\n1\n(t) + 4a\n2\n(t) = te\n2t\nOpenmirrors.comExample Problems and Solutions 715\nSince the solution of Equation (9–114) is\nat t=T, we have\n(9–117)\nSubstituting Equation (9–117) into Equation (9–116), we obtain\n(9–118)\nOn the other hand,y(0)=Cx(0). Notice that the complete output controllability means that the\nvector Cx(0) spans the m-dimensional output space. Since eAT is nonsingular, if Cx(0) spans the\nm-dimensional output space, so does CeATx(0), and vice versa. From Equation (9–118) we obtain\nNote that can be expressed as the sum of Ai Bj ; that is,\nwhere\nand ai(t) satisfies\n(p: degree of the minimal polynomial of A)\nand Bj is the jth column of B. Therefore, we can write CeAT x(0) as\nFrom this last equation, we see that is a linear combination of CAiBj (i=0, 1, 2, p ,\np-1; j=1, 2, p , r). Note that if the rank of Q, where\nis m, then so is the rank of P, and vice versa. [This is obvious if p=n. If p<n, then the CAhBj\n(where p /H11349h /H11349n-1) are linearly dependent on CBj , CABj , p , CAp-1Bj . Hence, the rank of\nQ = CCB /H21752 CAB /H21752 CA2 B /H21752 p /H21752 CAp - 1 BD  (p /H11349n)\nCeAT x(0)\nCeAT x(0) =- a\np - 1\ni = 0\na\nr\nj = 1\ngij   CAi Bj\neAt = a\np - 1\ni = 0\nai(t) Ai\ngij =\n3\nT\n0\nai(t)uj(T - t) dt = scalar\n3\nT\n0\neAt Bu(T - t) dt = a\np - 1\ni = 0\na\nr\nj = 1\ngij   Ai Bj\n1\nT\n0 eAt Bu(T - t) dt\n =-  C\n3\nT\n0\neAt Bu(T - t) dt\n CeAT x(0) =-  CeAT\n3\nT\n0\ne-At Bu(t) dt\n = CeAT cx(0) +\n3\nT\n0\ne- At Bu(t) dtd= 0\n y(T) = Cx(T)\nx(T) = eAT cx(0) +\n3\nT\n0\ne- At Bu(t) dtd\nx(t) = eAt cx(0) +\n3\nt\n0\ne- At Bu(t) dtd716\nChapter 9 / Control Systems Analysis in State Space\nP is equal to that of Q.] If the rank of P is m, then Ce\nAT\nx(0) spans the m-dimensional output\nspace.This means that if the rank of P is m, then Cx(0) also spans the m-dimensional output space\nand the system is completely output controllable.\nConversely, suppose that the system is completely output controllable, but the rank of P is k,\nwhere k<m. Then the set of all initial outputs that can be transferred to the origin is of\nk-dimensional space. Hence, the dimension of this set is less than m. This contradicts the as-\nsumption that the system is completely output controllable. This completes the proof.\nNote that it can be immediately proved that, in the system of Equations (9–114) and (9–115),\ncomplete state controllability on 0/H11349t /H11349T implies complete output controllability on 0/H11349t /H11349T\nif and only if m rows of C are linearly independent.\nA–9–16. Discuss the state controllability of the following system:\n(9–119)\nSolution. For this system,\nSince\nwe see that vectors B and AB are not linearly independent and the rank of the matrix [B/H21752AB]\nis 1. Therefore, the system is not completely state controllable. In fact, elimination of x\n2\nfrom\nEquation (9–119), or the following two simultaneous equations,\nyields\nor, in the form of a transfer function,\nNotice that cancellation of the factor (s+2.5) occurs in the numerator and denominator of the\ntransfer function. Because of this cancellation, this system is not completely state controllable.\nThis is an unstable system. Remember that stability and controllability are quite different things.\nThere are many systems that are unstable, but are completely state controllable.\nA–9–17. A state-space representation of a system in the controllable canonical form is given by\n(9–120)\n(9–121)y = [0.8\n \n1]\nB\nx\n1\nx\n2\nR\nB\nx#\n1\nx#\n2\nR\n=\nB\n0\n-0.4\n1\n-1.3\nRB\nx\n1\nx\n2\nR\n+\nB\n0\n1\nR\nu\nX\n1\n(s)\nU(s) = s + 2.5\n(s + 2.5)(s - 1)\nx$\n1\n+ 1.5x#\n1\n- 2.5x\n1\n= u# + 2.5u\nx#\n2\n=- 2x\n1\n+ 1.5x\n2\n+ 4u\nx#\n1\n=- 3x\n1\n+ x\n2\n+ u\nAB =\nB\n-3\n-2\n1\n1.5\nRB\n1\n4\nR\n=\nB\n1\n4\nR\nA =\nB\n-3\n-2\n1\n1.5\nR\n,\n  \nB =\nB\n1\n4\nR\nB\nx#\n1\nx#\n2\nR\n=\nB\n-3\n-2\n1\n1.5\nRB\nx\n1\nx\n2\nR\n+\nB\n1\n4\nR\nu\nOpenmirrors.comExample Problems and Solutions 717\nThe same system may be represented by the following state-space equation, which is in the\nobservable canonical form:\n(9–122)\n(9–123)\nShow that the state-space representation given by Equations (9–120) and (9–121) gives a sys-\ntem that is state controllable, but not observable. Show, on the other hand, that the state-space rep-\nresentation defined by Equations (9–122) and (9–123) gives a system that is not completely state\ncontrollable, but is observable. Explain what causes the apparent difference in the controllability\nand observability of the same system.\nSolution. Consider the system defined by Equations (9–120) and (9–121). The rank of the\ncontrollability matrix\nis 2. Hence, the system is completely state controllable. The rank of the observability matrix\nis 1. Hence the system is not observable.\nNext consider the system defined by Equations (9–122) and (9–123). The rank of the\ncontrollability matrix\nis 1. Hence, the system is not completely state controllable. The rank of the observability matrix\nis 2. Hence, the system is observable.\nThe apparent difference in the controllability and observability of the same system is caused\nby the fact that the original system has a pole-zero cancellation in the transfer function. Referring\nto Equation (2–29), for D=0 we have\nIf we use Equations (9–120) and (9–121), then\n[Note that the same transfer function can be obtained by using Equations (9–122) and (9–123).]\nClearly, cancellation occurs in this transfer function.\n = s + 0.8\n(s + 0.8)(s + 0.5)\n = 1\ns2 + 1.3s + 0.4 [0.8 1] Bs + 1.3\n-0.4\n1\ns RB0\n1R\n G(s) = [0.8 1] Bs\n0.4\n-1\ns + 1.3 R\n-1\nB0\n1 R\nG(s) = C(s I - A)-1 B\n[C* /H21752A* C*] = B0\n1\n1\n-1.3 R\n[B /H21752AB] = B0.8\n1\n-0.4\n-0.5 R\n[C* /H21752A* C*] = B0.8\n1\n-0.4\n-0.5 R\n[B /H21752AB] = B0\n1\n1\n-1.3 R\ny = [0 1] Bx1\nx2\nR\nBx#\n1\nx#\n2\nR = B0\n1\n-0.4\n-1.3 RBx1\nx2\nR + B0.8\n1 Ru718\nChapter 9 / Control Systems Analysis in State Space\nIf a pole-zero cancellation occurs in the transfer function, then the controllability and observability\nvary, depending on how the state variables are chosen. Remember that, to be completely state con-\ntrollable and observable, the transfer function must not have any pole-zero cancellations.\nA–9–18. Prove that the system defined by\nwhere\nis completely observable if and only if the composite mn*n matrix P, where\nis of rank n.\nSolution. We shall first obtain the necessary condition. Suppose that\nThen there exists x(0) such that\nor\nHence, we obtain, for a certain x(0),\nNotice that from Equation (9–48) or (9–50), we have\nwhere m(m /H11349n) is the degree of the minimal polynomial for A. Hence, for a certain x(0), we have\nCe\nAt\n \nx(0) = CCa\n0\n(t)\n \nI + a\n1\n(t)\n \nA + a\n2\n(t)\n \nA\n2\n+ p + a\nm - 1\n(t)\n \nA\nm - 1\nD\n \nx(0) = 0\ne\nAt\n= a\n0\n(t)\n \nI + a\n1\n(t)\n \nA + a\n2\n(t)\n \nA\n2\n+ p + a\nm - 1\n(t)\n \nA\nm - 1\nCA\ni\n \nx(0) = 0,\n  \nfor i = 0, 1, 2, p , n - 1\nPx(0) =\nF\nC\nCA\n/H11080\n/H11080\n/H11080\nCA\nn - 1\nV\nx(0) =\nF\nCx(0)\nCAx(0)\n/H11080\n/H11080\n/H11080\nCA\nn - 1\n \nx(0)\nV\n= 0\nPx(0) = 0\nrank P 6 n\nP =\nF\nC\nCA\n/H11080\n/H11080\n/H11080\nCA\nn - 1\nV\n C = m * n matrix\n A = n * n matrix\n y = output vector (m-vector)\n  \n(m /H11349n)\n x = state vector (n-vector)\ny = Cx\nx# = Ax\nOpenmirrors.comExample Problems and Solutions 719\nConsequently, for a certain x(0),\nwhich implies that, for a certain x(0), x(0) cannot be determined from y(t). Therefore, the rank\nof matrix P must be equal to n.\nNext we shall obtain the sufficient condition. Suppose that rank P=n. Since\nby premultiplying both sides of this last equation by eA*t C*, we get\nIf we integrate this last equation from 0 to t, we obtain\n(9–124)\nNotice that the left-hand side of this equation is a known quantity. Define\n(9–125)\nThen, from Equations (9–124) and (9–125), we have\n(9–126)\nwhere\nIt can be established that W(t) is a nonsingular matrix as follows: If @W(t)@were equal to 0, then\nwhich means that\nwhich implies that rank P<n. Therefore, @W(t)@ Z 0, or W(t) is nonsingular. Then, from Equa-\ntion (9–126), we obtain\n(9–127)\nand x(0) can be determined from Equation (9–127).\nHence, we have proved that x(0) can be determined from y(t) if and only if rank P=n. Note\nthat x(0) and y(t) are related by\ny(t) = CeAt x(0) = a0(t) Cx(0) + a1(t) CAx(0) + p + an - 1(t) CAn - 1 x(0)\nx(0) = CW(t)D\n-1\n Q(t)\nCeAt x = 0,  for 0 /H11349t /H11349t1\nx* WAt1B x =\n3\nt1\n0\n7CeAt x72 dt = 0\nW(t) =\n3\nt\n0\neA*t C*CeAt dt\nQ(t) = W(t) x(0)\nQ(t) =\n3\nt\n0\neA*t C* y(t) dt = known quantity\n3\nt\n0\neA*t C* y(t) dt =\n3\nt\n0\neA*t C* CeAt x(0) dt\neA*t C* y(t) = eA*t C* CeAt x(0)\ny(t) = CeAt x(0)\ny(t) = Cx(t) = CeAt x(0) = 0720\nChapter 9 / Control Systems Analysis in State Space\nPROBLEMS\nB–9–1. Consider the following transfer-function system:\nObtain the state-space representation of this system in (a)\ncontrollable canonical form and (b) observable canonical\nform.\nB–9–2. Consider the following system:\nObtain a state-space representation of this system in a di-\nagonal canonical form.\nB–9–3. Consider the system defined by\nwhere\nTransform the system equations into the controllable canon-\nical form.\nB–9–4. Consider the system defined by\nwhere\nObtain the transfer function Y(s)/U(s).\nB–9–5. Consider the following matrix A:\nObtain the eigenvalues l\n1\n, l\n2\n, l\n3\n, and l\n4\nof the matrix A.\nThen obtain a transformation matrix P such that\nP\n-1\n \nAP = diagAl\n1\n \n, l\n2\n \n, l\n3\n \n, l\n4\nB\nA =\nD\n0\n0\n0\n1\n1\n0\n0\n0\n0\n1\n0\n0\n0\n0\n1\n0\nT\nA =\nC\n-1\n1\n0\n0\n-2\n0\n1\n0\n-3\nS\n,\n \n B =\nC\n0\n0\n1\nS\n,\n \n C = [1\n \n1\n \n0]\ny = Cx\nx# = Ax + Bu\nA =\nB\n1\n-4\n2\n-3\nR\n,\n  \nB =\nB\n1\n2\nR\n,\n  \nC = [1\n \n1]\ny = Cx\nx# = Ax + Bu\ny% + 6y$ + 11y# + 6y = 6u\nY(s)\nU(s) = s + 6\ns\n2\n+ 5s + 6\nB–9–6. Consider the following matrix A:\nCompute e\nAt\nby three methods.\nB–9–7. Given the system equation\nfind the solution in terms of the initial conditions x\n1\n(0),\nx\n2\n(0), and x\n3\n(0).\nB–9–8. Find x\n1\n(t) and x\n2\n(t) of the system described by\nwhere the initial conditions are\nB–9–9. Consider the following state equation and output\nequation:\nShow that the state equation can be transformed into the\nfollowing form by use of a proper transformation matrix:\nThen obtain the output y in terms of z\n1\n, z\n2\n, and z\n3\n.\nB–9–10. Obtain a state-space representation of the follow-\ning system with MATLAB:\nY(s)\nU(s) = 10.4s\n2\n+ 47s + 160\ns\n3\n+ 14s\n2\n+ 56s + 160\nC\nz#\n1\nz#\n2\nz#\n3\nS\n=\nC\n0\n1\n0\n0\n0\n1\n-6\n-11\n-6\nSC\nz\n1\nz\n2\nz\n3\nS\n+\nC\n1\n0\n0\nS\nu\n y = [1\n \n0\n \n0]\nC\nx\n1\nx\n2\nx\n3\nS\n \nC\nx#\n1\nx#\n2\nx#\n3\nS\n=\nC\n-6\n-11\n-6\n1\n0\n0\n0\n1\n0\nSC\nx\n1\nx\n2\nx\n3\nS\n+\nC\n2\n6\n2\nS\nu\nB\nx\n1\n(0)\nx\n2\n(0)\nR\n=\nB\n1\n-1\nR\nB\nx#\n1\nx#\n2\nR\n=\nB\n0\n-3\n1\n-2\nRB\nx\n1\nx\n2\nR\nC\nx#\n1\nx#\n2\nx#\n3\nS\n=\nC\n2\n0\n0\n1\n2\n0\n0\n1\n2\nSC\nx\n1\nx\n2\nx\n3\nS\nA =\nB\n0\n-2\n1\n-3\nR\nOpenmirrors.comProblems 721\nB–9–11. Obtain a transfer-function representation of the\nfollowing system with MATLAB:\nB–9–12. Obtain a transfer-function representation of the\nfollowing system with MATLAB:\nB–9–13. Consider the system defined by\nIs the system completely state controllable and completely\nobservable?\nB–9–14. Consider the system given by\nIs the system completely state controllable and completely\nobservable? Is the system completely output controllable?\n By1\ny2\nR= B1\n0\n0\n1\n0\n0 RC\nx1\nx2\nx3\nS\n C\nx#\n1\nx#\n2\nx#\n3\nS= C\n2\n0\n0\n0\n2\n3\n0\n0\n1\nSC\nx1\nx2\nx3\nS + C\n0\n1\n0\n1\n0\n1\nSBu1\nu2\nR\n y = [1 1 0] C\nx1\nx2\nx3\nS\nC\nx#\n1\nx#\n2\nx#\n3\nS= C\n-1\n0\n1\n-2\n-1\n0\n-2\n1\n-1\nSC\nx1\nx2\nx3\nS+ C\n2\n0\n1\nSu\n y = [1 0 0] C\nx1\nx2\nx3\nS\n C\nx#\n1\nx#\n2\nx#\n3\nS= C\n2\n0\n0\n1\n2\n1\n0\n0\n3\nSC\nx1\nx2\nx3\nS + C\n0\n1\n0\n1\n0\n1\nSBu1\nu2\nR\n y = [0 0 1] C\nx1\nx2\nx3\nS\n C\nx#\n1\nx#\n2\nx#\n3\nS= C\n0\n-1\n1\n1\n-1\n0\n0\n0\n0\nSC\nx1\nx2\nx3\nS + C\n0\n1\n0\nSu\nB–9–15. Is the following system completely state control-\nlable and completely observable?\nB–9–16. Consider the system defined by\nExcept for an obvious choice of c1=c2=c3=0, find an\nexample of a set of c1 , c 2 , c 3 that will make the system\nunobservable.\nB–9–17. Consider the system\nThe output is given by\n(a) Show that the system is not completely observable.\n(b) Show that the system is completely observable if the\noutput is given by\nBy1\ny2\nR = B1\n1\n1\n2\n1\n3 RC\nx1\nx2\nx3\nS\ny = [1 1 1] C\nx1\nx2\nx3\nS\nC\nx#\n1\nx#\n2\nx#\n3\nS = C\n2\n0\n0\n0\n2\n3\n0\n0\n1\nSC\nx1\nx2\nx3\nS\n y = Cc1 c2 c3 DC\nx1\nx2\nx3\nS\nC\nx#\n1\nx#\n2\nx#\n3\nS = C\n0\n0\n-6\n1\n0\n-11\n0\n1\n-6\nSC\nx1\nx2\nx3\nS + C\n0\n0\n1\nSu\n y = [20 9 1] C\nx1\nx2\nx3\nS\nC\nx#\n1\nx#\n2\nx#\n3\nS = C\n0\n0\n-6\n1\n0\n-11\n0\n1\n-6\nSC\nx1\nx2\nx3\nS + C\n0\n0\n1\nSu10\n722\nControl Systems Design\nin State Space\n10–1 INTRODUCTION\nThis chapter discusses state-space design methods based on the pole-placement method,\nobservers, the quadratic optimal regulator systems, and introductory aspects of robust\ncontrol systems.The pole-placement method is somewhat similar to the root-locus method\nin that we place closed-loop poles at desired locations.The basic difference is that in the\nroot-locus design we place only the dominant closed-loop poles at the desired locations,\nwhile in the pole-placement design we place all closed-loop poles at desired locations.\nWe begin by presenting the basic materials on pole placement in regulator systems.\nWe then discuss the design of state observers, followed by the design of regulator sys-\ntems and control systems using the pole-placement-with-state-observer approach.Then,\nwe discuss the quadratic optimal regulator systems. Finally, we present an introduction\nto robust control systems.\nOutline of the Chapter. Section 10–1 has presented introductory material. Section\n10–2 discusses the pole-placement approach to the design of control systems. We begin\nwith the derivation of the necessary and sufficient conditions for arbitrary pole placement.\nThen we derive equations for the state feedback gain matrix K for pole placement. Section\n10–3 presents the solution of the pole-placement problem with MATLAB. Section 10–4\ndiscusses the design of servo systems using the pole-placement approach. Section 10–5\npresents state observers.We discuss both full-order and minimum-order state observers.\nAlso, transfer functions of observer controllers are derived. Section 10–6 presents the\ndesign of regulator systems with observers. Section 10–7 treats the design of control\nOpenmirrors.comSection 10–2 / Pole Placement 723\nsystems with observers. Section 10–8 discusses quadratic optimal regulator systems. Note\nthat the state feedback gain matrix K can be obtained by both the pole-placement method\nand the quadratic optimal control method. Finally, Section 10–9 presents robust control\nsystems. The discussions here are limited to introductory subjects only.\n10–2 POLE PLACEMENT\nIn this section we shall present a design method commonly called the pole-placement or\npole-assignment technique. We assume that all state variables are measurable and are\navailable for feedback. It will be shown that if the system considered is completely state\ncontrollable, then poles of the closed-loop system may be placed at any desired locations\nby means of state feedback through an appropriate state feedback gain matrix.\nThe present design technique begins with a determination of the desired closed-loop\npoles based on the transient-response and/or frequency-response requirements, such as\nspeed, damping ratio, or bandwidth, as well as steady-state requirements.\nLet us assume that we decide that the desired closed-loop poles are to be at s=m1 ,\ns=m2 , p , s=mn . By choosing an appropriate gain matrix for state feedback, it is pos-\nsible to force the system to have closed-loop poles at the desired locations, provided\nthat the original system is completely state controllable.\nIn this chapter we limit our discussions to single-input, single-output systems. That\nis, we assume the control signal u(t) and output signal y(t) to be scalars. In the deriva-\ntion in this section we assume that the reference input r(t) is zero. [In Section 10–7 we\ndiscuss the case where the reference input r(t) is nonzero.]\nIn what follows we shall prove that a necessary and sufficient condition that the\nclosed-loop poles can be placed at any arbitrary locations in the s plane is that the sys-\ntem be completely state controllable. Then we shall discuss methods for determining\nthe required state feedback gain matrix.\nIt is noted that when the control signal is a vector quantity, the mathematical aspects\nof the pole-placement scheme become complicated. We shall not discuss such a case in\nthis book. (When the control signal is a vector quantity, the state feedback gain matrix\nis not unique. It is possible to choose freely more than n parameters; that is, in addition\nto being able to place n closed-loop poles properly, we have the freedom to satisfy some\nor all of the other requirements, if any, of the closed-loop system.)\nDesign by Pole Placement. In the conventional approach to the design of a single-\ninput, single-output control system, we design a controller (compensator) such that the\ndominant closed-loop poles have a desired damping ratio z and a desired undamped\nnatural frequency vn . In this approach, the order of the system may be raised by 1 or 2\nunless pole–zero cancellation takes place. Note that in this approach we assume the ef-\nfects on the responses of nondominant closed-loop poles to be negligible.\nDifferent from specifying only dominant closed-loop poles (the conventional design\napproach), the present pole-placement approach specifies all closed-loop poles. (There is\na cost associated with placing all closed-loop poles, however, because placing all closed-\nloop poles requires successful measurements of all state variables or else requires the in-\nclusion of a state observer in the system.) There is also a requirement on the part of the\nsystem for the closed-loop poles to be placed at arbitrarily chosen locations.The requirement\nis that the system be completely state controllable. We shall prove this fact in this section.724\nChapter 10 / Control Systems Design in State Space\nConsider a control system\n(10–1)\nwhere\nWe shall choose the control signal to be\n(10–2)\nThis means that the control signal u is determined by an instantaneous state. Such a\nscheme is called state feedback. The 1*n matrix K is called the state feedback gain\nmatrix. We assume that all state variables are available for feedback. In the following\nanalysis we assume that u is unconstrained.A block diagram for this system is shown in\nFigure 10–1.\nThis closed-loop system has no input. Its objective is to maintain the zero output.\nBecause of the disturbances that may be present, the output will deviate from zero.The\nnonzero output will be returned to the zero reference input because of the state feed-\nback scheme of the system. Such a system where the reference input is always zero is\ncalled a regulator system. (Note that if the reference input to the system is always a\nnonzero constant, the system is also called a regulator system.)\nSubstituting Equation (10–2) into Equation (10–1) gives\nThe solution of this equation is given by\n(10–3)\nwhere x(0) is the initial state caused by external disturbances.The stability and transient-\nresponse characteristics are determined by the eigenvalues of matrix A-BK. If matrix\nx(t) = e\n(A - BK)t\nx(0)\nx# (t) = (A - BK)\n \nx(t)\nu =- Kx\n D = constant (scalar)\n C = 1 * n constant matrix\n B = n * 1 constant matrix\n A = n * n constant matrix\n u = control signal (scalar)\ny = output signal (scalar)\n x = state vector (n-vector)\ny = Cx + Du\nx# = Ax + Bu\nu\nA\nB\nC\n–K\n/H20848\n++\n++\nD\nxx.\nFigure 10–1\nClosed-loop control\nsystem with\nu=–Kx.\nOpenmirrors.comSection 10–2 / Pole Placement 725\nK is chosen properly, the matrix A-BK can be made an asymptotically stable matrix,\nand for all x(0) Z 0, it is possible to make x(t) approach 0 as t approaches infinity. The\neigenvalues of matrix A-BK are called the regulator poles. If these regulator poles are\nplaced in the left-half s plane, then x(t) approaches 0 as t approaches infinity.The prob-\nlem of placing the regulator poles (closed-loop poles) at the desired location is called a\npole-placement problem.\nIn what follows, we shall prove that arbitrary pole placement for a given system is\npossible if and only if the system is completely state controllable.\nNecessary and Sufficient Condition for Arbitrary Pole PlacementWe shall now\nprove that a necessary and sufficient condition for arbitrary pole placement is that the\nsystem be completely state controllable.We shall first derive the necessary condition.We\nbegin by proving that if the system is not completely state controllable, then there are\neigenvalues of matrix A-BK that cannot be controlled by state feedback.\nSuppose that the system of Equation (10–1) is not completely state controllable.\nThen the rank of the controllability matrix is less than n, or\nThis means that there are q linearly independent column vectors in the controllability\nmatrix. Let us define such q linearly independent column vectors as f1 , f2 , p , fq . Also,\nlet us choose n-q additional n-vectors vq+1 , vq+2 , p , vn such that\nis of rank n. Then it can be shown that\n(See Problem A–10–1 for the derivation of these equations.) Now define\nThen we have\nwhere Iq is a q-dimensional identity matrix and In-q is an (n-q)-dimensional identity\nmatrix.\n= @s Iq - A11 + B11  k1 @/H11554@s In - q - A22 @ = 0\n= 2s Iq - A11 + B11  k1\n0\n-A12 + B11  k2\ns In - q - A22\n2\n= 2s I - cA11\n0  A12\nA22\nd+ cB11\n0 dCk1 /H21752k2 D2\n= @s I - Aˆ + Bˆ Kˆ @\n= @s I - P-1 AP + P-1 BKP@\n∑s I - A + BK∑ = @P-1(s I - A + BK)P@\nKˆ = KP = Ck1 /H21752k2 D\nAˆ = P-1 AP = cA11\n0  A12\nA22\nd,  Bˆ = P-1B = cB11\n0 d\nP = Cf1 /H21752f2 /H21752p /H21752fq /H21752vq + 1 /H21752vq + 2 /H21752p /H21752vn D\nrankCB /H21752 AB /H21752 p /H21752 An - 1 BD = q 6 n726\nChapter 10 / Control Systems Design in State Space\nNotice that the eigenvalues of A\n22\ndo not depend on K. Thus, if the system is not\ncompletely state controllable, then there are eigenvalues of matrix A that cannot be\narbitrarily placed.Therefore, to place the eigenvalues of matrix A-BK arbitrarily, the\nsystem must be completely state controllable (necessary condition).\nNext we shall prove a sufficient condition: that is, if the system is completely state\ncontrollable, then all eigenvalues of matrix A can be arbitrarily placed.\nIn proving a sufficient condition, it is convenient to transform the state equation\ngiven by Equation (10–1) into the controllable canonical form.\nDefine a transformation matrix T by\n(10–4)\nwhere M is the controllability matrix\n(10–5)\nand\n(10–6)\nwhere the a\ni\n’s are coefficients of the characteristic polynomial\nDefine a new state vector by\nIf the rank of the controllability matrix M is n (meaning that the system is completely\nstate controllable), then the inverse of matrix T exists, and Equation (10–1) can be\nmodified to\n(10–7)\nwhere\n(10–8) T\n-1\n \nAT =\nG\n0\n0\n/H11080\n/H11080\n/H11080\n0\n-a\nn\n1\n0\n/H11080\n/H11080\n/H11080\n0\n-a\nn - 1\n0\n1\n/H11080\n/H11080\n/H11080\n0\n-a\nn - 2\np\np\np\np\n0\n0\n/H11080\n/H11080\n/H11080\n1\n-a\n1\nW\nx\nˆ\n#\n= T\n-1\n \nATx\nˆ\n+ T\n-1\n \nBu\nx = Tx\nˆ\nx\nˆ\n∑s\n \nI - A∑ = s\nn\n+ a\n1\n \ns\nn - 1\n+ p + a\nn - 1\n \ns + a\nn\nW =\nG\na\nn - 1\na\nn - 2\n/H11080\n/H11080\n/H11080\na\n1\n1\na\nn - 2\na\nn - 3\n/H11080\n/H11080\n/H11080\n1\n0\np\np\np\np\na\n1\n1\n/H11080\n/H11080\n/H11080\n0\n0\n1\n0\n/H11080\n/H11080\n/H11080\n0\n0\nW\nM = CB /H21752 AB /H21752 p /H21752 A\nn - 1\n \nBD\nT = MW\nOpenmirrors.comSection 10–2 / Pole Placement 727\n(10–9)\n[See Problems A–10–2 and A–10–3 for the derivation of Equations (10–8) and (10–9).]\nEquation (10–7) is in the controllable canonical form.Thus, given a state equation, Equa-\ntion (10–1), it can be transformed into the controllable canonical form if the system is\ncompletely state controllable and if we transform the state vector x into state vector \nby use of the transformation matrix T given by Equation (10–4).\nLet us choose a set of the desired eigenvalues as m1 , m2 , p , mn . Then the desired\ncharacteristic equation becomes\n(10–10)\nLet us write\n(10–11)\nWhen is used to control the system given by Equation (10–7), the system\nequation becomes\nThe characteristic equation is\nThis characteristic equation is the same as the characteristic equation for the system,\ndefined by Equation (10–1), when is used as the control signal. This can be\nseen as follows: Since\nthe characteristic equation for this system is\n∑s I - A + BK∑ = @T-1(s I - A + BK) T@ = @s I - T-1 AT + T-1 BKT@ = 0\nx# = Ax + Bu = (A - BK) x\nu =- Kx\n@s I - T-1 AT + T-1 BKT@ = 0\nxˆ#\n= T-1 ATxˆ - T-1 BKTxˆ\nu =- KTxˆ\nKT = Cdn dn - 1 p d1 D\nAs - m1BAs - m2B p As - mnB = sn + a1 sn - 1 + p + an - 1 s + an = 0\nxˆ\nT-1 B = G\n0\n0\n/H11080\n/H11080\n/H11080\n0\n1\nW728\nChapter 10 / Control Systems Design in State Space\nNow let us simplify the characteristic equation of the system in the controllable canonical\nform. Referring to Equations (10–8), (10–9), and (10–11), we have\n(10–12)\nThis is the characteristic equation for the system with state feedback.Therefore, it must\nbe equal to Equation (10–10), the desired characteristic equation. By equating the\ncoefficients of like powers of s, we get\nSolving the preceding equations for the d\ni\n’s and substituting them into Equation (10–11),\nwe obtain\n(10–13)\nThus, if the system is completely state controllable, all eigenvalues can be arbitrarily\nplaced by choosing matrix K according to Equation (10–13) (sufficient condition).\nWe have thus proved that a necessary and sufficient condition for arbitrary pole\nplacement is that the system be completely state controllable.\nIt is noted that if the system is not completely state controllable, but is stabilizable,\nthen it is possible to make the entire system stable by placing the closed-loop poles at\ndesired locations for q controllable modes. The remaining n-q uncontrollable modes\nare stable. So the entire system can be made stable.\n= Ca\nn\n- a\nn\n/H21752a\nn - 1\n- a\nn - 1\n/H21752p /H21752a\n2\n- a\n2\n/H21752a\n1\n- a\n1\nD\n \nT\n-1\nK = Cd\nn\n d\nn - 1\np d\n1\nD\n \nT\n-1\n a\nn\n+ d\nn\n= a\nn\n /H11080\n /H11080\n /H11080\n a\n2\n+ d\n2\n= a\n2\n a\n1\n+ d\n1\n= a\n1\n = s\nn\n+ Aa\n1\n+ d\n1\nBs\nn - 1\n+ p + Aa\nn - 1\n+ d\nn - 1\nBs + Aa\nn\n+ d\nn\nB= 0\n =\n6\ns\n0\n/H11080\n/H11080\n/H11080\na\nn\n+ d\nn\n-1\ns\n/H11080\n/H11080\n/H11080\na\nn - 1\n+ d\nn - 1\np\np\np\n0\n0\n/H11080\n/H11080\n/H11080\ns + a\n1\n+ d\n1\n6\n=\n6\ns\n \nI -\nF\n0\n/H11080\n/H11080\n/H11080\n0\n-a\nn\n1\n/H11080\n/H11080\n/H11080\n0\n-a\nn - 1\np\np\np\n0\n/H11080\n/H11080\n/H11080\n1\n-a\n1\nV\n+\nF\n0\n/H11080\n/H11080\n/H11080\n0\n1\nV\nCd\nn\n d\nn - 1\np d\n1\nD\n6\n@s\n \nI - T\n-1\n \nAT + T\n-1\n \nBKT@\nOpenmirrors.comSection 10–2 / Pole Placement 729\nDetermination of Matrix K Using Transformation Matrix T. Suppose that the\nsystem is defined by\nand the control signal is given by\nThe feedback gain matrix K that forces the eigenvalues of A-BK to be m1 , m2 , p , mn\n(desired values) can be determined by the following steps (if mi is a complex eigenvalue,\nthen its conjugate must also be an eigenvalue of A-BK):\nStep 1: Check the controllability condition for the system. If the system is completely\nstate controllable, then use the following steps:\nStep 2: From the characteristic polynomial for matrix A, that is,\ndetermine the values of a1 ,a 2 , p ,a n .\nStep 3: Determine the transformation matrix T that transforms the system state equa-\ntion into the controllable canonical form. (If the given system equation is already in the\ncontrollable canonical form, then T=I.) It is not necessary to write the state equation\nin the controllable canonical form. All we need here is to find the matrix T.T h e\ntransformation matrix T is given by Equation (10–4), or\nwhere M is given by Equation (10–5) and W is given by Equation (10–6).\nStep 4: Using the desired eigenvalues (desired closed-loop poles), write the desired\ncharacteristic polynomial:\nand determine the values of a1 , a2 , p , an .\nStep 5: The required state feedback gain matrix K can be determined from Equation\n(10–13), rewritten thus:\nDetermination of Matrix K Using Direct Substitution Method. If the system\nis of low order ( n /H113493), direct substitution of matrix K into the desired characteristic\npolynomial may be simpler. For example, if n=3, then write the state feedback gain\nmatrix K as\nSubstitute this K matrix into the desired characteristic polynomial and\nequate it to As-m1 BAs-m2 BAs-m3 B,o r\n∑s I - A + BK∑ = As - m1BAs - m2BAs - m3B\n∑s I - A + BK∑\nK = Ck1 k2 k3 D\nK = Can - an /H21752 an - 1 - an - 1 /H21752 p /H21752 a2 - a2 /H21752 a1 - a1 D T-1\nAs - m1BAs - m2Bp As - mnB = sn + a1 sn - 1 + p + an - 1 s + an\nT = MW\n∑s I - A∑ = sn + a1 sn - 1 + p + an - 1 s + an\nu =- Kx\nx# = Ax + Bu730\nChapter 10 / Control Systems Design in State Space\nSince both sides of this characteristic equation are polynomials in s, by equating the\ncoefficients of the like powers of s on both sides, it is possible to determine the values\nof k\n1\n, k\n2\n, and k\n3\n. This approach is convenient if n=2 or 3. (For n=4, 5, 6 , p , this\napproach may become very tedious.)\nNote that if the system is not completely controllable, matrix K cannot be determined.\n(No solution exists.)\nDetermination of Matrix K Using Ackermann’s Formula.There is a well-known\nformula, known as Ackermann’s formula, for the determination of the state feedback\ngain matrix K. We shall present this formula in what follows.\nConsider the system\nwhere we use the state feedback control u=–Kx. We assume that the system is\ncompletely state controllable. We also assume that the desired closed-loop poles are at\ns=m\n1\n, s=m\n2\n, p , s=m\nn\n.\nUse of the state feedback control\nmodifies the system equation to\n(10–14)\nLet us define\nThe desired characteristic equation is\nSince the Cayley–Hamilton theorem states that satisfies its own characteristic\nequation, we have\n(10–15)\nWe shall utilize Equation (10–15) to derive Ackermann’s formula. To simplify the\nderivation, we consider the case where n=3. (For any other positive integer n, the\nfollowing derivation can be easily extended.)\nConsider the following identities:\n A/H33522\n3\n= (A - BK)\n3\n= A\n3\n- A\n2\n \nBK - ABKA/H33522- BKA/H33522\n2\n A/H33522\n2\n= (A - BK)\n2\n= A\n2\n- ABK - BKA/H33522\n A/H33522= A - BK\n I = I\nfAA/H33522B= A/H33522\nn\n+ a\n1\n  \nA/H33522\nn - 1\n+ p + a\nn - 1\n  \nA/H33522+ a\nn\n  \nI = 0\nA/H33522\n = s\nn\n+ a\n1\n \ns\nn - 1\n+ p + a\nn - 1\n \ns + a\nn\n= 0\n ∑s\n \nI - A + BK∑ = @s\n \nI - A/H33522@ = As - m\n1\nBAs - m\n2\nB p As - m\nn\nB\nA/H33522= A - BK\nx# = (A - BK)\n \nx\nu =- Kx\nx# = Ax + Bu\nOpenmirrors.comSection 10–2 / Pole Placement 731\nMultiplying the preceding equations in order by a3 , a2 , a1 , and a0 (where a0=1),\nrespectively, and adding the results, we obtain\n(10–16)\nReferring to Equation (10–15), we have\nAlso, we have\nSubstituting the last two equations into Equation (10–16), we have\nSince we obtain\n(10–17)\nSince the system is completely state controllable, the inverse of the controllability matrix\nexists. Premultiplying both sides of Equation (10–17) by the inverse of the controllability\nmatrix, we obtain\nPremultiplying both sides of this last equation by [0 0 1], we obtain\nwhich can be rewritten as\nThis last equation gives the required state feedback gain matrix K.\nFor an arbitrary positive integer n, we have\n(10–18)K = [0 0 p 0 1]CB /H21752 AB /H21752 p /H21752 An - 1 BD\n-1\nf(A)\nK = [0 0 1]CB /H21752 AB /H21752 A2 BD\n-1\nf(A)\n[0 0 1]CB /H21752AB /H21752A2 BD\n-1\nf(A) = [0 0 1] C\na2  K + a1  KA/H33522+ KA/H335222\na1  K + KA/H33522\nK\nS= K\nCB /H21752AB /H21752A2 BD\n-1\nf(A) = C\na2  K + a1  KA/H33522+ KA/H335222\na1  K + KA/H33522\nK\nS\nCB /H21752 AB /H21752 A2 BD\n= CB /H21752AB /H21752A2 BDC\na2  K + a1  KA/H33522+ KA/H335222\na1  K + KA/H33522\nK\nS\nf(A) = BAa2  K + a1  KA/H33522+ KA/H335222B + ABAa1  K + KA/H33522B + A2 BK\nfAA/H33522B = 0,\nfAA/H33522B = f(A) - a2  BK - a1  BKA/H33522- BKA/H335222 - a1  ABK - ABKA/H33522- A2 BK\na3  I + a2  A + a1  A2 + A3 = f(A) Z 0\na3  I + a2  A/H33522+ a1  A/H335222 + A/H335223 = fAA/H33522B = 0\n - ABKA/H33522- BKA/H335222\n = a3  I + a2  A + a1  A2 + A3 - a2  BK - a1  ABK - a1  BKA/H33522- A2 BK\n - ABKA/H33522- BKA/H335222\n = a3  I + a2(A - BK) + a1AA2 - ABK - BKA/H33522B + A3 - A2BK\na3  I + a2  A/H33522+ a1  A/H335222 + A/H335223732\nChapter 10 / Control Systems Design in State Space\nxu\nA\nB\n–K\n/H20848\n++\nFigure 10–2\nRegulator system.\nEquation (10–18) is known as Ackermann’s formula for the determination of the state\nfeedback gain matrix K.\nRegulator Systems and Control Systems. Systems that include controllers can\nbe divided into two categories: regulator systems (where the reference input is constant,\nincluding zero) and control systems (where the reference input is time varying). In what\nfollows we shall consider regulator systems. Control systems will be treated in Section\n10–7.\nChoosing the Locations of Desired Closed-Loop Poles. The first step in the\npole-placement design approach is to choose the locations of the desired closed-loop\npoles. The most frequently used approach is to choose such poles based on experience\nin the root-locus design, placing a dominant pair of closed-loop poles and choosing other\npoles so that they are far to the left of the dominant closed-loop poles.\nNote that if we place the dominant closed-loop poles far from the jv axis, so that the\nsystem response becomes very fast, the signals in the system become very large, with\nthe result that the system may become nonlinear. This should be avoided.\nAnother approach is based on the quadratic optimal control approach.This approach\nwill determine the desired closed-loop poles such that it balances between the acceptable\nresponse and the amount of control energy required. (See Section 10–8.) Note that\nrequiring a high-speed response implies requiring large amounts of control energy.Also,\nin general, increasing the speed of response requires a larger, heavier actuator, which will\ncost more.\nEXAMPLE 10–1\nConsider the regulator system shown in Figure 10–2. The plant is given by\nwhere\nThe system uses the state feedback control u=–Kx. Let us choose the desired closed-loop poles\nat\n(We make such a choice because we know from experience that such a set of closed-loop poles\nwill result in a reasonable or acceptable transient response.) Determine the state feedback gain\nmatrix K.\ns =- 2 + j4,\n  \ns =- 2 - j4,\n  \ns =- 10\nA =\nC\n0\n0\n-1\n1\n0\n-5\n0\n1\n-6\nS\n,\n  \nB =\nC\n0\n0\n1\nS\nx# = Ax + Bu\nOpenmirrors.comSection 10–2 / Pole Placement 733\nFirst, we need to check the controllability matrix of the system. Since the controllability matrix\nM is given by\nwe find that |M|=–1, and therefore, rank M=3. Thus, the system is completely state control-\nlable and arbitrary pole placement is possible.\nNext, we shall solve this problem.We shall demonstrate each of the three methods presented\nin this chapter.\nMethod 1: The first method is to use Equation (10–13).The characteristic equation for the system is\nHence,\nThe desired characteristic equation is\nHence,\nReferring to Equation (10–13), we have\nwhere T=I for this problem because the given state equation is in the controllable canonical form.\nThen we have\nMethod 2: By defining the desired state feedback gain matrix K as\nand equating with the desired characteristic equation, we obtain\n= s3 + 14s2 + 60s + 200\n= s3 + A6 + k3Bs2 + A5 + k2Bs + 1 + k1\n= 3\ns\n0\n1 + k1\n-1\ns\n5 + k2\n0\n-1\ns + 6 + k3\n3\n∑s I - A + BK∑ = 3C\ns\n0\n0\n0\ns\n0\n0\n0\ns\nS - C\n0\n0\n-1\n1\n0\n-5\n0\n1\n-6\nS + C\n0\n0\n1\nSCk1 k2 k3 D3\n∑s I - A + BK∑\nK = Ck1 k2 k3 D\n = [199 55 8]\n K = [200 - 1 /H2175260 - 5 /H2175214 - 6]\nK = Ca3 - a3 /H21752 a2 - a2 /H21752 a1 - a1 D T-1\na1 = 14,  a2 = 60,  a3 = 200\n = s3 + a1 s2 + a2 s + a3 = 0\n (s + 2 - j4)(s + 2 + j4)(s + 10) = s3 + 14s2 + 60s + 200\na1 = 6,  a2 = 5,  a3 = 1\n= s3 + a1 s2 + a2 s + a3 = 0\n= s3 + 6s2 + 5s + 1\n∑s I - A∑ = 3\ns\n0\n1\n-1\ns\n5\n0\n-1\ns + 6\n3\nM = CB /H21752AB /H21752A2 BD = C\n0\n0\n1\n0\n1\n-6\n1\n-6\n31\nS734\nChapter 10 / Control Systems Design in State Space\nThus,\nfrom which we obtain\nor\nMethod 3: The third method is to use Ackermann’s formula. Referring to Equation (10–18), we\nhave\nSince\nand\nwe obtain\nAs a matter of course, the feedback gain matrix K obtained by the three methods are the same.\nWith this state feedback, the closed-loop poles are placed at s=–2 ; j4 and s=–10, as desired.\nIt is noted that if the order n of the system were 4 or higher, methods 1 and 3 are recom-\nmended, since all matrix computations can be carried out by a computer. If method 2 is used,\nhand computations become necessary because a computer may not handle the characteristic\nequation with unknown parameters k\n1\n,k\n2\n, p , k\nn\n.\n = [199\n \n55\n \n8]\n = [0\n \n0\n \n1]\nC\n5\n6\n1\n6\n1\n0\n1\n0\n0\nSC\n199\n-8\n-7\n55\n159\n-43\n8\n7\n117\nS\n K = [0\n \n0\n \n1]\nC\n0\n0\n1\n0\n1\n-6\n1\n-6\n31\nS\n-1\nC\n199\n-8\n-7\n55\n159\n-43\n8\n7\n117\nS\nCB /H21752AB /H21752A\n2\n \nBD =\nC\n0\n0\n1\n0\n1\n-6\n1\n-6\n31\nS\n =\nC\n199\n-8\n-7\n55\n159\n-43\n8\n7\n117\nS\n + 60\nC\n0\n0\n-1\n1\n0\n-5\n0\n1\n-6\nS\n+ 200\nC\n1\n0\n0\n0\n1\n0\n0\n0\n1\nS\n =\nC\n0\n0\n-1\n1\n0\n-5\n0\n1\n-6\nS\n3\n+ 14\nC\n0\n0\n-1\n1\n0\n-5\n0\n1\n-6\nS\n2\n f(A) = A\n3\n+ 14\n \nA\n2\n+ 60\n \nA + 200\n \nI\nK = [0\n \n0\n \n1]CB /H21752 AB /H21752 A\n2\n \nBD\n-1\nf(A)\nK = [199\n \n55\n \n8]\nk\n1\n= 199,\n  \nk\n2\n= 55,\n  \nk\n3\n= 8\n6 + k\n3\n= 14,\n  \n5 + k\n2\n= 60,\n  \n1 + k\n1\n= 200\nOpenmirrors.comSection 10–3 / Solving Pole-placement Problems with MATLAB 735\nComments. It is important to note that matrix K is not unique for a given system,\nbut depends on the desired closed-loop pole locations (which determine the speed and\ndamping of the response) selected. Note that the selection of the desired closed-loop\npoles or the desired characteristic equation is a compromise between the rapidity of the\nresponse of the error vector and the sensitivity to disturbances and measurement nois-\nes. That is, if we increase the speed of error response, then the adverse effects of distur-\nbances and measurement noises generally increase. If the system is of second order,\nthen the system dynamics (response characteristics) can be precisely correlated to the\nlocation of the desired closed-loop poles and the zero(s) of the plant. For higher-order\nsystems, the location of the closed-loop poles and the system dynamics (response char-\nacteristics) are not easily correlated. Hence, in determining the state feedback gain ma-\ntrixK for a given system, it is desirable to examine by computer simulations the response\ncharacteristics of the system for several different matrices K (based on several different\ndesired characteristic equations) and to choose the one that gives the best overall system\nperformance.\n10–3 SOLVING POLE-PLACEMENT PROBLEMS WITH MATLAB\nPole-placement problems can be solved easily with MATLAB. MATLAB has two\ncommands—acker and place—for the computation of feedback-gain matrix K. The\ncommand acker is based on Ackermann’s formula.This command applies to single-input\nsystems only.The desired closed-loop poles can include multiple poles (poles located at\nthe same place).\nIf the system involves multiple inputs, for a specified set of closed-loop poles the\nstate-feedback gain matrix K is not unique and we have an additional freedom (or free-\ndoms) to choose K. There are many approaches to constructively utilize this additional\nfreedom (or freedoms) to determine K. One common use is to maximize the stability\nmargin.The pole placement based on this approach is called the robust pole placement.\nThe MATLAB command for the robust pole placement is place.\nAlthough the command place can be used for both single-input and multiple-input\nsystems, this command requires that the multiplicity of poles in the desired closed-loop\npoles be no greater than the rank of B. That is, if matrix B is an n*1 matrix, the\ncommand place requires that there be no multiple poles in the set of desired closed-\nloop poles.\nFor single-input systems, the commands acker and place yield the same K. (But for\nmultiple-input systems, one must use the command place instead of acker.)\nIt is noted that when the single-input system is barely controllable, some computa-\ntional problem may occur if the command acker is used. In such a case the use of the\nplace command is preferred, provided that no multiple poles are involved in the de-\nsired set of closed-loop poles.\nTo use the command acker or place, we first enter the following matrices in the\nprogram:\nA matrix, B matrix, J matrix\nwhere J matrix is the matrix consisting of the desired closed-loop poles such that\nJ = Cm1 m2 p  mn D736\nChapter 10 / Control Systems Design in State Space\nThen we enter\nK = acker(A,B,J)\nor\nK = place(A,B,J)\nIt is noted that the command eig (A-B*K) may be used to verify that K thus obtained\ngives the desired eigenvalues.\nEXAMPLE 10–2\nConsider the same system as treated in Example 10–1. The system equation is\nwhere\nBy using state feedback control it is desired to have the closed-loop poles at s=m\ni\n(i=1, 2, 3), where\nDetermine the state feedback-gain matrix K with MATLAB.\nMATLAB programs that generate matrix K are shown in MATLAB Programs 10–1 and 10–2.\nMATLAB Program 10–1 uses command acker and MATLAB Program 10–2 uses command place.\nm\n1\n=- 2 + j4,\n  \nm\n2\n=- 2 - j4,\n  \nm\n3\n=- 10\nu =- Kx,\nA =\nC\n0\n0\n-1\n1\n0\n-5\n0\n1\n-6\nS\n,\n  \nB =\nC\n0\n0\n1\nS\nx# = Ax + Bu\nMATLAB Program 10–1\nA = [0  1  0;0  0  1;-1  -5  -6];\nB = [0;0;1];\nJ = [-2+j*4  -2-j*4  -10];\nK = acker(A,B,J)\nK =\n199    55    8\nMATLAB Program 10–2\nA = [0  1  0;0  0  1;-1  -5  -6];\nB = [0;0;1];\nJ = [-2+j*4  -2-j*4  -10];\nK = place(A,B,J)\nplace: ndigits = 15\nK =\n199.0000    55.0000    8.0000\nOpenmirrors.comSection 10–3 / Solving Pole-placement Problems with MATLAB 737\nEXAMPLE 10–3 Consider the same system as discussed in Example 10–1. It is desired that this regulator system\nhave closed-loop poles at\nThe necessary state feedback gain matrix K was obtained in Example 10–1 as follows:\nUsing MATLAB, obtain the response of the system to the following initial condition:\nResponse to Initial Condition: To obtain the response to the given initial condition x(0), we\nsubstitute u=–Kx into the plant equation to get\nTo plot the response curves (x1 versus t, x2 versus t, and x3 versus t), we may use the command\ninitial. We first define the state-space equations for the system as follows:\nwhere we included u (a three-dimensional input vector). This u vector is considered 0 in the\ncomputation of the response to the initial condition. Then we define\nsys = ss(A - BK, eye(3), eye(3), eye(3))\nand use the initial command as follows:\nx = initial(sys, [1;0;0],t)\nwhere t is the time duration we want to use, such as\nt = 0:0.01:4;\nThen obtain x1, x2, and x3 as follows:\nx1 = [1  0  0]*x';\nx2 = [0  1  0]*x';\nx3 = [0  0  1]*x';\nand use the plot command. This program is shown in MATLAB Program 10–3. The resulting\nresponse curves are shown in Figure 10–3.\ny = Ix + Iu\nx# = (A - BK) x + Iu\nx# = (A - BK) x,  x(0) = C\n1\n0\n0\nS\nx(0) = C\n1\n0\n0\nS\nK = [199 55 8]\ns =- 2 + j4,  s =- 2 - j4,  s =- 10738\nChapter 10 / Control Systems Design in State Space\nResponse to Initial Condition\nstate variable x\n1\n−0.5 0 0.5 1 1.5 2 2.5 3 3.5 4\n0 0.5 1 1.5 2 2.5 3 3.5 4\n0 0.5 1 1.5 2 2.5 3 3.5 4\n0\n0.5\n1\nstate variable x\n2\n−3\n−1\n−2\n0\n1\nstate variable x\n3\n−10\n0\n−5\n5\n10\nt (sec)\nFigure 10–3\nResponse to initial\ncondition.\nMATLAB Program 10–3\n% Response to initial condition:\nA = [0  1  0;0  0  1;-1  -5  -6];\nB = [0;0;1];\nK = [199  55  8];\nsys = ss(A-B*K, eye(3), eye(3), eye(3));\nt = 0:0.01:4;\nx = initial(sys,[1;0;0],t);\nx1 = [1  0  0]*x';\nx2 = [0  1  0]*x';\nx3 = [0  0  1]*x';\nsubplot(3,1,1); plot(t,x1), grid\ntitle('Response to Initial Condition')\nylabel('state variable x1')\nsubplot(3,1,2); plot(t,x2),grid\nylabel('state variable x2')\nsubplot(3,1,3); plot(t,x3),grid\nxlabel('t (sec)')\nylabel('state variable x3')\nOpenmirrors.comSection 10–4 / Design of Servo Systems 739\nx = Ax + Bu. y = Cx\nx2\nx3\nxn\nk2\nk1\nk3\nkn\nr\n…\nu\nx\ny = x1\n+ – + –\nFigure 10–4\nType 1 servo system\nwhen the plant has\nan integrator.\n10–4 DESIGN OF SERVO SYSTEMS\nIn this section we shall discuss the pole-placement approach to the design of type 1\nservo systems. Here we shall limit our systems each to have a scalar control signal u and\na scalar output y.\nIn what follows we shall first discuss a problem of designing a type 1 servo system\nwhen the plant involves an integrator.Then we shall discuss the design of a type 1 servo\nsystem when the plant has no integrator.\nDesign of Type 1 Servo System when the Plant Has An Integrator. Assume\nthat the plant is defined by\n(10–19)\n(10–20)\nwhere\nAs stated earlier, we assume that both the control signal u and the output signal y are\nscalars. By a proper choice of a set of state variables, it is possible to choose the output\nto be equal to one of the state variables.ASee the method presented in Chapter 2 for\nobtaining a state-space representation of the transfer function system in which the output\nybecomes equal to x1 .B\nFigure 10–4 shows a general configuration of the type 1 servo system when the plant\nhas an integrator. Here we assumed that y=x1 . In the present analysis we assume that\n C = 1 * n constant matrix\n B = n * 1 constant matrix\n A = n * n constant matrix\n y = output signal (scalar)\n u = control signal (scalar)\n x = state vector for the plant (n-vector)\n y = Cx\n x# = Ax + Bu740\nChapter 10 / Control Systems Design in State Space\nthe reference input r is a step function. In this system we use the following state-feedback\ncontrol scheme:\n(10–21)\nwhere\nAssume that the reference input (step function) is applied at t=0. Then, for t>0, the\nsystem dynamics can be described by Equations (10–19) and (10–21), or\n(10–22)\nWe shall design the type 1 servo system such that the closed-loop poles are located at\ndesired positions. The designed system will be an asymptotically stable system, y(q)\nwill approach the constant value r, and u(q) will approach zero. (r is a step input.)\nNotice that at steady state we have\n(10–23)\nNoting that r(t) is a step input, we have r(q)=r(t)=r(constant) for t>0. By\nsubtracting Equation (10–23) from Equation (10–22), we obtain\n(10–24)\nDefine\nThen Equation (10–24) becomes\n(10–25)\nEquation (10–25) describes the error dynamics.\nThe design of the type 1 servo system here is converted to the design of an asymp-\ntotically stable regulator system such that e(t) approaches zero, given any initial condi-\ntion e(0). If the system defined by Equation (10–19) is completely state controllable,\nthen, by specifying the desired eigenvalues m\n1\n, m\n2\n, p , m\nn\nfor the matrix A-BK, matrix\nK can be determined by the pole-placement technique presented in Section 10–2.\nThe steady-state values of x(t) and u(t) can be found as follows: At steady state\n(t=q), we have, from Equation (10–22),\nx# (q) = 0 = (A - BK)\n \nx(q) + Bk\n1\n \nr\ne# = (A - BK)\n \ne\nx(t) - x(q) = e(t)\nx# (t) - x# (q) = (A - BK)Cx(t) - x(q)D\nx# (q) = (A - BK)\n \nx(q) + Bk\n1\n \nr(q)\nx# = Ax + Bu = (A - BK)\n \nx + Bk\n1\n \nr\nK = Ck\n1\n \nk\n2\np k\nn\nD\n=- Kx + k\n1\n \nr\nu =- C0\n \nk\n2\n \nk\n3\np k\nn\nD\nF\nx\n1\nx\n2\n/H11080\n/H11080\n/H11080\nx\nn\nV\n+ k\n1\nAr - x\n1\nB\nOpenmirrors.comSection 10–4 / Design of Servo Systems 741\nSince the desired eigenvalues of A-BK are all in the left-half s plane, the inverse of\nmatrix A-BK exists. Consequently,x(q) can be determined as\nAlso, u(q) can be obtained as\n(See Example 10–4 to verify this last equation.)\nEXAMPLE 10–4 Design a type 1 servo system when the plant transfer function has an integrator.Assume that the\nplant transfer function is given by\nThe desired closed-loop poles are and s=–10. Assume that the system\nconfiguration is the same as that shown in Figure 10–4 and the reference input r is a step function.\nObtain the unit-step response of the designed system.\nDefine state variables x1 , x2 , and x3 as follows:\nThen the state-space representation of the system becomes\n(10–26)\n(10–27)\nwhere\nReferring to Figure 10–4 and noting that n=3, the control signal u is given by\n(10–28)\nwhere\nThe state-feedback gain matrix K can be obtained easily with MATLAB. See MATLAB \nProgram 10–4.\nK = Ck1 k2 k3 D\nu =- Ak2 x2 + k3 x3B+ k1Ar - x1B=- Kx + k1 r\nA = C\n0\n0\n0\n1\n0\n-2\n0\n1\n-3\nS,  B = C\n0\n0\n1\nS,  C = [1 0 0]\n y = Cx\n x# = Ax + Bu\n x3 = x#\n2\n x2 = x#\n1\n x1 = y\ns =- 2 ; j213\nY(s)\nU(s) = 1\ns(s + 1)(s + 2)\nu(q) =- Kx(q) + k1 r = 0\nx(q) =- (A - BK)-1 Bk1 r\nMATLAB Program 10–4\nA = [0  1  0;0  0  1;0  -2  -3];\nB = [0;0;1];\nJ = [-2+j*2*sqrt(3)  -2-j*2*sqrt(3)  -10];\nK = acker(A,B,J)\nK =\n160.0000    54.0000    11.0000742\nChapter 10 / Control Systems Design in State Space\nThe state feedback gain matrix K is thus\nK = [160  54  11]\nUnit-Step Response of the Designed System: The unit-step response of the designed system can\nbe obtained as follows:\nSince\nfrom Equation (10–22) the state equation for the designed system is\n(10–29)\nand the output equation is\n(10–30)\nSolving Equations (10–29) and (10–30) for y(t) when r is a unit-step function gives the unit-step\nresponse curve y(t) versus t. MATLAB Program 10–5 yields the unit-step response. The result-\ning unit-step response curve is shown in Figure 10–5.\ny = [1\n \n0\n \n0]\nC\nx\n1\nx\n2\nx\n3\nS\nC\nx#\n1\nx#\n2\nx#\n3\nS\n=\nC\n0\n0\n-160\n1\n0\n-56\n0\n1\n-14\nSC\nx\n1\nx\n2\nx\n3\nS\n+\nC\n  0\n  0\n160\nS\nr\nA - BK =\nC\n0\n0\n0\n1\n0\n-2\n0\n1\n-3\nS\n-\nC\n0\n0\n1\nS\n[160\n \n54\n \n11] =\nC\n0\n0\n-160\n1\n0\n-56\n0\n1\n-14\nS\nMATLAB Program 10–5\n% ---------- Unit-step response ----------\n% ***** Enter the state matrix, control matrix, output matrix,\n% and direct transmission matrix of the designed system *****\nAA = [0  1  0;0  0  1;-160  -56  -14];\nBB = [0;0;160];\nCC = [1  0  0];\nDD = [0];\n% ***** Enter step command and plot command *****\nt = 0:0.01:5;\ny = step(AA,BB,CC,DD,1,t);\nplot(t,y)\ngrid\ntitle('Unit-Step Response')\nxlabel('t Sec')\nylabel('Output y')\nOpenmirrors.comSection 10–4 / Design of Servo Systems 743\nUnit-Step Response\nOutput y\n0\n0.6\n1.2\n0.8\n0.4\n0.2\n1\nt Sec\n0 3.5 10.5 2.5 5 4 4.51.5 2 3\nFigure 10–5\nUnit-step response\ncurvey(t) versus t\nfor the system\ndesigned in \nExample 10–4.\nNote that since\nwe have\nAt steady state the control signal u becomes zero.\nDesign of Type 1 Servo System when the Plant Has No Integrator.If the plant\nhas no integrator (type 0 plant), the basic principle of the design of a type 1 servo sys-\ntem is to insert an integrator in the feedforward path between the error comparator\nand the plant, as shown in Figure 10–6. (The block diagram of Figure 10–6 is a basic\nform of the type 1 servo system where the plant has no integrator.) From the diagram,\nwe obtain\n(10–31)\n(10–32)\n(10–33)\n(10–34)\nwhere  x = state vector of the plant (n-vector)\n j\n#\n= r - y = r - Cx\n u =- Kx + kI j\n y = Cx\n x# = Ax + Bu\n =- [160 54 11] C\nr\n0\n0\nS + 160r = 0\n u(q) =- [160 54 11] C\nx1(q)\nx2(q)\nx3(q)\nS + 160r\nu(q) =- Kx(q) + k1 r(q) =- Kx(q) + k1 r744\nChapter 10 / Control Systems Design in State Space\nWe assume that the plant given by Equation (10–31) is completely state controllable.The\ntransfer function of the plant can be given by\nTo avoid the possibility of the inserted integrator being canceled by the zero at the origin\nof the plant, we assume that G\np\n(s) has no zero at the origin.\nAssume that the reference input (step function) is applied at t=0. Then, for t>0,\nthe system dynamics can be described by an equation that is a combination of Equations\n(10–31) and (10–34):\n(10–35)\nWe shall design an asymptotically stable system such that x(q), j(q), and u(q) approach\nconstant values, respectively. Then, at steady state, and we get y(q)=r.\nNotice that at steady state we have\n(10–36)\nNoting that r(t) is a step input, we have r(q)=r(t)=r (constant) for t>0. By\nsubtracting Equation (10–36) from Equation (10–35), we obtain\n(10–37)\nB\nx# (t) - x# (q)\nj# (t) - j# (q)\nR\n=\nB\nA\n-C\n0\n0\nRB\nx(t) - x(q)\nj(t) - j(q)\nR\n+\nB\nB\n0\nR\nCu(t) - u(q)D\nB\nx# (q)\nj# (q)\nR\n=\nB\nA\n-C\n0\n0\nRB\nx(q)\nj(q)\nR\n+\nB\nB\n0\nR\nu(q) +\nB\n0\n1\nR\nr(q)\nj# (t) = 0,\nB\nx# (t)\nj# (t)\nR\n=\nB\nA\n-C\n0\n0\nRB\nx(t)\nj(t)\nR\n+\nB\nB\n0\nR\nu(t) +\nB\n0\n1\nR\nr(t)\nG\np\n(s) = C(s\n \nI - A)\n-1\n \nB\nC = 1 * n constant matrix\n B = n * 1 constant matrix\n A = n * n constant matrix\n r = reference input signal (step function, scalar)\n j = output of the integrator (state variable of the system, scalar)\n y = output signal (scalar)\n u = control signal (scalar)\ny\nK\nA\nB\nk\nI\nC/H20848/H20848\nxr j\n.\nj u\n+ –\n+ –\n++\nFigure 10–6\nType 1 servo system.\nOpenmirrors.comSection 10–4 / Design of Servo Systems 745\nDefine\nThen Equation (10–37) can be written as\n(10–38)\nwhere\n(10–39)\nDefine a new (n+1)th-order error vector e(t) by\n-vector\nThen Equation (10–38) becomes\n(10–40)\nwhere\nand Equation (10–39) becomes\n(10–41)\nwhere\nThe state error equation can be obtained by substituting Equation (10–41) into\nEquation (10–40):\n(10–42)\nIf the desired eigenvalues of matrix (that is, the desired closed-loop poles) are\nspecified as m1 , m2 , p , mn+1 , then the state-feedback gain matrix K and the integral\ngain constant kI can be determined by the pole-placement technique presented in Section\n10–2, provided that the system defined by Equation (10–40) is completely state\ncontrollable. Note that if the matrix\nhas rank n+1, then the system defined by Equation (10–40) is completely state\ncontrollable. (See Problem A–10–12.)\nBA\n-C\nB\n0 R\nAˆ - Bˆ Kˆ\ne# = AAˆ - Bˆ Kˆ Be\nKˆ = CK /H21752-kI D\nue =- Kˆ e\nAˆ = B A\n-C\n0\n0 R,  Bˆ = BB\n0 R\ne# = Aˆ e + Bˆ ue\ne(t) = Bxe(t)\nje(t) R = (n + 1)\nue(t) =- Kxe(t) + kI je(t)\nBx#\ne(t)\nj#\ne(t) R = B A\n-C\n0\n0 RBxe(t)\nje(t) R + BB\n0 Rue(t)\n u(t) - u(q) = ue(t)\n j(t) - j(q) = je(t)\n x(t) - x(q) = xe(t)746\nChapter 10 / Control Systems Design in State Space\n0\nM\nP\nz\nu\nmg\nm\n/H5129 sin u\nx\nx\n/H5129 cos u\n/H5129\nu\nFigure 10–8\nInverted-pendulum\ncontrol system.\nAs is usually the case, not all state variables can be directly measurable. If this is the\ncase, we need to use a state observer. Figure 10–7 shows a block diagram of a type 1\nservo system with a state observer. [In the figure, each block with an integral symbol\nrepresents an integrator (1/s).] Detailed discussions of state observers are given in\nSection 10–5.\nEXAMPLE 10–5\nConsider the inverted-pendulum control system shown in Figure 10–8. In this example, we are\nconcerned only with the motion of the pendulum and motion of the cart in the plane of the page.\nIt is desired to keep the inverted pendulum upright as much as possible and yet control the\nposition of the cart—for instance, move the cart in a step fashion. To control the position of\nthe cart, we need to build a type 1 servo system. The inverted-pendulum system mounted on a\ncart does not have an integrator.Therefore, we feed the position signal y (which indicates the po-\nsition of the cart) back to the input and insert an integrator in the feedforward path, as shown\ny\nK\nA\nB\nk\nI\nC/H20848/H20848\nxr j\n.\nj u\nObserver\n+ –\n+ –\n++\nFigure 10–7\nType 1 servo system with state observer.\nOpenmirrors.comSection 10–4 / Design of Servo Systems 747\nx = Ax + Bu. y = Cx\nk1\nkI/H20848\nk2\nk3\nk4\nru\nx\nyj j\n.\n+ – + –\nFigure 10–9\nInverted-pendulum\ncontrol system. (Type\n1 servo system when\nthe plant has no\nintegrator.)\nin Figure 10–9.We assume that the pendulum angle u and the angular velocity are small, so that\nand We also assume that the numerical values for M, m, and l are\ngiven as\nEarlier in Example 3–6 we derived the equations for the inverted-pendulum system shown in\nFigure 3–6, which is the same as that in Figure 10–8. Referring to Figure 3–6, we started with the\nforce-balance and torque-balance equations and ended up with Equations (3–20) and (3–21) to\nmodel the inverted-pendulum system. Referring to Equations (3–20) and (3–21), the equations for\nthe inverted-pendulum control system shown in Figure 10–8 are\n(10–43)\n(10–44)\nWhen the given numerical values are substituted, Equations (10–43) and (10–44) become\n(10–45)\n(10–46)\nLet us define the state variables x1 ,x 2 ,x 3 , and x4 as\nThen, referring to Equations (10–45) and (10–46) and Figure 10–9 and considering the cart position\nx as the output of the system, we obtain the equations for the system as follows:\n(10–47)\n(10–48)\n(10–49)\n(10–50) j\n#\n= r - y = r - Cx\n u =- Kx + kI j\n y = Cx\n x# = Ax + Bu\n x4 = x#\n x3 = x\n x2 = u#\n x1 = u\nx$ = 0.5u - 0.4905u\nu$ = 20.601u - u\n Mx$ = u - mgu\n Mlu$ = (M + m)gu - u\nM = 2 kg,  m = 0.1 kg,  l = 0.5 m\nuu# 2 /H112160.cos u /H112161,sin u /H11216u,\nu#748\nChapter 10 / Control Systems Design in State Space\nwhere\nFor the type 1 servo system, we have the state error equation as given by Equation (10–40):\n(10–51)\nwhere\nand the control signal is given by Equation (10–41):\nwhere\nTo obtain a reasonable speed and damping in the response of the designed system (for\nexample, the settling time of approximately 4~ 5 sec and the maximum overshoot of 15%~ 16%\nin the step response of the cart), let us choose the desired closed-loop poles at s=m\ni\n(i=1, 2, 3, 4, 5), where\nWe shall determine the necessary state-feedback gain matrix by the use of MATLAB.\nBefore we proceed further, we must examine the rank of matrix P, where\nMatrix P is given by\n(10–52)\nThe rank of this matrix can be found to be 5. Therefore, the system defined by Equation (10–51)\nis completely state controllable, and arbitrary pole placement is possible. MATLAB Program\n10–6 produces the state feedback gain matrix K\nˆ\n.\nP =\nB\nA\n-C\nB\n0\nR\n=\nE\n0\n20.601\n0\n-0.4905\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n-1\n0\n0\n1\n0\n0\n0\n-1\n0\n0.5\n0\nU\nP =\nB\nA\n-C\nB\n0\nR\nm\n1\n=- 1 + j13\n,\n  \nm\n2\n=- 1 - j13\n,\n  \nm\n3\n=- 5,\n  \nm\n4\n=- 5,\n  \nm\n5\n=- 5\nK\nˆ\n= CK /H21752-k\nI\nD = Ck\n1\n \nk\n2\n \nk\n3\n \nk\n4\n/H21752-k\nI\nD\nu\ne\n=- K\nˆ\ne\nA\nˆ\n=\nB\nA\n-C\n0\n0\nR\n=\nE\n0\n20.601\n0\n-0.4905\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n-1\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\nU\n,\n  \nB\nˆ\n=\nB\nB\n0\nR\n=\nE\n0\n-1\n0\n0.5\n0\nU\ne# = A\nˆ\ne + B\nˆ\nu\ne\nA =\nD\n0\n20.601\n0\n-0.4905\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\nT\n,\n  \nB =\nD\n0\n-1\n0\n0.5\nT\n,\n  \nC = [0\n \n0\n \n1\n \n0]\nOpenmirrors.comSection 10–4 / Design of Servo Systems 749\nMATLAB Program 10–6\nA = [0  1  0  0; 20.601  0  0  0;  0  0  0  1; -0.4905  0  0  0];\nB = [0;-1;0;0.5];\nC = [0  0  1  0];\nAhat = [A zeros(4,1); -C  0];\nBhat = [B;0];\nJ = [-1+j*sqrt(3)  -1-j*sqrt(3)  -5  -5  -5];\nKhat = acker(Ahat,Bhat,J)\nKhat =\n-157.6336  -35.3733  -56.0652  -36.7466  50.9684\nThus, we get\nand\nUnit Step-Response Characteristics of the Designed System. Once we determine the feed-\nback gain matrix K and the integral gain constant kI, the step response in the cart position can be\nobtained by solving the following equation, which is obtained by substituting Equation (10–49)\ninto Equation (10–35):\n(10–53)\nThe output y(t) of the system is x3(t), or\n(10–54)\nDefine the state matrix, control matrix, output matrix, and direct transmission matrix of the\nsystem given by Equations (10–53) and (10–54) as AA, BB, CC, and DD, respectively. MATLAB\nProgram 10–7 may be used to obtain the step-response curves of the designed system. Notice\nthat, to obtain the unit-step response, we entered the command\n[y,x,t] = step(AA,BB,CC,DD,1,t)\nFigure 10–10 shows curves x1 versus t, x2 versus t, x3 (= output y) versus t, x4 versus t, and x5\n(= j) versus t. Notice that y(t) C= x3(t)Dhas approximately 15% overshoot and the settling time\nis approximately 4.5 sec.j(t) C= x5(t)Dapproaches 1.1.This result can be derived as follows: Since\nor\nD\n0\n0\n0\n0\nT = D\n0\n20.601\n0\n-0.4905\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\nTD\n0\n0\nr\n0\nT + D\n0\n-1\n0\n0.5\nTu(q)\nx# (q) = 0 = Ax(q) + Bu(q)\ny = [0 0 1 0 0] Bx\njR + [0]r\nBx#\nj# R = BA - BK\n- C\nBkI\n0 RBx\njR+ B0\n1Rr\nkI =- 50.9684\nK = Ck1 k2 k3 k4 D = [-157.6336 -35.3733 -56.0652 -36.7466]750\nChapter 10 / Control Systems Design in State Space\nMATLAB Program 10–7\n%**** The following program is to obtain step response\n% of the inverted-pendulum system just designed *****\nA = [0  1  0  0;20.601  0  0  0;0  0  0  1;-0.4905  0  0  0];\nB = [0;-1;0;0.5];\nC = [0  0  1  0]\nD = [0];\nK = [-157.6336  -35.3733  -56.0652  -36.7466];\nKI = -50.9684;\nAA = [A - B*K  B*KI;-C  0];\nBB = [0;0;0;0;1];\nCC = [C  0];\nDD = [0];\n%***** To obtain response curves x1 versus t, x2 versus t,\n% x3 versus t, x4 versus t, and x5 versus t, separately, enter\n% the following command *****\nt = 0:0.02:6;\n[y,x,t] = step(AA,BB,CC,DD,1,t);\nx1 = [1  0  0  0  0]*x';\nx2 = [0  1  0  0  0]*x';\nx3 = [0  0  1  0  0]*x';\nx4 = [0  0  0  1  0]*x';\nx5 = [0  0  0  0  1]*x';\nsubplot(3,2,1); plot(t,x1); grid\ntitle('x1 versus t')\nxlabel('t Sec'); ylabel('x1')\nsubplot(3,2,2); plot(t,x2); grid\ntitle('x2 versus t')\nxlabel('t Sec'); ylabel('x2')\nsubplot(3,2,3); plot(t,x3); grid\ntitle('x3 versus t')\nxlabel('t Sec'); ylabel('x3')\nsubplot(3,2,4); plot(t,x4); grid\ntitle('x4 versus t')\nxlabel('t Sec'); ylabel('x4')\nsubplot(3,2,5); plot(t,x5); grid\ntitle('x5 versus t')\nxlabel('t Sec'); ylabel('x5')\nOpenmirrors.comSection 10–5 / State Observers 751\nwe get\nSince u(q)=0, we have, from Equation (10–33),\nand so\nHence, for r=1, we have\nIt is noted that, as in any design problem, if the speed and damping are not quite satisfactory,\nthen we must modify the desired characteristic equation and determine a new matrix Computer\nsimulations must be repeated until a satisfactory result is obtained.\n10–5 STATE OBSERVERS\nIn the pole-placement approach to the design of control systems, we assumed that all\nstate variables are available for feedback. In practice, however, not all state variables are\navailable for feedback. Then we need to estimate unavailable state variables.\nKˆ .\nj(q) = 1.1\nj(q) = 1\nkI\n CKx(q)D = 1\nkI\n k3 x3(q) = -56.0652\n-50.9684 r = 1.1r\nu(q) = 0 =- Kx(q) + kI j(q)\nu(q) = 0\n0\n0.2\nx1 versus t\n06 42\nt Sec\n0\n2\n–1\n1\nx3 versus t\n06 42\n0.5\n1.5\nx5 versus t\n06 420\n1\nt Sec\nt Sec\nx1x3x5\n0\n0.5\n–0.5\nx2 versus t\n06 42\nt Sec\n0\n2\n–1\n1\nx4 versus t\n06 42\nt Sec\nx2x4\nFigure 10–10\nCurves x1 versus t, x2\nversus t, x3\n(=output y) versus\nt, x4 versus t, and\nx5 (=j) versus t.752\nChapter 10 / Control Systems Design in State Space\nEstimation of unmeasurable state variables is commonly called observation.A device (or\na computer program) that estimates or observes the state variables is called a state\nobserver, or simply an observer. If the state observer observes all state variables of the\nsystem, regardless of whether some state variables are available for direct measurement,\nit is called a full-order state observer.There are times when this will not be necessary, when\nwe will need observation of only the unmeasurable state variables, but not of those that\nare directly measurable as well. For example, since the output variables are observable\nand they are linearly related to the state variables, we need not observe all state variables,\nbut observe only n-m state variables, where n is the dimension of the state vector and\nm is the dimension of the output vector.\nAn observer that estimates fewer than n state variables, where n is the dimension of\nthe state vector, is called a reduced-order state observer or, simply, a reduced-order\nobserver. If the order of the reduced-order state observer is the minimum possible, the\nobserver is called a minimum-order state observer or minimum-order observer. In this\nsection, we shall discuss both the full-order state observer and the minimum-order state\nobserver.\nState Observer. A state observer estimates the state variables based on the\nmeasurements of the output and control variables. Here the concept of observability\ndiscussed in Section 9–7 plays an important role. As we shall see later, state observers\ncan be designed if and only if the observability condition is satisfied.\nIn the following discussions of state observers, we shall use the notation to\ndesignate the observed state vector. In many practical cases, the observed state vector\nis used in the state feedback to generate the desired control vector.\nConsider the plant defined by\n(10–55)\n(10–56)\nThe observer is a subsystem to reconstruct the state vector of the plant. The mathe-\nmatical model of the observer is basically the same as that of the plant, except that we\ninclude an additional term that includes the estimation error to compensate for\ninaccuracies in matrices A and B and the lack of the initial error. The estimation error\nor observation error is the difference between the measured output and the estimated\noutput.The initial error is the difference between the initial state and the initial estimated\nstate. Thus, we define the mathematical model of the observer to be\n(10–57)\nwhere is the estimated state and is the estimated output.The inputs to the observer\nare the output y and the control input u. Matrix K\ne\n, which is called the observer gain\nmatrix, is a weighting matrix to the correction term involving the difference between \nthe measured output y and the estimated output This term continuously corrects\nthe model output and improves the performance of the observer. Figure 10–11 shows the\nblock diagram of the system and the full-order state observer.\nCx/H33522.\nCx/H33522x/H33522\n = AA - K\ne\n  \nCBx/H33522+ Bu + K\ne\n \ny\n x\n/H11343\n= Ax/H33522+ Bu + K\ne\n(y - Cx/H33522)\n y = Cx\n x# = Ax + Bu\nx/H33522\nx/H33522\nOpenmirrors.comSection 10–5 / State Observers 753\nu\ny\ny~\nFull-order state observer\nA\nBC\nKe\n/H20848\nA\nBC /H20848\nx\nx\n~\n++\n++ ++ +–\nFigure 10–11\nBlock diagram of\nsystem and full-order\nstate observer, when\ninputu and output y\nare scalars.\nFull-Order State Observer. The order of the state observer that will be discussed\nhere is the same as that of the plant. Assume that the plant is defined by Equations\n(10–55) and (10–56) and the observer model is defined by Equation (10–57).\nTo obtain the observer error equation, let us subtract Equation (10–57) from\nEquation (10–55):\n(10–58)\nDefine the difference between x and as the error vector e,o r\nThen Equation (10–58) becomes\n(10–59)\nFrom Equation (10–59), we see that the dynamic behavior of the error vector is deter-\nmined by the eigenvalues of matrix A-Ke C. If matrix A-Ke C is a stable matrix,\nthe error vector will converge to zero for any initial error vector e(0). That is, will\nconverge to x(t) regardless of the values of x(0) and If the eigenvalues of matrix\nA-Ke C are chosen in such a way that the dynamic behavior of the error vector is\nasymptotically stable and is adequately fast, then any error vector will tend to zero (the\norigin) with an adequate speed.\nIf the plant is completely observable, then it can be proved that it is possible to\nchoose matrix Ke such that A-Ke C has arbitrarily desired eigenvalues. That is, the\nobserver gain matrix Ke can be determined to yield the desired matrix A-Ke C.W e\nshall discuss this matter in what follows.\nx/H33522(0).\nx/H33522(t)\ne# = AA - Ke  CBe\ne = x - x/H33522\nx/H33522\n= AA - Ke  CB(x - x/H33522)\nx# - x/H11343= Ax - Ax/H33522- Ke(Cx - Cx/H33522)754\nChapter 10 / Control Systems Design in State Space\nDual Problem. The problem of designing a full-order observer becomes that of de-\ntermining the observer gain matrix K\ne\nsuch that the error dynamics defined by Equation\n(10–59) are asymptotically stable with sufficient speed of response. (The asymptotic\nstability and the speed of response of the error dynamics are determined by the\neigenvalues of matrix A-K\ne\nC.) Hence, the design of the full-order observer becomes\nthat of determining an appropriate K\ne\nsuch that A-K\ne\nC has desired eigenvalues.Thus,\nthe problem here becomes the same as the pole-placement problem we discussed in\nSection 10–2. In fact, the two problems are mathematically the same. This property is\ncalled duality.\nConsider the system defined by\nIn designing the full-order state observer, we may solve the dual problem, that is, solve\nthe pole-placement problem for the dual system\nassuming the control signal v to be\nIf the dual system is completely state controllable, then the state feedback gain matrix\nK can be determined such that matrix A*-C*K will yield a set of the desired\neigenvalues.\nIf m\n1\n, m\n2\n, p , m\nn\nare the desired eigenvalues of the state observer matrix, then by\ntaking the same m\ni\n’s as the desired eigenvalues of the state-feedback gain matrix of the\ndual system, we obtain\nNoting that the eigenvalues of A*-C*K and those of A-K*C are the same, we have\nComparing the characteristic polynomial and the characteristic poly-\nnomial for the observer system [refer to Equation (10–57)], we find\nthat K\ne\nand K* are related by\nThus, using the matrix K determined by the pole-placement approach in the dual system,\nthe observer gain matrix K\ne\nfor the original system can be determined by using the\nrelationship K\ne\n=K*. (See Problem A–10–10 for the details.)\nNecessary and Sufficient Condition for State Observation. As discussed, a\nnecessary and sufficient condition for the determination of the observer gain matrix K\ne\nfor the desired eigenvalues of A-K\ne\nC is that the dual of the original system\nz# = A*\n \nz + C*v\nK\ne\n= K*\n@s\n \nI - AA - K\ne\n  \nCB@\n@s\n \nI - (A - K*\n \nC)@\n@s\n \nI - (A* - C*\n \nK)@ = @s\n \nI - (A - K*\n \nC)@\n@s\n \nI - (A* - C*\n \nK)@ = As - m\n1\nBAs - m\n2\nBp As - m\nn\nB\nv =- Kz\nn = B*\n \nz\nz# = A*\n \nz + C*v\n y = Cx\n x# = Ax + Bu\nOpenmirrors.comSection 10–5 / State Observers 755\nbe completely state controllable. The complete state controllability condition for this\ndual system is that the rank of\nbe n. This is the condition for complete observability of the original system defined by\nEquations (10–55) and (10–56).This means that a necessary and sufficient condition for\nthe observation of the state of the system defined by Equations (10–55) and (10–56) is\nthat the system be completely observable.\nOnce we select the desired eigenvalues (or desired characteristic equation), the full-\norder state observer can be designed, provided the plant is completely observable. The\ndesired eigenvalues of the characteristic equation should be chosen so that the state\nobserver responds at least two to five times faster than the closed-loop system\nconsidered. As stated earlier, the equation for the full-order state observer is\n(10–60)\nIt is noted that thus far we have assumed the matrices A, B, and C in the observer\nto be exactly the same as those of the physical plant. If there are discrepancies in A, B,\nand C in the observer and in the physical plant, the dynamics of the observer error are\nno longer governed by Equation (10–59). This means that the error may not approach\nzero as expected.Therefore, we need to choose Ke so that the observer is stable and the\nerror remains acceptably small in the presence of small modeling errors.\nTransformation Approach to Obtain State Observer Gain Matrix K e . By\nfollowing the same approach as we used in deriving the equation for the state feedback\ngain matrix K, we can obtain the following equation:\n(10–61)\nwhere Ke is an n*1 matrix,\nand\n[Refer to Problem A–10–10 for the derivation of Equation (10–61).]\n W = G\nan - 1\nan - 2\n/H11080\n/H11080\n/H11080\na1\n1\nan - 2\nan - 3\n/H11080\n/H11080\n/H11080\n1\n0\np\np\np\np\na1\n1\n/H11080\n/H11080\n/H11080\n0\n0\n1\n0\n/H11080\n/H11080\n/H11080\n0\n0\nW\n N = CC* /H21752A* C* /H21752p /H21752(A*)n - 1C*D\nQ = (WN*)-1\nKe = Q F\nan - an\nan - 1 - an - 1\n/H11080\n/H11080\n/H11080\na1 - a1\nV = (WN*)-1 F\nan - an\nan - 1 - an - 1\n/H11080\n/H11080\n/H11080\na1 - a1\nV\nx/H11343= AA - Ke  CBx/H33522+ Bu + Ke y\nCC* /H21752A* C* /H21752p /H21752(A*)n - 1 C*D756\nChapter 10 / Control Systems Design in State Space\nDirect-Substitution Approach to Obtain State Observer Gain Matrix K\ne\n.\nSimilar to the case of pole placement, if the system is of low order, then direct substitution\nof matrix K\ne\ninto the desired characteristic polynomial may be simpler. For example, if\nx is a 3-vector, then write the observer gain matrix K\ne\nas\nSubstitute this K\ne\nmatrix into the desired characteristic polynomial:\nBy equating the coefficients of the like powers of s on both sides of this last equation,\nwe can determine the values of k\ne1\n,k\ne2\n, and k\ne3\n. This approach is convenient if n=1,\n2, or 3, where n is the dimension of the state vector x. (Although this approach can be\nused when n=4, 5, 6,p , the computations involved may become very tedious.)\nAnother approach to the determination of the state observer gain matrix K\ne\nis to\nuse Ackermann’s formula. This approach is presented in the following.\nAckermann’s Formula. Consider the system defined by\n(10–62)\n(10–63)\nIn Section 10–2 we derived Ackermann’s formula for pole placement for the system\ndefined by Equation (10–62).The result was given by Equation (10–18), rewritten thus:\nFor the dual of the system defined by Equations (10–62) and (10–63),\nthe preceding Ackermann’s formula for pole placement is modified to\n(10–64)\nAs stated earlier, the state observer gain matrix K\ne\nis given by K*, where K is given by\nEquation (10–64). Thus,\n(10–65)K\ne\n= K* = f(A*)*\nG\nC\nCA\n/H11080\n/H11080\n/H11080\nCA\nn - 2\nCA\nn - 1\nW\n-1\nG\n0\n0\n/H11080\n/H11080\n/H11080\n0\n1\nW\n= f(A)\nG\nC\nCA\n/H11080\n/H11080\n/H11080\nCA\nn - 2\nCA\nn - 1\nW\n-1\nG\n0\n0\n/H11080\n/H11080\n/H11080\n0\n1\nW\nK = [0\n \n0 p  0\n \n1]CC* /H21752A*\n \nC* /H21752p /H21752(A*)\nn - 1\n \nC*D\n-1\nf(A*)\nn = B*\n \nz\nz# = A*\n \nz + C*v\nK = [0\n \n0 p  0\n \n1]CB /H21752AB /H21752p /H21752A\nn - 1\n \nBD\n-1\nf(A)\n y = Cx\n x# = Ax + Bu\n@s\n \nI - AA - K\ne\n  \nCB@ = As - m\n1\nBAs - m\n2\nBAs - m\n3\nB\nK\ne\n=\nC\nk\ne1\nk\ne2\nk\ne3\nS\nOpenmirrors.comSection 10–5 / State Observers 757\nwhere f(s) is the desired characteristic polynomial for the state observer, or\nwhere m1, m2, p , mn are the desired eigenvalues. Equation (10–65) is called Ackermann’s\nformula for the determination of the observer gain matrix Ke .\nComments on Selecting the Best Ke . Referring to Figure 10–11, notice that the\nfeedback signal through the observer gain matrix Ke serves as a correction signal to\nthe plant model to account for the unknowns in the plant. If significant unknowns are\ninvolved, the feedback signal through the matrix Ke should be relatively large. Howev-\ner, if the output signal is contaminated significantly by disturbances and measurement\nnoises, then the output y is not reliable and the feedback signal through the matrix Ke\nshould be relatively small. In determining the matrix Ke , we should carefully examine\nthe effects of disturbances and noises involved in the output y.\nRemember that the observer gain matrix Ke depends on the desired characteristic\nequation\nThe choice of a set of is, in many instances, not unique. As a general rule,\nhowever, the observer poles must be two to five times faster than the controller poles\nto make sure the observation error (estimation error) converges to zero quickly. This\nmeans that the observer estimation error decays two to five times faster than does the\nstate vector x. Such faster decay of the observer error compared with the desired\ndynamics makes the controller poles dominate the system response.\nIt is important to note that if sensor noise is considerable, we may choose the observer\npoles to be slower than two times the controller poles, so that the bandwidth of the sys-\ntem will become lower and smooth the noise. In this case the system response will be\nstrongly influenced by the observer poles. If the observer poles are located to the right\nof the controller poles in the left-half s plane, the system response will be dominated by\nthe observer poles rather than by the control poles.\nIn the design of the state observer, it is desirable to determine several observer gain\nmatrices Ke based on several different desired characteristic equations. For each of the\nseveral different matrices Ke , simulation tests must be run to evaluate the resulting\nsystem performance. Then we select the best Ke from the viewpoint of overall system\nperformance. In many practical cases, the selection of the best matrix Ke boils down to\na compromise between speedy response and sensitivity to disturbances and noises.\nEXAMPLE 10–6 Consider the system\nwhere\nWe use the observed state feedback such that\nu =- Kx/H33522\nA = B0\n1\n20.6\n0 R,  B = B0\n1 R,  C = [0 1]\n y = Cx\n x# = Ax + Bu\nm1 , m2 , p , mn\nAs - m1BAs - m2B p As - mnB = 0\nf(s) = As - m1BAs - m2B p As - mnB758\nChapter 10 / Control Systems Design in State Space\nDesign a full-order state observer, assuming that the system configuration is identical to that\nshown in Figure 10–11. Assume that the desired eigenvalues of the observer matrix are\nThe design of the state observer reduces to the determination of an appropriate observer gain\nmatrix K\ne\n.\nLet us examine the observability matrix. The rank of\nis 2. Hence, the system is completely observable and the determination of the desired observer gain\nmatrix is possible. We shall solve this problem by three methods.\nMethod 1: We shall determine the observer gain matrix by use of Equation (10–61). The given\nsystem is already in the observable canonical form. Hence, the transformation matrix\nQ=(WN*)\n–1\nis I. Since the characteristic equation of the given system is\nwe have\nThe desired characteristic equation is\nHence,\nThen the observer gain matrix K\ne\ncan be obtained from Equation (10–61) as follows:\nMethod 2: Referring to Equation (10–59):\nthe characteristic equation for the observer becomes\nDefine\nThen the characteristic equation becomes\n(10–66)= s\n2\n+ k\ne2\n \ns - 20.6 + k\ne1\n= 0\n2B\ns\n0\n0\ns\nR\n-\nB\n0\n1\n20.6\n0\nR\n+\nB\nk\ne1\nk\ne2\nR\n[0\n \n1]\n2\n=\n2\ns\n-1\n-20.6 + k\ne1\ns + k\ne2\n2\nK\ne\n=\nB\nk\ne1\nk\ne2\nR\n@s\n \nI - A + K\ne\n  \nC@ = 0\ne# = AA - K\ne\n  \nCBe\nK\ne\n= (WN*)\n-1\nB\na\n2\n- a\n2\na\n1\n- a\n1\nR\n=\nB\n1\n0\n0\n1\nRB\n100 + 20.6\n20 - 0\nR\n=\nB\n120.6\n20\nR\na\n1\n= 20,\n  \na\n2\n= 100\n(s + 10)\n2\n= s\n2\n+ 20s + 100 = s\n2\n+ a\n1\n \ns + a\n2\n= 0\na\n1\n= 0,\n  \na\n2\n=- 20.6\n∑s\n \nI - A∑ =\n2\ns\n-1\n-20.6\ns\n2\n= s\n2\n- 20.6 = s\n2\n+ a\n1\n \ns + a\n2\n= 0\n[C* /H21752A*\n \nC*] =\nB\n0\n1\n1\n0\nR\nm\n1\n=- 10,\n  \nm\n2\n=- 10\nOpenmirrors.comSection 10–5 / State Observers 759\nSince the desired characteristic equation is\nby comparing Equation (10–66) with this last equation, we obtain\nor\nMethod 3: We shall use Ackermann’s formula given by Equation (10–65):\nwhere\nThus,\nand\nAs a matter of course, we get the same Ke regardless of the method employed.\nThe equation for the full-order state observer is given by Equation (10–57),\nor\nFinally, it is noted that, similar to the case of pole placement, if the system order n is 4 or\nhigher, methods 1 and 3 are preferred, because all matrix computations can be carried out by a\ncomputer, while method 2 always requires hand computation of the characteristic equation\ninvolving unknown parameters ke1 ,k e2 , p , ken .\nEffects of the Addition of the Observer on a Closed-Loop System. In the\npole-placement design process, we assumed that the actual state x(t) was available for\nfeedback. In practice, however, the actual state x(t) may not be measurable, so we will\nneed to design an observer and use the observed state for feedback as shown in Fig-\nure 10–12. The design process, therefore, becomes a two-stage process, the first stage\nbeing the determination of the feedback gain matrix K to yield the desired characteristic\nequation and the second stage being the determination of the observer gain matrix Ke\nto yield the desired observer characteristic equation.\nLet us now investigate the effects of the use of the observed state rather than\nthe actual state x(t), on the characteristic equation of a closed-loop control system.\nx/H33522(t),\nx/H33522(t)\nBx/H11343\n1\nx/H11343\n2\nR = B0\n1\n-100\n-20 RBx/H33522\n1\nx/H33522\n2\nR + B0\n1 Ru + B120.6\n20 Ry\nx/H11343= AA - Ke  CBx/H33522+ Bu + Ke y\n = B120.6\n20\n412\n120.6 RB0\n1\n1\n0 RB0\n1R = B120.6\n20 R\n Ke = AA2 + 20A + 100IBB0\n1\n1\n0 R\n-1\nB0\n1 R\nf(A) = A2 + 20A + 100I\nf(s) = As - m1BAs - m2B= s2 + 20s + 100\nKe = f(A) BC\nCA R\n-1\nB0\n1 R\nKe = B120.6\n20 R\nke1 = 120.6,  ke2 = 20\ns2 + 20s + 100 = 0760\nChapter 10 / Control Systems Design in State Space\nConsider the completely state controllable and completely observable system defined\nby the equations\nFor the state-feedback control based on the observed state \nWith this control, the state equation becomes\n(10–67)\nThe difference between the actual state x(t) and the observed state has been\ndefined as the error e(t):\nSubstitution of the error vector e(t) into Equation (10–67) gives\n(10–68)\nNote that the observer error equation was given by Equation (10–59), repeated here:\n(10–69)\nCombining Equations (10–68) and (10–69), we obtain\n(10–70)\nB\nx#\ne#\nR\n=\nB\nA - BK\n0\nBK\nA - K\ne\n  \nC\nRB\nx\ne\nR\ne# = AA - K\ne\n  \nCBe\nx# = (A - BK)\n \nx + BKe\ne(t) = x(t) - x/H33522(t)\nx/H33522(t)\nx# = Ax - BK x/H33522= (A - BK)\n \nx + BK(x - x/H33522)\nu =- Kx/H33522\nx/H33522,\n y = Cx\n x# = Ax + Bu\nu y\ny~\nA\nBC\nK\ne\n–K\n/H20848\nA\nBC /H20848\nx\nx\n~\n++\n++\n++\n+–\nFigure 10–12\nObserved-state\nfeedback control\nsystem.\nOpenmirrors.comSection 10–5 / State Observers 761\nEquation (10–70) describes the dynamics of the observed-state feedback control system.\nThe characteristic equation for the system is\nor\nNotice that the closed-loop poles of the observed-state feedback control system consist\nof the poles due to the pole-placement design alone and the poles due to the observer\ndesign alone. This means that the pole-placement design and the observer design are\nindependent of each other. They can be designed separately and combined to form the\nobserved-state feedback control system. Note that, if the order of the plant is n, then the\nobserver is also of nth order (if the full-order state observer is used), and the resulting\ncharacteristic equation for the entire closed-loop system becomes of order 2n.\nTransfer Function of the Observer-Based Controller.Consider the plant defined by\nAssume that the plant is completely observable. Assume that we use observed-state\nfeedback control Then, the equations for the observer are given by\n(10–71)\n(10–72)\nwhere Equation (10–71) is obtained by substituting into Equation (10–57).\nBy taking the Laplace transform of Equation (10–71), assuming a zero initial\ncondition, and solving for we obtain\nBy substituting this into the Laplace transform of Equation (10–72), we obtain\n(10–73)\nThen the transfer function U(s)/Y(s) can be obtained as\nFigure 10–13 shows the block diagram representation for the system. Notice that the\ntransfer function\nacts as a controller for the system. Hence, we call the transfer function\n(10–74)U(s)\n-Y(s) = num\nden = KAs I - A + Ke C + BKB\n-1\n Ke\nKAs I - A + Ke  C + BKB\n-1\n Ke\nU(s)\nY(s) =- KAs I - A + Ke C + BKB\n-1\n Ke\nU(s) =- KAs I - A + Ke C + BKB-1Ke Y(s)\nX/H33522(s)\nX/H33522(s) = As I - A + Ke C + BKB\n-1\n Ke Y(s)\nX/H33522(s),\nu =- Kx/H33522\n u =- Kx/H33522\n x/H11343= AA - Ke C - BKBx/H33522+ Ke y\nu =- Kx/H33522.\n y = Cx\n x# = Ax + Bu\n@s I - A + BK@@s I - A + Ke  C@ = 0\n2s I - A + BK\n0\n-BK\ns I - A + Ke  C\n2= 0762\nChapter 10 / Control Systems Design in State Space\nthe observer-based controller transfer function or, simply, the observer-controller transfer\nfunction.\nNote that the observer-controller matrix\nmay or may not be stable, although A-BK and A-K\ne\nC are chosen to be stable. In\nfact, in some cases the matrix A-K\ne\nC-BK may be poorly stable or even unstable.\nEXAMPLE 10–7\nConsider the design of a regulator system for the following plant:\n(10–75)\n(10–76)\nwhere\nSuppose that we use the pole-placement approach to the design of the system and that the\ndesired closed-loop poles for this system are at s=m\ni\n(i=1, 2), where m\n1\n=–1.8+j2.4 and\nm\n2\n=–1.8-j2.4. The state-feedback gain matrix K for this case can be obtained as follows:\nUsing this state-feedback gain matrix K, the control signal u is given by\nSuppose that we use the observed-state feedback control instead of the actual-state feedback\ncontrol, or\nwhere we choose the observer poles to be at\ns=–8, s=–8\nObtain the observer gain matrix K\ne\nand draw a block diagram for the observed-state feedback\ncontrol system. Then obtain the transfer function for the observer controller, and\ndraw another block diagram with the observer controller as a series controller in the feedforward\npath. Finally, obtain the response of the system to the following initial condition:\nx(0) =\nB\n1\n0\nR\n,\n  \ne(0) = x(0) - x/H33522(0) =\nB\n0.5\n0\nR\nU(s)/H20862[-Y(s)]\nu =- Kx/H33522=- [29.6\n \n3.6]\nB\nx/H33522\n1\nx/H33522\n2\nR\nu =- Kx =- [29.6\n \n3.6]\nB\nx\n1\nx\n2\nR\nK = [29.6\n \n3.6]\nA =\nB\n0\n20.6\n1\n0\nR\n,\n  \nB =\nB\n0\n1\nR\n,\n  \nC = [1\n \n0]\n y = Cx\n x# = Ax + Bu\nA - K\ne\n  \nC - BK\nR(s) = 0 Y(s)U(s)\nPlant\n–Y(s)\nK(sI – A + K\ne\nC + BK)\n–1\nK\ne\n+ –\nFigure 10–13\nBlock diagram\nrepresentation of\nsystem with a\ncontroller-observer.\nOpenmirrors.comSection 10–5 / State Observers 763\nFor the system defined by Equation (10–75), the characteristic polynomial is\nThus,\nThe desired characteristic polynomial for the observer is\nHence,\nFor the determination of the observer gain matrix, we use Equation (10–61), or\nwhere\nHence,\n(10–77)\nEquation (10–77) gives the observer gain matrix Ke . The observer equation is given by Equation\n(10–60):\n(10–78)\nSince\nEquation (10–78) becomes\nor\nThe block diagram of the system with observed-state feedback is shown in Figure 10–14(a).\n = B-16\n-93.6\n1\n-3.6 RBx/H33522\n1\nx/H33522\n2\nR + B16\n84.6 Ry\n Bx/H11343\n1\nx/H11343\n2\nR= bB 0\n20.6\n1\n0 R - B16\n84.6 R[1 0] - B0\n1 R[29.6 3.6] rBx/H33522\n1\nx/H33522\n2\nR+ B16\n84.6 Ry\nx/H11343= AA - Ke  C - BKBx/H33522+ Ke y\nu =- Kx/H33522\nx/H11343= AA - Ke  CBx/H33522+ Bu + Ke y\n = B0\n1\n1\n0 RB84.6\n16 R= B16\n84.6 R\n Ke = bB0\n1\n1\n0 RB1\n0\n0\n1 Rr\n-1\nB64 + 20.6\n16 - 0 R\n W = Ba1\n1\n1\n0 R = B0\n1\n1\n0 R\n N = [C* /H21752A*C*] = B1\n0\n0\n1 R\nKe = (WN*)-1 Ba2 - a2\na1 - a1\nR\na1 = 16,  a2 = 64\n = s2 + a1 s + a2\n As - m1BAs - m2B= (s + 8)(s + 8) = s2 + 16s + 64\na1 = 0,  a2 =- 20.6\n∑s I - A∑ = 2 s\n-20.6\n-1\ns\n2= s2 - 20.6 = s2 + a1 s + a2764\nChapter 10 / Control Systems Design in State Space\nReferring to Equation (10–74), the transfer function of the observer-controller is\nAs a matter of course, the same transfer function can be obtained with MATLAB. For example,\nMATLAB Program 10–8 produces the transfer function of the observer controller. Figure 10–14(b)\nshows a block diagram of the system.\n= 778.2s + 3690.7\ns\n2\n+ 19.6s + 151.2\n= [29.6\n \n3.6]\nB\ns + 16\n93.6\n-1\ns + 3.6\nR\n-1\nB\n16\n84.6\nR\nU(s)\n-Y(s) = KAs\n \nI - A + K\ne\n  \nC + BKB\n-1\n \nK\ne\n++\n–+\nR(s) = 0 Y(s)U(s)–Y(s) 1\ns\n2\n – 20.6\n+ –\n(b)\nu\n/H20848\n/H20848\ny\nx\nx\n~\nC\nA\nC\n–K\nB\nB\n0\n1\n0\n1\n1  0\n1  0\n0\n20.6\n1\n0\n0\n20.6\n1\n0\n16\n84.6\n–29.6   –3.6\n++\n++\n(a)\n778.2s + 3690.7\ns\n2\n + 19.6s + 151.2\nFigure 10–14\n(a) Block diagram of\nsystem with\nobserved-state\nfeedback; (b) block\ndiagram of transfer-\nfunction system.\nOpenmirrors.comSection 10–5 / State Observers 765\nMATLAB Program 10–8\n% Obtaining transfer function of observer controller --- full-order observer\nA = [0  1;20.6  0];\nB = [0;1];\nC = [1  0];\nK = [29.6  3.6];\nKe = [16;84.6];\nAA = A-Ke*C-B*K;\nBB = Ke;\nCC = K;\nDD = 0;\n[num,den] = ss2tf(AA,BB,CC,DD)\nnum =\n1.0e+003*\n0   0.7782   3.6907\nden =\n1.0000  19.6000  151.2000\nThe dynamics of the observed-state feedback control system just designed can be described\nby the following equations: For the plant,\nFor the observer,\nThe system, as a whole, is of fourth order. The characteristic equation for the system is\nThe characteristic equation can also be obtained from the block diagram for the system shown in\nFigure 10–14(b). Since the closed-loop transfer function is\nY(s)\nR(s) = 778.2s + 3690.7\nAs2 + 19.6s + 151.2BAs2 - 20.6B+ 778.2s + 3690.7\n= s4 + 19.6s3 + 130.6s2 + 374.4s + 576 = 0\n@s I - A + BK@@s I - A + Ke  C@ = As2 + 3.6s + 9BAs2 + 16s + 64B\n u =- [29.6 3.6] Bx/H33522\n1\nx/H33522\n2\nR\n Bx/H11343\n1\nx/H11343\n2\nR= B-16\n-93.6\n1\n-3.6 RBx/H33522\n1\nx/H33522\n2\nR + B16\n84.6 Ry\n y = [1 0] Bx1\nx2\nR\n Bx#\n1\nx#\n2\nR = B 0\n20.6\n1\n0 RBx1\nx2\nR+ B0\n1Ru766\nChapter 10 / Control Systems Design in State Space\nMATLAB Program 10–9\nA = [0  1; 20.6  0];\nB = [0;1];\nC = [1  0];\nK = [29.6  3.6];\nKe = [16; 84.6];\nsys = ss([A-B*K  B*K; zeros(2,2)  A-Ke*C],eye(4),eye(4),eye(4));\nt = 0:0.01:4;\nz = initial(sys,[1;0;0.5;0],t);\nx1 = [1  0  0  0]*z';\nx2 = [0  1  0  0]*z';\ne1 = [0  0  1  0]*z';\ne2 = [0  0  0  1]*z';\nsubplot(2,2,1); plot(t,x1 ),grid\ntitle('Response to Initial Condition')\nylabel('state variable x1')\nsubplot(2,2,2); plot(t,x2),grid\ntitle('Response to Initial Condition')\nylabel('state variable x2')\nsubplot(2,2,3); plot(t,e1),grid\nxlabel('t (sec)'), ylabel('error state variable e1')\nsubplot(2,2,4); plot(t,e2),grid\nxlabel('t (sec)'), ylabel('error state variable e2')\nthe characteristic equation is\nAs a matter of course, the characteristic equation is the same for the system in state-space\nrepresentation and in transfer-function representation.\nFinally, we shall obtain the response of the system to the following initial condition:\nReferring to Equation (10–70), the response to the initial condition can be determined from\nA MATLAB Program to obtain the response is shown in MATLAB Program 10–9.The resulting\nresponse curves are shown in Figure 10–15.\nB\nx#\ne#\nR\n=\nB\nA - BK\n0\nBK\nA - K\ne\n \nC\nRB\nx\ne\nR\n,\n  \nB\nx(0)\ne(0)\nR\n=\nD\n1\n0\n0.5\n0\nT\nx(0) =\nB\n1\n0\nR\n,\n  \ne(0) =\nB\n0.5\n0\nR\n= s\n4\n+ 19.6s\n3\n+ 130.6s\n2\n+ 374.4s + 576 = 0\nAs\n2\n+ 19.6s + 151.2BAs\n2\n- 20.6B + 778.2s + 3690.7\nOpenmirrors.comSection 10–5 / State Observers 767\nuy x\ny\n/H20848\nPlant\nC\nA\nB\n–K\nx~\nMinimum-order\nobserverTransformation\n++\nFigure 10–16\nObserved-state\nfeedback control\nsystem with a\nminimum-order\nobserver.\nMinimum-Order Observer. The observers discussed thus far are designed to\nreconstruct all the state variables. In practice, some of the state variables may be accu-\nrately measured. Such accurately measurable state variables need not be estimated.\nSuppose that the state vector x is an n-vector and the output vector y is an m-vector\nthat can be measured. Since m output variables are linear combinations of the state\nvariables, m state variables need not be estimated. We need to estimate only n-m\nstate variables. Then the reduced-order observer becomes an (n-m)th-order observ-\ner. Such an ( n-m)th-order observer is the minimum-order observer. Figure 10–16\nshows the block diagram of a system with a minimum-order observer.\nResponse to Initial Condition Response to Initial Condition\nstate variable x1\nstate variable x2\nerror state variable e1\nerror state variable e2\n1.5\n1\n0.5\n0\n01234\n01234\n01234\n012\nt (sec) t (sec)\n34\n−0.5\n−0.1\n0\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\n−1.5\n−1\n−0.5\n0\n0.5\n0\n−0.5\n−1.5\n−1\n−2\n−2.5\nFigure 10–15\nResponse curves to\ninitial condition.768\nChapter 10 / Control Systems Design in State Space\nIt is important to note, however, that if the measurement of output variables involves\nsignificant noises and is relatively inaccurate, then the use of the full-order observer\nmay result in a better system performance.\nTo present the basic idea of the minimum-order observer, without undue mathe-\nmatical complications, we shall present the case where the output is a scalar (that is,\nm=1) and derive the state equation for the minimum-order observer. Consider the\nsystem\n(10–79)\n(10–80)\nwhere the state vector x can be partitioned into two parts x\na\n(a scalar) and x\nb\nCan\n(n-1)-vector D. Here the state variable x\na\nis equal to the output y and thus can be\ndirectly measured, and x\nb\nis the unmeasurable portion of the state vector. Then the\npartitioned state and output equations become\n(10–81)\n(10–82)\nwhere\nFrom Equation (10–81), the equation for the measured portion of the state becomes\nor\n(10–83)\nThe terms on the left-hand side of Equation (10–83) can be measured. Equation (10–83)\nacts as the output equation. In designing the minimum-order observer, we consider the\nleft-hand side of Equation (10–83) to be known quantities.Thus, Equation (10–83) relates\nthe measurable quantities and unmeasurable quantities of the state.\nFrom Equation (10–81), the equation for the unmeasured portion of the state\nbecomes\n(10–84)\nNoting that terms A\nba\nx\na\nand B\nb\nu are known quantities, Equation (10–84) describes the\ndynamics of the unmeasured portion of the state.\nx#\nb\n= A\nba\n \nx\na\n+ A\nbb\n  \nx\nb\n+ B\nb\n \nu\nx#\na\n- A\naa\n \nx\na\n- B\na\n \nu = A\nab\n  \nx\nb\nx#\na\n= A\naa\n \nx\na\n+ A\nab\n  \nx\nb\n+ B\na\n \nu\n B\nb\n= (n - 1) * 1 matrix\n B\na\n= scalar\n A\nbb\n= (n - 1) * (n - 1) matrix\n A\nba\n= (n - 1) * 1 matrix\n A\nab\n= 1 * (n - 1) matrix\n A\naa\n= scalar\n y = [1 /H217520]\nc\nx\na\nx\nb\nd\n \nc\nx#\na\nx#\nb\nd\n=\nc\nA\naa\nA\nba\n \nA\nab\nA\nbb\ndc\nx\na\nx\nb\nd\n+\nc\nB\na\nB\nb\nd\nu\n y = Cx\n x# = Ax + Bu\nOpenmirrors.comSection 10–5 / State Observers 769\nFull-Order State Observer Minimum-Order State Observer\nAA bb\nBu\ny\nCA ab\nKe    (n*1 matrix) Ke    [(n-1)*1 matrix]\nx#\na - Aaa xa - Ba u\nAba xa + Bb u\nx/H33522\nbx/H33522\nTable 10–1 List of Necessary Substitutions for Writing\nthe Observer Equation for the Minimum-Order\nState Observer\nIn what follows we shall present a method for designing a minimum-order observer.\nThe design procedure can be simplified if we utilize the design technique developed for\nthe full-order state observer.\nLet us compare the state equation for the full-order observer with that for the\nminimum-order observer. The state equation for the full-order observer is\nand the “state equation” for the minimum-order observer is\nThe output equation for the full-order observer is\nand the “output equation” for the minimum-order observer is\nThe design of the minimum-order observer can be carried out as follows: First, note that\nthe observer equation for the full-order observer was given by Equation (10–57), which\nwe repeat here:\n(10–85)\nThen, making the substitutions of Table 10–1 into Equation (10–85), we obtain\n(10–86)\nwhere the state observer gain matrix Ke is an (n-1)*1 matrix. In Equation (10–86),\nnotice that in order to estimate , we need the derivative of xa. This presents a difficulty,\nbecause differentiation amplifies noise. If xa (= y) is noisy, the use of is unacceptable.x#\na\nx/H33522\nb\nx/H11343\nb = AAbb - Ke  AabBx/H33522\nb + Aba xa + Bb u + KeAx#\na - Aaa xa - Ba uB\nx/H11343= AA - Ke  CBx/H33522+ Bu + Ke y\nx#\na - Aaa xa - Ba u = Aab  xb\ny = Cx\nx#\nb = Abb  xb + Aba xa + Bb u\nx# = Ax + Bu770\nChapter 10 / Control Systems Design in State Space\nTo avoid this difficulty, we eliminate in the following way. First rewrite Equation\n(10–86) as\n(10–87)\nDefine\nand\n(10–88)\nThen Equation (10–87) becomes\n(10–89)\nDefine\nThen Equation (10–89) becomes\n(10–90)\nEquation (10–90) and Equation (10–88) together define the minimum-order observer.\nSince\nwhere 0 is a row vector consisting of (n-1) zeros, if we define\nthen we can write in terms of and y as follows:\n(10–91)\nThis equation gives the transformation from \nFigure 10–17 shows the block diagram of the observed-state feedback control system\nwith the minimum-order observer, based on Equations (10–79), (10–80), (10–90), (10–91)\nand\nNext we shall derive the observer error equation. Using Equation (10–83), Equation\n(10–86) can be modified to\n(10–92)x\n/H11343\nb\n= AA\nbb\n- K\ne\n  \nA\nab\nBx/H33522\nb\n+ A\nba\n \nx\na\n+ B\nb\n \nu + K\ne\n  \nA\nab\n  \nx\nb\nu =- Kx/H33522.\nH/H33522 to x/H33522.\nx/H33522= C\nˆ\nH/H33522+ D\nˆ\ny\nH/H33522x/H33522\nC\nˆ\n=\nc\n0\nI\nn - 1\nd\n,\n  \nD\nˆ\n=\nc\n1\nK\ne\nd\nx/H33522=\nc\nx\na\nx/H33522\nb\nd\n=\nc\ny\nx/H33522\nb\nd\n=\nc\n0\nI\nn - 1\nd\nCx/H33522\nb\n- K\ne\n \nyD +\nc\n1\nK\ne\nd\ny\ny = C1 /H217520D\nc\nx\na\nx\nb\nd\nH\n/H11343\n= A\nˆ\nH/H33522+ B\nˆ\ny + F\nˆ\nu\n F\nˆ\n= B\nb\n- K\ne\n  \nB\na\n B\nˆ\n= A\nˆ\nK\ne\n+ A\nba\n- K\ne\n \nA\naa\n A\nˆ\n= A\nbb\n- K\ne\n  \nA\nab\n + A\nba\n- K\ne\n \nA\naa\nDy + AB\nb\n- K\ne\n \nB\na\nBu\n H\n/H11343\n= AA\nbb\n- K\ne\n  \nA\nab\nBH/H33522+ CAA\nbb\n- K\ne\n  \nA\nab\nBK\ne\nx/H33522\nb\n- K\ne\n \ny = x/H33522\nb\n- K\ne\n \nx\na\n= H/H33522\nx\nb\n- K\ne\n \ny = x\nb\n- K\ne\n \nx\na\n= H\n + AB\nb\n- K\ne\n \nB\na\nBu\n + CAA\nbb\n- K\ne\n  \nA\nab\nBK\ne\n+ A\nba\n- K\ne\n \nA\naa\nDy\n = AA\nbb\n- K\ne\n  \nA\nab\nBAx/H33522\nb\n- K\ne\n \nyB\n x\n/H11343\nb\n- K\ne\n \nx#\na\n= AA\nbb\n- K\ne\n  \nA\nab\nBx/H33522\nb\n+ AA\nba\n- K\ne\n \nA\naa\nBy + AB\nb\n- K\ne\n \nB\na\nBu\nx#\na\nOpenmirrors.comSection 10–5 / State Observers 771\nu yx\nx\n/H20848\n/H20848\nCB\n–K\nMinimum-order observer\nTransformation\n~\n~\nh ~h\n.\n++\n+\n++\n+\n+\nD\nC\nF\nA\nB\nx.\n^\n^\n^\n^\nA\n^\nBy subtracting Equation (10–92) from Equation (10–84), we obtain\n(10–93)\nDefine\nThen Equation (10–93) becomes\n(10–94)\nThis is the error equation for the minimum-order observer. Note that e is an (n-1)-\nvector.\nThe error dynamics can be chosen as desired by following the technique developed\nfor the full-order observer, provided that the rank of matrix\nis n-1. (This is the complete observability condition applicable to the minimum-order\nobserver.)\nF\nAab\nAab  Abb\n/H11080\n/H11080\n/H11080\nAab  An - 2\nbb\nV\ne# = AAbb - Ke  AabBe\ne = xb - x/H33522\nb = H - H/H33522\nx#\nb - x/H11343\nb = AAbb - Ke  AabBAxb - x/H33522\nbB\nFigure 10–17\nSystem with\nobserved-state\nfeedback, where the\nobserver is the\nminimum-order\nobserver.772\nChapter 10 / Control Systems Design in State Space\nThe characteristic equation for the minimum-order observer is obtained from\nEquation (10–94) as follows:\n(10–95)\nwhere are desired eigenvalues for the minimum-order observer. The\nobserver gain matrix K\ne\ncan be determined by first choosing the desired eigenvalues for\nthe minimum-order observer [that is, by placing the roots of the characteristic equation,\nEquation (10–95), at the desired locations] and then using the procedure developed for\nthe full-order observer with appropriate modifications. For example, if the formula for\ndetermining matrix K\ne\ngiven by Equation (10–61) is to be used, it should be modified to\n(10–96)\nwhere K\ne\nis an matrix and\nNote that are coefficients in the characteristic equation for the state\nequation\nAlso, if Ackermann’s formula given by Equation (10–65) is to be used, then it should be\nmodified to\n(10–97)K\ne\n= fAA\nbb\nB\nG\nA\nab\nA\nab\n  \nA\nbb\n/H11080\n/H11080\n/H11080\nA\nab\n  \nA\nn - 3\nbb\nA\nab\n  \nA\nn - 2\nbb\nW\n-1\nG\n0\n0\n/H11080\n/H11080\n/H11080\n0\n1\nW\n@s\n \nI - A\nbb\n@ = s\nn - 1\n+ a\nˆ\n1\n \ns\nn - 2\n+ p + a\nˆ\nn - 2\n \ns + a\nˆ\nn - 1\n= 0\na\nˆ\n1\n \n,a\nˆ\n2\n \n, p ,a\nˆ\nn - 2\nW\nˆ\n=\nG\na\nˆ\nn - 2\na\nˆ\nn - 3\n/H11080\n/H11080\n/H11080\na\nˆ\n1\n1\na\nˆ\nn - 3\na\nˆ\nn - 4\n/H11080\n/H11080\n/H11080\n1\n0\np\np\np\np\na\nˆ\n1\n1\n/H11080\n/H11080\n/H11080\n0\n0\n1\n0\n/H11080\n/H11080\n/H11080\n0\n0\nW\n= (n - 1) * (n - 1) matrix\nN\nˆ\n= CA\nab\n* /H21752A\nbb\n*\n \nA\nab\n* /H21752p /H21752AA\nbb\n*B\nn - 2\n \nA\nab\n*D = (n - 1) * (n - 1) matrix\n(n - 1) * 1\nK\ne\n= Q\nˆ\nF\na\nˆ\nn - 1\n- a\nˆ\nn - 1\na\nˆ\nn - 2\n- a\nˆ\nn - 2\n/H11080\n/H11080\n/H11080\na\nˆ\n1\n- a\nˆ\n1\nV\n= AW\nˆ\nN\nˆ\n*B\n-1\nF\na\nˆ\nn - 1\n- a\nˆ\nn - 1\na\nˆ\nn - 2\n- a\nˆ\nn - 2\n/H11080\n/H11080\n/H11080\na\nˆ\n1\n- a\nˆ\n1\nV\nm\n1\n \n, m\n2\n \n, p , m\nn - 1\n = s\nn - 1\n+ a\nˆ\n1\n \ns\nn - 2\n+ p + a\nˆ\nn - 2\n \ns + a\nˆ\nn - 1\n= 0\n @s\n \nI - A\nbb\n+ K\ne\n  \nA\nab\n@ = As - m\n1\nBAs - m\n2\nB p As - m\nn - 1\nB\nOpenmirrors.comSection 10–5 / State Observers 773\nwhere\nObserved-State Feedback Control System with Minimum-Order Observer.\nFor the case of the observed-state feedback control system with full-order state observer,\nwe have shown that the closed-loop poles of the observed-state feedback control system\nconsist of the poles due to the pole-placement design alone, plus the poles due to the\nobserver design alone. Hence, the pole-placement design and the full-order observer\ndesign are independent of each other.\nFor the observed-state feedback control system with minimum-order observer, the\nsame conclusion applies. The system characteristic equation can be derived as\n(10–98)\n(See Problem A–10–11 for the details.) The closed-loop poles of the observed-state feed-\nback control system with a minimum-order observer comprise the closed-loop poles\ndue to pole placement Cthe eigenvalues of matrix (A-BK)Dand the closed-loop poles\ndue to the minimum-order observer Cthe eigenvalues of matrix (Abb-Ke Aab)D.There-\nfore, the pole-placement design and the design of the minimum-order observer are\nindependent of each other.\nDetermining Observer Gain Matrix K e with MATLAB. Because of the duality\nof pole-placement and observer design, the same algorithm can be applied to both the\npole-placement problem and the observer-design problem. Thus, the commands acker\nand place can be used to determine the observer gain matrix Ke .\nThe closed-loop poles of the observer are the eigenvalues of matrix A-Ke C.T h e\nclosed-loop poles of the pole-placement are the eigenvalues of matrix A-BK.\nReferring to the duality problem between the pole-placement problem and observer-\ndesign problem, we can determine Ke by considering the pole-placement problem for the\ndual system. That is, we determine Ke by placing the eigenvalues of A*-C*Ke at the\ndesired place. Since Ke=K*, for the full-order observer we use the command\nKe = acker(A',C',L)'\nwhere L is the vector of the desired eigenvalues for the observer. Similarly, for the full-\norder observer, we may use\nKe = place(A',C',L)'\nprovided L does not include multiple poles. [In the above commands, prime (') indicates\nthe transpose.] For the minimum-order (or reduced-order) observers, use the following\ncommands:\nKe = acker(Abb',Aab',L)'\nor\nKe = place(Abb',Aab',L)'\n@s I - A + BK@@s I - Abb + Ke  Aab @ = 0\nfAAbbB= An - 1\nbb + aˆ1  An - 2\nbb + p + aˆn - 2  Abb + aˆn - 1  I774\nChapter 10 / Control Systems Design in State Space\nEXAMPLE 10–8\nConsider the system\nwhere\nLet us assume that we want to place the closed-loop poles at\nThen the necessary state-feedback gain matrix K can be obtained as follows:\nK=[90 29 4]\n(See MATLAB Program 10–10 for a MATLAB computation of this matrix K.)\nNext, let us assume that the output y can be measured accurately so that state variable x\n1\n(which is equal to y) need not be estimated. Let us design a minimum-order observer. (The\nminimum-order observer is of second order.) Assume that we choose the desired observer poles\nto be at\ns=–10, s=–10\nReferring to Equation (10–95), the characteristic equation for the minimum-order observer is\nIn what follows, we shall use Ackermann’s formula given by Equation (10–97).\n(10–99)\nwhere\nSince\nwe have\nA\nbb\n=\nB\n0\n-11\n1\n-6\nR\n,\n  \nB\na\n= 0,\n  \nB\nb\n=\nB\n0\n1\nR\nA\naa\n= 0,\n  \nA\nab\n= [1\n \n0],\n  \nA\nba\n=\nB\n0\n-6\nR\nx/H33522=\nc\nx\na\nx/H33522\nb\nd\n=\nD\nx\n1\nx/H33522\n2\nx/H33522\n3\nT\n \n,\n  \nA =\nD\n0\n0\n-6\n1\n0\n-11\n0\n1\n-6\nT\n,\n  \nB =\nD\n0\n0\n1\nT\nfAA\nbb\nB = A\n2\nbb\n+ a\nˆ\n1\n  \nA\nbb\n+ a\nˆ\n2\n  \nI = A\n2\nbb\n+ 20A\nbb\n+ 100I\nK\ne\n= fAA\nbb\nB\nC\nA\nab\nA\nab\n  \nA\nbb\nS\n- 1\nB\n0\n1\nR\n = s\n2\n+ 20s + 100 = 0\n = (s + 10)(s + 10)\n @s\n \nI - A\nbb\n+ K\ne\n  \nA\nab\n@ = As - m\n1\nBAs - m\n2\nB\ns\n1\n=- 2 + j213\n,\n  \ns\n2\n=- 2 - j213\n,\n  \ns\n3\n=- 6\nA =\nC\n0\n0\n-6\n1\n0\n-11\n0\n1\n-6\nS\n,\n  \nB =\nC\n0\n0\n1\nS\n,\n  \nC = [1\n \n0\n \n0]\n y = Cx\n x# = Ax + Bu\nOpenmirrors.comSection 10–5 / State Observers 775\nMATLAB Program 10–10\nA = [0  1  0;0  0  1;-6  -11  -6];\nB = [0;0;1];\nJ = [-2+j*2*sqrt(3)  -2-j*2*sqrt(3)  -6];\nK = acker(A,B,J)\nK =\n90.0000    29.0000    4.0000\nAbb = [0  1;-11  -6];\nAab = [1  0];\nL = [-10  -10];\nKe = acker(Abb',Aab',L)'\nKe =\n14\n5\nEquation (10–99) now becomes\n(A MATLAB computation of this Ke is given in MATLAB Program 10–10.)\n = B 89\n-154\n14\n5 RB0\n1R = B14\n5 R\n Ke = bB 0\n-11\n1\n-6 R\n2\n+ 20 B 0\n-11\n1\n-6 R + 100 B1\n0\n0\n1 RrB1\n0\n0\n1 R\n-1\nB0\n1 R\nReferring to Equations (10–88) and (10–89), the equation for the minimum-order observer can\nbe given by\n(10–100)\nwhere\nNoting that\nthe equation for the minimum-order observer, Equation (10–100), becomes\nor\nBh/H11343\n2\nh/H11343\n3\nR = B-14\n-16\n1\n-6 RBh/H33522\n2\nh/H33522\n3\nR + B-191\n-260 Ry + B0\n1 Ru\n+ B 0\n-6 R- B14\n5 R0 ry + bB0\n1 R - B14\n5 R0 ru\nBh/H11343\n2\nh/H11343\n3\nR = B-14\n-16\n1\n-6 RBh/H33522\n2\nh/H33522\n3\nR + bB-14\n-16\n1\n-6 RB14\n5 R\nAbb - Ke  Aab = B 0\n-11\n1\n-6 R- B14\n5 R[1 0] = B-14\n-16\n1\n-6 R\nH/H33522= x/H33522\nb - Ke y = x/H33522\nb - Ke x1\nH/H11343= AAbb - Ke  AabBH/H33522+ CAAbb - Ke  AabBKe + Aba - Ke Aaa Dy + ABb - Ke BaBu776\nChapter 10 / Control Systems Design in State Space\nwhere\nor\nIf the observed-state feedback is used, then the control signal u becomes\nwhere K is the state feedback gain matrix. Figure 10–18 is a block diagram showing the configu-\nration of the system with observed-state feedback, where the observer is the minimum-order\nobserver.\nu =- Kx/H33522=- K\nC\nx\n1\nx/H33522\n2\nx/H33522\n3\nS\nB\nx/H33522\n2\nx/H33522\n3\nR\n=\nB\nh/H33522\n2\nh/H33522\n3\nR\n+ K\ne\n \nx\n1\nB\nh/H33522\n2\nh/H33522\n3\nR\n=\nB\nx/H33522\n2\nx/H33522\n3\nR\n- K\ne\n \ny\nu yx\nx\n/H20848\n/H20848\nPlant\nC\nA\nB\nMinimum-order observer\nTransformation\n0\n1\n0\nh\n~ ~\n~\n0\n1\n0\n0\n0\n1\nx\n1\nK\ne\nx\n1\n1\nK\ne\n1\n14\n5\n0\n–6\n14\n5\n–14\n–16\n1\n–6\nB\nb\n– K\ne\nB\na\nA\nbb\n– K\ne\nA\nab\nA\nba\n– K\ne\nA\naa\nh ~h\n.\nK\ne\n++\n+\n++\n+\n+\n+\n+\n[ –90 –29 –4 ]\n–K\nFigure 10–18\nSystem with observed state feedback, where the observer is the minimum-order observer designed in\nExample 10–8.\nOpenmirrors.comSection 10–5 / State Observers 777\nTransfer Function of Minimum-Order Observer-Based Controller. In the\nminimum-order observer equation given by Equation (10–89):\ndefine, similar to the case of the derivation of Equation (10–90),\nThen, the following three equations define the minimum-order oberver:\n(10–101)\n(10–102)\n(10–103)\nSince Equation (10–103) can be rewritten as\n(10–104)\nby substituting Equation (10–104) into Equation (10–101), we obtain\n(10–105)\nDefine\nThen Equations (10–105) and (10–104) can be written as\n(10–106)\n(10–107)\nEquations (10–106) and (10–107) define the minimum-order observer-based controller.\nBy considering u as the output and –y as the input, U(s) can be written as\nSince the input to the observer controller is –Y(s), rather than Y(s), the transfer function\nof the observer controller is\n(10–108)\nThis transfer function can be easily obtained by using the following MATLAB statement:\n[num,den] = ss2tf(Atilde, Btilde, -Ctilde, -Dtilde) (10–109)\nU(s)\n-Y(s) = num\nden =- CC/H33522As I - A/H33522B\n-1\nB/H33522+ D/H33522D\n =- CC/H33522As I - A/H33522B\n-1\nB/H33522+ D/H33522D[-Y(s)]\n U(s) = CC/H33522As I - A/H33522B\n-1\nB/H33522+ D/H33522DY(s)\n u = C/H33522H/H33522+ D/H33522y\n H/H11343= A/H33522H/H33522+ B/H33522y\nD/H33522=- AKa + Kb  KeB\nC/H33522=- Kb\nB/H33522= Bˆ - Fˆ AKa + Kb  KeB\nA/H33522= Aˆ - Fˆ Kb\n = AAˆ - Fˆ KbBH/H33522+ CBˆ - Fˆ AKa + Kb  KeBDy\n H/H11343= Aˆ H/H33522+ Bˆ y + Fˆ C-KbH/H33522- AKa + Kb  KeByD\n =- KbH/H33522- AKa + Kb  KeBy\n u =- Kx/H33522=- CKa Kb DBy\nx/H33522\nb\nR =- Ka y - Kb  x/H33522\nb\n u =- Kx/H33522\n H/H33522= x/H33522\nb - Ke y\n H/H11343= Aˆ H/H33522+ Bˆ y + Fˆ u\n Fˆ = Bb - Ke Ba\n Bˆ = Aˆ Ke + Aba - Ke Aaa\n Aˆ = Abb - Ke Aab\nH/H11343= AAbb - Ke AabBH/H33522+ CAAbb - Ke  AabBKe + Aba - Ke  Aaa Dy + ABb - Ke BaBu778\nChapter 10 / Control Systems Design in State Space\n10–6 DESIGN OF REGULATOR SYSTEMS WITH OBSERVERS\nIn this section we shall consider a problem of designing regulator systems by using the\npole-placement-with-observer approach.\nConsider the regulator system shown in Figure 10–19. (The reference input is zero.)\nThe plant transfer function is\nUsing the pole-placement approach, design a controller such that when the system is\nsubjected to the following initial condition:\nwhere x is the state vector for the plant and e is the observer error vector, the maximum\nundershoot of y(t) is 25 to 35% and the settling time is about 4 sec.Assume that we use\nthe minimum-order observer. (We assume that only the output y is measurable.)\nWe shall use the following design procedure:\n1. Derive a state-space model of the plant.\n2. Choose the desired closed-loop poles for pole placement. Choose the desired\nobserver poles.\n3. Determine the state feedback gain matrix K and the observer gain matrix K\ne\n.\n4. Using the gain matrices K and K\ne\nobtained in step 3, derive the transfer function of\nthe observer controller. If it is a stable controller, check the response to the given ini-\ntial condition. If the response is not acceptable, adjust the closed-loop pole location\nand/or observer pole location until an acceptable response is obtained.\nDesign step 1: We shall derive the state-space representation of the plant. Since the\nplant transfer function is\nthe corresponding differential equation is\nReferring to Section 2–5, let us define the state variables x\n1\n, x\n2\n, and x\n3\nas follows:\n x\n3\n= x#\n2\n- b\n2\n \nu\n x\n2\n= x#\n1\n- b\n1\n \nu\n x\n1\n= y - b\n0\n \nu\ny% + 10y$ + 24y# = 10u# + 20u\nY(s)\nU(s) = 10(s + 2)\ns(s + 4)(s + 6)\nx(0) =\nC\n1\n0\n0\nS\n,\n  \ne(0) =\nB\n1\n0\nR\nG(s) = 10(s + 2)\ns(s + 4)(s + 6)\nr = 0 yu\nPlant\n–y\nController\n+ –\nFigure 10–19\nRegulator system.\nOpenmirrors.comSection 10–6 / Design of Regulator Systems with Observers 779\nAlso, is defined by\nwhere and\n[See Equation (2–35) for the calculation of b’s.] Then the state-space equation and out-\nput equation can be obtained as\nDesign step 2: As the first trial, let us choose the desired closed-loop poles at\ns=–1+j2, s=–1-j2, s=–5\nand choose the desired observer poles at\ns=–10, s=–10\nDesign step 3: We shall use MATLAB to compute the state feedback gain matrix K\nand the observer gain matrix Ke. MATLAB Program 10–11 produces matrices K and Ke.\n y = [1 0 0] C\nx1\nx2\nx3\nS + [0]u\n C\nx#\n1\nx#\n2\nx#\n3\nS = C\n0\n0\n0\n1\n0\n-24\n0\n1\n-10\nSC\nx1\nx2\nx3\nS + C\n0\n10\n-80\nSu\nb3 =- 80.b2 = 10,b1 = 0,b0 = 0,\n=- 24x2 - 10x3 + b3 u\nx#\n3 =- a3x1 - a2x2 - a1x3 + b3u\nx#\n3\nMATLAB Program 10–11\n% Obtaining the state feedback gain matrix K\nA = [0  1  0;0  0  1;0  -24  -10];\nB = [0;10;-80];\nC = [1  0  0];\nJ = [-1+j*2  -1-j*2  -5];\nK = acker(A,B,J)\nK =\n1.2500    1.2500    0.19375\n% Obtaining the observer gain matrix Ke\nAaa = 0; Aab = [1  0]; Aba = [0;0]; Abb = [0  1;-24  -10];Ba = 0; Bb = [10;-80];\nL = [-10  -10];\nKe = acker(Abb',Aab',L)'\nKe =\n10\n-24780\nChapter 10 / Control Systems Design in State Space\nMATLAB Program 10–12\n% Determination of transfer function of observer controller\nA = [0  1  0;0  0  1;0  -24  -10];\nB = [0;10;-80];\nAaa = 0; Aab = [1  0]; Aba = [0;0]; Abb = [0  1;-24  -10];\nBa = 0; Bb = [10;-80];\nKa = 1.25; Kb = [1.25    0.19375];\nKe = [10;-24];\nAhat = Abb - Ke*Aab;\nBhat = Ahat*Ke + Aba - Ke*Aaa;\nFhat = Bb - Ke*Ba;\nAtilde = Ahat - Fhat*Kb;\nBtilde = Bhat - Fhat*(Ka + Kb*Ke);\nCtilde = -Kb;\nDtilde = -(Ka + Kb*Ke);\n[num,den] = ss2tf(Atilde, Btilde, -Ctilde, -Dtilde)\nnum =\n9.1000  73.5000  125.0000\nden =\n1.0000  17.0000  -30.0000\nIn the program, matrices J and L represent the desired closed-loop poles for pole place-\nment and the desired poles for the observer, respectively. The matrices K and K\ne\nare\nobtained as\nDesign step 4: We shall determine the transfer function of the observer controller.\nReferring to Equation (10–108), the transfer function of the observer controller can be\ngiven by\nWe shall use MATLAB to calculate the transfer function of the observer controller.\nMATLAB Program 10–12 produces this transfer function. The result is\nDefine the system with this observer controller as System 1. Figure 10–20 shows the\nblock diagram of System 1.\n = 9.1(s + 5.6425)(s + 2.4344)\n(s + 18.6119)(s - 1.6119)\n G\nc\n(s) = 9.1s\n2\n+ 73.5s + 125\ns\n2\n+ 17s - 30\nG\nc\n(s) = U(s)\n-Y(s) = num\nden =- CC/H33522As\n \nI - A/H33522B\n-1\nB/H33522+ D/H33522D\n K\ne\n=\nB\n10\n-24\nR\n K = [1.25\n \n1.25\n \n0.19375]\nOpenmirrors.comSection 10–6 / Design of Regulator Systems with Observers 781\nMATLAB Program 10–13\n% Obtaining the characteristic equation\n[num1,den1] = ss2tf(A-B*K,eye(3),eye(3),eye(3),1);\n[num2,den2] = ss2tf(Abb-Ke*Aab,eye(2),eye(2),eye(2),1);\ncharact_eq = conv(den1,den2)\ncharact_eq =\n1.0e+003*\n0.0010   0.0270   0.2550   1.0250   2.0000   2.5000\nr = 0 yu\n+ –\n9.1s2 + 73.5s + 125\ns2 + 17s – 30\n10(s + 2)\ns(s + 4) (s + 6)\nObserver controller Plant\nThe observer controller has a pole in the right-half s plane (s=1.6119). The exis-\ntence of an open-loop right-half s plane pole in the observer controller means that the\nsystem is open-loop unstable, although the closed-loop system is stable. The latter can\nbe seen from the characteristic equation for the system:\n(See MATLAB Program 10–13 for the calculation of the characteristic equation.)\nA disadvantage of using an unstable controller is that the system becomes unstable\nif the dc gain of the system becomes small. Such a control system is neither desirable nor\nacceptable. Hence, to get a satisfactory system, we need to modify the closed-loop pole\nlocation and/or observer pole location.\n = (s + 1 + j2)(s + 1 - j2)(s + 5)(s + 10)(s + 10) = 0\n = s5 + 27s4 + 255s3 + 1025s2 + 2000s + 2500\n∑s I - A + BK∑ /H11554@s I - Abb + Ke  Aab @\nFigure 10–20\nBlock diagram of\nSystem 1.\nSecond trial: Let us keep the desired closed-loop poles for pole placement as before,\nbut modify the observer pole locations as follows:\ns=–4.5, s=–4.5\nThus,\nL=[–4.5 –4.5]\nUsing MATLAB, we find the new Ke to be\nKe = B-1\n6.25 R782\nChapter 10 / Control Systems Design in State Space\nMATLAB Program 10–14\n% Determination of transfer function of observer controller.\nA = [0  1  0;0  0  1;0  -24  -10];\nB = [0;10;-80];\nAaa = 0; Aab = [1  0]; Aba = [0;0]; Abb = [0  1;-24  -10];\nBa = 0; Bb = [10;-80];\nKa = 1.25; Kb = [1.25  0.19375];\nKe = [-1;6.25];\nAhat = Abb - Ke*Aab;\nBhat = Ahat*Ke + Aba - Ke*Aaa;\nFhat = Bb - Ke*Ba;\nAtilde = Ahat - Fhat*Kb;\nBtilde = Bhat - Fhat*(Ka + Kb*Ke);\nCtilde = -Kb;\nDtilde = -(Ka + Kb*Ke);\n[num,den] = ss2tf(Atilde,Btilde,-Ctilde,-Dtilde)\nnum =\n1.2109  11.2125  25.3125\nden =\n1.0000  6.0000  2.1406\nNext, we shall obtain the transfer function of the observer controller. MATLAB\nProgram 10–14 produces this transfer function as follows:\n = 1.2109(s + 5.3582)(s + 3.9012)\n(s + 5.619)(s + 0.381)\n G\nc\n(s) = 1.2109s\n2\n+ 11.2125s + 25.3125\ns\n2\n+ 6s + 2.1406\nNotice that this is a stable controller. Define the system with this observer controller as\nSystem 2. We shall proceed to obtain the response of System 2 to the given initial\ncondition:\nBy substituting into the state-space equation for the plant, we obtain\n(10–110)= Ax - BK\nb\nx -\nB\n0\ne\nR\nr\n= Ax - BKx + BCK\na\n \nK\nb\nD\nB\n0\ne\nR\nx# = Ax - BK x/H33522= Ax - BK\nB\nx\na\nx/H33522\nb\nR\n= Ax - BK\nB\nx\na\nx\nb\n- e\nR\nu =- Kx/H33522\nx(0) =\nC\n1\n0\n0\nS\n,\n  \ne(0) =\nB\n1\n0\nR\nOpenmirrors.comSection 10–6 / Design of Regulator Systems with Observers 783\nThe error equation for the minimum-order observer is\n(10–111)\nBy combining Equations (10–110) and (10–111), we get\nwith the initial condition\nMATLAB Program 10–15 produces the response to the given initial condition. The\nresponse curves are shown in Figure 10–21.They seem to be acceptable.\nBx(0)\ne(0) R = E\n1\n0\n0\n1\n0\nU\nBx#\ne# R = BA - BK\n0\nBKb\nAbb - Ke Aab\nRBx\ne R\ne# = AAbb - Ke  AabBe\nMATLAB Program 10–15\n% Response to initial condition.\nA = [0  1  0;0  0  1;0  -24  -10];\nB = [0;10;-80];\nK = [1.25  1.25  0.19375];\nKb = [1.25  0.19375];\nKe = [-1;6.25];\nAab = [1  0]; Abb = [0  1;-24  -10];\nAA = [A-B*K  B*Kb; zeros(2,3)  Abb-Ke*Aab];\nsys = ss(AA,eye(5),eye(5),eye(5));\nt = 0:0.01:8;\nx = initial(sys,[1;0;0;1;0],t);\nx1 = [1  0  0  0  0]*x';\nx2 = [0  1  0  0  0]*x';\nx3 = [0  0  1  0  0]*x';\ne1 = [0  0  0  1  0]*x';\ne2 = [0  0  0  0  1]*x';\nsubplot(3,2,1); plot(t,x1); grid\nxlabel ('t (sec)'); ylabel('x1')\nsubplot(3,2,2); plot(t,x2); grid\nxlabel ('t (sec)'); ylabel('x2')\nsubplot(3,2,3); plot(t,x3); grid\nxlabel ('t (sec)'); ylabel('x3')\nsubplot(3,2,4); plot(t,e1); grid\nxlabel('t (sec)'); ylabel('e1')\nsubplot(3,2,5); plot(t,e2); grid\nxlabel('t (sec)'); ylabel('e2')784\nChapter 10 / Control Systems Design in State Space\nNext, we shall check the frequency-response characteristics.The Bode diagram of the\nopen-loop system just designed is shown in Figure 10–22.The phase margin is about 40°\nand the gain margin is ±q dB. The Bode diagram of the closed-loop system is shown in\nFigure 10–23. The bandwidth of the system is approximately 3.8 rad/sec.\nx\n1\n02468\nt (sec)\n02468\nt (sec)\n02468\nt (sec)\n02468\nt (sec)\n02468\nt (sec)\n−0.5\n0\n0.5\n1\ne\n2\n−3\n−2\n−1\n0\nx\n2\n−1.5\n−0.5\n−1\n0\n0.5\nx\n3\n−5\n5\n0\n10\n15\ne\n1\n0\n1\n0.5\n1.5\nFigure 10–21\nResponse to the\ngiven initial\ncondition; x\n1\n(0)=1,\nx\n2\n(0)=0, x\n3\n(0)=0,\ne\n1\n(0)=1, e\n2\n(0)=0.\nFrequency (rad/sec)\nBode Diagram of System 2 — Open Loop\n−200\n−150\n−100\n−50\n−100\nPhase (deg); Magnitude (dB)\n−50\n0\n50\n100\n10\n−3\n10\n−2\n10\n−1\n10\n0\n10\n1\n10\n2\nFigure 10–22\nBode diagram for the\nopen-loop transfer\nfunction of System 2.\nOpenmirrors.comSection 10–6 / Design of Regulator Systems with Observers 785\nFinally, we shall compare the root-locus plots of the first system with L=[–10 –10]\nand the second system with L=[–4.5 –4.5]. The plot for the first system given in\nFigure 10–24(a) shows that the system is unstable for small dc gain and becomes stable\nfor large dc gain. The plot for the second system given in Figure 10–24(b), on the other\nhand, shows that the system is stable for any positive dc gain.\nFrequency (rad/sec)\nBode Diagram of System 2 — Closed Loop\n−200\n−50\n−100\n−150\n0\n−60\n−40\nPhase (deg); Magnitude (dB)\n20\n−20\n0\n10−1 100 101 102\nFigure 10–23\nBode diagram for the\nclosed-loop transfer\nfunction of System 2.\nRoot-Locus Plot of (91s3 + 917s2 + 2720s + 2500)/\n(s5 + 27s4 + 164s3 + 108s2 − 720s)\nReal Axis\nImag Axis\n2\n−4\n−6\n−8−14 −12 −10 −8 −6 −4 −20 2\n4\n−2\n0\n6\n8\n(a)\nRoot-Locus Plot of (12.109s3 + 136.343s2 + 477.375s + 506.25)/\n(s5 + 16s4 + 86.1406s3 + 165.406s2 + 51.3744s)\nReal Axis\nImag Axis\n2\n−3\n−4\n−5−8 −7 −6 −5 −4 −3 −2 −10 1 2\n3\n−2\n−1\n0\n1\n4\n5\n(b)\nFigure 10–24\n(a) Root-locus plot of the system with observer poles at s=–10 and s=–10; (b) root-locus plot of the\nsystem with observer poles at s=–4.5 and s=–4.5.786\nChapter 10 / Control Systems Design in State Space\nComments\n1. In designing regulator systems, note that if the dominant controller poles are placed\nfar to the left of the jv axis, the elements of the state feedback gain matrix K will\nbecome large. Large gain values will make the actuator output become large, so\nthat saturation may take place. Then the designed system will not behave as\ndesigned.\n2. Also, by placing the observer poles far to the left of the jv axis, the observer\ncontroller becomes unstable, although the closed-loop system is stable.An unstable\nobserver controller is not acceptable.\n3. If the observer controller becomes unstable, move the observer poles to the right\nin the left-half s plane until the observer controller becomes stable.Also, the desired\nclosed-loop pole locations may need to be modified.\n4. Note that if the observer poles are placed far to the left of the jv axis, the band-\nwidth of the observer will increase and will cause noise problems. If there is a\nserious noise problem, the observer poles should not be placed too far to the left\nof the jvaxis.The general requirement is that the bandwidth should be sufficiently\nlow so that the sensor noise will not become a problem.\n5. The bandwidth of the system with the minimum-order observer is higher than that\nof the system with the full-order observer, provided that the multiple observer\npoles are placed at the same place for both observers. If the sensor noise is a seri-\nous problem, use of a full-order observer is recomnended.\n10–7 DESIGN OF CONTROL SYSTEMS WITH OBSERVERS\nIn Section 10–6 we discussed the design of regulator systems with observers. (The systems\ndid not have reference or command inputs.) In this section we consider the design of\ncontrol systems with observers when the systems have reference inputs or command\ninputs. The output of the control system must follow the input that is time varying. In\nfollowing the command input, the system must exhibit satisfactory performance (a\nreasonable rise time, overshoot, settling time, and so on).\nIn this section we consider control systems that are designed by use of the pole-\nplacement-with-observer approach. Specifically, we consider control systems using\nobserver controllers. In Section 10–6 we discussed regulator systems, whose block\ndiagram is shown in Figure 10–25. This system has no reference input, or r=0. When\nthe system has a reference input, several different block diagram configurations are\nconceivable, each having an observer controller.Two of these configurations are shown\nin Figures 10–26 (a) and (b); we shall consider them in this section.\nr = 0 yu\nPlant\n–y Observer\ncontroller\n+ –\nFigure 10–25\nRegulator system.\nOpenmirrors.comSection 10–7 / Design of Control Systems with Observers 787\nry\nPlant\nr + u\nObserver\ncontroller\n+ –\n–u\nr y u\nPlant\nr – y Observer\ncontroller+ –\n(a)\n(b)\nr y uObserver\ncontroller+ –\n1\ns(s2 + 1)\nPlant\nFigure 10–27\nControl system with\nobserver controller\nin the feedforward\npath.\nConfiguration 1: Consider the system shown in Figure 10–27. In this system the refer-\nence input is simply added at the summing point. We would like to design the observer\ncontroller such that in the unit-step response the maximum overshoot is less than 30%\nand the settling time is about 5 sec.\nIn what follows we first design a regulator system.Then, using the observer controller\ndesigned, we simply add the reference input r at the summing point.\nBefore we design the observer controller, we need to obtain a state-space represen-\ntation of the plant. Since\nwe obtain\nBy choosing the state variables as\nwe get\n y = Cx\n x# = Ax + Bu\n x3 = y$\n x2 = y#\n x1 = y\ny% + y# = u\nY(s)\nU(s) = 1\nsAs2 + 1B\nFigure 10–26\n(a) Control system\nwith observer\ncontroller in the\nfeedforward path;\n(b) Control system\nwith observer\ncontroller in the\nfeedback path.788\nChapter 10 / Control Systems Design in State Space\nwhere\nNext, we choose the desired closed-loop poles for pole placement at\ns=–1+j, s=–1-j, s=–8\nand the desired observer poles at\ns=–4, s=–4\nThe state feedback gain matrix K and the observer gain matrix K\ne\ncan be obtained as\nfollows:\nSee MATLAB Program 10–16.\n K\ne\n=\nB\n8\n15\nR\n K = [16\n \n17\n \n10]\nA =\nC\n0\n0\n0\n1\n0\n-1\n0\n1\n0\nS\n,\n  \nB =\nC\n0\n0\n1\nS\n,\n  \nC = [1\n \n0\n \n0]\nMATLAB Program 10–16\nA = [0  1  0;0  0  1;0  -1  0];\nB = [0;0;1];\nJ = [-1+j  -1-j  -8];\nK = acker(A,B,J)\nK =\n16  17  10\nAab = [1  0];\nAbb = [0  1;-1  0];\nL = [-4  -4];\nKe = acker(Abb',Aab',L)'\nKe =\n8\n15\nThe transfer function of the observer controller is obtained by use of MATLAB\nProgram 10–17. The result is\n = 302(s + 0.5017 + j0.772)(s + 0.5017 - j0.772)\n(s + 9 + j5.6569)(s + 9 - j5.6569)\n G\nc\n(s) = 302s\n2\n+ 303s + 256\ns\n2\n+ 18s + 113\nOpenmirrors.comSection 10–7 / Design of Control Systems with Observers 789\nFigure 10–28 shows the block diagram of the regulator system just designed. Figure\n10–29 shows the block diagram of a possible configuration of the control system based\non the regulator system shown in Figure 10–28. The unit-step response curve for this\ncontrol system is shown in Figure 10–30.The maximum overshoot is about 28% and the\nsettling time is about 4.5 sec.Thus, the designed system satisfies the design requirements.\nMATLAB Program 10–17\n% Determination of transfer function of observer controller\nA = [0  1  0;0  0  1;0  -1  0];\nB = [0;0;1];\nAaa = 0; Aab = [1  0]; Aba = [0;0]; Abb = [0  1;-1  0];\nBa = 0; Bb = [0;1];\nKa = 16; Kb=[17  10];\nKe = [8;15];\nAhat = Abb - Ke*Aab;\nBhat = Ahat*Ke + Aba - Ke*Aaa;\nFhat = Bb - Ke*Ba;\nAtilde = Ahat - Fhat*Kb;\nBtilde = Bhat - Fhat*(Ka + Kb*Ke);\nCtilde = -Kb;\nDtilde = -(Ka + Kb*Ke);\n[num,den] = ss2tf(Atilde,Btilde,-Ctilde,-Dtilde)\nnum =\n302.0000  303.0000  256.0000\nden =\n1  18  113\ny–yu\n–\n302s2 + 303s + 256\ns2 + 18s + 113\nObserver controller\n1\ns(s2 + 1)\nPlant\nyr – yru\n–+ 302s2 + 303s + 256\ns2 + 18s + 113\n1\ns(s2 + 1)\nObserver controller Plant\nFigure 10–29\nControl system with\nobserver controller\nin the feedforward\npath.\nFigure 10–28\nRegulator system\nwith observer\ncontroller.790\nChapter 10 / Control Systems Design in State Space\nOutput y\nt (sec)\nUnit-Step Response of\n(302s\n2\n + 303s + 256)/(s\n5\n +18s\n4\n + 114s\n3\n + 320s\n2\n + 416s + 256)\n0.6\n0.8\n1\n1.2\n1.4\n0.4\n0.2\n0\n0123456789 1 0\nFigure 10–30\nUnit-step response of\nthe control system\nshown in Figure\n10–29.\nConfiguration 2: A different configuration of the control system is shown in Figure\n10–31. The observer controller is placed in the feedback path. The input r is introduced\ninto the closed-loop system through the box with gain N. From this block diagram, the\nclosed-loop transfer function is obtained as\nWe determine the value of constant N such that for a unit-step input r, the output y is\nunity as t approaches infinity. Thus we choose\nThe unit-step response of the system is shown in Figure 10–32. Notice that the maxi-\nmum overshoot is very small, approximately 4%. The settling time is about 5 sec.\nN = 256\n113 = 2.2655\nY(s)\nR(s) =\nNAs\n2\n+ 18s + 113B\nsAs\n2\n+ 1BAs\n2\n+ 18s + 113B + 302s\n2\n+ 303s + 256\nyNr + u\n–u\nr\n–+\n302s\n2\n+ 303s + 256\ns\n2\n+ 18s + 113\n1\ns(s\n2\n+ 1)\nN\nFigure 10–31\nControl system with\nobserver controller\nin the feedback path.\nOpenmirrors.comSection 10–7 / Design of Control Systems with Observers 791\nOutput y\nt (sec)\nUnit-Step Response of\n(2.2655s2 + 40.779s + 256)/(s5 + 18s4 + 114s3 + 320s2 + 416s + 256)\n0.6\n0.8\n1\n1.2\n1.4\n0.4\n0.2\n0\n0123456789 1 0\nFigure 10–32\nThe unit-step\nresponse of the\nsystem shown in\nFigure 10–31. (The\nclosed-loop poles for\npole placement are\nats=–1 ; j,\ns=–8. The observer\npoles are at s=–4,\ns=–4.)\nComments. We considered two possible configurations for the closed-loop control\nsystems using observer controllers. As stated earlier, other configurations are possible.\nThe first configuration, which places the observer controller in the feedforward path, gen-\nerally gives a fairly large overshoot.The second configuration, which places the observer con-\ntroller in the feedback path, gives a smaller overshoot.This response curve is quite similar to\nthat of the system designed by the pole-placement approach without using the observer con-\ntroller. See the unit-step response curve of the system, shown in Figure 10–33, designed by\nthe pole-placement approach without observer. Here the desired closed-loop poles used are\ns =- 1 + j,  s =- 1 - j,  s =- 8\nOutput y\nt (sec)\nUnit-Step Response of System without Observer\n0.6\n0.8\n1\n1.2\n1.4\n0.4\n0.2\n0\n0123456789 1 0\nFigure 10–33\nThe unit-step\nresponse of the\ncontrol system\ndesigned by the pole\nplacement approach\nwithout observer.\n(The closed-loop\npoles are at\ns=–1 ; j, s=–8.)792\nChapter 10 / Control Systems Design in State Space\nFrequency (rad/sec)\nBode Diagrams of Closed-Loop Systems\n−300\n0\n−100\n−200\n100\n−150\n−100\nPhase (deg); Magnitude (dB)\n50\n−50\n0\n10\n−1\n10\n0\n10\n1\n10\n2\nSystem 1\nSystem 2\nSystem 1\nSystem 2\nFigure 10–34\nBode diagrams of\nclosed-loop system 1\n(shown in Figure\n10–29) and closed-\nloop system 2 (shown\nin Figure 10–31).\nNote that, in these two systems, the rise time and settling time are determined primari-\nly by the desired closed-loop poles for pole placement. (See Figures 10–32 and 10–33.)\nThe Bode diagrams of closed-loop system 1 (shown in Figure 10–29) and closed-\nloop system 2 (shown in Figure 10–31) are shown in Figure 10–34. From this figure, we\nfind that the bandwidth of system 1 is 5 rad/H20862sec and that of system 2 is 1.3 rad/H20862sec.\nSummary of State-Space Design Method\n1. The state-space design method based on the pole-placement-combined-with-\nobserver approach is very powerful. It is a time-domain method.The desired closed-\nloop poles can be arbitrarily placed, provided the plant is completely state\ncontrollable.\n2. If not all state variables can be measured, an observer must be incorporated to\nestimate the unmeasurable state variables.\n3. In designing a system using the pole-placement approach, several different sets of\ndesired closed-loop poles need be considered, the response characteristics\ncompared, and the best one chosen.\n4. The bandwidth of the observer controller is generally large, because we choose\nobserver poles far to the left in the s plane. A large bandwidth passes high-\nfrequency noises and causes the noise problem.\n5. Adding an observer to the system generally reduces the stability margin. In some\ncases, an observer controller may have zero(s) in the right-half s plane, which\nmeans that the controller may be stable but of nonminimum phase. In other cases,\nthe controller may have pole(s) in the right-half s plane—that is, the controller is\nunstable. Then the designed system may become conditionally stable.\n6. When the system is designed by the pole-placement-with-observer approach, it is\nadvisable to check the stability margins (phase margin and gain margin), using a\nOpenmirrors.comSection 10–8 / Quadratic Optimal Regulator Systems 793\nfrequency-response method. If the system designed has poor stability margins, it\nis possible that the designed system may become unstable if the mathematical\nmodel involves uncertainties.\n7. Note that for nth-order systems, classical design methods (root-locus and\nfrequency-response methods) yield low-order compensators (first or second order).\nSince the observer-based controllers are nth-order Cor (N-m)th-order if the\nminimum-order observer is used Dfor an nth-order system, the designed system\nwill become 2nth order Cor (2n-m)th orderD. Since lower-order compensators are\ncheaper than higher-order ones, the designer should first apply classical methods\nand, if no suitable compensators can be determined, then try the pole-placement-\nwith-observer design approach presented in this chapter.\n10–8 QUADRATIC OPTIMAL REGULATOR SYSTEMS\nAn advantage of the quadratic optimal control method over the pole-placement method\nis that the former provides a systematic way of computing the state feedback control gain\nmatrix.\nQuadratic Optimal Regulator Problems. We shall now consider the optimal\nregulator problem that, given the system equation \n(10–112)\ndetermines the matrix K of the optimal control vector\n(10–113)\nso as to minimize the performance index\n(10–114)\nwhere Q is a positive-definite (or positive-semidefinite) Hermitian or real symmetric\nmatrix and R is a positive-definite Hermitian or real symmetric matrix. Note that the\nsecond term on the right-hand side of Equation (10–114) accounts for the expenditure\nof the energy of the control signals. The matrices Q and R determine the relative\nimportance of the error and the expenditure of this energy. In this problem, we assume\nthat the control vector u(t) is unconstrained.\nAs will be seen later, the linear control law given by Equation (10–113) is the optimal\ncontrol law. Therefore, if the unknown elements of the matrix K are determined so as\nto minimize the performance index, then u(t)=–Kx(t) is optimal for any initial state\nx(0). The block diagram showing the optimal configuration is shown in Figure 10–35.\nJ =\n3\nq\n0\n(x*Qx + u* Ru) dt\nu(t) =- Kx(t)\nx# = Ax + Bu\nx = Ax + Bu. xu\n–K\nFigure 10–35\nOptimal regulator\nsystem.794\nChapter 10 / Control Systems Design in State Space\nNow let us solve the optimization problem. Substituting Equation (10–113) into\nEquation (10–112), we obtain\nIn the following derivations, we assume that the matrix A-BK is stable, or that the\neigenvalues of A-BK have negative real parts.\nSubstituting Equation (10–113) into Equation (10–114) yields\nLet us set\nwhere P is a positive-definite Hermitian or real symmetric matrix. Then we obtain\nComparing both sides of this last equation and noting that this equation must hold true\nfor any x, we require that\n(10–115)\nIt can be proved that if A-BK is a stable matrix, there exists a positive-definite ma-\ntrix P that satisfies Equation (10–115). (See Problem A–10–15.)\nHence our procedure is to determine the elements of P from Equation (10–115) and\nsee if it is positive definite. (Note that more than one matrix P may satisfy this equation.\nIf the system is stable, there always exists one positive-definite matrix P to satisfy this\nequation.This means that, if we solve this equation and find one positive-definite matrix\nP, the system is stable. Other P matrices that satisfy this equation are not positive definite\nand must be discarded.)\nThe performance index J can be evaluated as\nSince all eigenvalues of A-BK are assumed to have negative real parts, we have\nTherefore, we obtain\n(10–116)\nThus, the performance index J can be obtained in terms of the initial condition x(0)\nand P.\nTo obtain the solution to the quadratic optimal control problem, we proceed as\nfollows: Since R has been assumed to be a positive-definite Hermitian or real symmetric\nmatrix, we can write\nR = T*\n \nT\nJ = x*(0)\n \nPx(0)\nx(q) S 0.\nJ =\n3\nq\n0\nx*(Q + K*\n \nRK)x dt =- x*\n \nPx\n2\nq\n0\n=- x*(q)\n \nPx(q) + x*(0)\n \nPx(0)\n(A - BK)*\n \nP + P(A - BK) =- (Q + K*\n \nRK)\nx*(Q + K*\n \nRK)\n \nx =- x# *\n \nPx - x*\n \nPx# =- x*C(A - BK)*\n \nP + P(A - BK)D\n \nx\nx*(Q + K*RK)\n \nx =- d\ndt (x*Px)\n=\n3\nq\n0\nx*(Q + K*RK)\n \nx dt\nJ =\n3\nq\n0\n(x*Qx + x*K*RKx) dt\nx# = Ax - BKx = (A - BK)\n \nx\nOpenmirrors.comSection 10–8 / Quadratic Optimal Regulator Systems 795\nwhere T is a nonsingular matrix. Then Equation (10–115) can be written as\nwhich can be rewritten as\nThe minimization of J with respect to K requires the minimization of\nwith respect to K. (See Problem A–10–16.) Since this last expression is nonnegative, the\nminimum occurs when it is zero, or when\nHence,\n(10–117)\nEquation (10–117) gives the optimal matrix K.Thus, the optimal control law to the quad-\nratic optimal control problem when the performance index is given by Equation (10–114)\nis linear and is given by\nThe matrix P in Equation (10–117) must satisfy Equation (10–115) or the following\nreduced equation:\n(10–118)\nEquation (10–118) is called the reduced-matrix Riccati equation. The design steps may\nbe stated as follows:\n1. Solve Equation (10–118), the reduced-matrix Riccati equation, for the matrix P.\n[If a positive-definite matrix P exists (certain systems may not have a positive-\ndefinite matrix P), the system is stable, or matrix A-BK is stable.]\n2. Substitute this matrix P into Equation (10–117). The resulting matrix K is the\noptimal matrix.\nA design example based on this approach is given in Example 10–9. Note that if the\nmatrix A-BK is stable, the present method always gives the correct result.\nFinally, note that if the performance index is given in terms of the output vector\nrather than the state vector, that is,\nthen the index can be modified by using the output equation\nto\n(10–119)\nand the design steps presented in this section can be applied to obtain the optimal\nmatrix K.\nJ =\n3\nq\n0\n(x* C* QCx + u* Ru) dt\ny = Cx\nJ =\n3\nq\n0\n(y* Qy + u* Ru) dt\nA* P + PA - PBR-1 B* P + Q = 0\nu(t) =- Kx(t) =- R-1 B* Px(t)\nK = T-1(T*)-1 B* P = R-1 B* P\nTK = (T*)-1 B* P\nx*CTK - (T*)-1 B* PD*CTK - (T*)-1 B* PD x\nA*P + PA + CTK - (T*)- 1B *PD*CTK - (T*)- 1B *PD - PBR- 1B*P + Q = 0\n(A* - K* B*) P + P(A - BK) + Q + K* T* TK = 0796\nChapter 10 / Control Systems Design in State Space\nEXAMPLE 10–9\nConsider the system shown in Figure 10–36. Assuming the control signal to be\ndetermine the optimal feedback gain matrix K such that the following performance index is\nminimized:\nwhere\n(m /H113500)\nFrom Figure 10–36, we find that the state equation for the plant is\nwhere\nWe shall demonstrate the use of the reduced-matrix Riccati equation in the design of the\noptimal control system. Let us solve Equation (10–118), rewritten as\nNoting that matrix A is real and matrix Q is real symmetric, we see that matrix P is a real sym-\nmetric matrix. Hence, this last equation can be written as\nThis equation can be simplified to\nB\n0\np\n11\n0\np\n12\nR\n+\nB\n0\n0\np\n11\np\n12\nR\n-\nB\np\n2\n12\np\n12\n \np\n22\np\n12\n \np\n22\np\n2\n22\nR\n+\nB\n1\n0\n0\nm\nR\n=\nB\n0\n0\n0\n0\nR\n -\nB\np\n11\np\n12\np\n12\np\n22\nRB\n0\n1\nR\n[1][0\n \n1]\nB\np\n11\np\n12\np\n12\np\n22\nR\n+\nB\n1\n0\n0\nm\nR\n=\nB\n0\n0\n0\n0\nR\n \nB\n0\n1\n0\n0\nRB\np\n11\np\n12\np\n12\np\n22\nR\n+\nB\np\n11\np\n12\np\n12\np\n22\nRB\n0\n0\n1\n0\nR\nA*\n \nP + PA - PBR\n-1\n \nB*\n \nP + Q = 0\nA =\nB\n0\n0\n1\n0\nR\n,\n  \nB =\nB\n0\n1\nR\nx# = Ax + Bu\nQ =\nB\n1\n0\n0\nm\nR\nJ =\n3\nq\n0\nAx\nT\n \nQx + u\n2\nBdt\nu(t) =- Kx(t)\nux\n1\nPlant\nx\n2\n–K\n/H20848/H20848\nFigure 10–36\nControl system.\nOpenmirrors.comSection 10–8 / Quadratic Optimal Regulator Systems 797\nfrom which we obtain the following three equations:\nSolving these three simultaneous equations for p11, p12, and p22, requiring P to be positive definite,\nwe obtain\nReferring to Equation (10–117), the optimal feedback gain matrix K is obtained as\nThus, the optimal control signal is\n(10–120)\nNote that the control law given by Equation (10–120) yields an optimal result for any initial state\nunder the given performance index. Figure 10–37 is the block diagram for this system.\nSince the characteristic equation is\nif m=1, the two closed-loop poles are located at\nThese correspond to the desired closed-loop poles when m=1.\nSolving Quadratic Optimal Regulator Problems with MATLAB. In MATLAB,\nthe command\nlqr(A,B,Q,R)\ns =- 0.866 + j 0.5,  s =- 0.866 - j 0.5\n∑s I - A + BK∑ = s2 + 1m + 2 s + 1 = 0\nu =- Kx =- x1 - 1m + 2 x2\n = C1 1m + 2D\n = Cp12 p22 D\n = [1][0 1] Bp11\np12\np12\np22\nR\n K = R-1 B* P\nP = Bp11\np12\np12\np22\nR= B1m + 2\n1\n1\n1m + 2 R\n m+ 2p12 - p2\n22 = 0\n p11 - p12 p22 = 0\n 1 - p2\n12 = 0\n––\nux 1\nPlant\nx2\n/H20848/H20848\nm + 2/H20881Figure 10–37\nOptimal control of\nthe plant shown in\nFigure 10–36.798\nChapter 10 / Control Systems Design in State Space\nsolves the continuous-time, linear, quadratic regulator problem and the associated Riccati\nequation. This command calculates the optimal feedback gain matrix K such that the\nfeedback control law\nminimizes the performance index\nsubject to the constraint equation\nAnother command\n[K,P,E] = lqr(A,B,Q,R)\nreturns the gain matrix K, eigenvalue vector E, and matrix P, the unique positive-definite\nsolution to the associated matrix Riccati equation:\nIf matrix A-BK is a stable matrix, such a positive-definite solution P always exists.The\neigenvalue vector E gives the closed-loop poles of A-BK.\nIt is important to note that for certain systems matrix A-BK cannot be made a sta-\nble matrix, whatever K is chosen. In such a case, there does not exist a positive-definite\nmatrix P for the matrix Riccati equation. For such a case, the commands\nK = lqr(A,B,Q,R)\n[K,P,E] = lqr(A,B,Q,R)\ndo not give the solution. See MATLAB Program 10–18.\nEXAMPLE 10–10\nConsider the system defined by\nShow that the system cannot be stabilized by the state-feedback control scheme\nwhatever matrix K is chosen. (Notice that this system is not state controllable.)\nDefine\nThen\n =\nB\n-1 - k\n1\n0\n1 - k\n2\n2\nR\n A - BK =\nB\n-1\n0\n1\n2\nR\n-\nB\n1\n0\nR\nCk\n1\n \nk\n2\nD\nK = Ck\n1\n \nk\n2\nD\nu =- Kx\nB\nx#\n1\nx#\n2\nR\n=\nB\n-1\n0\n1\n2\nRB\nx\n1\nx\n2\nR\n+\nB\n1\n0\nR\nu\nPA + A*\n \nP - PBR\n-1\n \nB*\n \nP + Q = 0\nx# = Ax + Bu\nJ =\n3\nq\n0\n(x*\n \nQx + u*\n \nRu) dt\nu =- Kx\nOpenmirrors.comSection 10–8 / Quadratic Optimal Regulator Systems 799\nHence, the characteristic equation becomes\nThe closed-loop poles are located at\nSince the pole at s=2 is in the right-half s plane, the system is unstable whatever K matrix is\nchosen. Hence, quadratic optimal control techniques cannot be applied to this system.\nLet us assume that matrices Q and R in the quadratic performance index are given by\nand that we write MATLAB Program 10–18. The resulting MATLAB solution is\nK = [NaN  NaN]\n(NaN means ‘not a number.’) Whenever the solution to a quadratic optimal control problem does\nnot exist, MATLAB tells us that matrix K consists of NaN.\nQ = B1\n0\n0\n1 R,  R = [1]\ns =- 1 - k1 ,  s = 2\n= As + 1 + k1B(s - 2) = 0\n∑s I - A + BK∑ = 2s + 1 + k1\n0\n-1 + k2\ns - 2\n2\nMATLAB Program 10–18\n% ---------- Design of quadratic optimal regulator system ----------\nA = [-1 1;0  2];\nB = [1;0];\nQ = [1  0;0  1];\nR = [1];\nK = lqr(A,B,Q,R)\nWarning: Matrix is singular to working precision.\nK =\nNaN  NaN\n% ***** If we enter the command [K,P,E] = lqr(A,B,Q,R), then *****\n[K,P,E] = lqr(A,B,Q,R)\nWarning: Matrix is singular to working precision.\nK =\nNaN  NaN\nP=\n-Inf  -Inf\n-Inf  -Inf\nE =\n-2.0000\n-1.4142800\nChapter 10 / Control Systems Design in State Space\nEXAMPLE 10–11\nConsider the system described by\nwhere\nThe performance index J is given by\nwhere\nAssume that the following control u is used.\nDetermine the optimal feedback gain matrix K.\nThe optimal feedback gain matrix K can be obtained by solving the following Riccati equation\nfor a positive-definite matrix P:\nThe result is\nSubstituting this P matrix into the following equation gives the optimal K matrix:\nThus, the optimal control signal is given by\nMATLAB 10–19 also yields the solution to this problem.\nu =- Kx =- x\n1\n- x\n2\n= [1][0\n \n1]\nB\n2\n1\n1\n1\nR\n= [1\n \n1]\n K = R\n-1\n \nB¿\n \nP\nP =\nB\n2\n1\n1\n1\nR\nA¿\n \nP + PA - PBR\n-1\n \nB¿\n \nP + Q = 0\nu =- Kx\nQ =\nB\n1\n0\n0\n1\nR\n,\n  \nR = [1]\nJ =\n3\nq\n0\n(x¿\n \nQx + u¿\n \nRu) dt\nA =\nB\n0\n0\n1\n-1\nR\n,\n  \nB =\nB\n0\n1\nR\nx# = Ax + Bu\nMATLAB Program 10–19\n% ---------- Design of quadratic optimal regulator system ----------\nA = [0  1;0  -1];\nB = [0;1];\nQ = [1  0; 0  1];\nR = [1];\nK = lqr(A,B,Q,R)\nK =\n1.0000 1.0000\nOpenmirrors.comSection 10–8 / Quadratic Optimal Regulator Systems 801\nEXAMPLE 10–12 Consider the system given by\nwhere\nThe performance index J is given by\nwhere\nObtain the positive-definite solution matrix P of the Riccati equation, the optimal feedback gain\nmatrix K, and the eigenvalues of matrix A-BK.\nMATLAB Program 10–20 will solve this problem.\nQ = C\n1\n0\n0\n0\n1\n0\n0\n0\n1\nS,  R = [1]\nJ =\n3\nq\n0\n(x¿ Qx + u¿ Ru) dt\nA = C\n0\n0\n-35\n1\n0\n-27\n0\n1\n-9\nS,  B = C\n0\n0\n1\nS\nx# = Ax + Bu\nMATLAB Program 10–20\n% ---------- Design of quadratic optimal regulator system ----------\nA = [0  1  0;0  0  1;-35  -27  -9];\nB = [0;0;1];\nQ = [1  0  0;0  1  0;0  0  1];\nR = [1];\n[K,P,E] = lqr(A,B,Q,R)\nK =\n0.0143 0.1107 0.0676\nP=\n4.2625 2.4957 0.0143\n2.4957 2.8150 0.1107\n0.0143 0.1107 0.0676\nE = \n-5.0958\n-1.9859 + 1.7110i\n-1.9859 - 1.7110i802\nChapter 10 / Control Systems Design in State Space\nNext, let us obtain the response x of the regulator system to the initial condition x(0), where\nWith state feedback u=–Kx, the state equation for the system becomes\nThen the system, or sys, can be given by\nsys = ss(A-B*K, eye(3), eye(3), eye(3))\nMATLAB Program 10–21 produces the response to the given initial condition. The response\ncurves are shown in Figure 10–38.\nx# = Ax + Bu = (A - BK)\n \nx\nx(0) =\nC\n1\n0\n0\nS\nEXAMPLE 10–13\nConsider the system shown in Figure 10–39. The plant is defined by the following state-space\nequations:\nwhere\nThe control signal u is given by\nu = k\n1\nAr - x\n1\nB- Ak\n2\n \nx\n2\n+ k\n3\n \nx\n3\nB= k\n1\n \nr - Ak\n1\n \nx\n1\n+ k\n2\n \nx\n2\n+ k\n3\n \nx\n3\nB\nA =\nC\n0\n0\n0\n1\n0\n-2\n0\n1\n-3\nS\n,\n \nB =\nC\n0\n0\n1\nS\n,\n  \nC = [1\n \n0\n \n0],\n  \nD = [0]\n y = Cx + Du\n x# = Ax + Bu\nMATLAB Program 10–21\n% Response to initial condition.\nA = [0  1  0;0  0  1;-35  -27  -9];\nB = [0;0;1];\nK = [0.0143  0.1107  0.0676];\nsys = ss(A-B*K, eye(3),eye(3),eye(3));\nt = 0:0.01:8;\nx = initial(sys,[1;0;0],t);\nx1 = [1  0  0]*x';\nx2 = [0  1  0]*x';\nX3 = [0  0  1]*x';\nsubplot(2,2,1); plot(t,x1); grid\nxlabel('t (sec)'); ylabel('x1')\nsubplot(2,2,2); plot(t,x2); grid\nxlabel('t (sec)'); ylabel('x2)\nsubplot(2,2,3); plot(t,x3); grid\nxlabel('t (sec)'); ylabel('x3')\nOpenmirrors.comSection 10–8 / Quadratic Optimal Regulator Systems 803\nx1\nx2\nx3\n0.6\n0.8\n1\n1.2\n0.4\n0.2\n0\n02468\n02468\n02468\n−0.2\n−3\n−2\n−1\n0\n1\n2\n0\n0.2\n−0.2\n−0.4\n−0.8\n−0.6\n−1\n−1.2\nt (sec)\nt (sec)\nt (sec)\nFigure 10–38\nResponse curves to\ninitial condition.\nIn determining an optimal control law, we assume that the input is zero, or r=0.\nLet us determine the state-feedback gain matrix K, where\nsuch that the following performance index is minimized:\nwhere\nQ = C\nq11\n0\n0\n0\nq22\n0\n0\n0\nq33\nS,  R = 1,  x = C\nx1\nx2\nx3\nS = C\ny\ny#\ny$\nS\nJ =\n3\nq\n0\n(x¿ Qx + u¿ Ru) dt\nK = Ck1 k2 k3 D\n+ – + – x = Ax + Bu.\nk2\nk3\ny = Cxk1\nru\nx\nx2\nx3\ny = x1\nFigure 10–39\nControl system.804\nChapter 10 / Control Systems Design in State Space\nTo get a fast response,q\n11\nmust be sufficiently large compared with q\n22\n, q\n33\n, and R. In this problem,\nwe choose\nTo solve this problem with MATLAB, we use the command\nK = lqr(A,B,Q,R)\nMATLAB Program 10–22 yields the solution to this problem.\nq\n11\n= 100,\n  \nq\n22\n= q\n33\n= 1,\n  \nR = 0.01\nMATLAB Program 10–22\n% ---------- Design of quadratic optimal control system ----------\nA = [0  1  0;0  0  1;0  -2  -3];\nB = [0;0;1];\nQ = [100  0  0;0  1  0;0  0  1];\nR = [0.01];\nK = Iqr(A,B,Q,R)\nK =\n100.0000    53.1200    11.6711\nNext we shall investigate the step-response characteristics of the designed system using the\nmatrix K thus determined. The state equation for the designed system is\nand the output equation is\nTo obtain the unit-step response, use the following command:\n[y,x,t] = step(AA,BB,CC,DD)\nwhere\nAA=A-BK, BB=Bk\n1\n, CC=C, DD=D\nMATLAB Program 10–23 produces the unit-step response of the designed system. Figure 10–40\nshows the response curves x\n1\n, x\n2\n, and x\n3\nversus t on one diagram.\ny = Cx = [1\n \n0\n \n0]\nC\nx\n1\nx\n2\nx\n3\nS\n = (A - BK)\n \nx + Bk\n1\n \nr\n = Ax + BA-Kx + k\n1\n \nrB\n x# = Ax + Bu\nOpenmirrors.comSection 10–8 / Quadratic Optimal Regulator Systems 805\nMATLAB Program 10–23\n% ---------- Unit-step response of designed system ----------\nA = [0  1  0;0  0  1;0  -2  -3];\nB = [0;0;1]\nC = [1  0  0];\nD = [0];\nK = [100.0000  53.1200  11.6711];\nk1 = K(1); k2 = K(2); k3 = K(3);\n% ***** Define the state matrix, control matrix, output matrix,\n% and direct transmission matrix of the designed systems as AA,\n% BB, CC, and DD *****\nAA = A - B*K;\nBB = B*k1;\nCC = C;\nDD = D;\nt = 0:0.01:8;\n[y,x,t] = step (AA,BB,CC,DD,1,t);\nplot(t,x)\ngrid\ntitle('Response Curves x1, x2, x3, versus t')\nxlabel('t Sec')\nylabel('x1,x2,x3')\ntext(2.6,1.35,'x1')\ntext(1.2,1.5,'x2')\ntext(0.6,3.5,'x3')\nResponse Curves x1, x2, x3 versus t\nx1, x2, x3\n5\n–2\n1\n4\n2\n0\n–1\n3\nt Sec\n05 2 31 48 6 7\nx3\nx2 x1\nFigure 10–40\nResponse curves x1\nversus t, x2 versus t,\nand x3 versus t.806\nChapter 10 / Control Systems Design in State Space\nConcluding Comments on Optimal Regulator Systems\n1. Given any initial state x(t\n0\n), the optimal regulator problem is to find an allowable\ncontrol vector u(t) that transfers the state to the desired region of the state space\nand for which the performance index is minimized. For the existence of an optimal\ncontrol vector u(t), the system must be completely state controllable.\n2. The system that minimizes (or maximizes, as the case may be) the selected\nperformance index is, by definition, optimal. Although the controller may have\nnothing to do with “optimality” in many practical applications, the important point\nis that the design based on the quadratic performance index yields a stable control\nsystem.\n3. The characteristic of an optimal control law based on a quadratic performance\nindex is that it is a linear function of the state variables, which implies that we need\nto feed back all state variables.This requires that all such variables be available for\nfeedback. If not all state variables are available for feedback, then we need to\nemploy a state observer to estimate unmeasurable state variables and use the es-\ntimated values to generate optimal control signals.\nNote that the closed-loop poles of the system designed by the use of the\nquadratic optimal regulator approach can be found from\nSince these closed-loop poles correspond to the desired closed-loop poles in the\npole-placement approach, the transfer functions of the observer controllers can\nbe obtained from either Equation (10–74) if the observer is of full-order type or\nEquation (10–108) if the observer is of minimum-order type.\n4. When the optimal control system is designed in the time domain, it is desirable to\ninvestigate the frequency-response characteristics to compensate for noise effects.\nThe system frequency-response characteristics must be such that the system at-\ntenuates highly in the frequency range where noise and resonance of components\nare expected. (To compensate for noise effects, we must in some cases either modify\nthe optimal configuration and accept suboptimal performance or modify the\nperformance index.)\n5. If the upper limit of integration in the performance index J given by Equation\n(10–114) is finite, then it can be shown that the optimal control vector is still a\nlinear function of the state variables, but with time-varying coefficients. (Therefore,\nthe determination of the optimal control vector involves that of optimal time-\nvarying matrices.)\n10–9 ROBUST CONTROL SYSTEMS\nSuppose that given a control object (i.e., a system with a flexible arm) we wish to de-\nsign a control system. The first step in the design of a control system is to obtain a\nmathematical model of the control object based on the physical law. Quite often the\nmodel may be nonlinear and possibly with distributed parameters. Such a model may\nbe difficult to analyze. It is desirable to approximate it by a linear constant-coefficient\nsystem that will approximate the actual object fairly well. Note that even though the\n∑s\n \nI - A + BK∑ = 0\nOpenmirrors.commodel to be used for design purposes may be a simplified one, it is necessary that such\na model must include any intrinsic character of the actual object.Assuming that we can\nget a model that approximates the actual system quite well, we must get a simplified\nmodel for the purpose of designing the control system that will require a compensator\nof lowest order possible. Thus, a model of a control object (whatever it may be) will\nprobably include an error in the modeling process. Note that in the frequency-response\napproach to control systems design, we use phase and gain margins to take care of\nthe modeling errors. However, in the state-space approach, which is based on the dif-\nferential equations of the plant dynamics, no such “margins” are involved in the\ndesign process.\nSince the actual plant differs from the model used in the design, a question arises\nwhether the controller designed using a model will work satisfactorily with the actu-\nal plant. To ensure that it will do so, robust control theory has been developed since\naround 1980.\nRobust control theory uses the assumption that the models we use in designing con-\ntrol systems have modeling errors.We shall present an introduction to this theory in this\nsection. Basically, the theory assumes that there is an uncertainty or error between the\nactual plant and its mathematical model and includes such uncertainty or error in the\ndesign process of the control system.\nSystems designed based on the robust control theory will possess the following\nproperties:\n(1) Robust stability . The control system designed is stable in the presence of\nperturbation.\n(2) Robust performance . The control system exhibits predetermined response\ncharacteristics in the presence of perturbation.\nThis theory requires considerations based on frequency-response analysis and time-\ndomain analysis. Because of the mathematical complications associated with robust con-\ntrol theory, detailed discussion of robust control theory is beyond the scope of the senior\nengineering student. In this section, only introductory discussion of robust control the-\nory is presented.\nUncertain Elements in Plant Dynamics. The term uncertainty refers to the dif-\nferences or errors between the model of the plant and the actual plant.\nUncertain elements that may appear in practical systems may be classified as struc-\ntured uncertainty and unstructured uncertainty. An example of structured uncertainty is\nany parametric variation in the plant dynamics, such as variations in poles and zeros\nof the plant transfer function. Examples of unstructured uncertainty include frequency-\ndependent uncertainty, such as high-frequency modes that we normally neglect in mod-\neling plant dynamics. For example, in the modeling of a flexible-arm system, the model\nmay include a finite number of modes of oscillation.The modes of oscillation that are not\nincluded in the modeling behave as uncertainty of the system. Another example of un-\ncertainty occurs in the linearization of a nonlinear plant. If the actual plant is nonlinear\nand its model is linear, then the difference acts as unstructured uncertainty.\nIn this section we consider the case where the uncertainty is unstructured. In addi-\ntion we assume that the plant involves only one uncertainty. (Some plants may involve\nmultiple uncertain elements.)\nSection 10–9 / Robust Control Systems 807In the robust control theory, we define unstructured uncertainty as . Since the\nexact description of is unknown, we use an estimate of (as to the magnitude\nand phase characteristics) and use this estimate in the design of the controller that sta-\nbilizes the control system. Stability of a system with unstructured uncertainty can then\nbe examined by use of the small gain theorem to be given following the definition of the\nnorm.\nNorm. The norm of a stable single-input–single-output system is the largest\npossible amplification factor of the steady-state response to sinusoidal excitation.\nFor a scalar (s), gives the maximum value of . It is called the norm.\nSee Figure 10–41.\nIn robust control theory we measure the magnitude of the transfer function by the\nnorm. Assume that the transfer function is proper and stable. [Note that a\ntransfer function is called proper if is limited and definite. If = 0, it\nis called strictly proper.] The norm of is defined by\nmeans the maximum singular value of . ( means .) Note that\nthe singular value of a transfer function is defined by\nwhere is the ith largest eigenvalue of and it is always a non-negative real\nvalue. By making smaller, we make the effect of input w on the output z smaller.\nIt is frequently the case that instead of using the maximum singular value , we use\nthe inequality\nand limit the magnitude of (s) by .To make the magnitude of small, we choose\na small and require that . 7£ 7\nq\n6 gg\n7£ 7\nq\ng£\n7£ 7\nq\n6 g\n7£ 7\nq\n7£ 7\nq\n£*£l\ni\n(£*£)\ns\ni\n(£) = 2l\ni\n(£*£)\n£\ns\nmax\ns\n[£(jv)]s\n[£(jv)]\n7£ 7\nq\n= s\n[£(jv)]\n£(s)H\nq\n£(q)£(q)£(s)\n£(s)H\nq\nH\nq\n/H20895£(jv)/H208957£ 7\nq\n£\nH\nq\nH\n/H11557\nH\nq\n¢(s)¢(s)\n¢(s)\n808\nChapter 10 / Control Systems Design in State Space\nF(s)\n||F||\n/H11009\n|F(jv)| in db\nv z\nv\nFigure 10–41\nBode diagram and\nthe norm . 7£ 7\nq\nH\nq\nOpenmirrors.comSmall-Gain Theorem. Consider the closed-loop system shown in Figure 10–42. In\nthe figure and M(s) are stable and proper transfer functions.\nThe small-gain theorem states that if\nthen this closed-loop system is stable. That is, if the norm of M(s) is smaller\nthan 1, this closed-loop system is stable. This theorem is an extension of the Nyquist\nstability criterion.\nIt is important to note that the small-gain theorem gives a sufficient condition for sta-\nbility. That is, a system may be stable even if it does not satisfy this theorem. However,\nif a system satisfies the small-gain theorem, it is always stable.\nSystem with Unstructured Uncertainty. In some cases an unstructured uncer-\ntainty error may be considered multiplicative such that\nwhere is the true plant dynamics and G is the model plant dynamics. In other cases\nan unstructured uncertainty error may be considered additive such that\nIn either case we assume that the norm of or is bounded such that\nwhere and are positive constants.\nEXAMPLE 10–14 Consider a control system with unstructured multiplicative uncertainty. We shall consider robust\nstability and robust performance of the system. (A system with unstructured additive uncertain-\nty will be discussed in Problem A–10–18.)\nRobust Stability. Let us define\ntrue plant dynamics\nG=model of plant dynamics\nunstructured multiplicative uncertainty\nWe assume that is stable and its upper bound is known.We also assume that and G are\nrelated by\n= G(I +¢ m)G/H33522\nG/H33522¢m\n¢m =\nG/H33522=\ngagm\n7¢m 7 6 gm ,   7¢a 7 6 ga\n¢a¢m\nG/H33522= G +¢ a\nG/H33522\nG/H33522= G(1 +¢ m)\n¢(s)Hq\n7¢(s)M(s)7q 6 1\n¢(s)\nSection 10–9 / Robust Control Systems 809\n/H9004(s)\nM(s)\nFigure 10–42\nClosed-loop system.Consider the system shown in Figure 10–43(a). Let us examine the transfer function between\npoint A and point B. Notice that Figure 10–43(a) can be redrawn as shown in Figure 10-43(b).The\ntransfer function between point A and point B can be given by\nDefine\n(10–121)\nUsing Equation (10–121) we can redraw Figure 10–43(b) as Figure 10–43(c).Applying the small-\ngain theorem to the system consisting of and T as shown in Figure 10–43(c), we obtain the\ncondition for stability to be\n(10–122)\nIn general, it is impossible to precisely model Therefore, let us use a scalar transfer function\nsuch that\nwhere is the largest singular value of .\nConsider, instead of Inequality (10–122), the following inequality:\n(10–123)\nIf Inequality (10–123) holds true, Inequality (10–122) will always be satisfied. By making \nthe norm of to be less than 1, we obtain the controller K that will make the system\nstable.\nSuppose that we cut the line at point A in Figure 10–43(a). Then we obtain Figure 10–43(d).\nReplacing by , we obtain Figure 10–43(e). Redrawing Figure 10–43(e), we obtain Figure\n10–43(f). Figure 10–43(f) is called a generalized plant diagram.\nReferring to Equation (10–121), T is given by\n(10–124)\nThen Inequality (10–123) can be rewritten as\n(10–125)\nClearly, for a stable plant model G(s), K(s)= 0 will satisfy Inequality (10–125). However,\nK(s)=0 is not the desirable transfer function for the controller. To find an acceptable trans-\nfer function for K(s), we may add another condition—for example, that the resulting system will\nhave robust performance such that the system output follows the input with minimum error, or\nanother reasonable condition. In what follows we shall obtain the condition for robust\nperformance.\nß\nW\nm\nK(s)G(s)\n1 + K(s)G(s)\nß\nq\n6 1\nT = KG\n1 + KG\nW\nm\nI¢\nm\nW\nm\nTH\nq\n7W\nm\nT7\nq\n6 1\n¢\nm\n(jv)s\n{¢\nm\n(jv)}\ns\n{¢\nm\n(jv)} 6 /H20895W\nm\n(jv)/H20895\nW\nm\n(jv)\n¢\nm\n.\n7¢\nm\nT7\nq\n6 1\n¢\nm\n(1 + KG)\n-1\n KG = T\nKG\n1 + KG = (1 + KG)\n-1\nKG\n810\nChapter 10 / Control Systems Design in State Space\nOpenmirrors.comSection 10–9 / Robust Control Systems 811\nK\n(f)\nw\nu\nz\ny\nP\nG\nw\nu\ny\nK\nWmI\n(e)\ny\nz\n++–\n/H9004m\nT\nBA\n(c)\nG\nK\n/H9004m\n(d)\ny\nuB\nzw\nA\n++\n–\n/H9004m\nK G\nyu\n+ −\nA BG\nK\n/H9004m\n(a) (b)\ny\nu\nA\n++\n–\nB\nFigure 10–43\n(a) Block diagram of a system with unstructured multiplicative uncertainty;\n(b)–(d) successive modifications of the block diagram of (a);\n(e) block diagram showing a generalized plant with unstructured multiplicative uncertainty;\n(f) generalized plant diagram.Robust Performance. Consider the system shown in Figure 10–44. Suppose that we want\nthe output y(t) to follow the input r(t) as closely as possible, or we wish to have\nSince the transfer function Y(s)/R(s) is\nwe have\nDefine\nwhere S is commonly called the sensitivity function and T defined by Equation (10–124) is called\nthe complementary sensitivity function. In this robust performance problem we want to make\nthe norm of S smaller than the desired transfer function or which can be\nwritten as \n(10–126)\nCombining Inequalities (10–123) and (10–126), we get\nwhere T+S=1, or\n(10–127)\nOur problem then becomes to find K(s) that will satisfy Inequality (10–127). Note that depend-\ning on the chosen W\nm\n(s) and W\ns\n(s) there may be many K(s) that satisfy Inequality (10–127), or\nmay be no K(s) that satisfies Inequality (10–127). Such a robust control problem using Inequality\n(10–127) is called a mixed-sensitivity problem.\nFigure 10–45(a) is a generalized plant diagram, where two conditions (robust stability and ro-\nbust performance) are specified.A simplified version of this diagram is shown in Figure 10–45(b).\n∑\nW\nm\n(s) \nK(s)G(s)\n1 + K(s)G(s)\nW\ns\n(s) 1\n1 + K(s)G(s)\n∑\nq\n6 1\ng\nW\nm\nT\nW\ns\nS\ng\nq\n6 1\n7W\ns \nS7\nq\n6 1\n7S7\nq\n6 W\ns\n-1\nW\ns  \n-1\nH\nq\n1\n1 + KG = S\nE(s)\nR(s) =\nR(s) - Y(s)\nR(s) = 1 -\nY(s)\nR(s) = 1\n1 + KG\nY(s)\nR(s) =  KG\n1 +  KG\nlim\nt Sq\n[r(t) - y(t)] =  lim\nt Sq\ne(t) S 0\n812\nChapter 10 / Control Systems Design in State Space\nre y\nK(s)\nG(s)\n+ –\nFigure 10–44\nClosed-loop system.\nOpenmirrors.comSection 10–9 / Robust Control Systems 813\nK\n(b)\nw\nu\nz\ny\nP\nG\nw\nu\ny\nK\nWmI WsI\n(a)\ny\nz2\nz1\nz\n++–\nFigure 10–45\n(a) Generalized \nplant diagram;\n(b) simplfied version\nof the generalized\nplant diagram \nshown in (a).\nFinding Transfer Functionz(s)/w(s)from a Generalized Plant Diagram.Consider\nthe generalized plant diagram shown in Figure 10–46.\nIn this diagram w(s) is the exogenous disturbance and u(s) is the manipulated vari-\nable. z(s) is the controlled variable and y(s) is the observed variable.\nConsider this control system consisting of the generalized plant P(s) and the con-\ntroller K(s).The equation that relates the outputs z(s) and y(s) and the inputs w(s) and\nu(s) of the generalized plant P(s) is\nThe equation that relates u(s) and y(s) is given by\nu(s)=K(s)y(s)\nDefine the transfer function that relates the controlled variable z(s) to the exogenous\ndisturbance w(s) as (s). Then\nz(s) =£ (s)w(s)\n£\nBz(s)\ny(s) R = BP11\nP21\nP12\nP22\nRBw(s)\nu(s) RNote that can be determined as follows: Since\nz(s)=P\n11\nw(s)+P\n12\nu(s)\ny(s)=P\n21\nw(s)+P\n22\nu(s)\nu(s)=K(s)y(s)\nwe obtain\ny(s)=P\n21\nw(s)+P\n22\nK(s)y(s)\nHence\nor\nTherefore,\nHence,\n(10–128)\nEXAMPLE 10–15\nLet us determine the P matrix in the generalized plant diagram of the control system considered\nin Example 10–14. We derived Inequality (10–125) for the control system to be robust stable.\nRewriting Inequality (10–125), we have\n(10–129)\ng\nW\nm\nKG\n1 + KG\ng\nq\n6 1\n£(s) = P\n11\n+ P\n12\nK(s)[I - P\n22\nK(s)]\n-1\nP\n21\n= {P\n11\n+ P\n12\nK(s)[I - P\n22\nK(s)]\n- 1\nP\n21\n}w(s)\nz(s) = P\n11\nw(s) + P\n12\nK(s)[I - P\n22\nK(s)]\n-1\nP\n21\nw(s)\ny(s) = [I - P\n22\nK(s)]\n-1\nP\n21\nw(s)\n[I - P\n22\nK(s)]y(s) = P\n21\nw(s)\n£(s)\n814\nChapter 10 / Control Systems Design in State Space\nK(s)\nP(s)\nw\nu\nz\ny\nP\n11\nP\n21\nP\n12\nP\n22\nFigure 10–46\nA generalized plant\ndiagram.\nOpenmirrors.comIf we define\n(10–130)\nthen Inequality (10–129) can be written as\nReferring to Equation (10–128), rewritten as\nnotice that if we choose the generalized plant P matrix as \n(10–131)\nThen we obtain\nwhich is exactly the same as in Equation (10–130).\nWe derived in Example 10–14 that if we wished to have the output y follow the input r as\nclose as possible, we needed to make the norm of (s), where\n(10–132)\nless than 1. [See Inequality (10–126).]\nNote that the controlled variable z is related to the exogenous disturbance w by\nand referring to Equation (10–128)\nNotice that if we choose the P matrix as\n(10–133)\nthen we obtain\nwhich is the same as in Equation (10–132).£2\n = Ws c 1\n1 + KG d\n = Ws c1 - KG\n1 + KG d\n = Ws - WsKG(I + KG)-1\n £= P11 + P12K(I - P22K)-1P21\nP = cWs -WsG\nI -G d\n£(s) = P11 + P12K(I - P22K)-1P21\nz =£ (s)w\n£2 = Ws\nI + KG\n£2Hq\n£1\n = WmKG(I + KG)-1\n£= P11 + P12K(I - P22K)-1P21\nP = c0 WmG\nI -G d\n£= P11 + P12K(I - P22K)-1P21\n7£1 7q 6 1\n£1 = WmKG\n1 + KG\nSection 10–9 / Robust Control Systems 815If both the robust stability and robust performance conditions are required, the control sys-\ntem must satisfy the condition given by Inequality (10–127), rewritten as\n(10–134)\nFor the P matrix, we combine Equations (10–133) and (10–131) and get\n(10–135)\nIf we construct P(s) as given by Equation (10–135), then the problem of designing a control\nsystem to satisfy both robust stability and robust performance conditions can be formulated by\nusing the generalized plant represented by Equation (10–135). As mentioned earlier, such a\nproblem is called a mixed-sensitivity problem. By using the generalized plant given by Equation\n(10–135) we are able to determine the controller K(s) that satisfies Inequality (10–134). The\ngeneralized plant diagram for the system considered in Example 10–14 becomes as shown in\nFigure 10–47.\nH Infinity Control Problem. To design a controller K of a control system to sat-\nisfy various stability and performance specifications, we utilize the concept of the gen-\neralized plant.\nAs mentioned earlier a generalized plant is a linear model consisting of a model of\nthe plant and weighting functions corresponding to the specifications for the required\nperformance. Referring to the generalized plant shown in Figure 10–48, the H infinity\ncontrol problem is a problem to design a controller K that will make the norm of\nthe transfer function from the exogenous disturbance w to the controlled variable z less\nthan a specified value.\nH\nq\nP =\nC\nW\ns\n0\nI\n-W\ns\nG\nW\nm\nG\n-G\nS\n∑\nW\nm \nKG\n1 + KG\nW\ns  \n1\n1 + KG\n∑\n6 1\n816\nChapter 10 / Control Systems Design in State Space\nK\nw\nu\nz\n2\ny\nO\nI\nW\nm\nG\n−G\nz\n1\nW\ns\n−W\ns\nG\nFigure 10–47\nGeneralized plant of\nthe system discussed\nin Example 10–15.\nOpenmirrors.comThe reason to use generalized plants, rather than individual block diagrams of con-\ntrol systems, is that a number of control systems with uncertain elements have been\ndesigned using generalized plants and, consequently, established design approaches\nusing such plants are available.\nNote that any weighting function, such as W(s), is an important parameter to in-\nfluence the resulting controller K(s). In fact, the goodness of the resulting designed\nsystem depends on the choice of the weighting function or functions used in the de-\nsign process.\nNote that the controller that is the solution to the H infinity control problem is com-\nmonly called the H infinity controller.\nSolving Robust Control Problems. There are three established approaches to\nsolve robust control problems. They are\n1. Solve robust control problems by deriving the Riccati equations and solving them.\n2. Solve robust control problems by using the linear matrix inequality approach.\n3. Solve robust control problems that involve structural uncertainties by using the \nanalysis and synthesis approach.\nSolving robust control problems by use of any of the above methods requires a broad\nmathematical background.\nIn this section we have presented only an introduction to the robust control theory.\nSolving any robust control problem requires mathematical background beyond the\nscope of the senior engineering student. Therefore, an interested reader may take a\ngraduate-level control course at an established college or university and study this sub-\nject in detail.\nEXAMPLE PROBLEMS AND SOLUTIONS\nA–10–1. Consider the system defined by\nSuppose that this system is not completely state controllable.Then the rank of the controllability\nmatrix is less than n, or\n(10–136)rank CB /H21752 AB /H21752 p /H21752 An - 1 BD = q 6 n\nx# = Ax + Bu\nm\nm\nExample Problems and Solutions 817\nK\nw\nu\nz\ny\nGeneralized\nplant\nFigure 10–48\nA generalized plant\ndiagram.This means that there are q linearly independent column vectors in the controllability matrix. Let\nus define such q linearly independent column vectors as f\n1\n, f\n2\n, p , f\nq\n. Also, let us choose n-q\nadditional n-vectors v\nq+1\n, v\nq+2\n, p , v\nn\nsuch that\nis of rank n. By using matrix P as the transformation matrix, define\nShow that can be given by\nwhere A\n11\nis a q*q matrix,A\n12\nis a q*(n-q) matrix,A\n22\nis an (n-q)*(n-q) matrix, and\n0 is an (n-q)*q matrix. Show also that matrix can be given by\nwhere B\n11\nis a q*1 matrix and 0 is an (n-q)*1 matrix.\nSolution. Notice that\nor\n(10–137)\nAlso,\n(10–138)\nSince we have q linearly independent column vectors f\n1\n, f\n2\n, p , f\nq\n, we can use the Cayley–Hamilton\ntheorem to express vectors Af\n1\n, Af\n2\n, p , Af\nq\nin terms of these q vectors. That is,\nAf\nq\n= a\n1q\n  \nf\n1\n+ a\n2q\n  \nf\n2\n+ p + a\nqq\n  \nf\nq\n/H11080\n/H11080\n/H11080\nAf\n2\n= a\n12\n  \nf\n1\n+ a\n22\n  \nf\n2\n+ p + a\nq2\n  \nf\nq\nAf\n1\n= a\n11\n  \nf\n1\n+ a\n21\n  \nf\n2\n+ p + a\nq1\n  \nf\nq\nB = PB\nˆ\n= Cf\n1\n/H21752f\n2\n/H21752p /H21752f\nq\n/H21752v\nq + 1\n/H21752p /H21752v\nn\nD\n \nA\nˆ\nCAf\n1\n/H21752Af\n2\n/H21752p /H21752Af\nq\n/H21752Av\nq + 1\n/H21752p /H21752Av\nn\nD\nAP = PA\nˆ\nB\nˆ\n=\nc\nB\n11\n0\nd\nB\nˆ\nA\nˆ\n=\nc\nA\n11\n0\n \nA\n12\nA\n22\nd\nA\nˆ\nP\n-1\n \nAP = A\nˆ\n,\n  \nP\n-1\n \nB = B\nˆ\nP = Cf\n1\n/H21752f\n2\n/H21752p /H21752f\nq\n/H21752v\nq + 1\n/H21752v\nq + 2\n/H21752p /H21752v\nn\nD\n818\nChapter 10 / Control Systems Design in State Space\nOpenmirrors.comExample Problems and Solutions 819\nHence, Equation (10–137) may be written as follows:\nDefine\nThen Equation (10–137) can be written as\n= Cf1 /H21752f2 /H21752p /H21752fq /H21752vq + 1 /H21752p /H21752vn DcA11\n0  A12\nA22\nd\nCAf1 /H21752Af2 /H21752p /H21752Afq /H21752Avq + 1 /H21752p /H21752Avn D\n E\naq + 1q + 1\n/H11080\n/H11080\n/H11080\nanq + 1\np\np\naq + 1n\n/H11080\n/H11080\n/H11080\nann\nU= A22\n E\n0\n/H11080\n/H11080\n/H11080\n0\np\np\n0\n/H11080\n/H11080\n/H11080\n0\nU= A21 = (n - q) * q zero matrix\n F\na1q + 1\na2q + 1\n/H11080\n/H11080\n/H11080\naqq + 1\np\np\np\na1n\na2n\n/H11080\n/H11080\n/H11080\naqn\nV= A12\n F\na11\na21\n/H11080\n/H11080\n/H11080\naq1\np\np\np\na1q\na2q\n/H11080\n/H11080\n/H11080\naqq\nV= A11\n= Cf1 /H21752f2 /H21752p /H21752fq /H21752vq + 1 /H21752p /H21752vn D \na11\na21\n/H11080\n/H11080\n/H11080\naq1\n0\n/H11080\n/H11080\n/H11080\n0\np\np\np\np\np\na1q\na2q\n/H11080\n/H11080\n/H11080\naqq\n0\n/H11080\n/H11080\n/H11080\n0\na1q + 1\na2q + 1\n/H11080\n/H11080\n/H11080\naqq + 1\naq + 1q + 1\n/H11080\n/H11080\n/H11080\nanq + 1\np\np\np\np\np\na1n\na2n\n/H11080\n/H11080\n/H11080\naqn\naq + 1n\n/H11080\n/H11080\n/H11080\nann\nCAf1 /H21752Af2 /H21752p /H21752Afq /H21752Avq + 1 /H21752p /H21752Avn DThus,\nHence,\nNext, referring to Equation (10–138), we have\n(10–139)\nReferring to Equation (10–136), notice that vector B can be written in terms of q linearly\nindependent column vectors f\n1\n, f\n2\n, p , f\nq\n. Thus, we have\nConsequently, Equation (10–139) may be written as follows:\nThus,\nwhere\nA–10–2. Consider a completely state controllable system\nDefine the controllability matrix as M:\nM = CB /H21752 AB /H21752 p /H21752 A\nn - 1\n \nBD\nx# = Ax + Bu\nB\n11\n=\nF\nb\n11\nb\n21\n/H11080\n/H11080\n/H11080\nb\nq1\nV\nB\nˆ\n=\nc\nB\n11\n0\nd\nb\n11\n  \nf\n1\n+ b\n21\n  \nf\n2\n+ p + b\nq1\n  \nf\nq\n= Cf\n1\n/H21752f\n2\n/H21752p /H21752f\nq\n/H21752v\nq + 1\n/H21752p /H21752v\nn\nD\nb\n11\nb\n21\n/H11080\n/H11080\n/H11080\nb\nq1\n0\n/H11080\n/H11080\n/H11080\n0\nB = b\n11\n  \nf\n1\n+ b\n21\n  \nf\n2\n+ p + b\nq1\n  \nf\nq\nB = Cf\n1\n/H21752f\n2\n/H21752p /H21752f\nq\n/H21752v\nq + 1\n/H21752p /H21752v\nn\nD\n \nB\nˆ\nP\n-1\n \nAP = A\nˆ\n=\nc\nA\n11\n0\n \nA\n12\nA\n22\nd\nAP = P\nc\nA\n11\n0\n \nA\n12\nA\n22\nd\n820\nChapter 10 / Control Systems Design in State Space\nOpenmirrors.comShow that\nwhere a1 ,a 2 , p , an are the coefficients of the characteristic polynomial\nSolution. Let us consider the case where n=3. We shall show that\n(10–140)\nThe left-hand side of Equation (10–140) is\nThe right-hand side of Equation (10–140) is\n(10–141)\nThe Cayley–Hamilton theorem states that matrix A satisfies its own characteristic equation or, in\nthe case of n=3,\n(10–142)\nUsing Equation (10–142), the third column of the right-hand side of Equation (10–141) becomes\nThus, Equation (10–141) becomes\nHence, the left-hand side and the right-hand side of Equation (10–140) are the same. We have\nthus shown that Equation (10–140) is true. Consequently,\nThe preceding derivation can be easily extended to the general case of any positive integer n.\nA–10–3. Consider a completely state controllable system\nDefine\nM = CB /H21752 AB /H21752 p /H21752 An - 1 BD\nx# = Ax + Bu\nM-1 AM = C\n0\n1\n0\n0\n0\n1\n-a3\n-a2\n-a1\nS\nCB /H21752AB /H21752A2 BDC\n0\n1\n0\n0\n0\n1\n-a3\n-a2\n-a1\nS = CAB /H21752A2 B /H21752A3 BD\n-a3  B - a2  AB - a1  A2 B = A-a3  I - a2  A - a1  A2BB = A3 B\nA3 + a1  A2 + a2  A + a3  I = 0\nCB /H21752AB /H21752A2 BDC\n0\n1\n0\n0\n0\n1\n-a3\n-a2\n-a1\nS= CAB /H21752A2 B /H21752-a3  B - a2  AB - a1  A2 BD\nAM = ACB /H21752 AB /H21752 A2 BD = CAB /H21752 A2 B /H21752 A3 BD\nAM = M C\n0\n1\n0\n0\n0\n1\n-a3\n-a2\n-a1\nS\n∑s I - A∑ = sn + a1 sn - 1 + p + an - 1 s + an\nM-1 AM = G\n0\n1\n0\n/H11080\n/H11080\n/H11080\n0\n0\n0\n1\n/H11080\n/H11080\n/H11080\n0\np\np\np\np\n0\n0\n0\n/H11080\n/H11080\n/H11080\n1\n-an\n-an - 1\n-an - 2\n/H11080\n/H11080\n/H11080\n-a1\nW\nExample Problems and Solutions 821822\nChapter 10 / Control Systems Design in State Space\nand\nwhere the a\ni\n’s are coefficients of the characteristic polynomial\nDefine also\nShow that\nSolution. Let us consider the case where n=3. We shall show that\n(10–143)\nReferring to Problem A–10–2, we have\nHence, Equation (10–143) can be rewritten as\nTherefore, we need to show that\n(10–144)\nThe left-hand side of Equation (10–144) is\nC\n0\n1\n0\n0\n0\n1\n-a\n3\n-a\n2\n-a\n1\nSC\na\n2\na\n1\n1\na\n1\n1\n0\n1\n0\n0\nS\n=\nC\n-a\n3\n0\n0\n0\na\n1\n1\n0\n1\n0\nS\nC\n0\n1\n0\n0\n0\n1\n-a\n3\n-a\n2\n-a\n1\nS\n \nW = W\nC\n0\n0\n-a\n3\n1\n0\n-a\n2\n0\n1\n-a\n1\nS\nW\n-1\nC\n0\n1\n0\n0\n0\n1\n-a\n3\n-a\n2\n-a\n1\nS\n \nW =\nC\n0\n0\n-a\n3\n1\n0\n-a\n2\n0\n1\n-a\n1\nS\nM\n-1\n \nAM =\nC\n0\n1\n0\n0\n0\n1\n-a\n3\n-a\n2\n-a\n1\nS\nT\n-1\n \nAT = (MW)\n-1\n \nA(MW) = W\n-1\n(M\n-1\n \nAM)\n \nW =\nC\n0\n0\n-a\n3\n1\n0\n-a\n2\n0\n1\n-a\n1\nS\nT\n-1\n \nAT =\nG\n0\n0\n/H11080\n/H11080\n/H11080\n0\n-a\nn\n1\n0\n/H11080\n/H11080\n/H11080\n0\n-a\nn - 1\n0\n1\n/H11080\n/H11080\n/H11080\n0\n-a\nn - 2\np\np\np\np\n0\n0\n/H11080\n/H11080\n/H11080\n1\n-a\n1\nW\n,\n  \nT\n-1\n \nB =\nG\n0\n0\n/H11080\n/H11080\n/H11080\n0\n1\nW\nT = MW\n∑s\n \nI - A∑ = s\nn\n+ a\n1\n \ns\nn - 1\n+ p + a\nn - 1\n \ns + a\nn\nW =\nG\na\nn - 1\na\nn - 2\n/H11080\n/H11080\n/H11080\na\n1\n1\na\nn - 2\na\nn - 3\n/H11080\n/H11080\n/H11080\n1\n0\np\np\np\np\na\n1\n1\n/H11080\n/H11080\n/H11080\n0\n0\n1\n0\n/H11080\n/H11080\n/H11080\n0\n0\nW\nOpenmirrors.comExample Problems and Solutions 823\nThe right-hand side of Equation (10–144) is\nClearly, Equation (10–144) holds true. Thus, we have shown that\nNext, we shall show that\n(10–145)\nNote that Equation (10–145) can be written as\nNoting that\nwe have\nThe derivation shown here can be easily extended to the general case of any positive integer n.\nA–10–4. Consider the state equation\nwhere\nThe rank of the controllability matrix M,\nis 2.Thus, the system is completely state controllable.Transform the given state equation into the\ncontrollable canonical form.\nSolution. Since\n = s2 + 2s + 1 = s2 + a1 s + a2\n ∑s I - A∑ = 2s - 1\n4\n-1\ns + 3\n2= (s - 1)(s + 3) + 4\nM = CB /H21752ABD = B0\n2\n2\n-6 R\nA = B 1\n-4\n1\n-3 R,  B = B0\n2 R\nx# = Ax + Bu\nT-1 B = C\n0\n0\n1\nS\nT C\n0\n0\n1\nS= CB /H21752AB /H21752A2 BDC\na2\na1\n1\na1\n1\n0\n1\n0\n0\nSC\n0\n0\n1\nS = CB /H21752AB /H21752A2 BDC\n1\n0\n0\nS= B\nB = T C\n0\n0\n1\nS = MW C\n0\n0\n1\nS\nT-1 B = C\n0\n0\n1\nS\nT-1 AT = C\n0\n0\n-a3\n1\n0\n-a2\n0\n1\n-a1\nS\nC\na2\na1\n1\na1\n1\n0\n1\n0\n0\nSC\n0\n0\n-a3\n1\n0\n-a2\n0\n1\n-a1\nS= C\n-a3\n0\n0\n0\na1\n1\n0\n1\n0\nS824\nChapter 10 / Control Systems Design in State Space\nwe have\nDefine\nwhere\nThen\nand\nDefine\nThen the state equation becomes\nSince\nand\nwe have\nwhich is in the controllable canonical form.\nA–10–5. Consider a system defined by\nwhere\nA =\nB\n0\n-2\n1\n-3\nR\n,\n  \nB =\nB\n0\n2\nR\n,\n  \nC = [1\n \n0]\n y = Cx\n x# = Ax + Bu\nB\nx\nˆ\n#\n1\nx\nˆ\n#\n2\nR\n=\nB\n0\n-1\n1\n-2\nRB\nx\nˆ\n1\nx\nˆ\n2\nR\n+\nB\n0\n1\nR\nu\nT\n-1\n \nB =\nB\n0.5\n0.5\n0\n0.5\nRB\n0\n2\nR\n=\nB\n0\n1\nR\nT\n-1\nAT =\nB\n0.5\n0.5\n0\n0.5\nRB\n1\n-4\n1\n-3\nRB\n2\n-2\n0\n2\nR\n=\nB\n0\n-1\n1\n-2\nR\nx\nˆ\n#\n= T\n-1\n \nATx\nˆ\n+ T\n-1\nBu\nx = Tx\nˆ\nT\n-1\n=\nB\n0.5\n0.5\n0\n0.5\nR\nT =\nB\n0\n2\n2\n-6\nRB\n2\n1\n1\n0\nR\n=\nB\n2\n-2\n0\n2\nR\nM =\nB\n0\n2\n2\n-6\nR\n,\n  \nW =\nB\n2\n1\n1\n0\nR\nT = MW\na\n1\n= 2,\n  \na\n2\n= 1\nOpenmirrors.comExample Problems and Solutions 825\nThe characteristic equation of the system is\nThe eigenvalues of matrix A are –1 and –2.\nIt is desired to have eigenvalues at –3 and –5 by using a state-feedback control u=–Kx.\nDetermine the necessary feedback gain matrix K and the control signal u.\nSolution. The given system is completely state controllable, since the rank of\nis 2. Hence, arbitrary pole placement is possible.\nSince the characteristic equation of the original system is\nwe have\nThe desired characteristic equation is\nHence,\nIt is important to point out that the original state equation is not in the controllable canonical\nform, because matrix B is not\nHence, the transformation matrix T must be determined.\nHence,\nReferring to Equation (10–13), the necessary feedback gain matrix is given by\nThus, the control signal u becomes\nu =- Kx =- [6.5 2.5] Bx1\nx2\nR\n = C15 - 2 /H217528 - 3DB0.5\n0\n0\n0.5 R = [6.5 2.5]\n K = Ca2 - a2 /H21752a1 - a1 D T-1\nT-1 = B0.5\n0\n0\n0.5 R\nT = MW = CB /H21752ABDBa1\n1\n1\n0 R= B0\n2\n2\n-6 RB3\n1\n1\n0 R= B2\n0\n0\n2 R\nB0\n1 R\na1 = 8,  a2 = 15\n(s + 3)(s + 5) = s2 + 8s + 15 = s2 + a1 s + a2 = 0\na1 = 3,  a2 = 2\ns2 + 3s + 2 = s2 + a1 s + a2 = 0\nM = CB /H21752ABD = B0\n2\n2\n-6 R\n∑s I - A∑ = 2s\n2\n-1\ns + 3\n2= s2 + 3s + 2 = (s + 1)(s + 2) = 0826\nChapter 10 / Control Systems Design in State Space\nA–10–6. A regulator system has a plant\nDefine state variables as\nBy use of the state-feedback control u=–Kx, it is desired to place the closed-loop poles at\nObtain the necessary state-feedback gain matrix K with MATLAB.\nSolution. The state-space equations for the system become\nHence,\n(Note that, for the pole placement, matrices C and D do not affect the state-feedback gain\nmatrix K.)\nTwo MATLAB programs for obtaining state-feedback gain matrix K are given in MATLAB\nPrograms 10–24 and 10–25.\n C = [1\n \n0\n \n0],  \n  \nD = [0]\n A =\nC\n0\n0\n-6\n1\n0\n-11\n0\n1\n-6\nS\n, \n  \nB =\nC\n0\n0\n10\nS\n y = [1\n \n0\n \n0]\nC\nx\n1\nx\n2\nx\n3\nS\n+ 0u\n \nC\nx#\n1\nx#\n2\nx#\n3\nS\n=\nC\n0\n0\n-6\n1\n0\n-11\n0\n1\n-6\nSC\nx\n1\nx\n2\nx\n3\nS\n+\nC\n0\n0\n10\nS\nu\ns =- 2 + j213\n,\n  \ns =- 2 - j213\n,\n  \ns =- 10\n x\n3\n= x#\n2\n x\n2\n= x#\n1\n x\n1\n= y\nY(s)\nU(s) = 10\n(s + 1)(s + 2)(s + 3)\nMATLAB Program 10–24\nA = [0  1  0;0  0  1;-6  -11  -6];\nB = [0;0;10];\nJ = [-2+j*2*sqrt(3)  -2-j*2*sqrt(3)  -10];\nK = acker(A,B,J)\nK =\n15.4000    4.5000    0.8000\nOpenmirrors.comExample Problems and Solutions 827\nA–10–7. Consider a completely observable system\nDefine the observability matrix as N:\nShow that\n(10–146)\nwhere a1 ,a 2 , p , an are the coefficients of the characteristic polynomial\nSolution. Let us consider the case where n=3. Then Equation (10–146) can be written as\n(10–147)\nEquation (10–147) may be rewritten as\n(10–148)\nWe shall show that Equation (10–148) holds true. The left-hand side of Equation (10–148) is\n(10–149)N*A = C\nC\nCA\nCA2\nS A = C\nCA\nCA2\nCA3\nS\nN* A = C\n0\n0\n-a3\n1\n0\n-a2\n0\n1\n-a1\nS N*\nN*A(N*)-1 = C\n0\n0\n-a3\n1\n0\n-a2\n0\n1\n-a1\nS\n∑s I - A∑ = sn + a1 sn - 1 + p + an - 1 s + an\nN* A(N*)-1 = G\n0\n0\n/H11080\n/H11080\n/H11080\n0\n-an\n1\n0\n/H11080\n/H11080\n/H11080\n0\nan - 1\n0\n1\n/H11080\n/H11080\n/H11080\n0\n-an - 2\np\np\np\np\n0\n0\n/H11080\n/H11080\n/H11080\n1\n-a1\nW\nN = CC*/H21752A*C* /H21752p /H21752(A*)n - 1 C*D\n y = Cx\n x# = Ax\nMATLAB Program 10–25\nA = [0  1  0;0  0  1;  -6  -11  -6];\nB = [0;0;10];\nJ = [-2+j*2*sqrt(3)  -2-J*2*Sqrt(3)  -10];\nK = place(A,B,J)\nplace: ndigits= 15\nK =\n15.4000    4.5000    0.8000828\nChapter 10 / Control Systems Design in State Space\nThe right-hand side of Equation (10–148) is\n(10–150)\nThe Cayley–Hamilton theorem states that matrix A satisfies its own characteristic equation, or\nHence,\nThus, the right-hand side of Equation (10–150) becomes the same as the right-hand side of\nEquation (10–149). Consequently,\nwhich is Equation (10–148). This last equation can be modified to\nThe derivation presented here can be extended to the general case of any positive integer n.\nA–10–8. Consider a completely observable system defined by\n(10–151)\n(10–152)\nDefine\nand\nwhere the a’s are coefficients of the characteristic polynomial\nDefine also\nQ = (WN*)\n-1\n∑s\n \nI - A∑ = s\nn\n+ a\n1\n \ns\nn - 1\n+ p + a\nn - 1\n \ns + a\nn\nW =\nG\na\nn - 1\na\nn - 2\n/H11080\n/H11080\n/H11080\na\n1\n1\na\nn - 2\na\nn - 3\n/H11080\n/H11080\n/H11080\n1\n0\np\np\np\np\na\n1\n1\n/H11080\n/H11080\n/H11080\n0\n0\n1\n0\n/H11080\n/H11080\n/H11080\n0\n0\nW\nN = CC* /H21752A*\n \nC* /H21752p /H21752(A*)\nn - 1\n \nC*D\n y = Cx + Du\n x# = Ax + Bu\nN*A(N*)\n-1\n=\nC\n0\n0\n-a\n3\n1\n0\n-a\n2\n0\n1\n-a\n1\nS\nN*A =\nC\n0\n0\n-a\n3\n1\n0\n-a\n2\n0\n1\n-a\n1\nS\n \nN*\n-a\n1\n  \nCA\n2\n- a\n2\n  \nCA - a\n3\n  \nC = CA\n3\nA\n3\n+ a\n1\n  \nA\n2\n+ a\n2\n  \nA + a\n3\n  \nI = 0\n =\nC\nCA\nCA\n2\n-a\n3\n  \nC - a\n2\n  \nCA - a\n1\n  \nCA\n2\nS\n \nC\n0\n0\n-a\n3\n1\n0\n-a\n2\n0\n1\n-a\n1\nS\n \nN* =\nC\n0\n0\n-a\n3\n1\n0\n-a\n2\n0\n1\n-a\n1\nSC\nC\nCA\nCA\n2\nS\nOpenmirrors.comExample Problems and Solutions 829\nShow that\nwhere the bk’s (k=0, 1, 2,p , n) are those coefficients appearing in the numerator of the transfer\nfunction when C(sI-A)–1 B+D is written as follows:\nwhere D=b0 .\nSolution. Let us consider the case where n=3. We shall show that\n(10–153)\nNote that, by referring to Problem A–10–7, we have\nHence, we need to show that\nor\n(10–154)W C\n0\n0\n-a3\n1\n0\n-a2\n0\n1\n-a1\nS = C\n0\n1\n0\n0\n0\n1\n-a3\n-a2\n-a1\nSW\nW C\n0\n0\n-a3\n1\n0\n-a2\n0\n1\n-a1\nS W-1 = C\n0\n1\n0\n0\n0\n1\n-a3\n-a2\n-a1\nS\n(WN*) A(WN*)-1 = WCN* A(N*)-1 D W-1 = W C\n0\n0\n-a3\n1\n0\n-a2\n0\n1\n-a1\nS W-1\nQ-1 AQ = (WN*) A(WN*)-1 = C\n0\n1\n0\n0\n0\n1\n-a3\n-a2\n-a1\nS\nC(s I - A)-1 B + D = b0 sn + b1 sn - 1 + p + bn - 1 s + bn\nsn + a1 sn - 1 + p + an - 1 s + an\nQ-1 B = F\nbn - an b0\nbn - 1 - an - 1 b0\n/H11080\n/H11080\n/H11080\nb1 - a1 b0\nV\nCQ = [0 0 p   0 1]\nQ-1 AQ = G\n0\n1\n0\n/H11080\n/H11080\n/H11080\n0\n0\n0\n1\n/H11080\n/H11080\n/H11080\n0\np\np\np\np\n0\n0\n0\n/H11080\n/H11080\n/H11080\n1\n-an\n-an - 1\n-an - 2\n/H11080\n/H11080\n/H11080\n-a1\nW830\nChapter 10 / Control Systems Design in State Space\nThe left-hand side of Equation (10–154) is\nThe right-hand side of Equation (10–154) is\nThus, we see that Equation (10–154) holds true. Hence, we have proved Equation (10–153).\nNext we shall show that\nor\nNotice that\nHence, we have shown that\nNext define\nThen Equation (10–151) becomes\n(10–155)\nand Equation (10–152) becomes\n(10–156)\nReferring to Equation (10–153), Equation (10–155) becomes\nC\nx\nˆ\n#\n1\nx\nˆ\n#\n2\nx\nˆ\n#\n3\nS\n=\nC\n0\n1\n0\n0\n0\n1\n-a\n3\n-a\n2\n-a\n1\nSC\nx\nˆ\n1\nx\nˆ\n2\nx\nˆ\n3\nS\n+\nC\ng\n3\ng\n2\ng\n1\nS\nu\ny = CQx\nˆ\n+ Du\nx\nˆ\n#\n= Q\n-1\n \nAQx\nˆ\n+ Q\n-1\n \nBu\nx = Qx\nˆ\n[0\n \n0\n \n1] = C(WN*\n \n)\n-1\n= CQ\n = [1\n \n0\n \n0]\nC\nC\nCA\nCA\n2\nS\n= C\n[0\n \n0\n \n1](WN*\n \n) = [0\n \n0\n \n1]\nC\na\n2\na\n1\n1\na\n1\n1\n0\n1\n0\n0\nSC\nC\nCA\nCA\n2\nS\nC(WN*)\n-1\n= [0\n \n0\n \n1]\nCQ = [0\n \n0\n \n1]\n=\nC\n-a\n3\n0\n0\n0\na\n1\n1\n0\n1\n0\nS\nC\n0\n1\n0\n0\n0\n1\n-a\n3\n-a\n2\n-a\n1\nS\n \nW =\nC\n0\n1\n0\n0\n0\n1\n-a\n3\n-a\n2\n-a\n1\nSC\na\n2\na\n1\n1\na\n1\n1\n0\n1\n0\n0\nS\n =\nC\n-a\n3\n0\n0\n0\na\n1\n1\n0\n1\n0\nS\n W\n \nC\n0\n0\n-a\n3\n1\n0\n-a\n2\n0\n1\n-a\n1\nS\n=\nC\na\n2\na\n1\n1\na\n1\n1\n0\n1\n0\n0\nSC\n0\n0\n-a\n3\n1\n0\n-a\n2\n0\n1\n-a\n1\nS\nOpenmirrors.comExample Problems and Solutions 831\nwhere\nThe transfer function G(s) for the system defined by Equations (10–155) and (10–156) is\nNoting that\nwe have\nNote that D=b0 . Since\nwe have\nHence,\nThus, we have shown that\nNote that what we have derived here can be easily extended to the case when n is any positive\ninteger.\nA–10–9. Consider a system defined by\n y = Cx\nx# = Ax + Bu\nQ-1 B = C\ng3\ng2\ng1\nS= C\nb3 - a3 b0\nb2 - a2 b0\nb1 - a1 b0\nS\ng1 = b1 - a1 b0 , g2 = b2 - a2 b0 , g3 = b3 - a3 b0\n= b0 s3 + b1 s2 + b2 s + b3\ns3 + a1 s2 + a2 s + a3\n=\nb0 s3 + Ag1 + a1 b0Bs2 + Ag2 + a2 b0Bs + g3 + a3 b0\ns3 + a1 s2 + a2 s + a3\n= g1 s2 + g2 s + g3\ns3 + a1 s2 + a2 s + a3\n+ b0\nG(s) = 1\ns3 + a1 s2 + a2 s + a3\nC1 s s2 DC\ng3\ng2\ng1\nS + D\nC\ns\n-1\n0\n0\ns\n-1\na3\na2\ns + a1\nS\n-1\n= 1\ns3 + a1 s2 + a2 s + a3\nC\ns2 + a1 s + a2\ns + a1\n1\n-a3\ns2 + a1 s\ns\n-a3 s\n-a2 s - a3\ns2\nS\nG(s) = [0 0 1] C\ns\n-1\n0\n0\ns\n-1\na3\na2\ns + a1\nS\n-1\nC\ng3\ng2\ng1\nS + D\nCQ = [0 0 1]\nG(s) = CQAs I - Q-1 AQB\n-1\n Q-1 B + D\nC\ng3\ng2\ng1\nS= Q-1 B832\nChapter 10 / Control Systems Design in State Space\nwhere\nThe rank of the observability matrix N,\nis 2. Hence, the system is completely observable. Transform the system equations into the ob-\nservable canonical form.\nSolution. Since\nwe have\nDefine\nwhere\nThen\nand\nDefine\nThen the state equation becomes\nor\n(10–157)\nThe output equation becomes\ny = CQx\nˆ\n=\nB\n0\n1\n-1\n-2\nRB\nx\nˆ\n1\nx\nˆ\n2\nR\n+\nB\n0\n2\nR\nu\nB\nx\nˆ\n#\n1\nx\nˆ\n#\n2\nR\n=\nB\n-1\n1\n0\n1\nRB\n1\n-4\n1\n-3\nRB\n-1\n1\n0\n1\nRB\nx\nˆ\n1\nx\nˆ\n2\nR\n+\nB\n-1\n1\n0\n1\nRB\n0\n2\nR\nu\nx\nˆ\n#\n= Q\n-1\n \nAQx\nˆ\n+ Q\n-1\n \nBu\nx = Qx\nˆ\nQ\n-1\n=\nB\n-1\n1\n0\n1\nR\nQ =\nb\nB\n2\n1\n1\n0\nRB\n1\n-3\n1\n-2\nR\nr\n-1\n=\nB\n-1\n1\n0\n1\nR\n-1\n=\nB\n-1\n1\n0\n1\nR\nN =\nB\n1\n1\n-3\n-2\nR\n,\n  \nW =\nB\na\n1\n1\n1\n0\nR\n=\nB\n2\n1\n1\n0\nR\nQ = (WN*)\n-1\na\n1\n= 2,\n  \na\n2\n= 1\n∑s\n \nI - A∑ = s\n2\n+ 2s + 1 = s\n2\n+ a\n1\n \ns + a\n2\nN = CC* /H21752A*\n \nC*D =\nB\n1\n1\n-3\n-2\nR\nA =\nB\n1\n-4\n1\n-3\nR\n,\n  \nB =\nB\n0\n2\nR\n,\n  \nC = [1\n \n1]\nOpenmirrors.comExample Problems and Solutions 833\nor\n(10–158)\nEquations (10–157) and (10–158) are in the observable canonical form.\nA–10–10. For the system defined by\nconsider the problem of designing a state observer such that the desired eigenvalues for the\nobserver gain matrix are m1 , m2 , p , mn .\nShow that the observer gain matrix given by Equation (10–61), rewritten as\n(10–159)\ncan be obtained from Equation (10–13) by considering the dual problem. That is, the matrix Ke\ncan be determined by considering the pole-placement problem for the dual system, obtaining the\nstate-feedback gain matrix K, and taking its conjugate transpose, or Ke=K*.\nSolution. The dual of the given system is\n(10–160)\nUsing the state-feedback control\nEquation (10–160) becomes\nEquation (10–13), which is rewritten here, is\n(10–161)\nwhere\nFor the original system, the observability matrix is\nHence, matrix T can also be written as\nSince we have\nand\n(T*)-1 = (WN*)-1\nT* = W* N* = WN*\nW = W*,\nT = NW\nCC* /H21752A* C* /H21752p /H21752(A*)n - 1 C*D = N\nT = MW = CC* /H21752A* C* /H21752p /H21752(A*)n - 1 C*D W\nK = Can - an /H21752 an - 1 - an - 1 /H21752 p /H21752 a2 - a2 /H21752 a1 - a1 D T-1\nz# = (A* - C* K) z\nv =- Kz\nn = B* z\nz# = A* z + C* v\nKe = (WN*)-1 F\nan - an\nan - 1 - an - 1\n/H11080\n/H11080\n/H11080\na1 - a1\nV\n y = Cx\n x# = Ax + Bu\ny = [1 1] B-1\n1\n0\n1 RBxˆ1\nxˆ2\nR= [0 1] Bxˆ1\nxˆ2\nR834\nChapter 10 / Control Systems Design in State Space\nTaking the conjugate transpose of both sides of Equation (10–146), we have\nSince K\ne\n=K*, this last equation is the same as Equation (10–159). Thus, we obtained Equation\n(10–159) by considering the dual problem.\nA–10–11. Consider an observed-state feedback control system with a minimum-order observer described\nby the following equations:\n(10–162)\n(10–163)\nwhere\nAx\na\nis the state variable that can be directly measured, and corresponds to the observed state\nvariables.B\nShow that the closed-loop poles of the system comprise the closed-loop poles due to pole\nplacement Cthe eigenvalues of matrix (A-BK)] and the closed-loop poles due to the minimum-\norder observer [the eigenvalues of matrix \nSolution. The error equation for the minimum-order observer may be derived as given by\nEquation (10–94), rewritten thus:\n(10–164)\nwhere\nFrom Equations (10–162) and (10–163), we obtain\n(10–165)\nCombining Equations (10–164) and (10–165) and writing\nwe obtain\n(10–166)\nEquation (10–166) describes the dynamics of the observed-state feedback control system with a\nminimum-order observer. The characteristic equation for this system is\nor\n@s\n \nI - A + BK@@s\n \nI - A\nbb\n+ K\ne\n  \nA\nab\n@ = 0\n2\ns\n \nI - A + BK\n0\n-BK\nb\ns\n \nI - A\nbb\n+ K\ne\n  \nA\nab\n2\n= 0\nB\nx#\ne#\nR\n=\nB\nA - BK\n0\nBK\nb\nA\nbb\n- K\ne\n  \nA\nab\nRB\nx\ne\nR\nK = CK\na\n/H21752K\nb\nD\n = Ax - BK\ne\nx -\nc\n0\ne\nd\nf\n= (A - BK)\n \nx + BK\nc\n0\ne\nd\n x# = Ax - BK x/H33522= Ax - BK\nc\nx\na\nx/H33522\nb\nd\n= Ax - BK\nc\nx\na\nx\nb\n- e\nd\ne = x\nb\n- x/H33522\nb\ne# = AA\nbb\n- K\ne\n  \nA\nab\nB\n \ne\nAA\nbb\n- K\ne\n  \nA\nab\nBD\nx/H33522\nb\nx =\nc\nx\na\nx\nb\nd\n,\n  \nx/H33522=\nc\nx\na\nx/H33522\nb\nd\n u =- Kx/H33522\n y = Cx\n x# = Ax + Bu\nK* = AT\n-1\nB*\nF\na\nn\n- a\nn\na\nn - 1\n- a\nn - 1\n/H11080\n/H11080\n/H11080\na\n1\n- a\n1\nV\n= (T*)\n-1\nF\na\nn\n- a\nn\na\nn - 1\n- a\nn - 1\n/H11080\n/H11080\n/H11080\na\n1\n- a\n1\nV\n= (WN*)\n-1\nF\na\nn\n- a\nn\na\nn - 1\n- a\nn - 1\n/H11080\n/H11080\n/H11080\na\n1\n- a\n1\nV\nOpenmirrors.comExample Problems and Solutions 835\nThe closed-loop poles of the observed-state feedback control system with a minimum-order\nobserver consist of the closed-loop poles due to pole placement and the closed-loop poles due to\nthe minimum-order observer. (Therefore, the pole-placement design and the design of the\nminimum-order observer are independent of each other.)\nA–10–12. Consider a completely state controllable system defined by\n(10–167)\nwhere\nSuppose that the rank of the following matrix\nis n+1. Show that the system defined by\n(10–168)\nwhere\nis completely state controllable.\nSolution. Define\nBecause the system given by Equation (10–167) is completely state controllable, the rank of matrix\nM is n. Then the rank of\nis n+1. Consider the following equation:\n(10–169)\nSince matrix\nis of rank n+1, the left-hand side of Equation (10–169) is of rank n+1.Therefore, the right-hand\nside of Equation (10–169) is also of rank n+1. Since\n= CAˆ  Bˆ /H21752Aˆ 2 Bˆ /H21752p /H21752Aˆ n Bˆ /H21752Bˆ D\n= B AB\n-CB\n/H21752\n/H21752\nA2 B\n-CAB\n/H21752p /H21752\n/H21752p /H21752\nAn B\n-CAn - 1 B\n/H21752\n/H21752\nB\n0 R\nB AM\n-CM\nB\n0 R = B ACB /H21752AB /H21752p /H21752An - 1 BD\n-CCB /H21752AB /H21752p /H21752An - 1 BD\nB\n0 R\nB A\n-C\nB\n0 R\nB A\n-C\nB\n0 RBM\n0\n0\n1 R = B AM\n-CM\nB\n0 R\nBM\n0\n0\n1 R\nM = CB /H21752 AB /H21752 p /H21752 An - 1 BD\nAˆ = B A\n-C\n0\n0 R,  Bˆ = BB\n0 R ,  ue = u(t) - u(q)\ne# = Aˆ e + Bˆ ue\nB A\n-C\nB\n0 R\n(n + 1) * (n + 1)\nC = 1 * n constant matrix\nB = n * 1 constant matrix\nA = n * n constant matrix\ny = output signal (scalar)\nu = control signal (scalar)\nx = state vector (n-vector)\n y = Cx\n x# = Ax + Bu836\nChapter 10 / Control Systems Design in State Space\nwe find that the rank of\nis n+1. Thus, the system defined by Equation (10–168) is completely state controllable.\nA–10–13. Consider the system shown in Figure 10–49. Using the pole-placement-with-observer approach,\ndesign a regulator system such that the system will maintain the zero position Ay\n1\n=0 and y\n2\n=0B\nin the presence of disturbances. Choose the desired closed-loop poles for the pole-placement part\nto be\nand the desired poles for the minimum-order observer to be\nFirst, determine the state feedback gain matrix K and observer gain matrix K\ne\n. Then, obtain\nthe response of the system to an arbitrary initial condition—for example,\nwhere e\n1\nand e\n2\nare defined by\nAssume that m\n1\n=1 kg, m\n2\n=2 kg, k=36 N/H20862m, and b=0.6 N-s/H20862m.\nSolution. The equations for the system are\nBy substituting the given numerical values for m\n1\n, m\n2\n, k, and b and simplifying, we obtain\nLet us choose the state variables as follows:\n x\n4\n= y#\n2\n x\n3\n= y#\n1\n x\n2\n= y\n2\n x\n1\n= y\n1\n y$\n2\n= 18y\n1\n- 18y\n2\n+ 0.3y#\n1\n- 0.3y#\n2\n y$\n1\n=- 36y\n1\n+ 36y\n2\n- 0.6y#\n1\n+ 0.6y#\n2\n+ u\n m\n2\n \ny$\n2\n= kAy\n1\n- y\n2\nB + bAy#\n1\n- y#\n2\nB\n m\n1\n \ny$\n1\n= kAy\n2\n- y\n1\nB + bAy#\n2\n- y#\n1\nB+ u\n e\n2\n= y\n2\n- y/H33522\n2\n e\n1\n= y\n1\n- y/H33522\n1\ne\n1\n(0) = 0.1, \n  \ne\n2\n(0) = 0.05\ny\n1\n(0) = 0.1,\n  \ny\n2\n(0) = 0,\n  \ny#\n1\n(0) = 0,\n  \ny#\n2\n(0) = 0\ns =- 15,\n  \ns =- 16\ns =- 2 + j213\n,\n  \ns =- 2 - j213\n,\n  \ns =- 10,\n  \ns =- 10\nCB\nˆ\n/H21752A\nˆ\n \nB\nˆ\n/H21752A\nˆ\n2\n \nB\nˆ\n/H21752p /H21752A\nˆ\nn\n \nB\nˆ\nD\nm\n1\nm\n2\ny\n1\ny\n2\nu\nk\nb\nRegulator\nFigure 10–49\nMechanical system.\nOpenmirrors.comExample Problems and Solutions 837\nThen, the state-space equations become\nDefine\nThe state feedback gain matrix K and observer gain matrix Ke can be obtained easily by use of\nMATLAB as follows:\n(See MATLAB Program 10–26.)\n Ke = B14.4\n0.3\n0.6\n15.7 R\nK = [130.4444 -41.5556 23.1000 15.4185]\nA = E\n0\n0\n-36\n18\n0\n0\n36\n-18\n1\n0\n-0.6\n0.3\n0\n1\n0.6\n-0.3\nU= C\nAaa\nAba\nAab\nAbb\nS,  B = E\n0\n0\n/H21753\n1\n0\nU= C\nBa\n/H21753\nBb\nS\nBy1\ny2\nR = B1\n0\n0\n1\n0\n0\n0\n0 RD\nx1\nx2\nx3\nx4\nT\nD\nx#\n1\nx#\n2\nx#\n3\nx#\n4\nT = D\n0\n0\n-36\n18\n0\n0\n36\n-18\n1\n0\n-0.6\n0.3\n0\n1\n0.6\n-0.3\nTD\nx1\nx2\nx3\nx4\nT + D\n0\n0\n1\n0\nTu\nMATLAB Program 10–26\nA = [0  0  1  0;0  0  0  1;-36  36  -0.6  0.6;18  -18  0.3  -0.3];\nB = [0;0;1;0];\nJ = [-2+j*2*sqrt(3)  -2-j*2*sqrt(3)  -10  -10];\nK = acker(A,B,J)\nK =\n130.4444    -41.5556    23.1000    15.4185\nAab = [1  0;0  1];\nAbb = [-0.6  0.6;0.3  -0.3];\nL = [-15  -16];\nKe = place(Abb',Aab',L)'\nplace: ndigits= 15\nKe =\n14.4000    0.6000\n0.3000    15.7000\nResponse to Initial Condition: Next, we obtain the response of the designed system to the given\ninitial condition. Since\nx/H33522= Bxa\nx/H33522\nb\nR = By\nx/H33522\nb\nR\nu =- Kx/H33522\nx# = Ax + Buwe have\n(10–170)\nNote that\nwhere\nThen, Equation (10–170) can be written as\n(10–171)\nSince, from Equation (10–94), we have\n(10–172)\nby combining Equations (10–171) and (10–172) into one equation, we have\nThe state matrix here is a 6*6 matrix. The response of the system to the given initial condition\ncan be obtained easily with MATLAB. (See MATLAB Program 10–27.) The resulting response\ncurves are shown in Figure 10–50. The response curves seem to be acceptable.\nc\nx#\ne#\nd\n=\nc\nA - BK\n0\n \nBKF       \nA\nbb\n- K\ne\n  \nA\nab\ndc\nx\ne\nd\ne# = AA\nbb\n- K\ne\n  \nA\nab\nB\n \ne\nx# = (A - BK)\n \nx + BKFe\nF =\nc\n0\nI\nd\nx - x/H33522=\nc\nx\na\nx\nb\nd\n-\nc\nx\na\nx/H33522\nb\nd\n=\nc\n0\nx\nb\n- x/H33522\nb\nd\n=\nc\n0\ne\nd\n=\nc\n0\nI\nd\ne = Fe\nx# = Ax - BK x/H33522= (A - BK)\n \nx + BKAx - x/H33522B\n838\nChapter 10 / Control Systems Design in State Space\nx\n1\n01234\nt (sec)\n01234\nt (sec)\n01234\nt (sec)\n01234\nt (sec)\n01234\nt (sec)\n−0.05\n0\n0.1\n0.05\n0.15\ne\n1\n0\n0.05\n0.1\n01234\nt (sec)\ne\n2\n0\n0.02\n0.04\n0.06\nx\n2\n−0.02\n0.02\n0\n0.04\n0.06\nx\n3\n−0.6\n−0.2\n−0.4\n0\n0.2\nx\n4\n−0.2\n0.1\n0\n−0.1\n0.2\nResponse to initial condition Response to initial condition\nFigure 10–50\nResponse curves to\ninitial condition.\nOpenmirrors.comExample Problems and Solutions 839\nMATLAB Program 10–27\n% Response to initial condition\nA = [0  0  1  0;0  0  0  1;-36  36  -0.6  0.6;18  -18  0.3  -0.3];\nB = [0;0;1;0];\nK = [130.4444  -41.5556  23.1000  15.4185];\nKe = [14.4  0.6;0.3  15.7];\nF = [0  0;0  0;1  0;0  1];\nAab = [1  0;0  1];\nAbb = [-0.6  0.6;0.3  -0.3];\nAA = [A-B*K  B*K*F; zeros(2,4)  Abb-Ke*Aab];\nsys = ss(AA,eye(6),eye(6),eye(6));\nt = 0:0.01:4;\ny = initial(sys,[0.1;0;0;0;0.1;0.05],t);\nx1 = [1  0  0  0  0  0]*y';\nx2 = [0  1  0  0  0  0]*y';\nx3 = [0  0  1  0  0  0]*y';\nx4 = [0  0  0  1  0  0]*y';\ne1 = [0  0  0  0  1  0]*y';\ne2 = [0  0  0  0  0  1]*y';\nsubplot(3,2,1); plot(t,x1); grid; title('Response to initial condition'),\nxlabel('t (sec)'); ylabel('x1')\nsubplot(3,2,2); plot(t,x2); grid; title('Response to initial condition'),\nxlabel('t (sec)'); ylabel('x2')\nsubplot(3,2,3); plot(t,x3); grid; xlabel('t (sec)'); ylabel('x3')\nsubplot(3,2,4); plot(t,x4); grid; xlabel('t (sec)'); ylabel('x4')\nsubplot(3,2,5); plot(t,e1); grid; xlabel('t (sec)');ylabel('e1')\nsubplot(3,2,6); plot(t,e2); grid; xlabel('t (sec)'); ylabel('e2')\nr =0  y u–y Observer\ncontroller+ –\n4\ns(s + 2)\nPlantFigure 10–51\nRegulator system.\nA–10–14. Consider the system shown in Figure 10–51. Design both the full-order and minimum-order observers\nfor the plant. Assume that the desired closed-loop poles for the pole-placement part are located at\nAssume also that the desired observer poles are located at\n(a) s=–8, s=–8 for the full-order observer\n(b) s=–8 for the minimum-order observer\nCompare the responses to the initial conditions specified below:\n(a) for the full-order observer:\nx1(0) = 1,  x2(0) = 0,  e1(0) = 1,  e2(0) = 0\ns =- 2 + j213 ,  s =- 2 - j2 13840\nChapter 10 / Control Systems Design in State Space\n(b) for the minimum-order observer:\nAlso, compare the bandwidths of both systems.\nSolution. We first determine the state-space representation of the system. By defining state\nvariables x\n1\nand x\n2\nas\nwe obtain\nFor the pole-placement part, we determine the state feedback gain matrix K. Using MATLAB,\nwe find K to be\nK=[4 0.5]\n(See MATLAB Program 10–28.)\nNext, we determine the observer gain matrix K\ne\nfor the full-order observer. Using MATLAB,\nwe find K\ne\nto be\n(See MATLAB Program 10–28.)\nK\ne\n=\nB\n14\n36\nR\n y = [1\n \n0]\nB\nx\n1\nx\n2\nR\n \nB\nx#\n1\nx#\n2\nR\n=\nB\n0\n0\n1\n-2\nRB\nx\n1\nx\n2\nR\n+\nB\n0\n4\nR\nu\n x\n2\n= y#\n x\n1\n= y\nx\n1\n(0) = 1,\n  \nx\n2\n(0) = 0,\n  \ne\n1\n(0) = 1\nMATLAB Program 10–28\n% Obtaining matrices K and Ke.\nA = [0  1;0  -2];\nB = [0;4];\nC = [1  0];\nJ = [-2+j*2*sqrt(3)  -2-j*2*sqrt(3)];\nL = [-8  -8];\nK = acker(A,B,J)\nK =\n4.0000  0.5000\nKe = acker(A',C',L)'\nKe =\n14\n36\nNow we find the response of this system to the given initial condition. Referring to Equation\n(10–70), we have\nThis equation defines the dynamics of the designed system using the full-order observer. MATLAB\nProgram 10–29 produces the response to the given initial condition.The resulting response curves\nare shown in Figure 10–52.\nB\nx#\ne#\nR\n=\nB\nA - BK\n0\nBK\nA - K\ne\n  \nC\nRB\nx\ne\nR\nOpenmirrors.comExample Problems and Solutions 841\nMATLAB Program 10–29\n% Response to initial condition ---- full-order observer\nA = [0  1;0  -2];\nB = [0;4];\nC = [1  0];\nK = [4  0.5];\nKe = [14;36];\nAA = [A-B*K  B*K; zeros(2,2)  A-Ke*C];\nsys = ss(AA, eye(4), eye(4), eye(4));\nt = 0:0.01:8;\nx = initial(sys, [1;0;1;0],t);\nx1 = [1  0  0  0]*x';\nx2 = [0  1  0  0]*x';\ne1 = [0  0  1  0]*x';\ne2 = [0  0  0  1]*x';\nsubplot(2,2,1); plot(t,x1); grid\nxlabel('t (sec)'); ylabel('x1')\nsubplot(2,2,2); plot(t,x2); grid\nxlabel('t (sec)'); ylabel('x2')\nsubplot(2,2,3); plot(t,e1); grid\nxlabel('t (sec)'); ylabel('e1')\nsubplot(2,2,4); plot(t,e2); grid\nxlabel('t (sec)'); ylabel('e2')\nx1\nx2\ne1\ne2\n0.4\n0.6\n0.8\n1\n0.2\n0\n−0.2\n02468\n02468\n02468\n−0.4\n0.6\n0.8\n1\n1.2\n0.4\n0.2\n0\n−0.2\n0\n1\n−1\n−2\n−0.5\n0\n−1\n−1.5\n−3\n−2\nt (sec)\nt (sec)\n02468\nt (sec)\nt (sec)\nFigure 10–52\nResponse curves to\ninitial condition.842\nChapter 10 / Control Systems Design in State Space\nMATLAB Program 10–31\n% Obtaining Ke ---- minimum-order observer\nAab = [1];\nAbb = [-2];\nLL = [-8];\nKe = acker(Abb',Aab',LL)'\nKe =\n6\nMATLAB Program 10–30\n% Determination of transfer function of observer controller ---- full-order observer\nA = [0  1;0  -2];\nB = [0;4];\nC = [1  0];\nK = [4  0.5];\nKe = [14;36];\n[num,den] = ss2tf(A-Ke*C-B*K, Ke,K,0)\nnum =\n0   74.0000   256.0000\nden =\n1   18   108\nTo obtain the transfer function of the observer controller, we use MATLAB. MATLAB\nProgram 10–30 produces this transfer function. The result is\nnum\nden = 74s + 256\ns\n2\n+ 18s + 108 =\n74(s + 3.4595)\n(s + 9 + j5.1962)(s + 9 - j5.1962)\nNext, we obtain the observer gain matrix K\ne\nfor the minimum-order observer. MATLAB\nProgram 10–31 produces K\ne\n. The result is\nK\ne\n= 6\nThe response of the system with minimum-order observer to the initial condition can be ob-\ntained as follows: By substituting into the plant equation given by Equation (10–79)u =- Kx/H33522\nOpenmirrors.comExample Problems and Solutions 843\nMATLAB Program 10–32\n% Response to intial condition ---- minimum-order observer\nA = [0  1;0  -2];\nB = [0;4];\nK = [4  0.5];\nKb = 0.5;\nKe = 6;\nAab = 1; Abb = -2;\nAA = [A-B*K  B*Kb; zeros(1,2)  Abb-Ke*Aab];\nsys = ss(AA,eye(3),eye(3),eye(3));\nt = 0:0.01:8;\nx = initial(sys,[1;0;1],t);\nx1 = [1  0  0]*x';\nx2 = [0  1  0]*x';\ne = [0  0  1]*x';\nsubplot(2,2,1); plot(t,x1); grid\nxlabel('t (sec)'); ylabel('x1')\nsubplot(2,2,2); plot(t,x2); grid\nxlabel('t (sec)'); ylabel('x2')\nsubplot(2,2,3); plot(t,e); grid\nxlabel('t (sec)'); ylabel('e')\nwe find\nor\nThe error equation is\nHence the system dynamics are defined by\nBased on this last equation, MATLAB Program 10–32 produces the response to the given initial\ncondition. The resulting response curves are shown in Figure 10–53.\nBx#\ne# R= BA - BK\n0\nBKb\nAbb - Ke Aab\nRBx\ne R\ne# = AAbb - Ke AabB e\nx# = (A - BK) x + BKb e\n= (A - BK) x + BCKa Kb DB0\ne R\nx# = Ax - BK x/H33522= Ax - BKx + BK(x - x/H33522)844\nChapter 10 / Control Systems Design in State Space\ne\n02468\n0\n0.2\n0.4\n0.6\n0.8\n1\nt (sec)\nx\n1\nx\n2\n0.6\n0.8\n1\n1.2\n0.4\n0.2\n0\n02468 02468\n−0.2\n0\n0.5\n−0.5\n−1\n−2\n−1.5\n−2.5\nt (sec) t (sec)\nFigure 10–53\nResponse curves to\ninitial condition.\nThe transfer function of the observer controller, when the system uses the minimum-order\nobserver, can be obtained by use of MATLAB Program 10–33. The result is\nnum\nden = 7s + 32\ns + 10 =\n7(s + 4.5714)\ns + 10\nMATLAB Program 10–33\n% Determination of transfer function of observer controller ---- minimum-order observer\nA = [0  1;0  -2];\nB = [0;4];\nAaa = 0; Aab = 1; Aba = 0; Abb = -2;\nBa = 0; Bb = 4;\nKa = 4; Kb = 0.5;\nKe = 6;\nAhat = Abb - Ke*Aab;\nBhat = Ahat*Ke + Aba - Ke*Aaa;\nFhat = Bb - Ke*Ba;\nAtilde = Ahat - Fhat*Kb;\nBtilde = Bhat - Fhat*(Ka + Kb*Ke);\nCtilde = -Kb;\nDtilde = -(Ka + Kb*Ke);\n[num,den] = ss2tf(Atilde, Btilde, -Ctilde, -Dtilde)\nnum =\n7  32\nden =\n1  10\nOpenmirrors.comExample Problems and Solutions 845\nThe observer controller is clearly a lead compensator.\nThe Bode diagrams of System 1 (closed-loop system with full-order observer) and of Sys-\ntem 2 (closed-loop system with minimum-order observer) are shown in Figure 10–54. Clearly, the\nbandwidth of System 2 is wider than that of System 1. System 1 has a better high-frequency noise-\nrejection characteristic than System 2.\nA–10–15. Consider the system\nwhere x is a state vector (n-vector) and A is an n*n constant matrix. We assume that A is non-\nsingular. Prove that if the equilibrium state x=0 of the system is asymptotically stable (that is, if\nA is a stable matrix), then there exists a positive-definite Hermitian matrix P such that\nwhere Q is a positive-definite Hermitian matrix.\nSolution. The matrix differential equation.\nhas the solution\nIntegrating both sides of this matrix differential equation from t=0 to t=q, we obtain\nX(q) - X(0) = A* a\n3\nq\n0\nX dt b + a\n3\nq\n0\nX dt b A\nX = eA* t QeAt\nX# = A* X + XA,  X(0) = Q\nA* P + PA =- Q\nx# = Ax\nFrequency (rad/sec)\nBode Diagrams of Systems\n−300\n−100\n−200\n−250\n−50\n−150\n0\n−100\n−50\nPhase (deg); Magnitude (dB)\n50\n0\n10−1 100 101 102\nSystem 1\nSystem 2\nSystem 1\nSystem 2\nFigure 10–54\nBode diagrams of System 1\n(system with full-order\nobserver) and System 2\n(system with minimum-\norder observer).\nSystem1=\n(296s+1024)/H20862\n(s4+20s3+144s2\n+512s+1024);\nSystem 2= (28s+128)/H20862\n(s3+12s2+48s+128).846\nChapter 10 / Control Systems Design in State Space\nNoting that A is a stable matrix and, therefore, we obtain\nLet us put\nNote that the elements of are finite sums of terms like where the l\ni\nare\nthe eigenvalues of A and m\ni\nis the multiplicity of l\ni\n. Since the l\ni\npossess negative real parts,\nexists. Note that\nThus P is Hermitian (or symmetric if P is a real matrix). We have thus shown that for a stable A\nand for a positive-definite Hermitian matrix Q, there exists a Hermitian matrix P such that\nWe now need to prove that P is positive definite. Consider the following Her-\nmitian form:\nHence, P is positive definite. This completes the proof.\nA–10–16. Consider the control system described by\n(10–173)\nwhere\nAssuming the linear control law\n(10–174)\ndetermine the constants k\n1\nand k\n2\nso that the following performance index is minimized:\nJ =\n3\nq\n0\nx\nT\n \nx dt\nu =- Kx =- k\n1\n \nx\n1\n- k\n2\n \nx\n2\nA =\nB\n0\n0\n1\n0\nR\n,\n  \nB =\nB\n0\n1\nR\nx# = Ax + Bu\n= 0,\n  \n for x = 0\n=\n3\nq\n0\nAe\nAt\n \nxB*\n \nQAe\nAt\n \nxBdt 7 0,\n  \n for x Z 0\nx*\n \nPx = x*\n \n3\nq\n0\ne\nA*\n \nt\n \nQe\nAt\ndt x\nA*\n \nP + PA =- Q.\nP* =\n3\nq\n0\ne\nA*\n \nt\n \nQe\nAt\ndt = P\n3\nq\n0\ne\nA*\n \nt\n \nQe\nAt\ndt\nte\nl\ni\n \nt\np , t\nm\ni\n- 1\ne\nl\ni\n \nt\n,e\nl\ni\n \nt\n,e\nAt\nP =\n3\nq\n0\nX dt =\n3\nq\n0\ne\nA*\n \nt\n \nQe\nAt\ndt\n-X(0) =- Q = A*\na\n3\nq\n0\nX dt\nb\n+\na\n3\nq\n0\nX dt\nb\n \nA\nX(q) = 0,\nOpenmirrors.comExample Problems and Solutions 847\nConsider only the case where the initial condition is\nChoose the undamped natural frequency to be 2 rad/H20862sec.\nSolution. Substituting Equation (10–174) into Equation (10–173), we obtain\nor\n(10–175)\nThus,\nElimination of x2 from Equation (10–175) yields\nSince the undamped natural frequency is specified as 2 rad/H20862sec, we obtain\nTherefore,\nis a stable matrix if k2>0. Our problem now is to determine the value of k2 so that the\nperformance index\nis minimized, where the matrix P is determined from Equation (10–115), rewritten\nSince in this system Q=I and R=0, this last equation can be simplified to\n(10–176)\nSince the system involves only real vectors and real matrices,P becomes a real symmetric matrix.\nThen Equation (10–176) can be written as\nB0\n1\n-4\n-k2\nRBp11\np12\np12\np22\nR + Bp11\np12\np12\np22\nRB 0\n-4\n1\n-k2\nR= B-1\n0\n0\n-1 R\n(A - BK)* P + P(A - BK) =- I\n(A - BK)* P + P(A - BK) =- (Q + K* RK)\nJ =\n3\nq\n0\nxT x dt = xT(0) P(0) x(0)\nA - BK\nA - BK = B 0\n-4\n1\n-k2\nR\nk1 = 4\nx$\n1 + k2 x#\n1 + k1 x1 = 0\nA - BK = B 0\n-k1\n1\n-k2\nR\n = B 0\n-k1\n1\n-k2\nRBx1\nx2\nR\n Bx#\n1\nx#\n2\nR= B0\n0\n1\n0 RBx1\nx2\nR + B0\n1RC-k1 x1 - k2 x2 D\nx# = Ax - BKx\nx(0) = Bc\n0 R848\nChapter 10 / Control Systems Design in State Space\nSolving for the matrix P, we obtain\nThe performance index is then\n(10–177)\nTo minimize J, we differentiate J with respect to k\n2\nand set equal to zero as follows:\nHence,\nWith this value of k\n2\n, we have Thus, the minimum value of J is obtained by substi-\ntuting into Equation (10–177), or\nThe designed system has the control law\nThe designed system is optimal in that it results in a minimum value for the performance index J\nunder the assumed initial condition.\nA–10–17. Consider the same inverted-pendulum system as discussed in Example 10–5.The system is shown\nin Figure 10–8, where M=2 kg, m=0.1 kg, and l=0.5 m. The block diagram for the system is\nshown in Figure 10–9. The system equations are given by\nj\n#\n= r - y = r - Cx\nu =- Kx + k\nI\n \nj\ny = Cx\nx# = Ax + Bu\nu =- 4x\n1\n- 120\nx\n2\nJ\nmin\n= 15\n2  c\n2\nk\n2\n= 120\n0\n2\nJ/H208620k\n2\n2\n7 0.\nk\n2\n= 120\n0J\n0k\n2\n=\na\n-5\n2k\n2\n2\n+ 1\n8\nb\n \nc\n2\n= 0\n0J/H208620k\n2\n=\na\n5\n2k\n2\n+ k\n2\n8\nb\n \nc\n2\n= [c\n \n0]\nB\np\n11\np\n12\np\n12\np\n22\nRB\nc\n0\nR\n= p\n11\n \nc\n2\nJ = x\nT\n(0)\n \nPx(0)\nP =\nB\np\n11\np\n12\np\n12\np\n22\nR\n=\nD\n5\n2k\n2\n+ k\n2\n8\n1\n8\n1\n8\n5\n8k\n2\nT\nOpenmirrors.comExample Problems and Solutions 849\nwhere\nReferring to Equation (10–51), the error equation for the system is given by\nwhere\nand the control signal is given by Equation (10–41):\nwhere\nUsing MATLAB, determine the state feedback gain matrix such that the following\nperformance index J is minimized:\nJ =\n3\nq\n0\n(e* Qe + u* Ru) dt\nKˆ\nx = D\nx1\nx2\nx3\nx4\nT= D\nu\nu#\nx\nx#\nT\ne = Bxe\nje\nR = Bx(t) - x(q)\nj(t) - j(q) R\nKˆ = CK /H21752-kI D = Ck1 k2 k3 k4 /H21752-kI D\nue =- Kˆ e\nAˆ = B A\n-C\n0\n0 R = E\n0\n20.601\n0\n-0.4905\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n-1\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\nU,  Bˆ = BB\n0 R = E\n0\n-1\n0\n0.5\n0\nU\ne# = Aˆ e + Bˆ ue\nA = D\n0\n20.601\n0\n-0.4905\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\nT ,  B = D\n0\n-1\n0\n0.5\nT,  C = [0 0 1 0]850\nChapter 10 / Control Systems Design in State Space\nwhere\nObtain the unit-step response of the system designed.\nSolution. A MATLAB program to determine is given in MATLAB Program 10–34.The result is\nk\n1\n=- 188.0799,\n  \nk\n2\n=- 37.0738,\n  \nk\n3\n=- 26.6767,\n  \nk\n4\n=- 30.5824,\n  \nk\nI\n=- 10.0000\nK\nˆ\nQ =\nE\n100\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n1\nU\n,\n  \nR = 0.01\nMATLAB Program 10–34\n% Design of quadratic optimal control system\nA = [0  1  0  0;20.601  0  0  0;0  0  0  1;-0.4905  0  0  0];\nB = [0;-1;0;0.5];\nC = [0  0  1  0];\nD = [0];\nAhat = [A zeros(4,1);-C  0];\nBhat = [B;0];\nQ = [100  0  0  0  0;0  1  0  0  0;0  0  1  0  0;0  0  0  1  0;0  0  0  0  1];\nR = [0.01];\nKhat = lqr(Ahat,Bhat,Q,R)\nKhat =\n-188.0799  -37.0738  -26.6767  -30.5824  10.0000\nUnit-Step Response. Once we have determined the feedback gain matrix K and the integral gain\nconstant k\nI\n, we can determine the unit-step response of the designed system.The system equation\nis\n(10–178)\n[Refer to Equation (10–35).] Since\nEquation (10–178) can be written as follows:\n(10–179)\nThe output equation is\ny = [C    0]\nB\nx\nj\nR\n+ [0]r\nB\nx#\nj\n#\nR\n=\nB\nA - BK\n-C\nBk\nI\n0\nRB\nx\nj\nR\n+\nB\n0\n1\nR\nr\nu =- Kx + k\nI\n \nj\nB\nx#\nj\n#\nR\n=\nB\nA\n-C\n0\n0\nRB\nx\nj\nR\n+\nB\nB\n0\nR\nu +\nB\n0\n1\nR\nr\nOpenmirrors.comMATLAB Program 10–35 gives the unit-step response of the system given by Equation (10–179).\nThe resulting response curves are presented in Figure 10–55. It shows response curves \nversus t, versus t, versus t, versus t, and versus t, where\nthe input r(t) to the cart is a unit-step function All initial conditions are set equal\nto zero. Figure 10–56 is an enlarged version of the cart position  versus t. The cart\nmoves backward a very small amount for the first 0.6 sec or so. (Notice that the cart velocity is\nnegative for the first 0.4 sec.) This is due to the fact that the inverted-pendulum-on-the-cart system\nis a nonminimum-phase system.\ny C= x3(t)D\nCr(t) = 1 mD.\nj C= x5(t)Dy# C= x4(t)Dy C= x3(t)Du\n#\nC= x2(t)D\nu C= x1(t)D\nExample Problems and Solutions 851\nMATLAB Program 10–35\n% Unit-step response\nA = [0  1  0  0;20.601  0  0  0;0  0  0  1;-0.4905  0  0  0];\nB = [0;-1;0;0.5];\nC = [0  0  1  0];\nD = [0];\nK = [-188.0799  -37.0738  -26.6767  -30.5824];\nkI = -10.0000;\nAA = [A-B*K  B*kI; -C  0];\nBB = [0;0;0;0;1];\nCC= [C  0];\nDD = D;\nt = 0:0.01:10;\n[y,x,t] = step(AA,BB,CC,DD,1,t);\nx1 = [1  0  0  0  0]*x';\nx2 = [0  1  0  0  0]*x';\nx3 = [0  0  1  0  0]*x';\nx4 = [0  0  0  1  0]*x';\nx5 = [0  0  0  0  1]*x';\nsubplot(3,2,1); plot(t,x1); grid;\nxlabel('t (sec)'); ylabel('x1')\nsubplot(3,2,2); plot(t,x2); grid;\nxlabel('t (sec)'); ylabel('x2')\nsubplot(3,2,3); plot(t,x3); grid;\nxlabel('t (sec)'); ylabel('x3')\nsubplot(3,2,4); plot(t,x4); grid;\nxlabel('t (sec)'); ylabel('x4')\nsubplot(3,2,5); plot(t,x5); grid;\nxlabel('t (sec)'); ylabel('x5')\nComparing the step-response characteristics of this system with those of Example 10–5, we\nnotice that the response of the present system is less oscillatory and exhibits less maximum\novershoot in the position response Ax3 versus tB. The system designed by use of the quadratic\noptimal regulator approach generally gives such characteristics—less oscillatory and well damped.852\nChapter 10 / Control Systems Design in State Space\nx\n1\n02468 1 0\nt (sec)\n02468 1 0\nt (sec)\n02468 1 0\nt (sec)\n02468 1 0\nt (sec)\n02468 1 0\nt (sec)\n−0.02\n0\n0.02\n0.04\nx\n5\n0\n1\n2\n3\nx\n2\n−0.05\n0.05\n0\n0.1\n0.15\nx\n3\n−0.5\n0.5\n0\n1\n1.5\nx\n4\n−0.2\n0.2\n0\n0.4\n0.6\nFigure 10–55\nResponse curves to a\nunit-step input.\nCart Position x\n3\n versus t\nCart Position x\n3\nt (sec)\n0123456789 1 0\n1.2\n1\n0.8\n0.6\n0.4\n0.2\n0\n−0.2\nFigure 10–56\nCart position versus t\ncurve.\nA–10–18. Consider the stability of a system with unstructured additive uncertainty as shown in Figure\n10–57(a). Define\ntrue plant dynamics\nG=model of plant dynamics\nunstructured additive uncertainty¢\na\n=\nG/H33522=\nOpenmirrors.comExample Problems and Solutions 853\nG\nw\nu\nK\nWaI\ny\nz\n− +\nK\n(f)\n(e)\nw\nu\nz\ny\nP\nG\nK\n/H9004a\n(d)\nu\nzw\n− +/H9004a\nTa\nBA\n(c)\nG\nK\n/H9004a\n(a)\nyu\nA\n++\n–\nB\n/H9004a\nK\nG\nyu\n+ −\nA B\n(b)\nFigure 10–57\n(a) Block diagram of a system with unstructured additive uncertainty;\n(b)–(d) successive modifications of the block diagram of (a);\n(e) block diagram showing a generalized plant with unstructured additive uncertainty;\n(f) generalized plant diagram.854\nChapter 10 / Control Systems Design in State Space\nAssume that is stable and its upper bound is known. Assume also that and G are related by \n=G+\na\nObtain the condition that the controller K must satisfy for robust stability. Also, obtain a gener-\nalized plant diagram for this system.\nSolution. Let us obtain the transfer function between point A and point B in Figure 10–57(a).\nRedrawing Figure 10–57(a), we obtain Figure 10–57(b).Then the transfer function between points\nA and B can be obtained as\nDefine\nThen Figure 10–57(b) can be redrawn as Figure 10–57(c). By using the small-gain theorem, the con-\ndition for the robust stability of the closed-loop system can be obtained as \n(10–180)\nSince it is impossible to model precisely, we need to find a scalar transfer function \nsuch that\nfor all v\nand use this instead of \na\n. Then, the condition for the robust stability of the closed-loop\nsystem can be given by\n(10–181)\nIf Inequality (10–181) holds true, then it is evident that Inequality (10–180) also holds true. So this\nis the condition to guarantee the robust stability of the designed system. In Figure 10–57(e),\na\nin Figure 10–57(d) was replaced by .\nTo summarize, if we make the norm of the transfer function from w to z to be less than\n1, the controller K that satisfies Inequality (10–181) can be determined.\nFigure 10–57(e) can be redrawn as that shown in Figure 10–57(f), which is the generalized\nplant diagram for the system considered.\nNote that for this problem the matrix that relates the controlled variable z and the exoge-\nnous disturbance w is given by\nNoting that u(s)=K(s)y(s) and referring to Equation (10–128), is given by the elements\nof the P matrix as follows:\nTo make this equal to we may choose P\n11\n=0, P\n12\n=W\na\n, P\n21\n=I, and\nP\n22\n=/H11002G. Then, the P matrix for this problem can be obtained as\nP =\nB\n0\nI\nW\na\n-G\nR\nW\na\nK(I + GK)\n-1\n,£(s)\n£(s) = P\n11\n+ P\n12\nK(I - P\n22\nK)\n- 1\nP\n21\n£(s)\nz =£ (s)w = (W\na\nT\na\n)w = [W\na\nK(I + GK)\n-1\n]w\n£\nH\nq\nW\na\nI\n¢\n7W\na\nT\na\n7\nq\n6 1\n¢W\na\n(jv)\ns\n{¢\na\n(jv)} 6 /H20895W\na\n(jv)/H20895\nW\na\n(jv)¢\na\n7¢\na\nT\na\n7\nq\n6 1\nK(1 + GK)\n- 1\n= T\na\nK\n1 + GK = K(1 + GK)\n-1\n¢G/H33522\nG/H33522¢\na\nOpenmirrors.comProblems 855\nx = Ax + Bu. y = Cx\nx2\nx3\nk2\nk1\nk3\nr u\nx\ny = x1\n+ – + –\nFigure 10–58\nType 1 servo system.\nPROBLEMS\nB–10–1. Consider the system defined by\nwhere\nTransform the system equations into (a) controllable canon-\nical form and (b) observable canonical form.\nB–10–2. Consider the system defined by\nwhere\nTransform the system equations into the observable canon-\nical form.\nB–10–3. Consider the system defined by\nwhere\nBy using the state-feedback control it is desired to\nhave the closed-loop poles at Deter-\nmine the state-feedback gain matrix K.\nB–10–4. Solve Problem B–10–3 with MATLAB.\ns =- 10.s =- 2 ; j4,\nu =- Kx,\nA = C\n0\n0\n-1\n1\n0\n-5\n0\n1\n-6\nS,  B = C\n0\n1\n1\nS\n x# = Ax + Bu\nA = C\n-1\n1\n0\n0\n-2\n0\n1\n0\n-3\nS, B = C\n0\n1\n1\nS, C = [1 1 1]\n y = Cx\n x# = Ax + Bu\nC = [1 1 0]A = C\n-1\n1\n0\n0\n-2\n0\n1\n0\n-3\nS,  B = C\n0\n0\n1\nS,\n y = Cx\n x# = Ax + Bu\nB–10–5. Consider the system defined by\nShow that this system cannot be stabilized by the state-\nfeedback control whatever matrix K is chosen.\nB–10–6. A regulator system has a plant\nDefine state variables as\nBy use of the state-feedback control it is desired\nto place the closed-loop poles at\nDetermine the necessary state-feedback gain matrix K.\nB–10–7. Solve Problem B–10–6 with MATLAB.\nB–10–8. Consider the type 1 servo system shown in Figure\n10–58. Matrices A, B, and C in Figure 10–58 are given by\nDetermine the feedback gain constants k1 , k2 , and k3 such\nthat the closed-loop poles are located at\nObtain the unit-step response and plot the output \ny(t)-versus-t curve.\ns =- 2 + j4,  s =- 2 - j4,  s =- 10\nA = C\n0\n0\n0\n1\n0\n-5\n0\n1\n-6\nS,  B = C\n0\n0\n1\nS,  C = [1 0 0]\ns =- 2 + j213 ,  s =- 2 - j213 ,  s =- 10\nu =- Kx,\n x3 = x#\n2\n x2 = x#\n1\n x1 = y\nY(s)\nU(s) = 10\n(s + 1)(s + 2)(s + 3)\nu =- Kx,\nBx#\n1\nx#\n2\nR = B0\n0\n1\n2 RBx1\nx2\nR + B1\n0Ru856\nChapter 10 / Control Systems Design in State Space\nB–10–9. Consider the inverted-pendulum system shown in\nFigure 10–59. Assume that\nM=2 kg, m=0.5 kg, l=1 m\nDefine state variables as\nand output variables as\nDerive the state-space equations for this system.\nIt is desired to have closed-loop poles at\nDetermine the state-feedback gain matrix K.\nUsing the state-feedback gain matrix K thus determined,\nexamine the performance of the system by computer simu-\nlation.Write a MATLAB program to obtain the response of\nthe system to an arbitrary initial condition. Obtain the\nresponse curves x\n1\n(t) versus t, x\n2\n(t) versus t, x\n3\n(t) versus t,\nand x\n4\n(t) versus t for the following set of initial condition:\nx\n1\n(0) = 0,\n \nx\n2\n(0) = 0,\n \nx\n3\n(0) = 0,\n \nx\n4\n(0) = 1 m/H20862s\ns =- 4 + j4,\n  \ns =- 4 - j4,\n  \ns =- 20,\n  \ns =- 20\ny\n1\n= u = x\n1\n \n,\n  \ny\n2\n= x = x\n3\nx\n1\n= u,\n  \nx\n2\n= u\n#\n,\n  \nx\n3\n= x,\n  \nx\n4\n= x#\nwhere\nDesign a full-order state observer. The desired observer\npoles are s=–5 and s=–5.\nB–10–11. Consider the system defined by\nwhere\nDesign a full-order state observer, assuming that the desired\npoles for the observer are located at\ns=–10, s=–10, s=–15\nB–10–12. Consider the system defined by\nGiven the set of desired poles for the observer to be\ndesign a full-order observer.\nB–10–13. Consider the double integrator system defined by\nIf we choose the state variables as\nthen the state-space representation for the system becomes\nas follows:\n y = [1\n \n0]\nB\nx\n1\nx\n2\nR\n \nB\nx#\n1\nx#\n2\nR\n=\nB\n0\n0\n1\n0\nRB\nx\n1\nx\n2\nR\n+\nB\n0\n1\nR\nu\n x\n2\n= y#\n x\n1\n= y\ny$ = u\ns =- 5 + j513\n,\n  \ns =- 5 - j513\n,\n  \ns =- 10\ny = [1\n \n0\n \n0]\nC\nx\n1\nx\n2\nx\n3\nS\n+\nC\n0\n0\n1.244\nS\nu\nC\nx#\n1\nx#\n2\nx#\n3\nS\n=\nC\n0\n0\n1.244\n1\n0\n0.3956\n0\n1\n-3.145\nSC\nx\n1\nx\n2\nx\n3\nS\nA =\nC\n0\n0\n-5\n1\n0\n-6\n0\n1\n0\nS\n,\n  \nB =\nC\n0\n0\n1\nS\n,\n  \nC = [1\n \n0\n \n0]\n y = Cx\n x# = Ax + Bu\nA =\nB\n-1\n1\n1\n-2\nR\n,\n  \nC = [1\n \n0]\n0\nM\nP\nz\nu\nmg\nm\n/H5129 sin u\nx\nx\n/H5129 cos u\n/H5129\nu\nFigure 10–59\nInverted-pendulum system.\nB–10–10. Consider the system defined by\n y = Cx\n x# = Ax\nOpenmirrors.comProblems 857\nY(s)R(s) U(s)Observer\ncontroller+ –\ns2 + 2s + 50\ns(s + 4) (s + 6)\nFigure 10–60\nControl system with observer controller in the\nfeedforward path.\nIt is desired to design a regulator for this system. Using the\npole-placement-with-observer approach, design an observer\ncontroller.\nChoose the desired closed-loop poles for the pole-\nplacement part to be\ns=–0.7071+j0.7071, s=–0.7071-j0.7071\nand assuming that we use a minimum-order observer, choose\nthe desired observer pole at\ns=–5\nB–10–14. Consider the system\nwhere\nDesign a regulator system by the pole-placement-with-\nobserver approach. Assume that the desired closed-loop\npoles for pole placement are located at\ns=–1+j, s=–1-j, s=–5\nThe desired observer poles are located at\ns=–6, s=–6, s=–6\nAlso, obtain the transfer function of the observer controller.\nB–10–15. Using the pole-placement-with-observer approach,\ndesign observer controllers (one with a full-order observer and\nthe other with a minimum-order observer) for the system\nshown in Figure 10–60. The desired closed-loop poles for the\npole-placement part are\ns=–1+j2, s=–1-j2, s=–5\nA = C\n0\n0\n-6\n1\n0\n-11\n0\n1\n-6\nS,   B = C\n0\n0\n1\nS,   C = [1 0 0]\n y = Cx\n x# = Ax + Bu\nThe desired observer poles are\ns=–10, s=–10, s=–10 for the full-order observer\ns=–10, s=–10 for the minimum-order observer.\nCompare the unit-step responses of the designed systems.\nCompare also the bandwidths of both systems.\nB–10–16. Using the pole-placement-with-observer approach,\ndesign the control systems shown in Figures 10–61(a) and (b).\nAssume that the desired closed-loop poles for the pole place-\nment are located at\ns=–2+j2, s=–2-j2\nand the desired observer poles are located at\ns=–8, s=–8\nObtain the transfer function of the observer controller.\nCompare the unit-step responses of both systems. [In System\n(b), determine the constant N so that the steady-state out-\nput y(q) is unity when the input is a unit-step input.]\nY(s)R(s) Observer\ncontroller+ –\n1\ns(s + 1)\n1\ns(s + 1)\nY(s)\nObserver\ncontroller\n+ –\n(b)\nR(s)\nN\n(a)\nPlant\nFigure 10–61\nControl systems with observer controller: (a) observer\ncontroller in the feedforward path; (b) observer controller\nin the feedback path.\nB–10–17. Consider the system defined by\nwhere\na = adjustable parameter 7 0\nA = C\n0\n0\n-1\n1\n0\n-2\n0\n1\n-a\nS\nx# = Ax858\nChapter 10 / Control Systems Design in State Space\nDetermine the value of the parameter a so as to minimize\nthe following performance index:\nAssume that the initial state x(0) is given by\nB–10–18. Consider the system shown in Figure 10–62.\nDetermine the value of the gain K so that the damping ratio\nz of the closed-loop system is equal to 0.5. Then determine\nalso the undamped natural frequency v\nn\nof the closed-loop\nsystem. Assuming that e(0)=1 and evaluate\n3\nq\n0\ne\n2\n(t) dt\ne# (0) = 0,\nx(0) =\nC\nc\n1\n0\n0\nS\nJ =\n3\nq\n0\nx\nT\n \nx dt\nB–10–21. Consider the inverted-pendulum system shown\nin Figure 10–59. It is desired to design a regulator system\nthat will maintain the inverted pendulum in a vertical po-\nsition in the presence of disturbances in terms of angle u\nand/or angular velocity The regulator system is required\nto return the cart to its reference position at the end of\neach control process. (There is no reference input to the\ncart.)\nThe state-space equation for the system is given by\nwhere\nWe shall use the state-feedback control scheme\nUsing MATLAB, determine the state-feedback gain matrix\nsuch that the following performance\nindex J is minimized:\nwhere\nThen obtain the system response to the following initial\ncondition:\nPlot response curves u versus t, versus t, x versus t, and\nversus t.\nx#u#\nD\nx\n1\n(0)\nx\n2\n(0)\nx\n3\n(0)\nx\n4\n(0)\nT\n=\nD\n0.1\n0\n0\n0\nT\nQ =\nD\n100\n0\n0\n0\n0\n1\n0\n0\n0\n0\n1\n0\n0\n0\n0\n1\nT\n,\n  \nR = 1\nJ =\n3\nq\n0\nAx*\n \nQx + u*\n \nRuBdt\nK = Ck\n1\nk\n2\nk\n3\nk\n4\nD\nu =- Kx\nB =\nD\n0\n-1\n0\n0.5\nT\n,\n  \nx =\nD\nu\nu#\nx\nx#\nT\nA =\nD\n0\n20.601\n0\n-0.4905\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\nT\nx# = Ax + Bu\nu# .\n+ –\nr = 0 cue\nK 5\n(s + 1) (2s + 1)\nFigure 10–62\nControl system.\nB–10–19. Determine the optimal control signal u for the\nsystem defined by\nwhere\nsuch that the following performance index is minimized:\nB–10–20. Consider the system\nIt is desired to find the optimal control signal u such that\nthe performance index\nis minimized. Determine the optimal signal u(t).\nJ =\n3\nq\n0\nAx\nT\n \nQx + u\n2\nBdt,\n  \nQ =\nB\n1\n0\n0\nm\nR\nB\nx#\n1\nx#\n2\nR\n=\nB\n0\n0\n1\n0\nRB\nx\n1\nx\n2\nR\n+\nB\n0\n1\nR\nu\nJ =\n3\nq\n0\nAx\nT\n \nx + u\n2\nBdt\nA =\nB\n0\n0\n1\n-1\nR\n,\n  \nB =\nB\n0\n1\nR\nx# = Ax + Bu\nOpenmirrors.comA\n859\nAppendix\nAppendix A first presents the complex variable and complex function.Then it presents\ntables of Laplace transform pairs and properties of Laplace transforms. Finally, it presents\nfrequently used Laplace transform theorems and Laplace transforms of pulse function\nand impulse function.\nComplex Variable. A complex number has a real part and an imaginary part, both\nof which are constant. If the real part and/or imaginary part are variables, a complex\nquantity is called a complex variable. In the Laplace transformation we use the notation\ns as a complex variable; that is,\nwhere s is the real part and v is the imaginary part.\nComplex Function. A complex function G(s), a function of s, has a real part and\nan imaginary part or\nwhere Gx and Gy are real quantities. The magnitude of G(s) is and the\nangle u of G(s) is The angle is measured counterclockwise from the pos-\nitive real axis. The complex conjugate of G(s) is\nComplex functions commonly encountered in linear control systems analysis are\nsingle-valued functions of s and are uniquely determined for a given value of s.\nG–(s) = Gx - jGy .\ntan-1 AGy/H20862GxB.\n2Gx\n2 + Gy\n2 ,\nG(s) = Gx + jGy\ns = s + jv\nLaplace Transform TablesA complex function G(s) is said to be analytic in a region if G(s) and all its deriva-\ntives exist in that region. The derivative of an analytic function G(s) is given by\nSince can approach zero along an infinite number of different\npaths. It can be shown, but is stated without a proof here, that if the derivatives taken\nalong two particular paths, that is, and are equal, then the deriva-\ntive is unique for any other path and so the derivative exists.\nFor a particular path (which means that the path is parallel to the real\naxis),\nFor another particular path (which means that the path is parallel to the\nimaginary axis),\nIf these two values of the derivative are equal,\nor if the following two conditions\nare satisfied, then the derivative dG (s)/ ds is uniquely determined.These two conditions\nare known as the Cauchy–Riemann conditions. If these conditions are satisfied, the func-\ntion G(s) is analytic.\nAs an example, consider the following G(s):\nThen\nG(s + jv) = 1\ns + jv + 1 = G\nx\n+ jG\ny\nG(s) = 1\ns + 1\n0G\nx\n0s =\n0G\ny\n0v\n  \nand\n  \n0G\ny\n0s =- 0G\nx\n0v\n0G\nx\n0s + j\n0G\ny\n0s =\n0G\ny\n0v - j 0G\nx\n0v\nd\nds G(s) = lim\nj¢vS 0\n \na\n¢G\nx\nj¢v + j\n¢G\ny\nj¢v\nb\n=- j 0G\nx\n0v +\n¢G\ny\n0v\n¢s = j¢v\nd\nds G(s) = lim\n¢sS 0\n \na\n¢G\nx\n¢s + j\n¢G\ny\n¢s\nb\n= 0G\nx\n0s + j\n0G\ny\n0s\n¢s =¢ s\n¢s =¢ s + j¢v\n¢s = j¢v,¢s =¢ s\n¢s =¢ s + j¢v, ¢s\nd\nds G(s) = lim\n¢s S 0\nG(s +¢ s) - G(s)\n¢s = lim\n¢s S 0\n¢G\n¢s\n860\nAppendix A / Laplace Transform Tables\nOpenmirrors.comwhere\nIt can be seen that, except at s=–1 ( that is, s=–1, v=0), G(s) satisfies the\nCauchy–Riemann conditions:\nHence G(s)=1/(s+1) is analytic in the entire s plane except at s=–1. The deriva-\ntive dG (s)/ ds, except at s=1, is found to be\nNote that the derivative of an analytic function can be obtained simply by differentiat-\ning G(s) with respect to s. In this example,\nPoints in the s plane at which the function G(s) is analytic are called ordinary\npoints, while points in the s plane at which the function G(s) is not analytic are called\nsingular points. Singular points at which the function G(s) or its derivatives approach\ninfinity are called poles. Singular points at which the function G(s) equals zero are\ncalled zeros.\nIf G(s) approaches infinity as s approaches –p and if the function\nfor n=1,2 ,3 ,p\nhas a finite, nonzero value at s=–p, then s=–p is called a pole of order n. If n=1,\nthe pole is called a simple pole. If n=2,3 , p , the pole is called a second-order pole, a\nthird-order pole, and so on.\nTo illustrate, consider the complex function\nG(s) = K(s + 2)(s + 10)\ns(s + 1)(s + 5)(s + 15)2\nG(s)(s + p)n,\nd\nds a 1\ns + 1 b =- 1\n(s + 1)2\n=- 1\n(s + jv + 1)2 =- 1\n(s + 1)2\nd\nds G(s) = 0Gx\n0s + j\n0Gy\n0s =\n0Gy\n0v - j 0Gx\ndv\n0Gy\n0s =- 0Gx\n0v = 2v(s + 1)\nC(s + 1)2 + v2 D\n2\n0Gx\n0s =\n0Gy\n0v = v2 - (s + 1)2\nC(s + 1)2 + v2 D\n2\nGx = s + 1\n(s + 1)2 + v2  and  Gy = -v\n(s + 1)2 + v2\nAppendix A / Laplace Transform Tables 861G(s) has zeros at s=–2, s=–10, simple poles at s=0, s=–1, s=–5, and a double\npole (multiple pole of order 2) at s=–15. Note that G(s) becomes zero at s=q. Since\nfor large values of s\nG(s) possesses a triple zero (multiple zero of order 3) at s=q. If points at infinity are\nincluded,G(s) has the same number of poles as zeros.To summarize,G(s) has five zeros\n(s=–2, s=–10, s= q, s=q, s=q) and five poles (s=0, s=–1, s=–5,\ns=–15, s=–15).\nLaplace Transformation. Let us define\nf(t)=a function of time t such that f(t)=0 for t<0\ns=a complex variable\nl=an operational symbol indicating that the quantity that it prefixes is to\nbe transformed by the Laplace integral \nF(s)=Laplace transform of f(t)\nThen the Laplace transform of f(t) is given by\nThe reverse process of finding the time function f(t) from the Laplace transform F(s)\nis called the inverse Laplace transformation.The notation for the inverse Laplace trans-\nformation is l\n–1\n, and the inverse Laplace transform can be found from F(s) by the fol-\nlowing inversion integral:\nwhere c, the abscissa of convergence, is a real constant and is chosen larger than the real\nparts of all singular points of F(s).Thus, the path of integration is parallel to the jv axis\nand is displaced by the amount c from it.This path of integration is to the right of all sin-\ngular points.\nEvaluating the inversion integral appears complicated. In practice, we seldom use this\nintegral for finding f(t). We frequently use the partial-fraction expansion method given\nin Appendix B.\nIn what follows we give Table A–1, which presents Laplace transform pairs of com-\nmonly encountered functions, and Table A–2, which presents properties of Laplace\ntransforms.\nl\n-1\nCF(s)D = f(t) = 1\n2pj 3\nc + jq\nc - jq\nF(s)e\nst\nds,\n  \nfor t 7 0\nlCf(t)D = F(s) =\n3\nq\n0\ne\n-st\ndt Cf(t)D =\n3\nq\n0\nf(t)e\n-st\ndt\n1\nq\n0\ne\n-st\ndt\nG(s) /H11216K\ns\n3\n862\nAppendix A / Laplace Transform Tables\nOpenmirrors.comAppendix A / Laplace Transform Tables 863\nf(t) F(s)\n1 Unit impulse d(t) 1\n2 Unit step 1(t)\n3 t\n4\n5 tn (n=1, 2, 3, p)\n6 e–at\n7 te–at\n8\n9 tne–at (n=1, 2, 3, p)\n10 sin vt\n11 cos vt\n12 sinh vt\n13 cosh vt\n14\n15\n16\n17 1\ns(s + a)(s + b)\n1\nab c1 + 1\na - b Abe-at - ae-btBd\ns\n(s + a)(s + b)\n1\nb - a Abe-bt - ae-atB\n1\n(s + a)(s + b)\n1\nb - a Ae-at - e-btB\n1\ns(s + a)\n1\na A1 - e-atB\ns\ns2 - v2\nv\ns2 - v2\ns\ns2 + v2\nv\ns2 + v2\nn!\n(s + a)n + 1\n1\n(s + a)n\n1\n(n - 1)! tn - 1e-at  (n = 1, 2, 3, p )\n1\n(s + a)2\n1\ns + a\nn!\nsn + 1\n1\nsn\ntn - 1\n(n - 1)!  (n = 1, 2, 3, p )\n1\ns2\n1\ns\nTable A–1 Laplace Transform Pairs\n(continues on next page)864\nAppendix A / Laplace Transform Tables\n18\n19\n20 e\n–at\nsin vt\n21 e\n–at\ncos vt\n22\n23\n24\n25 1-cos vt\n26 vt-sin vt\n27 sin vt-vt cos vt\n28\n29 t cos vt\n30\n31 s\n2\nAs\n2\n+ v\n2\nB\n2\n1\n2v (sin vt + vt cos vt)\ns\nAs\n2\n+ v\n2\n1\nBAs\n2\n+ v\n2\n2\nB\n1\nv\n2\n2\n- v\n2\n1\nAcos v\n1\n \nt - cos v\n2\n \ntB\n  \nAv\n2\n1\nZ v\n2\n2\nB\ns\n2\n- v\n2\nAs\n2\n+ v\n2\nB\n2\ns\nAs\n2\n+ v\n2\nB\n2\n1\n2v t sin vt\n2v\n3\nAs\n2\n+ v\n2\nB\n2\nv\n3\ns\n2\nAs\n2\n+ v\n2\nB\nv\n2\nsAs\n2\n+ v\n2\nB\n(0 6 z 6 1,\n \n0 6 f 6 p/H208622)\nv\n2\nn\nsAs\n2\n+ 2zv\nn\n \ns + v\n2\nn\nBf = tan\n-1\n21 - z\n2\nz\n1 - 1\n21 - z\n2\ne\n-zv\nn\n \nt\nsin\n \nAv\nn\n21 - z\n2\nt + fB\n(0 6 z 6 1,\n \n0 6 f 6 p/H208622)\ns\ns\n2\n+ 2zv\nn\n \ns + v\n2\nn\nf = tan\n-1\n21 - z\n2\nz\n- 1\n21 - z\n2\ne\n-zv\nn\n \nt\nsin\n \nAv\nn\n21 - z\n2\nt - fB\nv\n2\nn\ns\n2\n+ 2zv\nn\n \ns + v\n2\nn\nv\nn\n21 - z\n2\ne\n-zv\nn\n \nt\nsin v\nn\n21 - z\n2\nt\n \n(0 6 z 6 1)\ns + a\n(s + a)\n2\n+ v\n2\nv\n(s + a)\n2\n+ v\n2\n1\ns\n2\n(s + a)\n1\na\n2\nAat - 1 + e\n-at\nB\n1\ns(s + a)\n2\n1\na\n2\nA1 - e\n-at\n- ate\n-at\nB\nTable A–1\n(continued)\nOpenmirrors.comAppendix A / Laplace Transform Tables 865\n1\n2\n3\n4\n5\nwhere\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18 lCf(t)g(t)D = 1\n2pj 3\nc + jq\nc - jq\nF(p)G(s - p) dp\nlc\n3\nt\n0\nf1(t - t)f2(t) dtd= F1(s)F2(s)\nlcf a1\na bd= aF(as)\nlc1\nt f(t) d=\n3\nq\ns\nF(s) ds  if lim\nt S 0\n1\nt f(t) exists\nlCtnf(t)D = (-1)n dn\ndsn F(s)  (n = 1, 2, 3, p )\nlCt2f(t)D = d2\nds2 F(s)\nlCtf(t)D =-\ndF(s)\nds\nlCf(t - a)1(t - a)D = e-asF(s)  a /H113500\nlCe-atf(t)D = F(s + a)\n3\nq\n0\nf(t) dt = lim\ns S 0\nF(s)  if\n3\nq\n0\nf(t) dt exists\nlc\n3\nt\n0\nf(t) dt d=\nF(s)\ns\nl; c\n3\np\n3\nf(t)(dt)n d=\nF(s)\nsn + a\nn\nk = 1\n1\nsn - k + 1 c\n3\np\n3\nf(t)(dt)k d\nt = 0 ;\nl; c\n3\nf(t) dt d=\nF(s)\ns + 1\ns c\n3\nf(t) dt d\nt = 0 ;\nf(t)\n(k - 1)\n= dk - 1\ndtk - 1 f(t)\nl; cdn\ndtn f(t) d= snF(s) - a\nn\nk = 1\nsn - kf(0 ;)\n(k - 1)\nl; cd2\ndt2 f(t) d= s2F(s) - sf(0 ;) - f\n#\n(0 ;)\nl; cd\ndt f(t) d= sF(s) - f(0 ;)\nlCf1(t) ; f2(t)D = F1(s) ; F2(s)\nlCAf(t)D = AF(s)\nTable A–2 Properties of Laplace TransformsFinally, we present two frequently used theorems, together with Laplace transforms\nof the pulse function and impulse function.\n866\nAppendix A / Laplace Transform Tables\nInitial value theorem\nFinal value theorem\nPulse function\nImpulse function\n= As\ns = A\n= lim\nt\n0\nS 0\nd\ndt\n0\n[A(1 - e\n- st\n0\n)]\nd\ndt\n0\n(t\n0\ns)\n  \n \n= 0,\n    \n for t 6 0, t\n0\n6 t\nlCg(t)D = lim\nt\n0\nS 0\nc\nA\nt\n0\ns (1 - e\n- st\n0\n)\nd\ng(t) = lim\nt\n0\nS 0\nA\nt\n0\n,\n  \nfor 0 6 t 6 t\n0\nlCf(t)D = A\nt\n0\ns - A\nt\n0\ns e\n- st\n0\nf(t) = A\nt\n0\n1(t) - A\nt\n0\n1(t - t\n0\n)\nf(q) = lim\nt Sq\nf(t) = lim\ns S 0\nsF(s)\nf(0+) = lim\nt S 0 +\nf(t) = lim\ns Sq\nsF(s)\nOpenmirrors.comB\n867\nAppendix\nBefore we present MATLAB approach to the partial-fraction expansions of transfer\nfunctions, we discuss the manual approach to the partial-fraction expansions of transfer\nfunctions.\nPartial-Fraction Expansion when F(s) Involves Distinct Poles Only. Consider\nF(s) written in the factored form\nfor m<n\nwherep1,p 2,p ,pn and z1,z 2,p ,zm are either real or complex quantities, but for each com-\nplex pi or zj there will occur the complex conjugate of pi or zj, respectively. If F(s) involves\ndistinct poles only, then it can be expanded into a sum of simple partial fractions as follows:\n(B–1)\nwhere ak (k=1, 2, p , n) are constants.The coefficient ak is called the residue at the pole\nat s=–pk . The value of ak can be found by multiplying both sides of Equation (B–1)\nby As+pk Band letting s=–pk , which gives\n = ak\n+ p + ak\ns + pk\nAs + pkB + p + an\ns + pn\nAs + pkBR\ns =- pk\ncAs + pkBB(s)\nA(s) d\ns =- pk\n= c a1\ns + p1\n As + pkB + a2\ns + p2\nAs + pkB\nF(s) = B(s)\nA(s) = a1\ns + p1\n+ a2\ns + p2\n+ p + an\ns + pn\nF(s) = B(s)\nA(s) =\nKAs + z1BAs + z2Bp As + zmB\nAs + p1BAs + p2Bp As + pnB ,\nPartial-Fraction ExpansionWe see that all the expanded terms drop out with the exception of a\nk\n. Thus the residue\na\nk\nis found from\nNote that, since f(t) is a real function of time, if p\n1\nand p\n2\nare complex conjugates, then\nthe residues a\n1\nand a\n2\nare also complex conjugates. Only one of the conjugates,a\n1\nor a\n2\n,\nneeds to be evaluated, because the other is known automatically.\nSince\nf(t) is obtained as\nfor t /H113500\nEXAMPLE B–1\nFind the inverse Laplace transform of\nThe partial-fraction expansion of F(s) is\nwhere a\n1\nand a\n2\nare found as\nThus\nfor t /H113500\nEXAMPLE B–2\nObtain the inverse Laplace transform of\nHere, since the degree of the numerator polynomial is higher than that of the denominator poly-\nnomial, we must divide the numerator by the denominator.\nG(s) = s + 2 + s + 3\n(s + 1)(s + 2)\nG(s) = s\n3\n+ 5s\n2\n+ 9s + 7\n(s + 1)(s + 2)\n= 2e\n-t\n- e\n-2t\n,\n= l\n-1\nc\n2\ns + 1\nd\n+ l\n-1\nc\n-1\ns + 2\nd\nf(t) = l\n-1\nCF(s)D\na\n2\n=\nc\n(s + 2) s + 3\n(s + 1)(s + 2)\nd\ns =- 2\n=\nc\ns + 3\ns + 1\nd\ns =- 2\n=- 1\na\n1\n=\nc\n(s + 1) s + 3\n(s + 1)(s + 2)\nd\ns =- 1\n=\nc\ns + 3\ns + 2\nd\ns =- 1\n= 2\nF(s) = s + 3\n(s + 1)(s + 2) = a\n1\ns + 1 + a\n2\ns + 2\nF(s) = s + 3\n(s + 1)(s + 2)\nf(t) = l\n-1\nCF(s)D = a\n1\n \ne\n-p\n1\n \nt\n+ a\n2\n \ne\n-p\n2\n \nt\n+ p + a\nn\n \ne\n-p\nn\n \nt\n,\nl\n-1\nc\na\nk\ns + p\nk\nd\n= a\nk\n \ne\n-p\nk\n \nt\na\nk\n=\nc\nAs + p\nk\nBB(s)\nA(s)\nd\ns =- p\nk\n868\nAppendix B / Partial-Fraction Expansion\nOpenmirrors.comNote that the Laplace transform of the unit-impulse function d(t) is 1 and that the Laplace\ntransform of dd(t)/ dt is s. The third term on the right-hand side of this last equation is F(s) in\nExample B–1. So the inverse Laplace transform of G(s) is given as\nfor t /H113500–\nEXAMPLE B–3 Find the inverse Laplace transform of\nNotice that the denominator polynomial can be factored as\nIf the function F(s) involves a pair of complex-conjugate poles, it is convenient not to expand\nF(s) into the usual partial fractions but to expand it into the sum of a damped sine and a damped\ncosine function.\nNoting that s2+2s+5=(s+1)2+22 and referring to the Laplace transforms of e–at sinvt\nand e–at cos vt, rewritten thus,\nthe given F(s) can be written as a sum of a damped sine and a damped cosine function:\nIt follows that\nfor t /H113500\nPartial-Fraction Expansion when F (s) Involves Multiple Poles. Instead of dis-\ncussing the general case, we shall use an example to show how to obtain the partial-\nfraction expansion of F(s).\nConsider the following F(s):\nThe partial-fraction expansion of this F(s) involves three terms,\nF(s) = B(s)\nA(s) = b1\ns + 1 + b2\n(s + 1)2 + b3\n(s + 1)3\nF(s) = s2 + 2s + 3\n(s + 1)3\n = 5e-t sin 2t + 2e-t cos 2t,\n = 5l-1 c 2\n(s + 1)2 + 22 d+ 2l-1 c s + 1\n(s + 1)2 + 22 d\n f(t) = l-1 CF(s)D\n = 5 2\n(s + 1)2 + 22 + 2 s + 1\n(s + 1)2 + 22\n F(s) = 2s + 12\ns2 + 2s + 5 =\n10 + 2(s + 1)\n(s + 1)2 + 22\nlCe-at cos vtD = s + a\n(s + a)2 + v2\nlCe-at sin vtD = v\n(s + a)2 + v2\ns2 + 2s + 5 = (s + 1 + j2)(s + 1 - j2)\nF(s) = 2s + 12\ns2 + 2s + 5\ng(t) = d\ndt d(t) + 2d(t) + 2e-t - e-2t,\nAppendix B / Partial-Fraction Expansion 869where b\n3\n,b\n2\n, and b\n1\nare determined as follows. By multiplying both sides of this last\nequation by (s+1)\n3\n, we have\n(B–2)\nThen letting s=–1, Equation (B–2) gives\nAlso, differentiation of both sides of Equation (B–2) with respect to s yields\n(B–3)\nIf we let s=–1 in Equation (B–3), then\nBy differentiating both sides of Equation (B–3) with respect to s, the result is\nFrom the preceding analysis it can be seen that the values of b\n3\n,b\n2\n, and b\n1\nare found\nsystematically as follows:\n = 1\n2 (2) = 1\n = 1\n2!\nc\nd\n2\nds\n2\n As\n2\n+ 2s + 3B\nd\ns =- 1\n b\n1\n= 1\n2!\ne\nd\n2\nds\n2\nc\n(s + 1)\n3\nB(s)\nA(s)\nd\nf\ns =- 1\n = 0\n = (2s + 2)\ns =- 1\n =\nc\nd\nds As\n2\n+ 2s + 3B\nd\ns =- 1\n b\n2\n=\ne\nd\nds\nc\n(s + 1)\n3\n B(s)\nA(s)\nd\nf\ns =- 1\n = 2\n = As\n2\n+ 2s + 3B\ns =- 1\n b\n3\n=\nc\n(s + 1)\n3\n B(s)\nA(s)\nd\ns =- 1\nd\n2\nds\n2\nc\n(s + 1)\n3\nB(s)\nA(s)\nd\n= 2b\n1\nd\nds\nc\n(s + 1)\n3\nB(s)\nA(s)\nd\ns =- 1\n= b\n2\nd\nds\nc\n(s + 1)\n3\nB(s)\nA(s)\nd\n= b\n2\n+ 2b\n1\n(s + 1)\nc\n(s + 1)\n3\nB(s)\nA(s)\nd\ns =- 1\n= b\n3\n(s + 1)\n3\nB(s)\nA(s) = b\n1\n(s + 1)\n2\n+ b\n2\n(s + 1) + b\n3\n870\nAppendix B / Partial-Fraction Expansion\nOpenmirrors.comWe thus obtain\nfor t /H113500\nComments. For complicated functions with denominators involving higher-order\npolynomials, partial-fraction expansion may be quite time consuming. In such a case,\nuse of MATLAB is recommended.\nPartial-Fraction Expansion with MATLAB. MATLAB has a command to\nobtain the partial-fraction expansion of B(s)/A(s). Consider the following function\nB(s)/A(s):\nwhere some of ai and bj may be zero. In MATLAB row vectors num and den specify the\ncoefficients of the numerator and denominator of the transfer function. That is,\nnum = [b0 b1 ...  bn]\nden = [1   a1 ...  an]\nThe command\n[r,p,k] = residue(num,den)\nfinds the residues (r), poles (p), and direct terms (k) of a partial-fraction expansion of\nthe ratio of two polynomials B(s) and A(s).\nThe partial-fraction expansion of B(s)/A(s) is given by\n(B–4)\nComparing Equations (B–1) and (B–4), we note that p(1)=–p1 , p(2)=–p 2 , p ,\np(n)=–pn ; r(1)=a1 , r(2)=a2 , p , r(n)=an .[ k(s) is a direct term.]\nEXAMPLE B–4 Consider the following transfer function,\nB(s)\nA(s) = 2s3 + 5s2 + 3s + 6\ns3 + 6s2 + 11s + 6\nB(s)\nA(s) = r(1)\ns - p(1) + r(2)\ns - p(2) + p + r(n)\ns - p(n) + k(s)\nB(s)\nA(s) = num\nden = b0 sn + b1 sn - 1 + p + bn\nsn + a1 sn - 1 + p + an\n = A1 + t2Be-t,\n = e-t + 0 + t2e-t\n = l-1 c 1\ns + 1 d+ l-1 c 0\n(s + 1)2 d+ l-1 c 2\n(s + 1)3 d\n f(t) = l-1 CF(s)D\nAppendix B / Partial-Fraction Expansion 871For this function,\nnum= [2  5  3  6]\nden = [1  6  11  6]\nThe command\n[r,p,k] = residue(num,den)\ngives the following result:\n872\nAppendix B / Partial-Fraction Expansion\n[r,p,k] = residue(num,den)\nr =\n-6.0000\n-4.0000\n3.0000\np =\n-3.0000\n-2.0000\n-1.0000\nk =\n2\n(Note that the residues are returned in column vector r, the pole locations in column vector p, and\nthe direct term in row vector k.) This is the MATLAB representation of the following partial-\nfraction expansion of B(s)/A(s):\nNote that if p(j)=p(j+1)=p=p(j+m-1) Cthat is,p\nj\n=p\nj+1\n=p=p\nj+m-1\nD, the\npole p(j) is a pole of multiplicity m. In such a case, the expansion includes terms of the form\nFor details, see Example B–5.\nr(j)\ns - p(j) +\nr(j + 1)\nCs - p(j)D\n2\n+ p +\nr(j + m - 1)\nCs - p(j)D\nm\n = -6\ns + 3 + -4\ns + 2 + 3\ns + 1 + 2\n \nB(s)\nA(s) = 2s\n3\n+ 5s\n2\n+ 3s + 6\ns\n3\n+ 6s\n2\n+ 11s + 6\nOpenmirrors.comEXAMPLE B–5 Expand the following B(s)/A(s) into partial fractions with MATLAB.\nFor this function, we have\nnum = [1  2  3]\nden = [1  3  3  1]\nThe command\n[r,p,k] = residue(num,den)\ngives the result shown next:\nB(s)\nA(s) = s2 + 2s + 3\n(s + 1)3 = s2 + 2s + 3\ns3 + 3s2 + 3s + 1\nAppendix B / Partial-Fraction Expansion 873\nIt is the MATLAB representation of the following partial-fraction expansion of B(s)/A(s):\nNote that the direct term k is zero.\nB(s)\nA(s) = 1\ns + 1 + 0\n(s + 1)2 + 2\n(s + 1)3\nnum = [1  2  3];\nden = [1  3  3  1];\n[r,p,k] = residue(num,den)\nr =\n1.0000\n0.0000\n2.0000\np =\n-1.0000\n-1.0000\n-1.0000\nk =\n[]C\n874\nAppendix\nIn this appendix we first review the determinant of a matrix, then we define the adjoint\nmatrix, the inverse of a matrix, and the derivative and integral of a matrix.\nDeterminant of a Matrix. For each square matrix, there exists a determinant.The\ndeterminant of a square matrix A is usually written as or det A. The determinant has\nthe following properties:\n1. If any two consecutive rows or columns are interchanged, the determinant changes\nits sign.\n2. If any row or any column consists only of zeros, then the value of the dererminant\nis zero.\n3. If the elements of any row (or any column) are exactly k times those of another\nrow (or another column), then the value of the determinant is zero.\n4. If, to any row (or any column), any constant times another row (or column) is\nadded, the value of the determinant remains unchanged.\n5. If a determinant is multiplied by a constant, then only one row (or one column) is\nmultiplied by that constant. Note, however, that the determinant of k times an\nn*n matrix A is k\nn\ntimes the determinant of A, or \n@kA@ = k\nn\n@A@\n@A@\nVector-Matrix Algebra\nOpenmirrors.comThis is because\n6. The determinant of the product of two square matrices A and B is the product of\ndeterminants, or \nIf B=n*m matrix and C=m*n matrix, then \ndet(In+BC)=det(Im+CB)\nIf and D=m*m matrix, then\nwhere S=D-CA/H110021 B.\nIf , then\nwhere T=A-BD/H110021 C.\nIf or then\nRank of Matrix. A matrix A is said to have rank m if there exists an m*m sub-\nmatrix M of A such that the determinant of M is nonzero and the determinant of every\nr*r submatrix (where ) of A is zero.\nAs an example, consider the following matrix:\nA = D\n12  34\n01 -10\n10  12\n11  02\nT\nr /H11350m + 1\ndet cAB\n0D d= det A/H11080det D\ndet cA0\nCD d= det A/H11080det D\nC = 0,B = 0\ndet cAB\nCD d= det D/H11080det T\nD Z 0\ndet cAB\nCD d= det A/H11080det S\nA Z 0\n@AB@ = @A@@ B@\nkA = D\nka11 ka12 p ka1m\nka21 ka22 p ka2m\noo o\nkan1 kan2 p kanm\nT\nAppendix C / Vector-Matrix Algebra 875Note that =0. One of a number of largest submatrices whose determinant is not\nequal to zero is\nHence, the rank of the matrix A is 3.\nMinor M\nij\n. If the ith row and jth column are deleted from an n*n matrix A,\nthe resulting matrix is an (n-1)*(n-1) matrix. The determinant of this \n(n-1) /H11003 (n-1) matrix is called the minor M\nij\nof the matrix A.\nCofactor A\nij\n. The cofactor A\nij\nof the element a\nij\nof the n*n matrix A is defined\nby the equation \nA\nij\n=(/H110021)\ni/H11001j\nM\nij\nThat is, the cofactor A\nij\nof the element a\nij\nis (/H110021)\ni/H11001j\ntimes the determinant of the matrix\nformed by deleting the ith row and the jth column from A. Note that the cofactor A\nij\nof\nthe element a\nij\nis the coefficient of the term a\nij\nin the expansion of the determinant ,\nsince it can be shown that \nIf are replaced by then\nbecause the determinant of A in this case possesses two identical rows. Hence, we obtain\nSimilarly,\nAdjoint Matrix. The matrix B whose element in the ith row and jth column equals\nA\nji\nis called the adjoint of A and is denoted by adj A,o r\nB=(b\nij\n)=(A\nji\n)=adj A\nThat is, the adjoint of A is the transpose of the matrix whose elements are the cofactors\nof A,o r\nadj A =\nD\nA\n11\nA\n21\np A\nn1\nA\n12\nA\n22\np A\nn2\noo o\nA\n1n\nA\n2n\np A\nnm\nT\na\nn\nk = 1\na\nki\nA\nkj\n= d\nij\n@A@\na\nn\nk = 1\na\njk\nA\nik\n= d\nji\n@A@\na\nj1\nA\ni1\n+ a\nj2\nA\ni2\n+ p + a\njn\nA\nin\n= 0     i Z j\na\nj1\n, a\nj2\n, p , a\njn\n,a\ni1\n, a\ni2\n, p , a\nin\na\ni1\nA\ni1\n+ a\ni2\nA\ni2\n+ p + a\nin\nA\nin\n= @A@\n@A@\nC\n1 2   3\n01 -1\n10   1\nS\n@A@\n876\nAppendix C / Vector-Matrix Algebra\nOpenmirrors.comNote that the element of the jth row and ith column of the product A(adj A) is\nHence, A(adj A) is a diagonal matrix with diagonal elements equal to , or \nA(adj A)= I\nSimilarly, the element in the jth row and ith column of the product (adj A)A is\nHence, we have the relationship \nA(adj A)=(adj A)A= I (C–1)\nThus\nwhere Aij is the cofactor of aij of the matrix A. Thus, the terms in the ith column of A/H110021\nare l/ times the cofactors of the ith row of the original matrix A. For example, if\nthen the adjoint of A and the determinant are respectively found to be@A@\nA = C\n1   2   0\n3 -1 -2\n1  0 -3\nS\n@A@\nG\nA11\n@A@\nA21\n@A@ p An1\n@A@\nA12\n@A@\nA22\n@A@ p An2\n@A@\noo o\nA1n\n@A@\nA2n\n@A@ p Ann\n@A@\nWA-1 = adj A\n@A@ =\n@A@\na\nn\nk = 1\nbjkaki = a\nn\nk = 1\nAkjaki = dij @A@\n@A@\n@A@\na\nn\nk = 1\najkbki = a\nn\nk = 1\najkAik = dji @A@\nAppendix C / Vector-Matrix Algebra 877\nG Wadj A=\n= C\n3  6 -4\n7 -3    2\n1   2 -7\nS\n`3 -1\n1  0 `   - `12\n10 `    `1  2\n3-1 `\n- `3 -2\n1 -3 `   `1  0\n1 -3 `  - `1  0\n3 -2 `\n`-1 -2\n  0 -3 `  - `2  0\n0 -3 `   `  2   0\n-1 -2 `and\n=17\nHence, the inverse of A is\nIn what follows, we give formulas for finding inverse matrices for the 2*2 matrix\nand the 3*3 matrix. For the 2*2 matrix\nthe inverse matrix is given by\nFor the 3*3 matrix\nthe inverse matrix is given by\nA =\nC\nabc\ndef\ngh i\nS\n    where @A@ Z 0\nA\n-1\n= 1\nad - bc\nc\nd -b\n-ca\nd\nA =\nc\nab\ncd\nd\n       where ad - bc Z 0\nA\n- 1\n= adj A\n@A@ =\nC\n3\n17\n6\n17 - 4\n17\n7\n17 - 3\n17\n2\n17\n1\n17\n2\n17 - 7\n17\nS\n@A@\n878\nAppendix C / Vector-Matrix Algebra\nG W\n`\nde\ngh\n`\n -\n`\nab\ngh\n`\n   \n`\nab\nde\n`\n-\n`\ndf\ngi\n`\n   \n`\nac\ngi\n`\n  -\n`\nac\ndf\n`\nA\n- 1\n= 1\n@A@\n`\nef\nhi\n`\n  -\n`\nbc\nhi\n`\n   \n`\nbc\nef\n`\nNote that\nThere are several more useful formulas available. Assume that A=n*n matrix,\nB=n*m matrix, C=m*n matrix, and D=m*m matrix. Then\n[A + BC]\n- 1\n= A\n- 1\n- A\n- 1\nB[I\nm\n+ CA\n- 1\nB]\n- 1\nCA\n- 1\n(A\n- 1\n)* = (A*)\n- 1\n(A\n- 1\n)¿= (A¿)\n- 1\n(A\n- 1\n)\n- 1\n= A\nOpenmirrors.comIf and then\nIf then\nIf then\nFinally, we present the MATLAB approach to obtain the inverse of a square matrix.\nIf all elements of the matrix are given as numerical values, this approach is best.\nMATLAB Approach to Obtain the Inverse of a Square Matrix. The inverse of\na square matrix A can be obtained with the command\ninv(A)\nFor example, if matrix A is given by\nthen the inverse of matrix A is obtained as follows:\nA = C\n112\n340\n125\nS\ncAB\nCD d\n- 1\n= c T- 1 -T- 1 BD- 1\n-D- 1 CT- 1 D- 1 + D- 1 CT- 1 BD- 1 d\n@D@ Z 0, T = A - BD- 1 C, and @T@ Z 0,\ncAB\nCD d\n- 1\n= cA- 1 + A- 1 BS- 1 CA- 1 -A- 1 BS- 1\n-S- 1 CA- 1 S- 1 d\n@A@ Z 0, S = D - CA- 1 B, @S@ Z 0,\ncA0\nCD d\n- 1\n= c A- 1 0\n-D- 1 CA- 1 D- 1 d\ncAB\n0D d\n- 1\n= cA- 1 -A- 1 BD- 1\n0D - 1 d\n@D@ Z 0,@A@ Z 0\nAppendix C / Vector-Matrix Algebra 879\nA = [1  1  2;3  4  0;1  2  5];\ninv(A)\nans =\n2.2222 /H110020.1111 /H110020.8889\n/H110021.6667 0.3333 0.6667\n0.2222 /H110020.1111 0.1111That is\nMATLAB Is Case Sensitive. It is important to note that MATLAB is case sen-\nsitive.That is, MATLAB distinguishes between upper- and lowercase letters.Thus,x and\nX are not the same variable. All function names must be in lowercase, such as inv(A),\neig(A), and poly(A).\nDifferentiation and Integration of Matrices. The derivative of an n*m matrix\nA(t) is defined to be the n*m matrix, each element of which is the derivative of the\ncorresponding element of the original matrix, provided that all the elements a\nij\n(t) have\nderivatives with respect to t. That is,\nSimilarly, the integral of an n*m matrix A(t) is defined to be\nDifferentiation of the Product of Two Matrices. If the matrices A(t) and B(t)\ncan be differentiated with respect to t, then\nHere again the multiplication of A(t) and dB(t)/dt [or dA(t)/dt and B(t)] is, in gener-\nal, not commutative.\nd\ndt [A(t)B(t)] = dA(t)\ndt B(t) + A(t) dB(t)\ndt\nG\n3\na\n11\n(t) dt\n3\na\n12\n(t) dt p\n3\na\n1m\n(t) dt\n3\na\n21\n(t) dt\n3\na\n22\n(t) dt p\n3\na\n2m\n(t) dt\noo o\n3\na\nn1\n(t) dt\n3\na\n2n\n(t) dt p\n3\na\nnm\n(t) dt\nW\n3\nA(t) dt =\na\n3\na\nij\n(t) dt\nb\n=\nG\nd\ndt a\n11\n(t) d\ndt a\n12\n(t) p d\ndt a\n1m\n(t)\nd\ndt a\n21\n(t) d\ndt a\n22\n(t) p d\ndt a\n2m\n(t)\noo o\nd\ndt a\nn1\n(t) d\ndt a\nn2\n(t) p d\ndt a\nnm\n(t)\nW\nd\ndt A(t) =\na\nd\ndt a\nij\n(t)\nb\n=\nA\n- 1\n=\nC\n   2.2222 -0.1111 -0.8889\n-1.6667    0.3333    0.6667\n  0.2222 -0.1111    0.1111\nS\n880\nAppendix C / Vector-Matrix Algebra\nOpenmirrors.comDifferentiation of A 21(t). If a matrix A(t) and its inverse A/H110021(t) are differen-\ntiable with respect to t, then the derivative of A/H110021(t) is given by \nThe derivative may be obtained by differentiating A(t)A/H110021(t) with respect to t. Since\nand\nwe obtain\nor\ndA- 1(t)\ndt =- A- 1(t) dA(t)\ndt A- 1(t)\nA(t) dA- 1(t)\ndt =- dA(t)\ndt A- 1(t)\nd\ndt [A(t)A- 1(t)] = d\ndt I = 0\nd\ndt [A(t)A- 1(t)] = dA(t)\ndt A- 1(t) + A(t) dA- 1(t)\ndt\ndA- 1(t)\ndt =- A- 1(t) dA(t)\ndt A- 1(t)\nAppendix C / Vector-Matrix Algebra 881R\n882\nReferences\nA–1 Anderson, B. D. O., and J. B. Moore, Linear Optimal Control . Upper Saddle River, NJ:\nPrentice Hall, 1971.\nA–2 Athans, M., and P . L. Falb, Optimal Control: An Introduction to the Theory and Its Appli-\ncations. New York: McGraw-Hill Book Company, 1965.\nB–1 Barnet, S., “Matrices, Polynomials, and Linear Time-Invariant Systems,” IEEE Trans.\nAutomatic Control, AC-18 (1973), pp. 1–10.\nB–2 Bayliss, L. E., Living Control Systems. London: English Universities Press Limited, 1966.\nB–3 Bellman, R., Introduction to Matrix Analysis . New York: McGraw-Hill Book Company,\n1960.\nB–4 Bode, H. W., Network Analysis and Feedback Design. New York: Van Nostrand Reinhold,\n1945.\nB–5 Brogan, W. L., Modern Control Theory. Upper Saddle River, NJ: Prentice Hall, 1985.\nB–6 Butman, S., and R. Sivan (Sussman),“On Cancellations, Controllability and Observability,”\nIEEE Trans. Automatic Control, AC-9 (1964), pp. 317–8.\nC–1 Campbell, D. P , Process Dynamics. New York: John Wiley & Sons, Inc., 1958.\nC–2 Cannon, R., Dynamics of Physical Systems. New York: McGraw-Hill Book Company, 1967.\nC–3 Chang, P . M., and S. Jayasuriya, “An Evaluation of Several Controller Synthesis Method-\nologies Using a Rotating Flexible Beam as a Test Bed,” ASME J. Dynamic Systems,\nMeasurement, and Control, 117 (1995), pp. 360–73.\nC–4 Cheng, D. K., Analysis of Linear Systems . Reading, MA: Addison-Wesley Publishing\nCompany, Inc., 1959.\nC–5 Churchill, R.V ., Operational Mathematics, 3rd ed. New York: McGraw-Hill Book Company,\n1972.\nOpenmirrors.comC–6 Coddington, E.A., and N. Levinson, Theory of Ordinary Differential Equations. New York:\nMcGraw-Hill Book Company, 1955.\nC–7 Craig, J. J., Introduction to Robotics, Mechanics and Control. Reading, MA:AddisonWesley\nPublishing Company, Inc., 1986.\nC–8 Cunningham, W J., Introduction to Nonlinear Analysis. New York: McGraw-Hill Book\nCompany, 1958.\nD–1 Dorf, R. C., and R. H. Bishop, Modern Control Systems, 9th ed. Upper Saddle River, NJ:\nPrentice Hall, 2001.\nE–1 Enns, M., J. R. Greenwood III, J. E. Matheson, and F. T. Thompson, “Practical Aspects of\nState-Space Methods Part I: System Formulation and Reduction,” IEEE Trans. Military\nElectronics, MIL-8 (1964), pp. 81–93.\nE–2 Evans, W. R., “Graphical Analysis of Control Systems,” AIEE Trans. Part II, 67 (1948),\npp. 547-51.\nE–3 Evans, W. R., “Control System Synthesis by Root Locus Method,” AIEE Trans Part II, 69\n(1950), pp. 66–9.\nE–4 Evans,W. R.,“The Use of Zeros and Poles for Frequency Response or Transient Response,”\nASME Trans. 76 (1954), pp. 1135–44.\nE–5 Evans, W. R., Control System Dynamics. New York: McGraw-Hill Book Company, 1954.\nF–1 Franklin, G. F, J. D. Powell, and A. Emami-Naeini, Feedback Control of Dynamic Systems,\n3rd ed. Reading, MA: Addison-Wesley Publishing Company, Inc., 1994.\nF–2 Friedland, B., Control System Design. New York: McGraw-Hill Book Company, 1986.\nF–3 Fu, K. S., R. C. Gonzalez, and C. S. G. Lee, Robotics: Control, Sensing, Vision, and Intelli-\ngence. New York: McGraw-Hill Book Company, 1987.\nG–1 Gantmacher, F. R., Theory of Matrices , Vols. I and II. NewYork: Chelsea Publishing\nCompany, Inc., 1959.\nG–2 Gardner, M. F, and J. L. Barnes, Transients in Linear Systems. New York: John Wiley &\nSons, Inc., 1942.\nG–3 Gibson, J. E., Nonlinear Automatic Control. New York: McGraw-Hill Book Company, 1963.\nG–4 Gilbert, E. G.,“Controllability and Observability in Multivariable Control Systems,”J.SIAM\nControl, ser. A,1 (1963) , pp. 128–51.\nG–5 Graham, D., and R. C. Lathrop, “The Synthesis of Optimum Response: Criteria and Stan-\ndard Forms,”AIEE Trans. Part II, 72 (1953), pp. 273–88.\nH–1 Hahn, W., Theory and Application of Liapunov’s Direct Method. Upper Saddle River, NJ:\nPrentice Hall, 1963.\nH–2 Halmos, P . R., Finite Dimensional Vector Spaces.New York:Van Nostrand Reinhold, 1958.\nH–3 Higdon, D. T., and R. H. Cannon, Jr., “On the Control of Unstable Multiple-Output\nMechanical Systems,”ASME Paper no.63-WA-148, 1963.\nI–1 Irwin, J. D., Basic Engineering Circuit Analysis. New York: Macmillan, Inc., 1984.\nJ–1 Jayasuriya, S., “Frequency Domain Design for Robust Performance Under Parametric,\nUnstructured, or Mixed Uncertainties,” ASME J. Dynamic Systems, Measurement, and\nControl, 115 (1993), pp. 439–51.\nK–1 Kailath, T., Linear Systems. Upper Saddle River, NJ: Prentice Hall, 1980.\nK–2 Kalman, R. E., “Contributions to the Theory of Optimal Control,” Bol. Soc Mat. Mex., 5\n(1960), pp. 102–19.\nK–3 Kalman, R. E.,“On the General Theory of Control Systems,”Proc. First Intern. Cong. IFAC,\nMoscow, 1960,Automatic and Remote Control. London: Butterworths & Company Limited,\n1961, pp. 481–92.\nReferences 883K–4 Kalman, R. E.,“Canonical Structure of Linear Dynamical Systems,” Proc. Natl. Acad. Sci.,\nUSA, 48 (1962), pp. 596–600.\nK–5 Kalman, R. E., “When Is a Linear Control System Optimal?” ASMEJ. Basic Engineering,\nser. D,86 (1964), pp. 51–60.\nK–6 Kalman, R. E., and J. E. Bertram, “Control System Analysis and Design via the Second\nMethod of Lyapunov: I Continuous-Time Systems,”ASME J. Basic Engineering, ser. D,82\n(1960), pp. 371–93.\nK–7 Kalman, R. E.,Y. C. Ho, and K. S. Narendra,“Controllability of Linear Dynamic Systems,”\nin Contributions to Differential Equations,Vol. 1. New York:Wiley-Interscience Publishers,\nInc., 1962.\nK–8 Kautsky, J., and N. Nichols, “Robust Pole Assignment in Linear State Feedback,”Intern. J.\nControl, 41 (1985), pp 1129–55.\nK–9 Kreindler, E., and P . E. Sarachick, “On the Concepts of Controllability and Observability\nof Linear Systems,”IEEE Trans. Automatic Control, AC-9 (1964), pp. 129–36.\nK–10 Kuo, B. C.,Automatic Control Systems, 6th ed. Upper Saddle River, NJ: Prentice Hall, 1991.\nL–1 LaSalle, J. P , and S. Lefschetz,Stability by Liapunov’s Direct Method with Applications. New\nYork: Academic Press, Inc., 1961.\nL–2 Levin, W. S., The Control Handbook. Boca Raton, FL: CRC Press, 1996.\nL–3 Levin, W. S. Control System Fundamentals. Boca Raton, FL: CRC Press, 2000.\nL–4 Luenberger, D. G.,“Observing the State of a Linear System,” IEEE Trans. Military Electr.,\nMIL-8 (1964), pp. 74–80.\nL–5 Luenberger, D. G., “An Introduction to Observers,” IEEE Trans. Automatic Control ,\nAC-16 (1971), pp. 596–602.\nL–6 Lur’e,A. I., and E. N. Rozenvasser,“On Methods of Constructing Liapunov Functions in the\nTheory of Nonlinear Control Systems,”Proc. First Intern. Cong. IFAC, Moscow, 1960,Auto-\nmatic and Remote Control. London: Butterworths & Company Limited, 1961, pp. 928–33.\nM–1 MathWorks, Inc., The Student Edition of MATLAB , version 5. Upper Saddle River, NJ:\nPrentice Hall, 1997.\nM–2 Melbourne, W. G., “Three Dimensional Optimum Thrust Trajectories for Power-Limited\nPropulsion Systems,”ARS J., 31 (1961), pp. 1723–8.\nM–3 Melbourne,W. G., and C. G. Sauer, Jr.,“Optimum Interplanetary Rendezvous with Power-\nLimited Vehicles,”AIAA J., 1 (1963), pp. 54–60.\nM–4 Minorsky, N., Nonlinear Oscillations. New York: Van Nostrand Reinhold, 1962.\nM–5 Monopoli, R.V .,“Controller Design for Nonlinear and Time-Varying Plants,”NASA CR152,\nJan., 1965.\nN–1 Noble, B., and J. Daniel, Applied Linear Algebra, 2nd ed. Upper Saddle River, NJ: Prentice\nHall, 1977.\nN–2 Nyquist, H., “Regeneration Theory,” Bell System Tech. J., 11 (1932), pp. 126–47.\nO–1 Ogata, K., State Space Analysis of Control Systems. Upper Saddle River, NJ: Prentice Hall,\n1967.\nO–2 Ogata, K., Solving Control Engineering Problems with MATLAB . Upper Saddle River,\nNJ: Prentice Hall, 1994.\nO–3 Ogata, K., Designing Linear Control Systems with MATLAB . Upper Saddle River, NJ:\nPrentice Hall, 1994.\nO–4 Ogata, K., Discrete-Time Control Systems, 2nd ed. Upper Saddle River, NJ: Prentice Hall,\n1995.\nO–5 Ogata, K., System Dynamics, 4th ed. Upper Saddle River, NJ: Prentice Hall, 2004.\n884\nReferences\nOpenmirrors.comO–6 Ogata, K., MATLAB for Control Engineers. Upper Saddle River, NJ: Pearson Prentice\nHall, 2008.\nP–1 Phillips, C. L., and R. D. Harbor, Feedback Control Systems. Upper Saddle River, NJ: Pren-\ntice Hall, 1988.\nP–2 Pontryagin, L. S., V . G. Boltyanskii, R. V . Gamkrelidze, and E. F. Mishchenko, The\nMathematical Theory of Optimal Processes. New York: John Wiley & Sons, Inc., 1962.\nR–1 Rekasius, Z.V .,“A General Performance Index for Analytical Design of Control Systems,”\nIRE Trans. Automatic Control, AC-6 (1961), pp. 217–22.\nR–2 Rowell, G., and D.Wormley, System Dynamics. Upper Saddle River, NJ: Prentice Hall, 1997.\nS–1 Schultz, W. C., and V . C. Rideout, “Control System Performance Measures: Past, Present,\nand Future,”IRE Trans. Automatic Control, AC-6 (1961), pp. 22–35.\nS–2 Smith, R. J., Electronics: Circuits and Devices, 2d ed. New York: John Wiley & Sons, Inc., 1980.\nS–3 Staats, P . F. “A Survey of Adaptive Control Topics,” Plan B paper , Dept. of Mech. Eng.,\nUniversity of Minnesota, March 1966.\nS–4 Strang, G., Linear Algebra and Its Applications. New York: Academic Press, Inc., 1976.\nT–1 Truxal, J. G., Automatic Feedback Systems Synthesis . New York: McGraw-Hill Book\nCompany, 1955.\nU–1 Umez-Eronini, E., System Dynamics and Control . Pacific Grove, CA: Brooks /H20862Cole\nPublishing Company, 1999.\nV–1 Valkenburg, M. E., Network Analysis. Upper Saddle River, NJ: Prentice Hall, 1974.\nV–2 Van Landingham, H. F., and W. A. Blackwell, “Controller Design for Nonlinear and \nTime-Varying Plants,”Educational Monograph, College of Engineering, Oklahoma State\nUniversity, 1967.\nW–1 Webster, J. G., Wiley Encyclopedia of Electrical and Electronics Engineering , Vol. 4. New\nYork: John Wiley & Sons, Inc., 1999.\nW–2 Wilcox, R. B., “Analysis and Synthesis of Dynamic Performance of Industrial\nOrganizations—The Application of Feedback Control Techniques to Organizational Sys-\ntems,”IRE Trans. Automatic Control, AC-7 (1962), pp. 55–67.\nW–3 Willems, J. C., and S. K. Mitter, “Controllability, Observability, Pole Allocation, and State\nReconstruction,” IEEE Trans. Automatic Control, AC-16 (1971), pp. 582–95.\nW–4 Wojcik, C. K.,“Analytical Representation of the Root Locus,”ASME J. Basic Engineering,\nser. D,86 (1964), pp. 37–43.\nW–5 Wonham,W. M.,“On Pole Assignment in Multi-Input Controllable Linear Systems,”IEEE\nTrans. Automatic Control, AC-12 (1967), pp. 660–65.\nZ–1 Zhou, K., J. C. Doyle, and K. Glover,Robust and Optimal Control.Upper Saddle River, NJ:\nPrentice Hall, 1996.\nZ–2 Zhou, K., and J. C. Doyle, Essentials of Robust Control, Upper Saddle River, NJ: Prentice\nHall, 1998.\nZ–3 Ziegler, J. G., and N. B. Nichols, “Optimum Settings for Automatic Controllers,” ASME\nTrans. 64 (1942), pp. 759–68.\nZ–4 Ziegler, J. G., and N. B. Nichols,“Process Lags in Automatic Control Circuits,”ASME Trans.\n65 (1943), pp. 433–44.\nReferences 885I\n886\nIndex\nA\nAbsolute stability, 160\nAckermann’s formula:\nfor observer gain matrix, 756–57\nfor pole placement, 730–31\nActuating error, 8\nActuator, 21–22\nAdjoint matrix, 876\nAir heating system, 150\nAircraft elevator control system, 156\nAnalytic function, 860\nAngle:\nof arrival, 286\nof departure, 280, 286\nAngle condition, 271\nAsymptotes:\nBode diagram, 406–07\nroot loci, 274–75, 284–85\nAttenuation, 165\nAttitude-rate control system, 386\nAutomatic controller, 21\nAutomobile suspension system, 86\nAuxiliary polynomial, 216\nB\nBack emf, 95\nconstant, 95\nBandwidth, 474, 539\nBasic control actions:\nintegral, 24\non-off, 22\nproportional, 24\nproportional-plus-derivative, 25\nproportional-plus-integral, 24\nproportional-plus-integral-plus-\nderivative, 35\ntwo-position, 22–23\nBleed-type relay, 111\nBlock, 17\nBlock diagram, 17–18\nreduction, 27–28, 48\nBode diagram, 403\nerror in asymptotic expression of, 403\nof first-order factors, 406–07, 409\ngeneral procedure for plotting, 413\nplotting with MATLAB, 422–25\nof quadratic factors, 410–12\nof system defined in state space,\n426–27\nBranch point, 18\nBreak frequency, 406\nBreakaway point, 275–76, 285–86, 351\nBreak-in point, 276, 281, 285–86, 351\nBridged-T networks, 90, 520\nBusiness system, 5\nOpenmirrors.comIndex 887\nC\nCanonical forms:\ncontrollable, 649\ndiagonal, 650\nJordan, 651, 653\nobservable, 650\nCapacitance:\nof pressure system, 107–09\nof thermal system, 137\nof water tank, 103\nCancellation of poles and zeros, 288\nCascaded system, 20\nCascaded transfer function, 20\nCauchy–Riemann conditions, 860–61\nCauchy’s theorem, 526\nCayley–Hamilton theorem, 668, 701\nCharacteristic equation, 652\nCharacteristic polynomial, 34\nCharacteristic roots, 652\nCircular root locus, 282\nClassical control theory, 2\nClassification of control systems, 225\nClosed-loop control system, 8\nClosed-loop system, 20\nClosed-loop frequency response, 477\nClosed-loop frequency response curves:\ndesirable shapes of, 492\nundesirable shapes of, 492\nClosed-loop transfer function, 19–20\nCofactor, 876\nCommand compensation, 630\nCompensation:\nfeedback, 308\nparallel, 308\nseries, 308\nCompensator:\nlag, 323, 503–04\nlag–lead, 332–34, 511–13\nlead, 312–13, 495–96\nComplete observability, 683–84\nconditions for, 684–85\nin the s plane, 684\nComplete output controllablility, 714\nComplete state controllability, 676–81\nin the s plane, 680–81\nComplex-conjugate poles:\ncancellation of undesirable, 520\nComplex function, 859\nComplex impedence, 75\nComplex variable, 859\nComputational optimization approach to\ndesign PID controller, 583–89\nConditional stability, 299–300, 510–11\nConditionally stable system, 299–300,\n458, 510–11\nConduction heat transfer, 137\nConformal mapping, 447, 462–64\nConical water tank system, 152\nConstant-gain loci, 302–03\nConstant-magnitude loci (M circles),\n478–79\nConstant phase-angle loci (N circles),\n480–81\nConstant vn loci, 296\nConstant z lines, 298\nConstant z loci, 296\nControl actions, 21\nControl signal, 3\nControllability, 675–81\nmatrix, 677\noutput, 681\nControllable canonical form, 649, 688\nControlled variable, 3\nController, 22\nConvection heat transfer, 137\nConventional control theory, 29\nConvolution, integral, 16\nCorner frequency, 406\nCritically damped system, 167\nCutoff frequency, 474\nCutoff rate, 475\nD\nDamped natural frequency, 167\nDamper, 64, 132\nDamping ratio, 165\nlines of constant, 296\nDashpot, 64, 132–33\nDead space, 43\nDecade, 405\nDecibel, 403\nDelay time, 169–70\nDerivative control action, 118–20, 222\nDerivative gain, 84\nDerivative time, 25, 61\nDetectability, 688\nDeterminant, 874\nDiagonal canonical form, 694\nDiagonalization of n*n matrix, 652\nDifferential amplifier, 78\nDifferential gap, 23, 24\nDifferentiating system, 231\nDifferentiation:\nof inverse matrix, 881\nof matrix, 880\nof product of two matrices, 880\nDifferentiator:\napproximate, 617\nDirect transmission matrix, 31\nDisturbance, 3, 26\nDominant closed-loop poles, 182\nDuality, 754E\ne\nAt\n:\ncomputation of, 670–71\nEigenvalue, 652\ninvariance of, 655\nElectromagnetic valve, 23\nElectronic controller, 77, 83\nEngineering organizational system, 5–6\nEquivalent moment of inertia, 234\nEquivalent spring constant, 64\nEquivalent viscous-friction coefficient,\n65, 234\nEvans, W. R., 2, 11, 269\nExponential response curve, 162\nF\nFeedback compensation, 308–09, 342, 519\nFeedback control, 3\nFeedback control system, 7\nFeedback system, 20\nFeedforward transfer function, 19\nFinal value theorem, 866\nFirst-order lag circuit, 80\nFirst-order system, 161–64\nunit-impulse response of, 163\nunit-ramp response of, 162–63\nunit-step response of, 161–62\nFlapper, 110\nvalve, 156\nFluid systems:\nmathematical modeling of, 100\nFree-body diagram, 69–70\nFrequency response, 398\ncorrelation between step response\nand, 471–74\nlag compensation based on, 502–11\nlag–lead compensation based on,\n511–17\nlead compensation based on, 493–502\nFull-order state observer, 752–53\nFunctional block, 17\nG\nGain crossover frequency, 467–69\nGain margin, 464–67\nGas constant, 108\nfor air, 142\nuniversal, 108\nGear train, 232\nsystem, 232–34\nGeneralized plant, 813, 815–17\ndiagram, 810–16, 853–54\nH\nH infinity control problem, 816\nH infinity norm, 6, 808\n888\nIndex\nHazen, 2, 11\nHigh-pass filter, 495\nHigher-order systems, 179\ntransient response of, 180–81\nHurwitz determinants, 252–58\nHurwitz stability criterion, 252–53, 255–58\nequivalence of Routh’s stability \ncriterion and, 255–57\nHydraulic controller:\nintegral, 130\njet-pipe, 147\nproportional, 131\nproportional-plus-derivative, 134–35\nproportional-plus-integral, 133–34\nproportional-plus-integral-plus-\nderivative, 135–36\nHydraulic servo system, 124–25\nHydraulic servomotor, 128, 130, 156\nHydraulic system, 106, 123–39, 149\nadvantages and disadvantages of, 124\ncompared with pneumatic system, 106\nI\nIdeal gas law, 108\nImpedance:\napproach to obtain transfer function,\n75–76\nImpulse function, 866\nImpulse response, 163, 178–79, 195–97\nfunction, 16–17\nIndustrial controllers, 22\nInitial condition:\nresponse to, 203–11\nInitial value theorem, 866\nInput filter, 261, 630\nInput matrix, 31\nIntegral control, 220\nIntegral control action, 24–25, 218\nIntegral controller, 22\nIntegral gain, 61\nIntegral time, 25, 61\nIntegration of matrix, 880\nInverse Laplace transform:\npartial-fraction expansion method for\nobtaining, 867–73\nInverse Laplace transformation, 862\nInverse of a matrix:\nMATLAB approach to obtain, 879\nInverse polar plot, 461–62, 537–38\nInverted-pendulum system, 68–72, 98\nInverted-pendulum control system,\n746–51\nInverting amplifier, 78\nI-PD control, 591–92\nI-PD-controlled system, 592, 628–29, 643\nwith feedforward control, 642\nOpenmirrors.comIndex 889\nJ\nJet-pipe controller, 146–47\nJordan blocks, 679\nJordan canonical form, 651, 695, 706–07\nK\nKalman, R. E., 12, 675\nKirchhoff’s current law, 72\nKirchhoff’s loop law, 72\nKirchhoff’s node law, 72\nKirchhoff’s voltage law, 72\nL\nLag compensation, 321\nLag compensator, 311, 321, 502\nBode diagram of, 503\ndesign by frequency-response method,\n502–11\ndesign by root-locus method, 321, 323\npolar plot of, 503\nLag network, 82, 542\nLag–lead compensation, 330, 335, 338,\n377, 511–18\nLag–lead compensator:\nBode diagram of, 558\ndesign by frequency-response method,\n513–17\ndesign by root-locus method, 331–32,\n380–82\nelectronic, 330–32\npolar plot of, 512\nLag–lead network:\nelectronic, 330–32\nmechanical, 366\nLagrange polynomial, 708\nLagrange’s interpolation formula, 708\nLaminar-flow resistance, 102\nLaplace transform, 862\nproperties of, 865\ntable of, 863–64\nLead compensator, 311, 493\nBode diagram of, 494\ndesign by frequency-response method,\n493–502\ndesign by root-locus method, 311–18\npolar plot of, 494\nLead, lag, and lag–lead compensators:\ncomparison of, 517–18\nLead network, 542\nelectronic, 82\nmechanical, 365\nLead time, 5\nLinear approximation:\nof nonlinear mathematical models, 43\nLinear system, 14\nconstant coefficient, 14\nLinear time-invariant system, 14, 164\nLinear time-varying system, 14\nLinearization:\nof nonlinear systems, 43\nLiquid-level control system, 157\nLiquid-level systems, 101, 103–04, 140–41\nLog-magnitude curves of quadratic\ntransfer function, 411\nLogarithmic decrement, 237\nLogarithmic plot, 403\nLog-magnitude versus phase plot, 403,\n443–44\nLRC circuit, 72–73\nM\nM circles, 478–79\na family of constant, 479\nMagnitude condition, 271\nManipulated variable, 3\nMapping theorem, 448–49\nMathematical model, 13\nMATLAB commands:\nMATLAB:\nobtaining maximum overshoot with,\n194\nobtaining peak time with, 194\nobtaining response to initial condition\nwith, 266\npartial-fraction expansion with,\n871–73\nplotting Bode diagram with, 422–23\nplotting root loci with, 290–91\nwriting text in diagrams with, 188–89\n[A,B,C,D] = tf2ss(num,den), 40, 656,\n698\nbode(A,B,C,D), 422, 426\nbode(A,B,C,D,iu), 426–27\nbode(A,B,C,D,iu,w), 422\nbode(A,B,C,D,w), 422\nbode(num,den), 422\nbode(num,den,w), 422, 425, 551\nbode(sys), 422\nbode(sys,w), 552\nc = step(num,den,t), 190\nfor loop, 243, 249, 584\n[Gm,pm,wcp,wcg,] = margin(sys),\n468–69\ngtext ('text'), 189\nimpulse(A,B,C,D), 195\nimpulse(num, den), 195\ninitial(A,B,C,D,[initial condition],t), 209\ninv(A), 879\nK = acker(A,B,J), 736\nK = lqr(A,B,Q,R), 798\nK = place(A,B,J), 736MATLAB commands (Cont.)\nK\ne\n= acker(A',C',L)', 773\nK\ne\n= acker(Abb,Aab,L)', 773\nK\ne\n= place(A',C',L)', 773\nK\ne\n= place(Abb',Aab',L)', 773\n[K,P,E] = lqr(A,B,Q,R), 798\n[K,r] = rlocfind(num,den), 303\nlogspace(d1,d2), 422\nlogspace(d1,d2,n), 422–23\nlqr(A,B,Q,R), 797\nlsim(A,B,C,D,u,t), 201\nlsim(num,den,r,t), 201\nmagdB = 20*log10(mag), 422\n[mag,phase,w] = bode(A,B,C,D), 422\n[mag,phase,w] = bode(A,B,C,D,iu,w),\n422\n[mag,phase,w] = bode(A,B,C,D,w),\n422\n[mag,phase,w] = bode(num,den), 422\n[mag,phase,w] = bode(num,den,w),\n422, 476\n[mag,phase,w] = bode(sys), 422\n[mag,phase,w] = bode(sys,w), 476\nmesh, 192\nmesh(y), 192, 249\nmesh(y'), 192, 249\n[Mp,k] = max(mag), 476\nNaN, 799\n[num,den] = feedback(num1,den1,\nnum2,den2), 20–21\n[num,den] = parallel(num1,den1,\nnum2,den2), 20–21\n[num,den] = series(num1,den1,\nnum2,den2), 20–21\n[num,den] = ss2tf(A,B,C,D), 41, 657\n[num,den] = ss2tf(A,B,C,D,iu), 41–42,\n58, 657\n[NUM,den] = ss2tf(A,B,C,D,iu), 59,\n659\nnyquist(A,B,C,D), 436, 441–42\nnyquist(A,B,C,D,iu), 441\nnyquist(A,B,C,D,iu,w), 436, 441\nnyquist(A,B,C,D,w), 436\nnyquist(num,den), 436\nnyquist(num, den,w), 436\nnyquist(sys), 436\npolar(theta,r), 545\nprintsys(num,den), 20–21, 189\nprintsys(num,den,'s'), 189\nr = abs(z), 544\n[r,p,k] = residue(num,den), 239, 871–72\n[re,im,w] = nyquist(A,B,C,D), 436\n[re,im,w] = nyquist(A,B,C,D,iu,w), 436\n[re,im,w] = nyquist(A,B,C,D,w), 436\n[re,im,w] = nyquist(num,den), 436\n[re,im,w] = nyquist(num,den,w), 436\n890\nIndex\n[re,im,w] = nyquist(sys), 436\nresidue, 867\nresonant_frequency = w(k), 476\nresonant_peak = 20*log10(Mp), 476\nrlocfind, 303\nrlocus(A,B,C,D), 295\nrlocus(A,B,C,D,K), 290, 295\nrlocus(num,den), 290–91\nrlocus(num,den,K), 290\nsgrid, 297\nsortsolution, 584\nstep(A,B,C,D), 184, 186\nstep(A,B,C,D,iu), 184\nstep(num,den), 184\nstep(num,den,t), 184\nstep(sys), 184\nsys = ss(A,B,C,D), 184\nsys = tf(num,den), 184\ntext, 188\ntheta = angle(z), 544\nw = logspace(d2,d3,100), 425\ny = lsim(A,B,C,D,u,t), 201\ny = lsim(num,den,r,t), 201\n[y, x, t] = impulse(A,B,C,D), 195\n[y, x, t] = impulse(A,B,C,D,iu), 195\n[y, x, t] = impulse(A,B,C,D,iu,t), 195\n[y, x, t] = impulse(num,den), 195\n[y, x, t] = impulse(num,den,t), 195\n[y, x, t] = step(A,B,C,D,iu), 184\n[y, x, t] = step(A,B,C,D,iu,t), 184\n[y, x, t] = step(num,den,t), 184, 190\nz = re+j*im, 544\nEnd of MATLAB commands\nMatrix exponential, 661, 669–674\nclosed solution for, 663\nMatrix Riccati equation, 798, 800\nMaximum overshoot:\nin unit-impulse response, 179\nin unit-step response, 170, 172\nversus z curve, 174\nMaximum percent overshoot, 170\nMaximum phase lead angle, 494, 498\nMeasuring element, 21\nMechanical lag–lead system, 366\nMechanical lead system, 365\nMechanical vibratory system, 236\nMercury thermometer system, 151\nMinimal polynomial, 669, 704–06\nMinimum-order observer, 767–77\nbased controller, 777\nMinimum-order state observer, 752\nMinimum-phase system, 415–16\nMinimum-phase transfer function, 415\nMinor, 876\nModern control theory, 7, 29\nversus conventional control theory, 29\nOpenmirrors.comIndex 891\nMotor torque constant, 95\nMotorcycle suspension system, 87\nMultiple-loop system, 458–59\nN\nN circles, 480–81\na family of constant, 481\nNewton’s second law, 66\nNichols, 2, 11, 398\nNichols chart, 482–85\nNichols plots, 403\nNonbleed-type relay, 111\nNonhomogeneous state equation:\nsolution of, 666–67\nNoninverting amplifier, 79\nNonlinear mathematical models:\nlinear approximation of, 43–45\nNonlinear system, 43\nNonminimum-phase systems, 300–01,\n415, 417\nNonminimum-phase transfer function,\n415, 488\nNonuniqueness:\nof a set of state variables, 655\nNozzle-flapper amplifier, 110\nNumber-decibel conversion line, 404\nNyquist, H., 2, 11, 398\nNyquist path, 545\nNyquist plot, 403, 439–40, 443\nof positive-feedback system, 535–37\nof system defined in state space, 440–43\nNyquist stability analysis, 454–62\nNyquist stability criterion, 445–54\napplied to inverse polar plots, 461–62\nO\nObservability, 675, 682–88\ncomplete, 683–85\nmatrix, 653\nObservable canonical form, 650, 692\nObservation, 752\nObserved-state feedback control system,\n761\nObserver, 753\ndesign of control system with, 786–93\nfull-order, 753\nmathematical model of, 752\nminimum-order, 767–73\nObserver-based controller:\ntransfer function of, 761\nObserver controller:\nin the feedback path of control system,\n787, 790–93\nin the feedforward path of control\nsystem, 787–90\nObserver-controller matrix, 762\nObserver-controller transfer function,\n761–62\nObserver error equation, 753\nObserver gain matrix, 755\nMATLAB determination of, 773\nOctave, 405\nOffset, 258\nOn-off control action, 22–23\nOn-off controller, 22\nOne-degree-of-freedom control system,\n593\nop amps, 78\nOpen-loop control system, 8\nadvantages of, 9\ndisadvantages of, 9\nOpen-loop frequency response curves:\nreshaping of, 493\nOpen-loop transfer function, 19\nOperational amplifier, 78\nOperational amplifier circuits, 93–94\nfor lead or lag compensator:\ntable of, 85\nOptimal regulator problem, 806\nOrdinary point, 861\nOrthogonality:\nof root loci and constant gain loci,\n301–02\nOutput controllability, 681\nOutput equation, 31\nOutput matrix, 31\nOverdamped system, 168–69\nOverlapped spool valve, 146\nOverlapped valve, 130\nP\nParallel compensation, 308–09, 342–43\nPartial-fraction expansion, 867–73\nwith MATLAB, 871–73\nPD control, 373\nPD controller, 614–15\nPeak time, 170, 172, 193\nPerformance index, 793\nPerformance specifications, 9\nPhase crossover frequency, 467–69\nPhase margin, 464–67\nversus z curve, 472\nPI controller, 2, 614–15\nPI-D control, 590–92\nPID control system, 572–77, 583, 587,\n617–21, 628–29, 642–43\nbasic, 590\nwith input filter, 629\ntwo-degrees-of-freedom, 592–95\nPID controller, 567, 577, 614–16, 620, 632\nmodified, 616\nusing operational amplifiers, 83–84Pilot valve, 124, 130\nPI-PD control, 592\nPID-PD control, 592\nPlant, 3\nPneumatic actuating valve, 117–18\nPneumatic controllers, 144–45, 154–55\nPneumatic nozzle-flapper amplifier, 110\nPneumatic on-off controller, 115\nPneumatic pressure system, 142\nPneumatic proportional controller, 112–16\nforce-balance type, 115–16\nforce-distance type, 112–15\nPneumatic proportional-plus-derivative\ncontroller, 119–20\nPneumatic proportional-plus-integral\ncontrol action, 120–22\nPneumatic proportional-plus-integral-\nplus-derivative control action,\n122–23\nPneumatic relay, 111\nbleed type, 111\nnonbleed type, 111\nreverse acting, 112\nPneumatic systems, 106–23, 153\ncompared with hydraulic system, 106\nPneumatic two-position controller, 115\nPolar grids, 297\nPolar plot, 403, 427–28, 430, 432\nPole: 861\nof order n, 861\nsimple, 861\nPole assignment technique, 723\nPole-placement:\nnecessary and sufficient conditions for\narbitrary, 725\nPole placement problem, 723–35\nsolving with MATLAB, 735–36\nPositive-feedback system:\nNyquist plot for, 536–37\nroot loci for, 303–07\nPositional servo system, 95–97\nPressure system, 107, 109\nPrinciple of duality, 687\nPrinciple of superposition, 43\nProcess, 3\nProportional control, 219\nProportional control action, 24\nProportional controller, 22\nProportional gain, 25, 61\nProportional-plus-derivative control:\nof second-order system, 224\nof system with inertia load, 223\nProportional-plus-derivative control\naction, 25\nProportional-plus-derivative controller,\n22, 542\n892\nIndex\nProportional-plus-integral control action,\n24\nProportional-plus-integral controller, 22,\n121, 542\nProportional-plus-integral-plus-\nderivative control action, 25\nProportional-plus-integral-plus-\nderivative controller, 22\nPulse function, 866\nQ\nQuadratic factor, 410\nlog-magnitude curves of, 411\nphase-angle curves of, 411\nQuadratic optimal control problem:\nMATLAB solution of, 804\nQuadratic optimal regulator system,\n793–95\nMATLAB design of, 797\nR\nRamp response, 197\nRank of matrix, 875\nReduced-matrix Riccati equation, 795–97\nReduced-order observer, 752\nReduced-order state observer, 752\nReference input, 21\nRegulator system with observer\ncontroller, 778–86, 789\nRelative stability, 160, 217, 462\nResidue, 867\nResidue theorem, 527\nResistance:\ngas-flow, 107\nlaminar-flow, 101–02\nof pressure system, 107, 109\nof thermal system, 137\nturbulent-flow, 102\nResonant frequency, 430, 470\nResonant peak, 413, 430, 470\nversus z curve, 413\nResonant peak magnitude, 413, 470\nResponse:\nto arbitrary input, 201\nto initial condition, 203–11\nto torque disturbance, 221\nReverse-acting relay, 112\nRiccati equation, 795\nRise time, 169–171\nobtaining with MATLAB, 193–94\nRobust control:\nsystem, 16, 806–17\ntheory, 2, 7\nRobust performance, 7, 807, 812\nRobust pole placement, 735\nRobust stability, 7, 807, 809\nOpenmirrors.comIndex 893\nRoot loci:\ngeneral rules for constructing, 283–87\nfor positive-feedback system, 303–07\nRoot locus, 271\nmethod, 269–70\nRouth’s stability criterion, 212–18\nS\nSchwarz matrix, 268\nSecond-order system, 164\nimpulse response of, 178–79\nstandard form of, 166\nstep response of, 165–75\ntransient-response specification of, 171\nunit-step response curves of, 169\nSensor, 21\nSeries compensation, 308–09, 342\nServo system, 95, 164–65\ndesign of, 739–51\nwith tachometer feedback, 268\nwith velocity feedback, 175–77\nServomechanism, 2\nSet point, 21\nSet-point kick, 590\nSettling time, 170, 172–73\nobtaining with MATLAB, 194\nversusz curve, 174\nSign inverter, 79\nSimple pole, 861\nSingular points, 861\nSinusoidal signal generator, 486\nSinusoidal transfer function, 401\nSmall gain theorem, 809\nSpace vehicle control system, 367, 538–39\nSpeed control system, 4, 148\nSpool valve:\nlinealized mathematical model of, 127\nSpring-loaded pendulum system, 98\nSpring-mass-dashpot system, 66\nSquare-law nonlinearity, 43\nS-shaped curve, 569\nStability analysis, 454–62\nin the complex plane, 182\nStabilizability, 688\nStack controller, 115\nStandard second-order system, 189\nState, 29\nState controllability:\ncomplete, 676, 678, 680\nState equation, 31\nsolution of homogeneous, 660\nsolution of nonhomogeneous, 666–67\nLaplace transform solution of, 663\nState-feedback gain matrix, 724\nMATLAB approach to determine,\n735–36\nState matrix, 31\nState observation:\nnecessary and sufficient conditions for,\n754–55\nState observer, 751–77\ndesign with MATLAB, 773\ntype 1 servo system with, 746\nState observer gain matrix: 755\nAckermann’s formula to obtain, 756–57\ndirect substitution approach to obtain,\n756\ntransformation approach to obtain, 755\nState space, 30\nState-space equation, 30\ncorrelation between transfer function\nand, 649, 656\nsolution of, 660\nState-space representation:\nin canonical forms, 649\nofnth order system, 36–39\nState-transition matrix, 664\nproperties of, 665\nState variable, 29\nState vector, 30\nStatic acceleration error constant,\n228, 421\ndetermination of, 421–22\nStatic position error constant,\n226, 419\nStatic velocity error constant,\n227, 420\nSteady-state error, 160, 226\nfor unit parabolic input, 229\nfor unit ramp input, 228\nin terms of gain K, 230\nSteady-state response, 160\nStep response, 699–700\nof second-order system, 165–69\nSumming point, 18\nSuspension system:\nautomobile, 86–87\nmotorcycle, 87\nSylvester’s interpolation formula, 673,\n709–713\nSystem, 3\nSytem types, 419\ntype 0, 225, 230, 419, 433, 487–88\ntype 1, 225, 230, 420, 433, 487–88\ntype 2, 225, 230, 421, 433, 487–88\nSystem response to initial condition:\nMATLAB approach to obtain, 203–11\nT\nTachometer, 176\nfeedback, 343\nTaylor series expansion, 43–45Temperature control systems, 4–5\nTest signals, 159\nText:\nwriting on the graphic screen, 188\nThermal capacitance, 137\nThermal resistance, 137\nThermal systems, 100,136–39\nThermometer system, 151–52\nThree-degrees-of-freedom system, 645\nThree-dimensional plot, 192\nof unit-step response curves with\nMATLAB, 191–93\nTraffic control system, 8\nTransfer function, 15\nof cascaded elements, 73–74\nof cascaded systems, 20\nclosed-loop, 20\nof closed-loop system, 20\nexperimental determination of, 489–90\nexpression in terms of A, B, C, and D,3 4\nof feedback system, 19\nfeedforward, 19\nof minimum-order observer-based\ncontroller, 777\nof nonloading cascaded elements,\n77\nobserver-controller, 762, 780–82\nopen-loop, 19\nof parallel systems, 20\nsinusoidal, 401\nTransfer matrix, 35\nTransformation:\nfrom state space to transfer function,\n41–42, 657\nfrom transfer function to state space,\n40–41, 656\nTransient response, 160\nanalysis with MATLAB, 183–211\nof higher-order system, 180\nspecifications, 169, 171\nTransport lag, 417\nphase angle characteristics of, 417\nTurbulent-flow resistance, 102\nTwo-degrees-of-freedom control system,\n593–95, 599–614, 636–41, 646–47\nTwo-position control action, 22–23\nTwo-position controller, 22\nType 0 system, 225, 230, 488\nlog-magnitude curve for, 419, 488\npolar plot of, 433\nType 1 servo system:\ndesign of, 743–51\npole-placement design of, 739–46\nType 1 system, 420\nlog-magnitude curve for, 420, 488\npolar plot of, 433\n894\nIndex\nType 2 system, 421\nlog-magnitude curve for, 421, 488\npolar plot of, 433\nU\nUncontrollable system, 681\nUndamped natural frequency, 165\nUnderdamped system, 166–67\nUnderlapped spool valve, 146\nUnit acceleration input, 247\nUnit-impulse response:\nof first-order system, 163\nof second-order system, 178\nUnit-impulse response curves:\na family of, 178\nobtained by use of MATLAB, 196–97\nUnit-ramp response:\nof first-order system, 162–63\nof second-order system, 197–200\nof system defined in state space,\n199–200\nUnit-step response:\nof first-order system, 161\nof second-order system, 163, 167, 169\nUniversal gas constant, 108\nUnstructured uncertainty:\nadditive, 852–53\nmultiplicative, 809\nsystem with, 809\nV\nValve:\noverlapped, 130\nunderlapped, 130\nzero-lapped, 130\nValve coefficient, 127\nVectors:\nlinear dependence of, 674\nlinear independence of, 674\nVelocity error, 227\nVelocity feedback, 176, 343, 519\nW\nWatt’s speed governor, 4\nWeighting function, 17\nZ\nZero, 861\nof order m, 862\nZero-lapped valve, 130\nZero placement, 595, 597, 612\napproach to improve response charac-\nteristics, 595–97\nZiegler–Nichols tuning rules, 11, 568–77\nfirst method, 569–70\nsecond method, 570–71\nOpenmirrors.com"
  }
}